Generate SQL given the question and table.

CREATE TABLE jason chambers(
	row_id int,
	res text,
	record text,
	opponent text,
	method text,
	event text,
	round text)
/*
3 example rows:
SELECT * FROM w LIMIT 3;
row_id	res	record	opponent	method	event	round
0	win	18 - 5 - 2	dan new	submission (rear naked choke)	tfc - power fights	1
1	win	17 - 5 - 2	rene gonzalez	decision (split)	mainstream mma - cold war	n / a
2	loss	16 - 5 - 2	tristan yunker	submission ( armbar )	tfc 7 - total fight challenge 7	1
*/
Q1: there are {how many = a1} win when the opponent is dan spychalski.
Q2: {how many = a2} records with a nan round ended in 2 or began with 2.
NeuralSQL1: SELECT COUNT(*) FROM w WHERE opponent = 'dan spychalski'
NeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 'n / a' AND (record LIKE '% - % - 2' OR record LIKE '2 - % - %')


CREATE TABLE 2005 pba draft(
	row_id int,
	pick int,
	player text,
	country of origin text,
	pba team text,
	college text)
/*
3 example rows:
SELECT * FROM w LIMIT 3;
row_id	pick	player	country of origin	pba team	college
0	1	jay washington	united states	air21 express	eckerd
1	2	alex cabagnot	united states	sta lucia realtors	hawaii - hilo
2	3	dennis miranda	philippines	coca - cola tigers	feu
*/
Q1: there are {how many = a1} feu player from us.
Q2: dennis miranda is {how many = a2} player from us.
NeuralSQL1: SELECT COUNT(*) FROM w WHERE college = 'feu' AND country of origin = "united states'
NeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'dennis miranda' AND country of origin = 'united states'


CREATE TABLE turkish cup(
	row_id int,
	round text,
	clubs remaining int,
	clubs involved int,
	winners from previous round real,
	new entries this round real,
	leagues entering at this round text)
/*
3 example rows:
SELECT * FROM w LIMIT 3;
row_id	round	clubs remaining	clubs involved	winners from previous round	new entries this round	leagues entering at this round
0	first round	156	86	nan	86.0	tff third league & turkish regional amateur league
1	second round	113	108	43.0	65.0	süper lig & tff first league & tff second league
2	third round	59	54	54.0	nan	none
*/
Q1: {how many = a1} be the lowest number of clubs remaining.
NeuralSQL1: SELECT MIN(`clubs remaining`) FROM w


CREATE TABLE cultural interest fraternities and sororities(
	row_id int,
	letters text,
	organization text,
	nickname text,
	founding time text,
	founding university text,
	type text)
/*
3 example rows:
SELECT * FROM w LIMIT 3;
row_id	letters	organization	nickname	founding time	founding university	type
0	αεπ	alpha epsilon pi 1	aepi	1913-11-07 00:00:00	new york university	fraternity
1	αεφ	alpha epsilon phi 2	aephi	1909-10-24 00:00:00	barnard college	sorority
2	σαεπ	sigma alpha epsilon pi 3	sigma	1998-10-01 00:00:00	university of california , davis	sorority
*/
Q1 : {how many = a1} of the cultural interest fraternity.
Q2 : {how many = a2} records be a sorority and be founded in 1990s.
Q3 : there are {how many = a3} organizations founded in 2003 with a type of fraternity
NeuralSQL1: SELECT COUNT(*) FROM w WHERE type = 'fraternity'
NeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'sorority' AND `founding time` LIKE '199%-%-%'
NeuralSQL3: SELECT COUNT(DISTINCT(organization)) FROM w WHERE type = 'sorority'


CREATE TABLE jeev milkha singh(
	row_id int,
	tournament text,
	wins int,
	top - 10 int,
	top - 25 int,
	events int,
	cuts made int,
	win rate text)
/*
3 example rows:
SELECT * FROM w LIMIT 3;
row_id	tournament	wins	top - 10	top - 25	events	cuts made	win rate
0	masters tournament	0	0	1	3	2	12%
1	us open	0	0	0	4	3	24%
2	the open championship	0	0	0	2	1	26%
*/
Q1: the number of cut made in the pga championship is {how many = a1}.
Q2: the number of event in the pga championship is {how many = a2}.
Q3: the average win rate of all games is {how many = a3}%.
NeuralSQL1: SELECT `cuts made` FROM w WHERE tournament = 'pga championship'
NeuralSQL2: SELECT events FROM w WHERE tournament = 'pga championship'
NeuralSQL3:	SELECT AVERAGE(CAST(REPLACE(`win rate`,'%','')) AS INT) FROM w


CREATE TABLE 2008 women 's british open(
	row_id int,
	place text,
	player text,
	country text,
	score int,
	to par int)
/*
3 example rows:
SELECT * FROM w LIMIT 3;
row_id	place	player	country	score	to par	records
0	1	juli inkster	united states	65	7	3 - 2
1	t2	momoko ueda	japan	66	6	4 - 11
2	t2	laura diaz	united states	66	6	12 - 3
*/
Q1: {how many = a1} player from japan have the same score.
Q2: {how many = a2} records have a records the first number larger than the second number.
NeuralSQL1: SELECT COUNT(DISTINCT score) FROM w WHERE country = 'japan'
NeuralSQL2: SELECT COUNT(*) FROM w WHERE records LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0


CREATE TABLE 1976 world junior figure skating championships(
	row_id int,
	rank int,
	name text,
	nation text,
	points real,
	places int)
/*
3 example rows:
SELECT * FROM w LIMIT 3;
row_id	rank	name	nation	points	places
0	1	sherri baier / robin cowan	canada	128.39	9
1	2	lorene mitchell / donald mitchell	united states	124.94	16
2	3	elizabeth cain / peter cain	australia	116.67	33
*/
Q1: {how many = a1} of the 7 top - ranked figure skate team be from france.
NeuralSQL1: SELECT COUNT(*) FROM w WHERE nation = 'france' AND rank <= 7

