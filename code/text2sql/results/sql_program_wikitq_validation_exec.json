{"0": {"question": "how many more passengers flew to los angeles than to saskatoon from manzanillo airport in 2013?", "gold_answer": ["12,467"], "pred_answer": {"0": [[14749], [14749], [14749], [14749], [14749], [14749], [14749], [14749], [14749], [14749]], "1": [[2282], [2282], [2282], [2282], [2282], [2282], [2282], [2282], [2282], [2282]]}, "nsql": [[" SELECT SUM(passengers) FROM w WHERE city LIKE '%los angeles%'\nNeuralSQL2: SELECT SUM(passengers) FROM w WHERE city LIKE '%saskatoon%'", -4.068765221908001], [" SELECT SUM(passengers) FROM w WHERE city LIKE '%los angeles%'\nNeuralSQL2: SELECT SUM(passengers) FROM w WHERE city LIKE '%saskatoon%'", -4.068765221908001], [" SELECT passengers FROM w WHERE city LIKE '%los angeles%'\nNeuralSQL2: SELECT passengers FROM w WHERE city LIKE '%saskatoon%'", -5.713465345717999], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, saskatoon'", -9.517821901798], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, saskatoon'", -10.236669419948], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, saskatoon'", -11.122244689948], [" SELECT SUM(passengers) FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT SUM(passengers) FROM w WHERE city = 'canada, saskatoon'", -11.131858290678], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, saskatoon'", -12.409730901798001], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, saskatoon'", -12.829841436598002], [" SELECT SUM(passengers) FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT SUM(passengers) FROM w WHERE city = 'canada, saskatoon'", -14.771954630678001]]}, "21": {"question": "what is the total number of gold medals won by jamaica?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT SUM(gold) FROM w WHERE nation = 'jamaica'", -2.307732108345], [" SELECT SUM(gold) FROM w WHERE nation = 'jamaica'", -2.307732108345], [" SELECT gold FROM w WHERE nation = 'jamaica'", -5.032123944127001], [" SELECT gold FROM w WHERE nation = 'jamaica'", -5.032572234993999], [" SELECT gold FROM w WHERE nation = 'jamaica'", -5.09499480255], [" SELECT gold FROM w WHERE nation = 'jamaica'", -5.095709631199999], [" SELECT gold FROM w WHERE nation = 'jamaica'", -6.9109879366269995], [" SELECT `gold` FROM w WHERE nation = 'jamaica'", -7.173828478702001], [" SELECT gold FROM w WHERE nation = 'jamaica'", -8.453234644127], [" SELECT gold FROM w WHERE nation = 'jamaica'", -9.510752184127]]}, "38": {"question": "what country had the least number of drivers, germany or the uk?", "gold_answer": ["Germany"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%uk%'", -4.104780172873671], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%uk%'", -4.1126521616584], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%uk%'", -6.63071741968067], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '%uk%'", -10.194097029339998], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '%uk%'", -10.391113835185003], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '%uk%'", -10.391113835185003], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '%uk%'", -11.218119129339998], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '%uk%'", -11.397106400879998], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '%uk%'", -11.651122035185002], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '%uk%'", -12.651993929339998]]}, "42": {"question": "how many stations have a distance below 15km?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15", -1.5403022186299997], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15", -1.5403022186299997], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15", -1.5403022186299997], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15", -1.5403022186299997], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15", -1.5403022186299997], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15", -1.5403022186299997], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15", -1.5403022186299997], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15", -2.84257385663], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15.0", -6.379470386329999], [" SELECT COUNT(*) FROM w WHERE `distance\\n(km)` < 15.0", -13.03110603412]]}, "79": {"question": "how many 2nd positions were there?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = '2nd'", -2.7935482031839998], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -2.7935482031839998], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -2.7935482031839998], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -5.144013959228], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -5.530682159228], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -5.589405559228], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -5.7707438331839995], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -5.781838159228], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -5.781838159228], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -7.019540159228]]}, "83": {"question": "how many locomotives were built after 1900?", "gold_answer": ["2"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date > 1900", -1.65442851793], [" SELECT COUNT(*) FROM w WHERE date > 1900", -1.65442851793], [" SELECT COUNT(*) FROM w WHERE date > 1900", -1.65442851793], [" SELECT COUNT(*) FROM w WHERE date > 1900", -1.65442851793], [" SELECT COUNT(*) FROM w WHERE date > 1900", -1.65442851793], [" SELECT COUNT(*) FROM w WHERE date > 1900", -4.03308415353], [" SELECT COUNT(*) FROM w WHERE date > 1900", -4.03308415353], [" SELECT COUNT(*) FROM w WHERE `date` > 1900", -7.55151637309], [" SELECT COUNT(*) FROM w WHERE date > 1900", -15.33361741667], [" SELECT COUNT(*) FROM w WHERE date > 1900\nQ2: {how many = a2} locomotives were built by manning wardle.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'manning wardle'\nQ3: {how many = a3} locomotives were built by manning wardle and were built after 1900.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE builder = 'manning wardle' AND date > 1900\nQ4: {how many = a4} locomotives were built by manning wardle and were built after 1900 and were built for the construction of the ashworth moor reservoir.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE builder = 'manning wardle' AND date > 1900 AND notes LIKE '%built for the construction of the ashworth moor reservoir%'\nQ5: {how many = a5} locomotives were built by manning wardle and were built after 1900 and were built for the construction of the ashworth moor reservoir and were purchased in 1913.\nNeuralSQL5: SELECT COUNT(*) FROM", -31.028691137034]]}, "124": {"question": "the difference in passengers between los angeles and toronto", "gold_answer": ["13,547"], "pred_answer": {"0": [[14749], [14749], [14749], [14749], [14749], [14749], [14749], [14749], [14749], [14749]], "1": [[1202], [1202], [1202], [1202], [1202], [1202], [1202], [1202], [1202], [1202]]}, "nsql": [[" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, toronto'", -1.7792320451400003], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, toronto'", -1.7792320451400003], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, toronto'", -1.7792320451400003], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, toronto'", -1.7792320451400003], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, toronto'", -1.7792320451400003], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, toronto'", -1.7792320451400003], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, toronto'", -1.7792320451400003], [" SELECT passengers FROM w WHERE city LIKE '%los angeles%'\nNeuralSQL2: SELECT passengers FROM w WHERE city LIKE '%toronto%'", -4.206614957189999], [" SELECT `passengers` FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT `passengers` FROM w WHERE city = 'canada, toronto'", -5.9817956075400005], [" SELECT passengers FROM w WHERE city = 'united states, los angeles'\nNeuralSQL2: SELECT passengers FROM w WHERE city = 'canada, toronto'", -15.90147650334]]}, "165": {"question": "how many games did larry johnson play?", "gold_answer": ["65"], "pred_answer": {"0": [[65], [65], [65], [65], [65], [65], [65], [65], [65], [65]]}, "nsql": [[" SELECT `games played` FROM w WHERE player = 'larry johnson'", -1.57801247091], [" SELECT `games played` FROM w WHERE player = 'larry johnson'", -1.57801247091], [" SELECT `games played` FROM w WHERE player = 'larry johnson'", -1.57801247091], [" SELECT `games played` FROM w WHERE player = 'larry johnson'", -1.57801247091], [" SELECT `games played` FROM w WHERE player = 'larry johnson'", -1.580061755736], [" SELECT `games played` FROM w WHERE player = 'larry johnson'", -2.4864686909300002], [" SELECT `games played` FROM w WHERE player = 'larry johnson'", -2.4864686909300002], [" SELECT `games played` FROM w WHERE player = 'larry johnson'", -2.4864686909300002], [" SELECT games played FROM w WHERE player = 'larry johnson'", -6.446806116934999], [" SELECT games played FROM w WHERE player = 'larry johnson'", -10.130412317226]]}, "206": {"question": "how many bronze medals does togo have?", "gold_answer": ["1"], "pred_answer": {"0": [[1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1]], "1": ["<error>"]}, "nsql": [[" SELECT bronze FROM w WHERE nation = 'togo'", -2.45186266752], [" SELECT SUM(bronze) FROM w WHERE nation = 'togo'", -3.05955839036], [" SELECT bronze FROM w WHERE nation = 'togo'", -3.45857148852], [" SELECT SUM(bronze) FROM w WHERE nation = 'togo'", -5.201465301119999], [" SELECT `bronze` FROM w WHERE nation = 'togo'\n```", -6.1094624904899995], [" SELECT `bronze` FROM w WHERE nation = 'togo'", -6.22162519429], [" SELECT `bronze` FROM w WHERE nation = 'togo'", -6.31163159429], [" SELECT `bronze` FROM w WHERE nation = 'togo'", -7.04976399429], [" SELECT `bronze` FROM w WHERE nation = 'togo'", -7.89727869429], [" SELECT COUNT(*) FROM w WHERE nation = 'togo' AND bronze = 1.0", -9.067463426819996]]}, "247": {"question": "how many passengers are going to or coming from spain?", "gold_answer": ["217,548"], "pred_answer": {"0": [[217548], [217548], [217548], [217548], [217548], [217548], [217548], [217548], [217548], [217548]]}, "nsql": [[" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -2.98340957217], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -2.98340957217], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -2.98340957217], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -2.98515183317], [" SELECT SUM(passengers handled) FROM w WHERE airport LIKE 'spain%'", -4.009491756869999], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -6.0826488125000004], [" SELECT SUM(`passengers handled`) FROM w WHERE `airport` LIKE 'spain%'", -7.838748723718], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -10.394360014892], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -13.00099091177], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -13.160862342032]]}, "288": {"question": "how many nations won more than one silver medal?", "gold_answer": ["3"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -1.01003496068], [" SELECT COUNT(*) FROM w WHERE silver > 1", -6.14664358988]]}, "329": {"question": "how many hospital's have at least 600 beds?", "gold_answer": ["17"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]], "1": ["<error>"], "2": [[34]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `# beds` >= 600", -3.0126290999100003], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 600", -3.0126290999100003], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 600", -3.0126290999100003], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 600", -3.0126290999100003], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 600", -3.0130234261699997], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 600", -3.0130234261699997], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 600", -3.5767600093999996], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 600", -3.9668307489999997], [" SELECT COUNT(*) FROM w WHERE # beds >= 600", -6.01076847092], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 600\nQ2: {how many = a2} hospital's are type general acute care.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type of hospital` = 'general acute care'\nQ3: {how many = a3} hospital's are in san diego.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE city = 'san diego'\nQ4: {how many = a4} hospital's are in san diego and have at least 600 beds.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE city = 'san diego' AND `# beds` >= 600\nQ5: {how many = a5} hospital's are in san diego and have at least 600 beds and are type general acute care.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE city = 'san diego' AND `# beds` >= 600 AND `type of hospital` = 'general acute care'\nQ6: {how many = a6} hospital's are in san diego or have at least 600 beds.\nNe", -32.07688184696698]]}, "370": {"question": "how many years did cooney checkaye coach the muncie flyers?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE coach LIKE '%cooney checkaye%'", -2.3610007190499998], [" SELECT COUNT(*) FROM w WHERE coach LIKE '%cooney checkaye%'", -2.3610007190499998], [" SELECT COUNT(*) FROM w WHERE coach LIKE '%cooney checkaye%'", -2.3610007190499998], [" SELECT COUNT(*) FROM w WHERE coach LIKE '%cooney checkaye%'", -2.3610007190499998], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach LIKE '%cooney checkaye%'", -2.7398731795359996], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach LIKE '%cooney checkaye%'", -2.7398731795359996], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach LIKE '%cooney checkaye%'", -2.7398731795359996], [" SELECT COUNT(*) FROM w WHERE coach LIKE '%cooney checkaye%'", -3.1909657550499997], [" SELECT COUNT(DISTINCT(year)) FROM w WHERE coach LIKE '%cooney checkaye%'", -3.7941083607549997], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach LIKE '%cooney checkaye%'", -4.615639297166]]}, "411": {"question": "how many tons of displacement does type b have?", "gold_answer": ["940 tons"], "pred_answer": {"0": [["1070 tons"], ["1070 tons"], ["1070 tons"], ["1070 tons"], ["1070 tons"], ["1070 tons"], ["1070 tons"], ["1070 tons"], ["1070 tons"], ["1070 tons"]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>"], "2": [[17], [8], ["1070 tons"], [46]], "3": ["<error>", "<error>", "<error>", "<error>"], "4": [[15], [33], [0], [43]], "5": ["<error>", "<error>", "<error>", "<error>"], "6": [[4], [22], [0], [43]], "7": ["<error>", "<error>", "<error>", "<error>"], "8": ["<error>", "<error>", [0], [43]], "9": ["<error>", "<error>"], "10": [[1], "<error>"], "11": ["<error>"]}, "nsql": [[" SELECT displacement FROM w WHERE name = 'type b'", -1.9201929303999998], [" SELECT displacement FROM w WHERE name = 'type b'", -1.9201929303999998], [" SELECT displacement FROM w WHERE name = 'type b'", -4.0636356295], [" SELECT displacement FROM w WHERE name = 'type b'", -4.0636356295], [" SELECT displacement FROM w WHERE name = 'type b'", -6.386214101899999], [" SELECT displacement FROM w WHERE name = 'type b'\n```", -11.979290614399998], [" SELECT displacement FROM w WHERE name = 'type b'\nQ2: {how many = a2} records have a displacement larger than 2000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(displacement AS INT) > 2000\nQ3: {how many = a3} records have a displacement larger than 2000 and speed larger than 25.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE CAST(displacement AS INT) > 2000 AND CAST(speed AS INT) > 25\nQ4: {how many = a4} records have a displacement larger than 2000 and speed larger than 25 and nation is uk.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE CAST(displacement AS INT) > 2000 AND CAST(speed AS INT) > 25 AND nation = 'uk'\nQ5: {how many = a5} records have a displacement larger than 2000 and speed larger than 25 and nation is uk and notes is anti-aircraft.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE CAST(displacement AS INT) > 2000 AND CAST(", -36.983885992094194], [" SELECT displacement FROM w WHERE name = 'type b'\nQ2: {how many = a2} records have a displacement larger than 2300 tons.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(displacement,'tons','') AS INT) > 2300\nQ3: {how many = a3} records have a speed larger than 23 knots.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(speed,'knots','') AS INT) > 23\nQ4: {how many = a4} records have a speed faster than type b.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(speed,'knots','') AS INT) > (SELECT CAST(REPLACE(speed,'knots','') AS INT) FROM w WHERE name = 'type b')\nQ5: {how many = a5} records have a speed faster than type b and a displacement larger than 2300 tons.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE CAST(RE", -41.599365879592995], [" SELECT displacement FROM w WHERE name = 'type b'\nQ2: the displacement of type b is {how many = a2} tons.\nNeuralSQL2: SELECT displacement FROM w WHERE name = 'type b'\nQ3: there are {how many = a3} records with a displacement of 1200.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE displacement = '1200'\nQ4: there are {how many = a4} records with a displacement of 1200 and a speed of 20.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE displacement = '1200' AND speed = '20'\nQ5: there are {how many = a5} records with a displacement of 1200 or a speed of 20.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE displacement = '1200' OR speed = '20'\nQ6: there are {how many = a6} records with a displacement of 1200 and a speed of 20 or a number of 151.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE displacement = '1200' AND speed = '20' OR number = '151'\nQ", -43.282650831738025], [" SELECT displacement FROM w WHERE name = 'type b'\nQ2: there are {how many = a2} frigates with a displacement larger than 1000 tons.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE displacement > 1000\nQ3: {how many = a3} frigates have a speed larger than 20 knots.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE speed > 20\nQ4: there are {how many = a4} frigates with a displacement larger than 1000 tons and a speed larger than 20 knots.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE displacement > 1000 AND speed > 20\nQ5: there are {how many = a5} frigates with a displacement larger than 1000 tons and a speed larger than 20 knots and a number larger than 1.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE displacement > 1000 AND speed > 20 AND number > 1\nQ6: there are {how many = a6} frigates with a displacement larger than 1000 tons and a speed larger than 20 knots and a number larger than 1 and a notes of none.\nNeuralSQL6: SELECT", -49.29647965208099]]}, "452": {"question": "what is the number of football classes lafayette high school has?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT football class FROM w WHERE school = 'lafayette high school'", -2.110258866586], [" SELECT football class FROM w WHERE school = 'lafayette high school'", -2.110258866586], [" SELECT football class FROM w WHERE school = 'lafayette high school'", -2.110258866586], [" SELECT football class FROM w WHERE school = 'lafayette high school'", -2.110258866586], [" SELECT football class FROM w WHERE school = 'lafayette high school'", -2.113648923495999], [" SELECT football class FROM w WHERE school = 'lafayette high school'", -2.113648923495999], [" SELECT `football class` FROM w WHERE school = 'lafayette high school'", -2.6322988836700003], [" SELECT `football class` FROM w WHERE school = 'lafayette high school'", -2.6360982007900002], [" SELECT `football class` FROM w WHERE school = 'lafayette high school'", -2.6360982007900002], [" SELECT football class FROM w WHERE school = 'lafayette high school'", -3.5322526048459997]]}, "493": {"question": "how many stages was the 1982 marlboro tour?", "gold_answer": ["15"], "pred_answer": {"0": [["15"], ["15"], ["15"], ["15"], ["15"], ["15"], ["15"], [1], ["15", "14", "14", "21", "10", "17", "17", "18", "18", "17", "17", "21", "20", "19", "19", "16"], [1]]}, "nsql": [[" SELECT stages FROM w WHERE name = 'marlboro tour' AND year = '1982'", -4.0485664537799995], [" SELECT stages FROM w WHERE name = 'marlboro tour' AND year = '1982'", -4.0485664537799995], [" SELECT stages FROM w WHERE name = 'marlboro tour' AND year = '1982'", -4.0485664537799995], [" SELECT stages FROM w WHERE name = 'marlboro tour' AND year = '1982'", -4.0485664537799995], [" SELECT stages FROM w WHERE name = 'marlboro tour' AND year = '1982'", -4.0485664537799995], [" SELECT stages FROM w WHERE name = 'marlboro tour' AND year = '1982'", -4.0485664537799995], [" SELECT stages FROM w WHERE name = 'marlboro tour' AND year = '1982'", -5.529965144779999], [" SELECT COUNT(*) FROM w WHERE `year` = '1982' AND `name` = 'marlboro tour'", -7.113837037627001], [" SELECT stages FROM w WHERE name = '1982 marlboro tour'", -12.056591911389999], [" SELECT COUNT(*) FROM w WHERE name = 'marlboro tour' AND year = '1982'", -15.402132641511]]}, "534": {"question": "which make of car was used the least by those that won races?", "gold_answer": ["Toyota"], "pred_answer": {"0": [["dodge"], ["dodge"], ["dodge"], ["dodge", 1], [2], ["dodge", 1], [26], [1], [1], ["dodge", "mercury"]]}, "nsql": [[" SELECT make FROM w GROUP BY make ORDER BY COUNT(*) ASC LIMIT 1", -5.13887142158], [" SELECT make FROM w GROUP BY make ORDER BY COUNT(*) ASC LIMIT 1", -5.13887142158], [" SELECT make FROM w GROUP BY make ORDER BY COUNT(make) ASC LIMIT 1", -5.673903748210001], [" SELECT make, COUNT(*) FROM w GROUP BY make ORDER BY COUNT(*) ASC LIMIT 1", -8.575940609630003], [" SELECT COUNT(*) FROM w WHERE winner = 'dave sorg'", -8.768793240090998], [" SELECT make, COUNT(*) FROM w GROUP BY make ORDER BY COUNT(*) ASC LIMIT 1", -10.241158124528003], [" SELECT COUNT(*) FROM w WHERE make = 'chevrolet'", -10.828918237701998], [" SELECT COUNT(*) FROM w WHERE make = (SELECT make FROM w GROUP BY make ORDER BY COUNT(*) ASC LIMIT 1)", -11.083553524809998], [" SELECT MIN(count) FROM (SELECT make, COUNT(*) AS count FROM w GROUP BY make)", -13.673270294696998], [" SELECT make FROM w GROUP BY make HAVING COUNT(make) = (SELECT MIN(c) FROM (SELECT make, COUNT(make) AS c FROM w GROUP BY make) AS t)", -15.61643865718]]}, "575": {"question": "who won more gold medals, brazil or china?", "gold_answer": ["Brazil"], "pred_answer": {"0": [[45], [45], [45], [45], [45], [45], [45], [45], [45], [45]], "1": [[37], [37], [37], [37], [37], [37], [37], [37], [37], [37]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'china'", -1.7742748620460003], [" SELECT gold FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'china'", -1.7742748620460003], [" SELECT gold FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'china'", -1.7742748620460003], [" SELECT gold FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'china'", -1.7742748620460003], [" SELECT gold FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'china'", -1.7742748620460003], [" SELECT gold FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'china'", -1.7742748620460003], [" SELECT gold FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'china'", -1.7742748620460003], [" SELECT SUM(gold) FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation = 'china'", -2.2645486357060007], [" SELECT gold FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'china'", -4.650368217046], [" SELECT SUM(gold) FROM w WHERE nation = 'brazil'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation = 'china'", -5.497447687176001]]}, "616": {"question": "how many swimmers are from mexico?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.2303959444959998], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.2303959444959998], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.2303959444959998], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.2303959444959998], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.2303959444959998], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.2303959444959998], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.2303959444959998], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.75759729679], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -3.800049781696], [" SELECT COUNT(*) FROM w WHERE country = 'mexico'", -4.96880120765]]}, "657": {"question": "what was the total number of times sahi, m. & shilbuya, t. listed as co-authors?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[27]], "3": ["<error>"], "4": [[42]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[13]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'", -3.978633171806], [" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'", -3.978633171806], [" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'", -3.978633171806], [" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'", -3.978633171806], [" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'", -3.978633171806], [" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'", -4.123781031965001], [" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'", -5.7418052586599995], [" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'", -5.88889607006], [" SELECT COUNT(*) FROM w WHERE author LIKE '% sahi, m. & shilbuya, t. %'", -6.246757144759999], [" SELECT COUNT(*) FROM w WHERE author LIKE '%sahi, m. & shilbuya, t.%'\nQ2: {how many = a2} records have a licence of os.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` = 'os'\nQ3: {how many = a3} records have a homepage of link.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE homepage = 'link'\nQ4: {how many = a4} records have a author of d. hernandez, p. fran\u00e7ois, l. farinelli, m. osteras, and j. schrenzel.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE author = 'd. hernandez, p. fran\u00e7ois, l. farinelli, m. osteras, and j. schrenzel.'\nQ5: {how many = a5} records have a technologies of illumina.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE technologies LIKE '%illumina%'\nQ6: {", -38.45450036049938]]}, "660": {"question": "how many times was the championship in miami?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [1], [2]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE championship LIKE '%miami%'", -2.32329091447], [" SELECT COUNT(*) FROM w WHERE championship LIKE '%miami%'", -2.32329091447], [" SELECT COUNT(*) FROM w WHERE championship LIKE '%miami%'", -2.3310553567700003], [" SELECT COUNT(*) FROM w WHERE championship LIKE 'miami%'", -2.5756270348099997], [" SELECT COUNT(*) FROM w WHERE championship LIKE '%miami%'", -3.3705839010400003], [" SELECT COUNT(*) FROM w WHERE championship LIKE '%miami%'", -3.3705839010400003], [" SELECT COUNT(*) FROM w WHERE championship LIKE '%miami%'", -3.3705839010400003], [" SELECT COUNT(*) FROM w WHERE championship LIKE 'miami%'", -3.7488927801399994], [" SELECT COUNT(*) FROM w WHERE championship = 'miami'", -4.3849656898900005], [" SELECT COUNT(*) FROM w WHERE championship LIKE 'miami%'\nQ2: {how many = a2} times was the championship in miami and roger federer was the opponent.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship LIKE 'miami%' AND opponent = 'roger federer'\nQ3: {how many = a3} times was the championship in miami and roger federer was the opponent and the outcome was winner.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE championship LIKE 'miami%' AND opponent = 'roger federer' AND outcome = 'winner'\nQ4: {how many = a4} times was the championship in miami and roger federer was the opponent and the outcome was winner and the year is 2005.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE championship LIKE 'miami%' AND opponent = 'roger federer' AND outcome = 'winner' AND year = 2005\nQ5: {how many = a5} times was the championship in miami and roger federer was the opponent and the outcome was winner and", -34.178826646118985]]}, "681": {"question": "how many drivers did not finish 56 laps?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps != 56", -1.6973830922729998], [" SELECT COUNT(*) FROM w WHERE laps != 56", -1.6973830922729998], [" SELECT COUNT(*) FROM w WHERE laps != 56", -1.701781849673], [" SELECT COUNT(*) FROM w WHERE laps != 56", -1.701781849673], [" SELECT COUNT(*) FROM w WHERE laps < 56", -2.089231277273], [" SELECT COUNT(*) FROM w WHERE laps < 56", -2.089231277273], [" SELECT COUNT(*) FROM w WHERE laps < 56", -2.092580704673], [" SELECT COUNT(*) FROM w WHERE laps < 56", -2.092580704673], [" SELECT COUNT(*) FROM w WHERE laps != 56", -4.217940590973001], [" SELECT COUNT(*) FROM w WHERE laps < 56", -13.470806047973003]]}, "698": {"question": "what is the number of games that the vancouver canucks have won up to this point?", "gold_answer": ["1,353"], "pred_answer": {"0": [[1353], [1353], [1353], [1353], [1353], [1353], [1353], [1353], [1353], [1353]], "1": ["<error>"], "2": [[1536]], "3": ["<error>"], "4": [[10378]], "5": ["<error>"], "6": [[11024]], "7": ["<error>"], "8": [[-646]], "9": ["<error>"], "10": [[3179]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT wins FROM w WHERE team = 'vancouver canucks'", -2.3459763486300003], [" SELECT wins FROM w WHERE team = 'vancouver canucks'", -2.3459763486300003], [" SELECT wins FROM w WHERE team = 'vancouver canucks'", -2.3459763486300003], [" SELECT SUM(wins) FROM w WHERE team LIKE '%vancouver canucks%'", -3.947524134189999], [" SELECT SUM(wins) FROM w WHERE team = 'vancouver canucks'", -5.300331662090001], [" SELECT wins FROM w WHERE team = 'vancouver canucks'", -5.826082660130001], [" SELECT wins FROM w WHERE team LIKE '%vancouver canucks%'", -6.401546676280001], [" SELECT wins FROM w WHERE team LIKE '%vancouver canucks%'", -6.401546676280001], [" SELECT wins FROM w WHERE team LIKE '%vancouver canucks%'", -10.859155106280001], [" SELECT wins FROM w WHERE team = 'vancouver canucks'\nQ2: the vancouver canucks have lost {how many = a2} games.\nNeuralSQL2: SELECT losses FROM w WHERE team = 'vancouver canucks'\nQ3: the vancouver canucks have scored {how many = a3} goals.\nNeuralSQL3: SELECT `goals\\nfor` FROM w WHERE team = 'vancouver canucks'\nQ4: the vancouver canucks have scored {how many = a4} goals.\nNeuralSQL4: SELECT `goals\\nagainst` FROM w WHERE team = 'vancouver canucks'\nQ5: the vancouver canucks have scored {how many = a5} goals.\nNeuralSQL5: SELECT `goal\\ndiff` FROM w WHERE team = 'vancouver canucks'\nQ6: the vancouver canucks have scored {how many = a6} goals.\nNeuralSQL6: SELECT points FROM w WHERE team = 'vancouver canucks'\nQ7: the vancouver canucks have scored {how many = a7} goals.\nNeuralSQL", -25.69984076227599]]}, "702": {"question": "the television show \"the two ronnies\" ran for a total of how many seasons?", "gold_answer": ["12"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [10]]}, "nsql": [[" SELECT COUNT(DISTINCT(year)) FROM w", -6.639253022749999], [" SELECT COUNT(DISTINCT year) FROM w", -6.81560802667], [" SELECT COUNT(DISTINCT year) FROM w", -6.81560802667], [" SELECT COUNT(DISTINCT year) FROM w", -6.81560802667], [" SELECT COUNT(DISTINCT year) FROM w", -6.81560802667], [" SELECT COUNT(DISTINCT(year)) FROM w", -7.31944198375], [" SELECT COUNT(DISTINCT(year)) FROM w", -7.31944198375], [" SELECT COUNT(DISTINCT(year)) FROM w", -7.31944198375], [" SELECT COUNT(DISTINCT year) FROM w", -12.54544629617], [" SELECT COUNT(DISTINCT(year)) FROM w WHERE year LIKE '%\u2013%'", -12.676703417969998]]}, "739": {"question": "how did they place the year after they were 4th in the regular season?", "gold_answer": ["3rd"], "pred_answer": {"0": [[1], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '%4th%'", -6.74218238915], [" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '4th%' AND `year` = '2013'", -10.29165956015], [" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '4th%' AND year = '2013'", -10.58717707645], [" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '4th%' AND `year` > (SELECT `year` FROM w WHERE `regular season` LIKE '4th%')", -10.955785857000002], [" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '4th%' AND `year` = (SELECT `year` FROM w WHERE `regular season` LIKE '4th%') + 1", -11.645395237849998], [" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '4th%' AND CAST(SUBSTR(year, 1, LENGTH(year) - 1) AS INT) = (CAST(SUBSTR(year, 1, LENGTH(year) - 1) AS INT) + 1)", -13.958677796709996], [" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '4th%' AND `year` LIKE '% - %' AND (CAST(SUBSTR(year, 1, INSTR(year, '-') - 1) AS INT) - CAST(SUBSTR(year, INSTR(year, '-') + 1, LENGTH(year) - (INSTR(year, ' - ') + 1)) AS INT)) = 1", -14.370616121250006], [" SELECT COUNT(*) FROM w WHERE (regular season LIKE '%4th%' OR regular season LIKE '4th%') AND year = CAST(SUBSTR(year, 1, INSTR(year, '-') - 1) AS INT) + 1", -18.79772170311], [" SELECT COUNT(*) FROM w WHERE (year = (SELECT year + 1 FROM w WHERE regular season LIKE '4th%') AND regular season LIKE '%4th%')", -20.401112048949997], [" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '4%' AND `regular season` NOT LIKE '4th%' AND `year` = CAST(SUBSTR(`year`, 1, 4) AS INT) + 1", -23.685651040170008]]}, "743": {"question": "is nashot junction closer to shipon junction or avital junction?", "gold_answer": ["Shipon Junction"], "pred_answer": {"0": [[-8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "1": [[-12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT (SELECT kilometers FROM w WHERE name = 'nashot junction') - (SELECT kilometers FROM w WHERE name = 'shipon junction')\nNeuralSQL2: SELECT (SELECT kilometers FROM w WHERE name = 'nashot junction') - (SELECT kilometers FROM w WHERE name = 'avital junction')", -5.184216506495003], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'shipon junction')) FROM w WHERE name = 'nashot junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'avital junction')) FROM w WHERE name = 'nashot junction'", -12.017501424567001], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'shipon junction')) FROM w WHERE name = 'nashot junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'avital junction')) FROM w WHERE name = 'nashot junction'", -12.388480984567002], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'shipon junction')) FROM w WHERE name = 'nashot junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'avital junction')) FROM w WHERE name = 'nashot junction'", -12.962219354567], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'shipon junction')) FROM w WHERE name = 'nashot junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'avital junction')) FROM w WHERE name = 'nashot junction'", -12.967974784567], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'shipon junction')) FROM w WHERE name = 'nashot junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'avital junction')) FROM w WHERE name = 'nashot junction'", -13.469546654567], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'shipon junction')) FROM w WHERE name = 'nashot junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'avital junction')) FROM w WHERE name = 'nashot junction'", -13.514926754567], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'shipon junction')) FROM w WHERE name = 'nashot junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'avital junction')) FROM w WHERE name = 'nashot junction'", -14.071782954567], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'shipon junction')) FROM w WHERE name = 'nashot junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'avital junction')) FROM w WHERE name = 'nashot junction'", -14.458053944567002], [" SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'nashot junction')) FROM w WHERE name = 'shipon junction'\nNeuralSQL2: SELECT ABS(kilometers - (SELECT kilometers FROM w WHERE name = 'nashot junction')) FROM w WHERE name = 'avital junction'", -14.678436245310001]]}, "784": {"question": "how many straight wins at 3 credits equals one straight flush win at two credits?", "gold_answer": ["10"], "pred_answer": {"0": [[0], "<error>", [0], [0], [0], [], [], "<error>", "<error>", [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `3 credits` = `2 credits` * 2", -5.084023113230001], [" SELECT COUNT(*) FROM w WHERE `3 credits` = `2 credits`", -5.20555312653], [" SELECT COUNT(*) FROM w WHERE hand = 'straight' AND `3 credits` = `2 credits` * 2", -7.6997157442300015], [" SELECT COUNT(*) FROM w WHERE `3 credits` = `2 credits` AND hand = 'straight'", -7.708453540474999], [" SELECT COUNT(*) FROM w WHERE `3 credits` = `2 credits` * 2 AND hand = 'straight'", -7.8903451155300015], [" SELECT CAST(SUBSTR(`3 credits`, 1, INSTR(`3 credits`, ' ') - 1) AS INT) / CAST(SUBSTR(`2 credits`, 1, INSTR(`2 credits`, ' ') - 1) AS INT) FROM w WHERE hand = 'straight' AND hand = 'straight flush'", -10.012957568882998], [" SELECT CAST(SUBSTR(`3 credits`, 1, INSTR(`3 credits`, ' ') - 1) AS INT) / CAST(SUBSTR(`2 credits`, 1, INSTR(`2 credits`, ' ') - 1) AS INT) FROM w WHERE hand = 'straight' AND hand = 'straight flush'", -10.040410883843], [" SELECT CAST(SUBSTR(`3 credits`, 1, INSTR(`3 credits`, ' ') - 1) AS INT) / CAST(SUBSTR(`2 credits`, 1, INSTR(`2 credits`, ' ') - 1) AS INT)", -18.335248166954], [" SELECT CAST(SUBSTR(`3 credits`, 1, INSTR(`3 credits`, ' ') - 1) AS INT) / CAST(SUBSTR(`2 credits`, 1, INSTR(`2 credits`, ' ') - 1) AS INT)", -19.088493984847002], [" SELECT COUNT(*) FROM w WHERE (`3 credits` = 'one straight flush win at two credits') AND (`2 credits` = 'one straight win at three credits')", -19.492006989596003]]}, "825": {"question": "what is the total amount of nations with more than 5 bronze medals?", "gold_answer": ["1"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>", "<error>"], "2": [[2], [2]], "3": ["<error>", "<error>"], "4": [[2], [5]], "5": ["<error>", "<error>"], "6": [[2], [7]], "7": ["<error>", "<error>"], "8": [[2], [5]], "9": ["<error>", "<error>"], "10": [[2], [8]], "11": ["<error>", "<error>"], "12": [[2], [5]], "13": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE bronze > 5", -0.9182749430099999], [" SELECT COUNT(*) FROM w WHERE bronze > 5", -0.9211095189099999], [" SELECT COUNT(*) FROM w WHERE bronze > 5", -0.9211095189099999], [" SELECT COUNT(*) FROM w WHERE bronze > 5", -0.9211095189099999], [" SELECT COUNT(*) FROM w WHERE bronze > 5", -0.9211095189099999], [" SELECT COUNT(*) FROM w WHERE bronze > 5", -0.9211095189099999], [" SELECT COUNT(*) FROM w WHERE bronze > 5", -4.212866995910001], [" SELECT COUNT(*) FROM w WHERE bronze > 5", -10.30577070687], [" SELECT COUNT(*) FROM w WHERE bronze > 5\nQ2: the number of nations with more than 5 bronze medals is {how many = a2}.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze > 5\nQ3: the number of nations with more than 5 bronze medals is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze > 5\nQ4: the number of nations with more than 5 bronze medals is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE bronze > 5\nQ5: the number of nations with more than 5 bronze medals is {how many = a5}.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE bronze > 5\nQ6: the number of nations with more than 5 bronze medals is {how many = a6}.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE bronze > 5\nQ7: the number of nations with more than 5 bronze medals is {how many = a7}.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE bronze > 5\nQ8:", -20.835324080187018], [" SELECT COUNT(*) FROM w WHERE bronze > 5\nQ2: there are {how many = a2} nations with more than 3 silver medals.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 3\nQ3: there are {how many = a3} nations with more than 2 gold medals.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE gold > 2\nQ4: there are {how many = a4} nations with more than 4 total medals.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE total > 4\nQ5: there are {how many = a5} nations with more than 6 total medals.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE total > 6\nQ6: there are {how many = a6} nations with more than 1 silver medals.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE silver > 1\nQ7: there are {how many = a7} nations with more than 2 bronze medals.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE bronze > 2\nQ8: there are {how many =", -30.218936570306017]]}, "866": {"question": "how many airports in spain are among the 10 busiest routes to and from london southend airport in 2012?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], "<error>", [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE airport LIKE 'spain - %'", -3.7674523157], [" SELECT COUNT(*) FROM w WHERE airport LIKE 'spain - %'", -3.7674523157], [" SELECT COUNT(*) FROM w WHERE airport LIKE 'spain - %'", -3.78153799176], [" SELECT COUNT(*) FROM w WHERE country = 'spain' AND rank <= 10", -4.287186846259999], [" SELECT COUNT(*) FROM w WHERE airport LIKE '%spain%'", -4.547614391813999], [" SELECT COUNT(*) FROM w WHERE airport LIKE 'spain%' AND rank <= 10", -4.66367849272], [" SELECT COUNT(*) FROM w WHERE airport LIKE 'spain%' AND rank <= 10", -8.786123815520002], [" SELECT COUNT(*) FROM w WHERE airport LIKE 'spain - %' AND rank <= 10", -12.832953559534], [" SELECT COUNT(*) FROM w WHERE airport LIKE 'spain - %' AND rank <= 10", -14.70005510557], [" SELECT COUNT(*) FROM w WHERE airport LIKE 'spain - %' AND rank <= 10", -14.86784443997]]}, "907": {"question": "who had more drivers, team avanti or motaworld racing?", "gold_answer": ["Team Avanti"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'motaworld racing'", -1.8447680051392001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'motaworld racing'", -1.8447680051392001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'motaworld racing'", -1.8447680051392001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'motaworld racing'", -1.8447680051392001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'motaworld racing'", -1.8447680051392001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'motaworld racing'", -1.8447680051392001], [" SELECT COUNT(*) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'motaworld racing'", -5.760840070967001], [" SELECT COUNT(*) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'motaworld racing'", -5.792631970967001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'motaworld racing'", -8.3291229902792], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'team avanti'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'motaworld racing'\n```", -12.388676746279199]]}, "948": {"question": "tell me the number of people first elected in 1817.", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>", "<error>"], "2": [[3]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[3]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817", -1.80024291173], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817", -1.80024291173], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817", -1.80024291173], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817", -1.80024291173], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` = '1817'", -3.0693000245800004], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` = '1817'", -3.0693000245800004], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817", -3.16521663958], [" SELECT COUNT(DISTINCT(incumbent)) FROM w WHERE `first\\nelected` = 1817", -5.462809372692001], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817\n```", -12.30118593138], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817\nQ2: there are {how many = a2} people first elected in 1817 and re-elected.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817 AND result = 're-elected'\nQ3: there are {how many = a3} people first elected in 1817 and re-elected and from virginia.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817 AND result = 're-elected' AND district LIKE 'virginia%'\nQ4: there are {how many = a4} people first elected in 1817 and re-elected and from virginia and the party is crawford republican.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `first\\nelected` = 1817 AND result = 're-elected' AND district LIKE 'virginia%' AND party = 'crawford republican'\nQ5: there are {how many = a5} people first elected in 1817 and re-elected and from", -28.772447227569998]]}, "989": {"question": "what was the only captain sunk by hms pelican?", "gold_answer": ["Heinrich Hensohn"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms pelican'", -2.2544601342300004], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms pelican'", -2.2544601342300004], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms pelican'", -2.2544601342300004], [" SELECT COUNT(*) FROM w WHERE sunk by = 'hms pelican'", -2.40632491044], [" SELECT COUNT(*) FROM w WHERE sunk by = 'hms pelican'", -2.40632491044], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms pelican'", -3.2260862578000005], [" SELECT COUNT(DISTINCT captain) FROM w WHERE sunk by = 'hms pelican'", -6.475813402460001], [" SELECT COUNT(DISTINCT captain) FROM w WHERE sunk by = 'hms pelican'", -7.24562186979], [" SELECT COUNT(DISTINCT captain) FROM w WHERE sunk by = 'hms pelican'", -11.14157026218], [" SELECT COUNT(DISTINCT captain) FROM w WHERE sunk by = 'hms pelican'", -12.25853888128]]}, "1030": {"question": "which two monarchs had no children?", "gold_answer": ["Alfonso I", "Sancho"], "pred_answer": {"0": [[2], [2], [1], [0], [0], [0], [1], [1], [1], [0]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE marriages LIKE '%no children%'", -3.8438183564], [" SELECT COUNT(*) FROM w WHERE marriages LIKE '%no children%'", -3.84944584998], [" SELECT COUNT(*) FROM w WHERE marriages NOT LIKE '%children%'", -4.21589565704], [" SELECT COUNT(*) FROM w WHERE marriages = 'no children'", -5.51580741732], [" SELECT COUNT(*) FROM w WHERE marriages = 'no children'", -5.51580741732], [" SELECT COUNT(*) FROM w WHERE marriages = 'no children'", -5.51580741732], [" SELECT COUNT(*) FROM w WHERE marriages NOT LIKE '%children%'", -5.84545765622], [" SELECT COUNT(*) FROM w WHERE marriages NOT LIKE '%;%'", -6.26781208422], [" SELECT COUNT(*) FROM w WHERE marriages not like '%children%'", -8.78283825822], [" SELECT COUNT(*) FROM w WHERE marriages = 'no children'\nQ2: {how many = a2} monarchs were born in 1243.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE birth LIKE '1243%'\nQ3: {how many = a3} monarchs were born in 1243 and died in 1311.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE birth LIKE '1243%' AND death LIKE '1311%'\nQ4: {how many = a4} monarchs were born in 1243 and died in 1311 and had no children.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE birth LIKE '1243%' AND death LIKE '1311%' AND marriages = 'no children'\nQ5: {how many = a5} monarchs were born in 1243 and died in 1311 and had no children and were married to esclaramunda of foix.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE birth LIKE '1243%' AND death LIKE '1311%' AND marriages = 'no children' AND marriages LIKE", -36.033146686003036]]}, "1071": {"question": "how many members had businessman listed as their profession?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -0.8789775714599999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -0.8789775714599999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -0.8789775714599999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -0.8789775714599999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -0.8789775714599999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -0.8789775714599999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -0.8789775714599999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -0.8789775714599999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -3.7517143760600007], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman'", -17.808175066380002]]}, "1112": {"question": "how many years were they in tier 3", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE tier = 3", -1.3319431215599997], [" SELECT COUNT(*) FROM w WHERE tier = 3", -1.33269184756], [" SELECT COUNT(*) FROM w WHERE tier = 3", -1.33269184756], [" SELECT COUNT(*) FROM w WHERE tier = 3", -1.33269184756], [" SELECT COUNT(DISTINCT season) FROM w WHERE tier = 3", -2.2993375579859996], [" SELECT COUNT(DISTINCT season) FROM w WHERE tier = 3", -4.231467321919999], [" SELECT COUNT(*) FROM w WHERE tier = 3", -8.18873679799], [" SELECT COUNT(*) FROM w WHERE tier = 3", -8.219407691559999], [" SELECT COUNT(*) FROM w WHERE tier = 3\n```", -10.538363454059999], [" SELECT COUNT(*) FROM w WHERE tier = 3", -14.73040660656]]}, "1153": {"question": "how many total medals did norway win?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT total FROM w WHERE nation = 'norway'", -1.7405241485999996], [" SELECT total FROM w WHERE nation = 'norway'", -1.7405241485999996], [" SELECT total FROM w WHERE nation = 'norway'", -1.7405241485999996], [" SELECT total FROM w WHERE nation = 'norway'", -1.7405241485999996], [" SELECT total FROM w WHERE nation = 'norway'", -1.7405241485999996], [" SELECT SUM(total) FROM w WHERE nation = 'norway'", -5.16233935468], [" SELECT SUM(total) FROM w WHERE nation = 'norway'", -5.62637735468], [" SELECT SUM(total) FROM w WHERE nation = 'norway'", -5.6274240546800005], [" SELECT SUM(total) FROM w WHERE nation = 'norway'", -5.6274240546800005], [" SELECT total FROM w WHERE nation = 'norway'", -8.7174836752]]}, "1194": {"question": "how many combined silver medals did china, india, and japan earn ?", "gold_answer": ["13"], "pred_answer": {"0": [[], [], [], [], [], [], [], [10], [], [10]], "1": [[], [], [], [], [], [], [], [0], [], [0]], "2": [[], [], [], [], [], [], [], [3], [], [3]]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'india'\nNeuralSQL3: SELECT silver FROM w WHERE nation = 'japan'", -7.15157478319], [" SELECT silver FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'india'\nNeuralSQL3: SELECT silver FROM w WHERE nation = 'japan'", -7.153508988472999], [" SELECT silver FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'india'\nNeuralSQL3: SELECT silver FROM w WHERE nation = 'japan'", -7.153508988472999], [" SELECT silver FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'india'\nNeuralSQL3: SELECT silver FROM w WHERE nation = 'japan'", -7.160194748966999], [" SELECT silver FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'india'\nNeuralSQL3: SELECT silver FROM w WHERE nation = 'japan'", -7.384919452883], [" SELECT silver FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'india'\nNeuralSQL3: SELECT silver FROM w WHERE nation = 'japan'", -7.918713586503], [" SELECT silver FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'india'\nNeuralSQL3: SELECT silver FROM w WHERE nation = 'japan'", -7.9794276528829995], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%india%'\nNeuralSQL3: SELECT SUM(silver) FROM w WHERE nation LIKE '%japan%'", -8.79179570453], [" SELECT silver FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'india'\nNeuralSQL3: SELECT silver FROM w WHERE nation = 'japan'", -9.205987883190001], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%india%'\nNeuralSQL3: SELECT SUM(silver) FROM w WHERE nation LIKE '%japan%'", -17.90524839941]]}, "1235": {"question": "what artist has more music appear in the show, daft punk or franz ferdinand?", "gold_answer": ["Franz Ferdinand"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -4.90142722981], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -6.761016494709999], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -7.9109291957100005], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -8.49384213171], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -9.33156389619], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -9.49166105874], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -9.55798092571], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -9.55868280571], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -9.807382501709998], [" SELECT COUNT(*) FROM w WHERE artist = 'daft punk'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE artist = 'franz ferdinand'", -10.480525296189999]]}, "1276": {"question": "how many cyclist are not listed with a country team?", "gold_answer": ["3"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [18], [13], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team NOT IN ('south korea', 'malaysia', 'belgium', 'russia', 'belarus')", -4.270167666970002], [" SELECT COUNT(*) FROM w WHERE team NOT IN ('south korea', 'malaysia', 'belgium', 'russia', 'belarus')", -4.270167666970002], [" SELECT COUNT(*) FROM w WHERE team NOT LIKE '% %'", -4.638589250166], [" SELECT COUNT(*) FROM w WHERE team NOT LIKE '% %'", -4.638589250166], [" SELECT COUNT(*) FROM w WHERE team NOT IN ('south korea', 'malaysia', 'belgium', 'russia', 'belarus')", -5.558035378970001], [" SELECT COUNT(*) FROM w WHERE team NOT LIKE '% %'", -6.558176987256], [" SELECT COUNT(*) FROM w WHERE team NOT LIKE '%country%'", -7.300588507696], [" SELECT COUNT(*) FROM w WHERE team NOT LIKE '% %'\n```", -7.917501106625999], [" SELECT COUNT(*) FROM w WHERE team = 'nan'", -8.148941343276], [" SELECT COUNT(*) FROM w WHERE team = 'nan'", -8.148941343276]]}, "17": {"question": "total number of players whose home town was in north carolina (nc)", "gold_answer": ["7"], "pred_answer": {"0": [[8], [8], [8], [8], [7], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE home town LIKE '%nc%'", -2.66530047339], [" SELECT COUNT(*) FROM w WHERE home town LIKE '%nc%'", -2.6734846784350004], [" SELECT COUNT(*) FROM w WHERE home town LIKE '%nc%'", -2.6734846784350004], [" SELECT COUNT(*) FROM w WHERE home town LIKE '%nc%'", -2.67697658429], [" SELECT COUNT(*) FROM w WHERE home town LIKE '%, nc'", -3.16978318835], [" SELECT COUNT(*) FROM w WHERE `home town` LIKE '%nc%'", -3.20103022787], [" SELECT COUNT(*) FROM w WHERE home town LIKE '%nc%'", -4.19836514867], [" SELECT COUNT(*) FROM w WHERE home town LIKE '%nc%'", -4.19836514867], [" SELECT COUNT(*) FROM w WHERE home town LIKE '%nc%'", -4.851387570279999], [" SELECT COUNT(*) FROM w WHERE home town LIKE '%nc%'", -4.851387570279999]]}, "20": {"question": "how many total medals has the united states won in women's figure skating?", "gold_answer": ["16"], "pred_answer": {"0": [[18], [18], [18], [18], [18], [18], [18], [18], [18], [18]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE nation LIKE '%united states%'", -4.539737387960001], [" SELECT SUM(total) FROM w WHERE nation = 'united states'", -4.90084323806], [" SELECT SUM(total) FROM w WHERE nation LIKE '%united states%'", -5.11549762905], [" SELECT SUM(total) FROM w WHERE nation LIKE '%united states%'", -5.32812462456], [" SELECT SUM(total) FROM w WHERE nation = 'united states'", -5.35485490442], [" SELECT SUM(total) FROM w WHERE nation = 'united states'", -5.35485490442], [" SELECT SUM(total) FROM w WHERE nation = 'united states'", -5.35485490442], [" SELECT SUM(total) FROM w WHERE nation = 'united states'", -5.35485490442], [" SELECT SUM(total) FROM w WHERE nation = 'united states'", -5.35485490442], [" SELECT SUM(total) FROM w WHERE nation = 'united states'", -6.46950865206]]}, "41": {"question": "how many united states competitors did not win medals?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank > 3", -3.42151889192], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank > 3", -3.42151889192], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank > 3", -3.42724464242], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank > 3", -3.42724464242], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank > 3", -3.42724464242], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank > 3", -4.700653506419999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.9884451767], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank <> 1", -7.017255500919999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -7.790680271419999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank > 3\n```", -14.328570645620001]]}, "58": {"question": "what were the total number of legs won by ronnie baxter?", "gold_answer": ["54"], "pred_answer": {"0": [[54], [54], [54], [54], [54], [54], [54], [54], [54], [54]]}, "nsql": [[" SELECT `legs won` FROM w WHERE player = 'ronnie baxter'", -1.740762368555], [" SELECT `legs won` FROM w WHERE player = 'ronnie baxter'", -1.740762368555], [" SELECT `legs won` FROM w WHERE player = 'ronnie baxter'", -1.740762368555], [" SELECT `legs won` FROM w WHERE player = 'ronnie baxter'", -1.740762368555], [" SELECT `legs won` FROM w WHERE player = 'ronnie baxter'", -1.740762368555], [" SELECT `legs won` FROM w WHERE player = 'ronnie baxter'", -1.740762368555], [" SELECT `legs won` FROM w WHERE player = 'ronnie baxter'", -2.9063822303649998], [" SELECT `legs won` FROM w WHERE player = 'ronnie baxter'", -2.9063822303649998], [" SELECT SUM(`legs won`) FROM w WHERE player = 'ronnie baxter'", -5.687878138179999], [" SELECT legs won FROM w WHERE player = 'ronnie baxter'", -6.4447009162399995]]}, "62": {"question": "what is the total number dallara chassis listed in the table?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -1.8180273409419998], [" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -1.8180273409419998], [" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -1.8180273409419998], [" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -1.8180273409419998], [" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -1.8180273409419998], [" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -1.8180273409419998], [" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -2.3934802165049995], [" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -2.3934802165049995], [" SELECT COUNT(*) FROM w WHERE chassis = 'dallara'", -2.3934802165049995], [" SELECT COUNT(DISTINCT chassis) FROM w WHERE chassis = 'dallara'", -4.226143240096001]]}, "99": {"question": "what is the total number of affiliates among all the networks?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [2], [7], [2]]}, "nsql": [[" SELECT SUM(affiliates) FROM w", -1.5485478402600001], [" SELECT SUM(affiliates) FROM w", -1.5485478402600001], [" SELECT SUM(affiliates) FROM w", -1.55047258496], [" SELECT SUM(affiliates) FROM w", -1.55047258496], [" SELECT SUM(affiliates) FROM w", -1.55047258496], [" SELECT SUM(affiliates) FROM w", -1.55047258496], [" SELECT SUM(affiliates) FROM w", -1.55047258496], [" SELECT COUNT(DISTINCT(affiliates)) FROM w", -3.5247024598800003], [" SELECT COUNT(*) FROM w", -5.6171248164400005], [" SELECT COUNT(DISTINCT affiliates) FROM w", -11.83670977524]]}, "103": {"question": "other than william stuart price, which other businessman was born in tulsa?", "gold_answer": ["Joseph L. Parker Jr."], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE hometown = 'tulsa' AND profession = 'businessman'", -4.791148895589999], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman' AND hometown = 'tulsa'", -4.89618315622], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman' AND hometown = 'tulsa'", -4.89618315622], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman' AND hometown = 'tulsa'", -4.89683378571], [" SELECT COUNT(*) FROM w WHERE hometown = 'tulsa' AND profession = 'businessman'", -5.10884358286], [" SELECT COUNT(*) FROM w WHERE hometown = 'tulsa' AND profession = 'businessman'", -5.10884358286], [" SELECT COUNT(*) FROM w WHERE hometown = 'tulsa' AND profession = 'businessman'", -5.10884358286], [" SELECT COUNT(*) FROM w WHERE hometown = 'tulsa' AND profession = 'businessman'", -5.10884358286], [" SELECT COUNT(*) FROM w WHERE hometown = 'tulsa' AND profession = 'businessman'", -5.8862968558799995], [" SELECT COUNT(*) FROM w WHERE profession = 'businessman' AND hometown = 'tulsa'", -6.09951678571]]}, "144": {"question": "how many world championships has he been in?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [4], [3]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[2]], "9": ["<error>"], "10": [[5]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition LIKE '%world championships%'", -3.7275909808299996], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world championships%'", -3.7275909808299996], [" SELECT COUNT(*) FROM w WHERE competition = 'world championships'", -4.332050822459999], [" SELECT COUNT(*) FROM w WHERE competition = 'world championships'", -4.332050822459999], [" SELECT COUNT(*) FROM w WHERE competition = 'world championships'", -6.26163699861], [" SELECT COUNT(*) FROM w WHERE competition = 'world championships'", -7.05039499861], [" SELECT COUNT(*) FROM w WHERE competition = 'world championships'", -7.05039499861], [" SELECT COUNT(*) FROM w WHERE competition = 'world championships'", -9.88082731326], [" SELECT COUNT(DISTINCT competition) FROM w WHERE competition LIKE '%championships%'", -10.890804163381], [" SELECT COUNT(*) FROM w WHERE competition = 'world championships'\nQ2: {how many = a2} times he has been in the world championships.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE competition = 'world championships'\nQ3: {how many = a3} times he has been in the european championships.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE competition = 'european championships'\nQ4: {how many = a4} times he has been in the olympic games.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE competition = 'olympic games'\nQ5: {how many = a5} times he has been in the universiade.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE competition = 'universiade'\nQ6: {how many = a6} times he has been in the world championships and the olympic games.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE competition IN ('world championships', 'olympic games')\nQ7: {how many = a7} times", -36.441398243679]]}, "185": {"question": "how many are enrolled in private/catholic?", "gold_answer": ["8,754"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -1.912244188267], [" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -1.912837251767], [" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -1.912837251767], [" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -1.912837251767], [" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -1.912837251767], [" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -1.912837251767], [" SELECT COUNT(*) FROM w WHERE `type` = 'private/catholic'", -2.710242035584], [" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -3.3612782397670005], [" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -3.3612782397670005], [" SELECT COUNT(*) FROM w WHERE type = 'private/catholic'", -4.772176768872001]]}, "226": {"question": "what it the total number of countries in the first stage of the 2008 afc asian cup?", "gold_answer": ["4"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -5.117888126070001], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -5.13089772228], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -5.910619746999999], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -6.094634671054001], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -6.17720135205], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -6.50121448967], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -7.767177163586], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -7.944355400910001], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE competition = '2008 afc asian cup' AND stage = 'first stage'", -8.285074388526], [" SELECT COUNT(*) FROM w WHERE `competition` = '2008 afc asian cup' AND `stage` = 'first stage'", -8.69795947031]]}, "267": {"question": "how many times has gran cochisse been a winner?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner LIKE '%gran cochisse%'", -3.55122617088], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%gran cochisse%'", -3.55122617088], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse'", -4.121510601770001], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse'", -4.12499556995], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse'", -5.982064460190001], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse'", -5.98551097568], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse'", -5.98551097568], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse'", -6.190769975679999], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse'", -8.70759067568], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse'", -9.46977197568]]}, "308": {"question": "which country has won more gold medals: china or mexico?", "gold_answer": ["China"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [0], [4], [0]], "1": [[2], [2], [2], [2], [2], [2], [2], [0], [2], [0]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold LIKE '%(chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%(mex)%'", -3.4206487067700007], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%(mex)%'", -3.4206487067700007], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%(mex)%'", -3.4206487067700007], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%(mex)%'", -3.4206487067700007], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%(mex)%'", -3.4206487067700007], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%(mex)%'", -3.4211022151900004], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%(mex)%'", -3.4211022151900004], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%china%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%mexico%'", -3.4301401140200007], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%(mex)%'", -5.325633269241003], [" SELECT COUNT(*) FROM w WHERE gold LIKE '% (chn)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '% (mex)%'\n```", -16.893831261760003]]}, "349": {"question": "how many players were for leeds united?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -1.7617211536439998], [" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -1.820673011244], [" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -1.820673011244], [" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -1.820673011244], [" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -1.821605575244], [" SELECT COUNT(*) FROM w WHERE for = 'leeds united'", -2.940054932734], [" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -3.1374754996439997], [" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -3.1981839322440004], [" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -3.1981839322440004], [" SELECT COUNT(*) FROM w WHERE `for` = 'leeds united'", -3.1981839322440004]]}, "390": {"question": "how many mills were mentioned or built before 1700?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `first mention or built` < 1700", -3.1594993587299993], [" SELECT COUNT(*) FROM w WHERE `first mention or built` < 1700", -3.1594993587299993], [" SELECT COUNT(*) FROM w WHERE `first mention or built` < '1700'", -3.2015391774], [" SELECT COUNT(*) FROM w WHERE `first mention or built` < '1700'", -3.2015391774], [" SELECT COUNT(*) FROM w WHERE `first mention or built` < '1700'", -3.2015391774], [" SELECT COUNT(*) FROM w WHERE `first mention or built` < '1700'", -3.2015391774], [" SELECT COUNT(*) FROM w WHERE `first mention\\nor built` < 1700", -3.6308474952000003], [" SELECT COUNT(*) FROM w WHERE `first mention or built` < '1700'", -5.466240587299999], [" SELECT COUNT(*) FROM w WHERE `first mention\\nor built` < '1700'", -6.596096288900001], [" SELECT COUNT(*) FROM w WHERE `first mention` LIKE '%-%' AND CAST(SUBSTR(`first mention`, 1, INSTR(`first mention`, '-') - 1) AS INT) < 1700", -9.738609896489995]]}, "431": {"question": "how many events of the 2013 bwf super series pay over $200,000?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000", -3.866381706700001], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000", -5.26386150367], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000", -5.26386150367], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000", -5.501405414160001], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000", -6.01086622508], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000", -7.337951037130001], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000\n```", -7.95139348663], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000", -11.34596642048], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000\n\"\"\"", -11.7197048498], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` > 200000", -12.80630626651]]}, "472": {"question": "largest medal differential between countries", "gold_answer": ["31"], "pred_answer": {"0": [[10], [0], [10], [0], [0], [6], [5], [6], [5], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (gold - silver) != (silver - bronze)", -6.061808601029999], [" SELECT COUNT(*) FROM w WHERE (gold + silver + bronze) - total > 0", -6.465824846229999], [" SELECT COUNT(*) FROM w WHERE (gold - silver) != (silver - bronze)", -7.2166490755299995], [" SELECT COUNT(*) FROM w WHERE (gold + silver + bronze) - total != 0", -7.80622985173], [" SELECT COUNT(*) FROM w WHERE (gold + silver + bronze) - (gold + silver + bronze) > 0", -8.586914359549997], [" SELECT COUNT(*) FROM w WHERE (gold - bronze) > 0", -8.63079073101], [" SELECT COUNT(*) FROM w WHERE (gold - silver) > 0", -9.540169688696], [" SELECT COUNT(*) FROM w WHERE (gold - bronze) > 0", -9.56834479741], [" SELECT COUNT(*) FROM w WHERE (gold - silver) > 0 AND (gold - bronze) > 0", -11.564722332770002], [" SELECT COUNT(*) FROM w WHERE (gold + silver + bronze) - total != 0\n```", -15.962509131950002]]}, "513": {"question": "what is the total number of stations with frequencies above 100 mhz?", "gold_answer": ["2"], "pred_answer": {"0": [[7], [2], [2], [7], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE frequency > 100", -2.61667323686], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`frequency`,'\u00a0mhz','') AS FLOAT) > 100", -7.0521916430200005], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, '\u00a0mhz', '') AS INT) > 100", -11.576705336649999], [" SELECT COUNT(*) FROM w WHERE frequency > '100'", -12.585724572659998], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 100", -12.899108883519997], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, '\u00a0mhz', '') AS INT) > 100", -12.99262436843], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency,'mhz','') AS FLOAT) > 100", -13.72705009201], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, ' mhz', '') AS INT) > 100", -14.17171490676], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 100", -14.528571974679998], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 100", -17.00963367082]]}, "554": {"question": "how many more casualties occurred on may 6 compared to may 4?", "gold_answer": ["158"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT casualties) FROM w WHERE `date` LIKE '1943-05-06%'\nNeuralSQL2: SELECT COUNT(DISTINCT casualties) FROM w WHERE `date` LIKE '1943-05-04%'", -4.975336328724399], [" SELECT COUNT(*) FROM w WHERE `date` = '1943-05-06 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` = '1943-05-04 00:00:00'", -7.338562820159999], [" SELECT COUNT(*) FROM w WHERE `date` = '1943-05-06 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` = '1943-05-04 00:00:00'", -7.3388371419], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-06%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-04%'", -7.862810946229999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-06%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-04%'", -7.862810946229999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-06%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-04%'", -7.862810946229999], [" SELECT COUNT(casualties) FROM w WHERE `date` LIKE '1943-05-06%'\nNeuralSQL2: SELECT COUNT(casualties) FROM w WHERE `date` LIKE '1943-05-04%'", -9.026967163225], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-06%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-04%'", -10.979679288529999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-06%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1943-05-04%'", -11.479047993310001], [" SELECT COUNT(casualties) FROM w WHERE DATE(date) = '1943-05-06'\nNeuralSQL2: SELECT COUNT(casualties) FROM w WHERE DATE(date) = '1943-05-04'", -14.422140978878002]]}, "595": {"question": "how many television stations serve the cape girardeau area?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -1.901388477884], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -1.901388477884], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -1.901388477884], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -1.901388477884], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -1.901388477884], [" SELECT COUNT(*) FROM w WHERE `area served` = 'cape girardeau'", -2.035274868524], [" SELECT COUNT(*) FROM w WHERE `area served` = 'cape girardeau'", -2.035274868524], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -3.296156255884], [" SELECT COUNT(*) FROM w WHERE `area served` = 'cape girardeau'", -4.2263156083240006], [" SELECT COUNT(*) FROM w WHERE `area served` = 'cape girardeau'", -4.2263156083240006]]}, "636": {"question": "how many athletes are there total?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [7], [7], [4], [4], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT athlete) FROM w", -2.052909581677], [" SELECT COUNT(DISTINCT athlete) FROM w", -2.052909581677], [" SELECT COUNT(DISTINCT athlete) FROM w", -2.052909581677], [" SELECT COUNT(DISTINCT(athlete)) FROM w", -2.5026823015170003], [" SELECT COUNT(*) FROM w", -3.6754261062499998], [" SELECT COUNT(*) FROM w", -3.6754261062499998], [" SELECT COUNT(DISTINCT(athlete)) FROM w", -5.162320818677], [" SELECT COUNT(DISTINCT(athlete)) FROM w", -6.843333387676999], [" SELECT COUNT(*) FROM w", -8.5277422183], [" SELECT COUNT(*) FROM w", -8.5277422183]]}, "677": {"question": "what was the total number of trio series shows were charmaine sheh on?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%'", -2.438860084385], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%'", -2.438860084385], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%'", -2.438860084385], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%'", -2.438860084385], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%'", -2.439396546326], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%'", -2.439396546326], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%'", -2.439396546326], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '% trio %'", -3.7659460851], [" SELECT COUNT(*) FROM w WHERE `name of show` LIKE '%trio%'", -5.59608766074], [" SELECT COUNT(*) FROM w WHERE `name of show` LIKE '%trio%'", -11.592716815984]]}, "680": {"question": "how many total medals were there all together?", "gold_answer": ["36"], "pred_answer": {"0": [[72], [72], [72], [72], [72], [72], [72], [72], [72], [72]]}, "nsql": [[" SELECT SUM(total) FROM w", -0.98119321643], [" SELECT SUM(total) FROM w", -0.98119321643], [" SELECT SUM(total) FROM w", -0.98119321643], [" SELECT SUM(total) FROM w", -0.98119321643], [" SELECT SUM(total) FROM w", -0.98119321643], [" SELECT SUM(total) FROM w", -0.98119321643], [" SELECT SUM(total) FROM w", -0.9813666460999999], [" SELECT SUM(total) FROM w", -0.9813666460999999], [" SELECT SUM(total) FROM w", -0.9813666460999999], [" SELECT SUM(total) FROM w", -0.9813666460999999]]}, "701": {"question": "at least how many aerial tramways were inaugurated after 1970?", "gold_answer": ["4"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>"], "2": [[8]], "3": ["<error>"], "4": [[8]], "5": ["<error>"], "6": [[8]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -1.4759100381799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -1.4759100381799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -1.4759100381799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -1.4759100381799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -1.4759100381799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -1.4759100381799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -2.4457026367799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -2.4457026367799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970", -2.4457026367799997], [" SELECT COUNT(*) FROM w WHERE `year of inauguration` > 1970\nQ2: {how many = a2} aerial tramways have a horizontal measurement.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `span width,\\nhorizontal measurement` IS NOT NULL\nQ3: {how many = a3} aerial tramways have a leaning straight line.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `span\u00a0width,\\nleaning straight line` IS NOT NULL\nQ4: {how many = a4} aerial tramways have a horizontal measurement and a leaning straight line.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `span\u00a0width,\\nleaning straight line` IS NOT NULL AND `span width,\\nhorizontal measurement` IS NOT NULL\nQ5: {how many = a5} aerial tramways have a horizontal measurement and a leaning straight line and a height of cable over ground.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `span\u00a0width,\\nleaning straight line` IS NOT NULL AND `span width,\\nhorizontal measurement` IS NOT NULL AND", -33.29518177993897]]}, "718": {"question": "add up the total number of points scored in the last wins for boise state.", "gold_answer": ["146"], "pred_answer": {"0": [[0], "<error>", [null], [0], [null], [361], [0], [0], [null], [0]]}, "nsql": [[" SELECT SUM(CAST(REPLACE(result,'-','') AS INT)) FROM w WHERE result LIKE 'w%'", -9.464765764820001], [" SELECT SUM(score) FROM w WHERE result = 'w'", -10.618230086250001], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w WHERE result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 0", -11.428684915474172], [" SELECT SUM(CAST(SUBSTR(SUBSTR(result, 1, INSTR(result, '-') - 1), 2, LENGTH(SUBSTR(result, 1, INSTR(result, '-') - 1)) - 1) AS INT)) FROM w WHERE result LIKE 'w%'", -12.35906134407], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, ' - ') - 1) AS INT)) FROM w WHERE result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, ' - ') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, ' - ') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 0", -13.046944837656598], [" SELECT SUM(CAST(SUBSTR(SUBSTR(result, INSTR(result, '\u00a0') + 1, LENGTH(result) - (INSTR(result, '\u00a0') + 1)), 1, INSTR(SUBSTR(result, INSTR(result, '\u00a0') + 1, LENGTH(result) - (INSTR(result, '\u00a0') + 1)), '\u2013') - 1) AS INT)) FROM w WHERE result LIKE '%w\u00a0%'", -13.363055977731], [" SELECT SUM(CAST(SUBSTR(SUBSTR(result, INSTR(result, '\u00a0') + 1, LENGTH(result) - (INSTR(result, '\u00a0') + 1)), 1, INSTR(SUBSTR(result, INSTR(result, '\u00a0') + 1, LENGTH(result) - (INSTR(result, '\u00a0') + 1)), '-') - 1) AS INT)) FROM w WHERE result LIKE 'w\u00a0%'", -13.418981851125995], [" SELECT SUM(CAST(REPLACE(SUBSTR(result, 1, INSTR(result, '-') - 1), 'w', '') AS INT)) FROM w WHERE result LIKE 'w%'", -14.432780719055], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w WHERE result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 0", -17.352157404734935], [" SELECT SUM(CAST(REPLACE(SUBSTR(result, 1, INSTR(result, '-') - 1), 'w', '') AS INT)) FROM w WHERE result LIKE 'w%'", -19.14668493931]]}, "722": {"question": "how many players were signed in march?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.48578987974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.48578987974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.48578987974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.48578987974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.48578987974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.48578987974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.48578987974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -3.69202677678], [" SELECT COUNT(*) FROM w WHERE date signed LIKE 'march%'", -4.199229547619999], [" SELECT COUNT(*) FROM w WHERE date signed LIKE '%march%'", -4.272235954919998]]}, "759": {"question": "which country won only one medal, a bronze medal?", "gold_answer": ["Uzbekistan"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 1", -2.22466897295], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 1", -2.22466897295], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 1", -2.22466897295], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 1", -2.22466897295], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 1", -2.22466897295], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 1", -2.22466897295], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 1", -2.22466897295], [" SELECT COUNT(*) FROM w WHERE bronze = 1 AND silver = 0 AND gold = 0", -2.83012514515], [" SELECT COUNT(*) FROM w WHERE bronze = 1 AND silver = 0 AND gold = 0", -2.83012514515], [" SELECT COUNT(*) FROM w WHERE bronze = 1 AND silver = 0 AND gold = 0 AND total = 1", -6.566101690110001]]}, "763": {"question": "how many times was bob veith ranked higher than 10 at an indy 500?", "gold_answer": ["2"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": ["<error>"], "2": [[11]], "3": ["<error>"], "4": [[11]], "5": ["<error>"], "6": [[11]], "7": ["<error>"], "8": [[11]], "9": ["<error>"], "10": [[11]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank > 10", -2.2015909055200003], [" SELECT COUNT(*) FROM w WHERE rank > 10", -2.2015909055200003], [" SELECT COUNT(*) FROM w WHERE rank > 10", -2.2015909055200003], [" SELECT COUNT(*) FROM w WHERE rank > 10", -2.2015909055200003], [" SELECT COUNT(*) FROM w WHERE rank > 10", -3.3567202605200004], [" SELECT COUNT(*) FROM w WHERE `rank` > 10", -12.62331460519], [" SELECT COUNT(*) FROM w WHERE `rank` > 10", -12.63624360519], [" SELECT COUNT(*) FROM w WHERE `rank` > 10", -13.44935179819], [" SELECT COUNT(*) FROM w WHERE `start` > 10", -14.704646055724], [" SELECT COUNT(*) FROM w WHERE rank > 10\nQ2: bob veith was ranked {how many = a2} times higher than 10 at an indy 500.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank > 10\nQ3: bob veith was ranked {how many = a3} times higher than 10 at an indy 500.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE rank > 10\nQ4: bob veith was ranked {how many = a4} times higher than 10 at an indy 500.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE rank > 10\nQ5: bob veith was ranked {how many = a5} times higher than 10 at an indy 500.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE rank > 10\nQ6: bob veith was ranked {how many = a6} times higher than 10 at an indy 500.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE rank > 10\nQ7: bob veith was ranked {how many = a7} times higher than 10 at an ind", -15.767624779396005]]}, "804": {"question": "how many members were party of lower west province?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -3.636763751983], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -3.636763751983], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -3.636763751983], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -3.9590388519829998], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -4.639604733315], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -4.749383664724999], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -5.302932453985], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -5.302932453985], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'", -5.302932453985], [" SELECT COUNT(*) FROM w WHERE province = 'lower west'\n```", -5.4521303726250006]]}, "845": {"question": "how many historic sites were listed in 1988?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -1.8415693627099998], [" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -1.8415693627099998], [" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -1.8415693627099998], [" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -1.8423986185100003], [" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -1.8423986185100003], [" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -1.84327089451], [" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -1.84327089451], [" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -1.84327089451], [" SELECT COUNT(*) FROM w WHERE `listing date` LIKE '1988-%-%'", -3.08111991151], [" SELECT COUNT(*) FROM w WHERE listing date LIKE '1988-%-%'", -4.319981101210001]]}, "886": {"question": "how many total players were transferred to sun pegasus?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.3286657757899998], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.3286657757899998], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.3286657757899998], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.3286657757899998], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.3286657757899998], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.32977902831], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.3484351320899997], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.35085212959], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'", -1.35306496935], [" SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus'\nQ2: {how many = a2} players were transferred to sun pegasus in 2013.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus' AND `date` LIKE '2013-%'\nQ3: {how many = a3} players were transferred to sun pegasus in 2013 and free transfer.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus' AND `date` LIKE '2013-%' AND `fee` = 'free transfer'\nQ4: {how many = a4} players were transferred to sun pegasus in 2013 and free transfer and released.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `transferred to` = 'sun pegasus' AND `date` LIKE '2013-%' AND `fee` = 'free transfer (released)'\nQ5: {how many = a5} players were transferred to sun pegasus in 2013 and free transfer and released and", -33.73919901726471]]}, "927": {"question": "what is the total number of awards that nujoma won?", "gold_answer": ["29"], "pred_answer": {"0": [[29], [29], [29], [29], [29], [29], [29], [29], [29], [29]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[6]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": [[7]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.34713078867], [" SELECT COUNT(*) FROM w", -1.34713078867], [" SELECT COUNT(*) FROM w", -1.34713078867], [" SELECT COUNT(*) FROM w", -1.34713078867], [" SELECT COUNT(*) FROM w", -1.34713078867], [" SELECT COUNT(*) FROM w", -1.3473642242000001], [" SELECT COUNT(*) FROM w", -1.3473642242000001], [" SELECT COUNT(*) FROM w", -1.34769912679], [" SELECT COUNT(*) FROM w", -2.3665382396200005], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} awards that nujoma won in the year of 1991.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1991\nQ3: {how many = a3} awards that nujoma won in the year of 1991 and the year of 2004.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date of award` IN (1991, 2004)\nQ4: {how many = a4} awards that nujoma won in the year of 1991 or the year of 2004.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `date of award` IN (1991, 2004)\nQ5: {how many = a5} awards that nujoma won in the year of 1991 and the year of 2004 and the year of 2008.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `date of award` IN (1991, 2004, 2008)\nQ6: {how many = a6} awards that nujoma won in the year of 1991 or the year of 2004 or the year of 2008", -33.933634068477005]]}, "968": {"question": "how many stages were at least 200 km in length in the 1995 tour de france?", "gold_answer": ["9"], "pred_answer": {"0": [[17], [9], [9], [9], [17], [9], [0], [0], [0], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, '\u00a0km (', '') AS INT) >= 200", -6.031545314154998], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, ' km (', '') AS INT) >= 200", -6.521070404454999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, 'km (', '') AS INT) >= 200", -7.1552631314549995], [" SELECT COUNT(*) FROM w WHERE CAST(length AS INT) > 200", -8.334015097614], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, '\u00a0km (', '') AS INT) >= 200", -8.778034336054999], [" SELECT COUNT(*) FROM w WHERE length LIKE '%km%' AND CAST(REPLACE(length, 'km', '') AS INT) >= 200", -8.79565274317], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) > 200", -10.876720848504], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) > 200", -11.404772048504], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) >= 200", -11.9453490619], [" SELECT COUNT(*) FROM w WHERE REPLACE(length, ' ', '') LIKE '%km%' AND CAST(SUBSTR(length, 1, INSTR(length, 'km') - 1) AS INT) >= 200", -13.154278275769997]]}, "1009": {"question": "how many years is the chart for?", "gold_answer": ["23"], "pred_answer": {"0": [[23], [23], [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013], [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013], [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013], [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013], [23], [23], [23], [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013]], "1": ["<error>", "<error>"], "2": [[11], [1]], "3": ["<error>", "<error>"], "4": [[86], [1]], "5": ["<error>", "<error>"], "6": ["<error>", [1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w", -1.840322289824], [" SELECT COUNT(DISTINCT year) FROM w", -1.840322289824], [" SELECT DISTINCT year FROM w", -2.5369107162139994], [" SELECT DISTINCT year FROM w", -2.5369107162139994], [" SELECT DISTINCT year FROM w", -2.5369107162139994], [" SELECT DISTINCT year FROM w", -3.974290988844], [" SELECT COUNT(DISTINCT year) FROM w", -4.736506401824], [" SELECT COUNT(DISTINCT(year)) FROM w", -12.399060069794], [" SELECT COUNT(DISTINCT year) FROM w\nQ2: {how many = a2} records have a romanization that begins with a vowel.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE SUBSTR(romanization, 1, 1) IN ('a', 'e', 'i', 'o', 'u')\nQ3: {how many = a3} records have a romanization that begins with a vowel or a consonant.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE SUBSTR(romanization, 1, 1) IN ('a', 'e', 'i', 'o', 'u', 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\nQ4: {how many = a4} records have a romanization that begins with a consonant.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE SUBSTR(romanization,", -38.13455974776397], [" SELECT DISTINCT(year) FROM w\nQ2: there are {how many = a2} films with a romanization of ichimei.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE romanization = 'ichimei' AND type = 'film'\nQ3: {how many = a3} films have a romanization of ichimei.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE romanization = 'ichimei' AND type = 'film'\nQ4: there are {how many = a4} films with a romanization of ichimei.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE romanization = 'ichimei' AND type = 'film'\nQ5: there are {how many = a5} films with a romanization of ichimei.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE romanization = 'ichimei' AND type = 'film'\nQ6: {how many = a6} films have a romanization of ichimei.\nNeuralSQL6: SELECT COUNT(*)", -43.615617210397524]]}, "1050": {"question": "how many drivers are racing with a co-driver from a different country?", "gold_answer": ["1"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver <> co-driver", -8.21966120626], [" SELECT COUNT(*) FROM w WHERE driver <> co-driver", -8.451237546709999], [" SELECT COUNT(*) FROM w WHERE driver <> co-driver", -8.50817680626], [" SELECT COUNT(*) FROM w WHERE driver != co-driver", -11.28076557639], [" SELECT COUNT(*) FROM w WHERE driver != co-driver", -11.344726576389998], [" SELECT COUNT(*) FROM w WHERE driver != co-driver", -11.47495387639], [" SELECT COUNT(*) FROM w WHERE driver != co-driver", -11.47495387639], [" SELECT COUNT(*) FROM w WHERE driver != co-driver", -11.91553697639], [" SELECT COUNT(*) FROM w WHERE driver != co-driver", -12.730029276389999], [" SELECT COUNT(*) FROM w WHERE driver != co - driver", -13.56243765427]]}, "1091": {"question": "how many more points did erik zabel score than franciso ventoso?", "gold_answer": ["71"], "pred_answer": {"0": [[199], [199], [199], [199], [199], [199], [199], [199], [199], [199]], "1": [[128], [128], [128], [128], [128], [128], [128], [128], [128], [128]]}, "nsql": [[" SELECT points FROM w WHERE rider = 'erik zabel'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'francisco ventoso'", -2.4503520097940004], [" SELECT points FROM w WHERE rider = 'erik zabel'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'francisco ventoso'", -2.4503520097940004], [" SELECT points FROM w WHERE rider = 'erik zabel'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'francisco ventoso'", -2.4503520097940004], [" SELECT points FROM w WHERE rider = 'erik zabel'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'francisco ventoso'", -2.4503520097940004], [" SELECT points FROM w WHERE rider = 'erik zabel'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'francisco ventoso'", -2.4503520097940004], [" SELECT points FROM w WHERE rider = 'erik zabel'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'francisco ventoso'", -2.4503520097940004], [" SELECT points FROM w WHERE rider = 'erik zabel'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'francisco ventoso'", -2.4503520097940004], [" SELECT points FROM w WHERE rider LIKE '%erik zabel%'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'francisco ventoso'", -4.8091563188589985], [" SELECT points FROM w WHERE rider LIKE '%erik zabel%'\nNeuralSQL2: SELECT points FROM w WHERE rider LIKE '%francisco ventoso%'", -8.648969640449], [" SELECT points FROM w WHERE rider LIKE '%erik zabel%'\nNeuralSQL2: SELECT points FROM w WHERE rider LIKE '%francisco ventoso%'", -10.218616640449]]}, "1132": {"question": "how many germans finished in the top five?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [1], [1], [1], [0], [1], [1], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT driver) FROM w WHERE pos <= 5 AND driver LIKE '%german%'", -7.469535571819999], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%schumacher%' AND pos <= 5", -7.897324562019999], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%schumacher%' AND pos <= 5", -10.95079859898], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%schumacher%' AND pos <= 5", -10.95079859898], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%german%' AND pos <= 5", -11.49585307368], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%schumacher%' AND pos <= 5", -11.953847098979999], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%schumacher%' AND pos <= 5", -12.41617469898], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%german%' AND pos <= 5", -12.41822616068], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%german%' AND pos <= 5", -12.50155512068], [" SELECT COUNT(*) FROM w WHERE pos <= 5 AND driver LIKE '%german%'", -14.1964606939]]}, "1173": {"question": "how many marlboro tours did carlo guieb win?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner LIKE '%carlo guieb%'", -3.1463220449900002], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%carlo guieb%'", -3.148952768459999], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%carlo guieb%'", -3.148952768459999], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%carlo guieb%' AND name LIKE '%marlboro tour%'", -7.295182020690001], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%carlo guieb%' AND name LIKE '%marlboro tour%'", -8.469129479309998], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%carlo guieb%' AND name LIKE '%marlboro%'", -10.312292035690001], [" SELECT COUNT(*) FROM w WHERE name = 'marlboro tour' AND winner LIKE '%carlo guieb%'", -11.107218884745], [" SELECT COUNT(*) FROM w WHERE name LIKE '%marlboro%' AND winner LIKE '%carlo guieb%'", -11.475398221630002], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%carlo guieb%' AND name LIKE '%marlboro%'", -12.12457226181], [" SELECT COUNT(*) FROM w WHERE name = 'marlboro tour' AND winner LIKE '%carlo guieb%'", -12.374458250459998]]}, "1214": {"question": "what is the total number of medals that india won in the asian youth games?", "gold_answer": ["25"], "pred_answer": {"0": [[null], [25], [25], [null], [null], [null], [25], [null], [25], [25]]}, "nsql": [[" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'", -3.9462411560100006], [" SELECT SUM(total) FROM w WHERE nation LIKE '%india%'", -3.97460103271], [" SELECT SUM(total) FROM w WHERE nation LIKE '%india%'", -5.985083156889999], [" SELECT SUM(total) FROM w WHERE nation = 'india'", -6.67210030831], [" SELECT SUM(total) FROM w WHERE nation = 'india'", -6.79410520213], [" SELECT SUM(total) FROM w WHERE nation = 'india'", -7.26135080213], [" SELECT SUM(total) FROM w WHERE nation LIKE '%india%'", -7.327771149299999], [" SELECT SUM(total) FROM w WHERE nation = 'india'", -8.573167216085], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%india%'", -13.801136515458003], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%india%'", -14.725131715458]]}, "1255": {"question": "what is the total number of tanks sold by china to iraq?", "gold_answer": ["2500"], "pred_answer": {"0": [[2], [2500], [2500], [12], [2], [2], [2], [2500], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'china' AND weapon description LIKE '%tank%'", -4.571084913130002], [" SELECT SUM(quantity delivered) FROM w WHERE country = 'china' AND weapon description LIKE '%tank%'", -4.686984998660001], [" SELECT SUM(quantity delivered) FROM w WHERE country = 'china' AND weapon description = 'tank'", -4.78209072934], [" SELECT COUNT(*) FROM w WHERE country = 'china'", -5.90502475431], [" SELECT COUNT(*) FROM w WHERE country = 'china' AND (weapon description LIKE '%tank%' OR weapon description LIKE '%tanks%')", -6.245460904230001], [" SELECT COUNT(*) FROM w WHERE country = 'china' AND weapon description = 'tank'", -6.97203292722], [" SELECT COUNT(*) FROM w WHERE country = 'china' AND weapon description = 'tank'", -6.97203292722], [" SELECT SUM(quantity delivered) FROM w WHERE country = 'china' AND weapon description LIKE '%tank%'", -7.04063825116], [" SELECT COUNT(*) FROM w WHERE country = 'china' AND (weapon description LIKE '%tank%' OR weapon description LIKE '%tanks%')", -7.265864727230001], [" SELECT COUNT(*) FROM w WHERE country = 'china' AND weapon description = 'tank'", -8.342517286780001]]}, "37": {"question": "how many catalogs were released?", "gold_answer": ["19"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [19], [17], [17], [17]], "1": ["<error>", "<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[3]], "9": ["<error>"], "10": [[1]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT catalog) FROM w", -1.244108283436], [" SELECT COUNT(DISTINCT catalog) FROM w", -1.244108283436], [" SELECT COUNT(DISTINCT catalog) FROM w", -1.244108283436], [" SELECT COUNT(DISTINCT catalog) FROM w", -1.244108283436], [" SELECT COUNT(DISTINCT catalog) FROM w", -1.244108283436], [" SELECT COUNT(DISTINCT catalog) FROM w", -1.2522320800300002], [" SELECT COUNT(*) FROM w", -6.73715743869], [" SELECT COUNT(DISTINCT(catalog)) FROM w", -7.476627384636], [" SELECT COUNT(DISTINCT catalog) FROM w\n```", -12.173782667186], [" SELECT COUNT(DISTINCT catalog) FROM w\nQ2: {how many = a2} labels released in italy.\nNeuralSQL2: SELECT COUNT(DISTINCT label) FROM w WHERE region = 'italy'\nQ3: {how many = a3} vinyl, 12\" format in australia.\nNeuralSQL3: SELECT COUNT(DISTINCT format) FROM w WHERE region = 'australia' AND format = 'vinyl, 12\"'\nQ4: {how many = a4} labels released in netherlands.\nNeuralSQL4: SELECT COUNT(DISTINCT label) FROM w WHERE region = 'netherlands'\nQ5: {how many = a5} catalogs were released in netherlands.\nNeuralSQL5: SELECT COUNT(DISTINCT catalog) FROM w WHERE region = 'netherlands'\nQ6: {how many = a6} labels released in italy.\nNeuralSQL6: SELECT COUNT(DISTINCT label) FROM w WHERE region = 'italy'\nQ7: {how", -44.733684622878926]]}, "40": {"question": "how many different men held the wsl title before horshu won his first wsl title?", "gold_answer": ["6"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.783680986538], [" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.783680986538], [" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.783680986538], [" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.783680986538], [" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.783680986538], [" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.783680986538], [" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.783680986538], [" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.7854869338220003], [" SELECT COUNT(DISTINCT wrestler) FROM w WHERE row_id < 3", -2.7854869338220003], [" SELECT COUNT(*) FROM w WHERE wrestler <> 'horshu'", -7.2091822525200016]]}, "61": {"question": "in how many games did sri lanka score at least 2 goals?", "gold_answer": ["16"], "pred_answer": {"0": [[0], [0], [0], [23], [0], [0], [0], [0], [68], [68]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -4.0527158743800005], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -7.09803731908], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -7.3084200709500005], [" SELECT SUM(CAST(REPLACE(score, '\u2013', '-') AS INT)) FROM w WHERE venue LIKE '%sri lanka%'", -8.141420559951998], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE venue LIKE '%sri lanka%'", -8.95014758908], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE venue LIKE '%sri lanka%' OR opponent = 'sri lanka'", -9.061385053700004], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE venue LIKE '%sri lanka%'", -10.161439425957001], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE venue LIKE '%sri lanka%'", -10.183761876231998], [" SELECT SUM(CAST(REPLACE(score, '\u2013', '-') AS INT)) FROM w", -12.267597046827001], [" SELECT SUM(CAST(REPLACE(score, '\u2013', '-') AS INT)) FROM w", -15.078810364997999]]}, "78": {"question": "how many dates are in 1972?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[7]], "5": ["<error>"], "6": [[7]], "7": ["<error>"], "8": [[7]], "9": ["<error>"], "10": [[7]], "11": ["<error>"], "12": [[1]]}, "nsql": [[" SELECT COUNT(DISTINCT date) FROM w WHERE date LIKE '1972%'", -4.361492777769], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1972-%'", -5.162111083433999], [" SELECT COUNT(*) FROM w WHERE date LIKE '1972-%'", -5.251633713434001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1972-%'", -5.756723514304], [" SELECT COUNT(*) FROM w WHERE date LIKE '1972-%'", -6.289211700649], [" SELECT COUNT(*) FROM w WHERE date LIKE '1972-%'", -6.289211700649], [" SELECT COUNT(*) FROM w WHERE date LIKE '1972-%'", -6.289211700649], [" SELECT COUNT(*) FROM w WHERE date LIKE '1972-%'", -6.289211700649], [" SELECT COUNT(*) FROM w WHERE date LIKE '1972-%'", -6.2906643338490005], [" SELECT COUNT(*) FROM w WHERE date LIKE '%1972%'\nQ2: {how many = a2} counties are in hawaii.\nNeuralSQL2: SELECT COUNT(DISTINCT county) FROM w WHERE county LIKE '%hawaii%'\nQ3: {how many = a3} records have a date.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date IS NOT NULL\nQ4: {how many = a4} records have a description.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE description IS NOT NULL\nQ5: {how many = a5} records have a date and a description.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE date IS NOT NULL AND description IS NOT NULL\nQ6: {how many = a6} records have a date and a description and a location.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE date IS NOT NULL AND description IS NOT NULL AND location IS NOT NULL\nQ7: {how many = a7} records have a date or a description.\nNeuralSQL7: SELECT COUNT(*)", -46.76141052598801]]}, "82": {"question": "how many international tourism arrivals in 2010(x1000) did mexico have?", "gold_answer": ["22,395"], "pred_answer": {"0": [[22395], [22395], [22395], [22395], [22395], [22395], [22395], [22395], [22395], [22395]]}, "nsql": [[" SELECT `internl.\\ntourism\\narrivals\\n2010\\n(x 1000)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'mexico'", -2.6145322208480004], [" SELECT `internl.\\ntourism\\narrivals\\n2010\\n(x 1000)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'mexico'", -2.6181568379880003], [" SELECT `internl.\\ntourism\\narrivals\\n2010\\n(x 1000)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'mexico'", -2.6181568379880003], [" SELECT `internl. tourism arrivals 2010 (x 1000)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'mexico'", -4.664604440900001], [" SELECT `internl. tourism arrivals 2010 (x 1000)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'mexico'", -4.6658924647000015], [" SELECT `internl. tourism arrivals 2010 (x 1000)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'mexico'", -4.6658924647000015], [" SELECT `internl.\\ntourism\\narrivals\\n2010\\n(x 1000)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'mexico'", -5.685447719228], [" SELECT `internl.\\ntourism\\narrivals\\n2010\\n(x 1000)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'mexico'", -5.689541548088], [" SELECT `internl. tourism arrivals 2010 (x 1000)` FROM w WHERE `selected latin american countries` = 'mexico'", -7.7803023175499995], [" SELECT `internl. tourism arrivals 2010 (x 1000)` FROM w WHERE `selected latin american countries` = 'mexico'", -10.5342142722]]}, "119": {"question": "what are the total number of radio stations on this list?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w", -5.57882661335], [" SELECT COUNT(*) FROM w", -5.57882661335], [" SELECT COUNT(*) FROM w", -5.57882661335], [" SELECT COUNT(*) FROM w", -5.67203761335], [" SELECT COUNT(*) FROM w", -5.81526761335], [" SELECT COUNT(*) FROM w", -5.85883891335], [" SELECT COUNT(*) FROM w", -5.85883891335], [" SELECT COUNT(*) FROM w", -6.42502561335], [" SELECT COUNT(*) FROM w", -7.60598221335], [" SELECT COUNT(DISTINCT callsign) FROM w", -12.106455959309999]]}, "123": {"question": "what is the total number of counties listed?", "gold_answer": ["100"], "pred_answer": {"0": [[100], [100], [100], [100], [100], [100], [100], [100], [100], [100]], "1": ["<error>"], "2": [[27]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[100]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.3628630824269998], [" SELECT COUNT(*) FROM w", -1.3628630824269998], [" SELECT COUNT(*) FROM w", -1.3628630824269998], [" SELECT COUNT(*) FROM w", -1.3628630824269998], [" SELECT COUNT(*) FROM w", -2.13442785237], [" SELECT COUNT(*) FROM w", -2.13442785237], [" SELECT COUNT(DISTINCT county) FROM w", -4.528151826729999], [" SELECT COUNT(DISTINCT county) FROM w", -6.459587029540001], [" SELECT COUNT(DISTINCT county) FROM w", -6.459587029540001], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} counties have more than 100000 population.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `population estimate\\n(2011)` > 100000\nQ3: {how many = a3} counties have an area larger than 1000 square miles.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE area LIKE '%sq mi; (1000 km2)%'\nQ4: {how many = a4} counties have a name with the word \"county\".\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE county LIKE '%county%'\nQ5: {how many = a5} counties have a name with the word \"county\" and have an area larger than 1000 square miles.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE county LIKE '%county%' AND area LIKE '%sq mi; (1000 km2)%'\nQ6: {how many = a6} counties have a name with the word \"county\" or have an area larger than 1000 square miles.\nNeural", -52.69607817437806]]}, "164": {"question": "what's the total of grass and hard surfaces listed?", "gold_answer": ["3"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [2], [2], [2], [2], [2], [1], [2], [2], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6222013946099998], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6222013946099998], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6222013946099998], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6222013946099998], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6222013946099998], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6251129115299998], [" SELECT COUNT(DISTINCT surface) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(DISTINCT surface) FROM w WHERE surface = 'hard'", -3.0541242707612017], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -4.37241221514], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -5.199478994330001], [" SELECT COUNT(DISTINCT surface) FROM w WHERE surface = 'grass'\nNeuralSQL2: SELECT COUNT(DISTINCT surface) FROM w WHERE surface = 'hard'", -6.144309866761201]]}, "205": {"question": "oliveira walewska has the same block as how many other players?", "gold_answer": ["2"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -2.46465957666], [" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -2.46465957666], [" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -2.46465957666], [" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -2.46465957666], [" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -2.46503031927], [" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -2.46503031927], [" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -2.4787217596000004], [" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -3.5664933286599996], [" SELECT COUNT(*) FROM w WHERE block = (SELECT block FROM w WHERE name = 'oliveira walewska')", -3.56786108227], [" SELECT COUNT(*) FROM w WHERE `block` = (SELECT `block` FROM w WHERE name = 'oliveira walewska')", -7.551607530779998]]}, "246": {"question": "what number of floors does the leveque tower have?", "gold_answer": ["47"], "pred_answer": {"0": [[47], [47], [47], [47], [47], [47], [47], [47], [47], [47]], "1": ["<error>"]}, "nsql": [[" SELECT floors FROM w WHERE name = 'leveque tower'", -1.54360320197], [" SELECT floors FROM w WHERE name = 'leveque tower'", -1.54360320197], [" SELECT floors FROM w WHERE name = 'leveque tower'", -1.54360320197], [" SELECT floors FROM w WHERE name = 'leveque tower'", -1.54360320197], [" SELECT floors FROM w WHERE name = 'leveque tower'", -4.89692418897], [" SELECT `floors` FROM w WHERE name = 'leveque tower'", -4.95215776223], [" SELECT `floors` FROM w WHERE name = 'leveque tower'", -4.95215776223], [" SELECT floors FROM w WHERE name = 'leveque tower'", -5.80711291407], [" SELECT floors FROM w WHERE name = 'leveque tower'", -7.47226204797], [" SELECT floors FROM w WHERE name = 'leveque tower'\n```", -10.10437478221]]}, "287": {"question": "tell me the number of stations tv azteca owns.", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.3631485829699999], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.3631485829699999], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.3631485829699999], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.3631485829699999], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.3631485829699999], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.3631485829699999], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.3631485829699999], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -3.5972232706000002], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -4.21475680339], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -4.21475680339]]}, "328": {"question": "number of 3 points attempted", "gold_answer": ["10"], "pred_answer": {"0": [[4], "<error>", [240], "<error>", [4], [240], "<error>", [0, 0, 0, 1, 0, 0, 0, 1, 26, 1, 0, 0, 1, 0, 210], "<error>", [4]], "1": ["<error>", "<error>"], "2": [[15], [0]], "3": ["<error>", "<error>"], "4": [[14], [0]], "5": ["<error>", "<error>"], "6": [[15]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[15]], "11": ["<error>"]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(`3 points`, 1, INSTR(`3 points`, '/') - 1) AS INT)) FROM w", -4.8618154990099995], [" SELECT SUM(CAST(REPLACE(`3 points_2`, '%', '') AS INT)) FROM w", -5.07618979211], [" SELECT SUM(CAST(REPLACE(`3 points`,'/','') AS INT)) FROM w", -5.10948697082], [" SELECT SUM(CAST(REPLACE(`3 points_2`,'%','')) AS INT) FROM w", -6.211461095509999], [" SELECT SUM(CAST(SUBSTR(`3 points`, 1, INSTR(`3 points`, '/') - 1) AS INT)) FROM w", -6.225276461759998], [" SELECT SUM(CAST(REPLACE(`3 points`, '/', '') AS INT)) FROM w", -8.455196213410002], [" SELECT SUM(`3 points_2`) FROM w", -10.932389425690001], [" SELECT CAST(REPLACE(`3 points`, '/', '') AS INT) FROM w", -13.84509233335], [" SELECT SUM(CAST(REPLACE(`3 points_2`, '%', '') AS INT)) FROM w\nQ2: {how many = a2} players have more than 15 points.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE points > 15\nQ3: {how many = a3} players have more than 15 points and more than 10 rebounds.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE points > 15 AND rebounds > 10\nQ4: {how many = a4} players have more than 15 points or more than 10 rebounds.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE points > 15 OR rebounds > 10\nQ5: {how many = a5} players have more than 15 points and less than 10 rebounds.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE points > 15 AND rebounds < 10\nQ6: {how many = a6} players have more than 15 points or less than 10 rebounds.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE points > 15 OR rebounds < 10\nQ7: {how many = a7} players have", -40.116872192611986], [" SELECT SUM(CAST(REPLACE(SUBSTR(`3 points`, 1, INSTR(`3 points`, '/') - 1), '\u2013', '0') AS INT)) FROM w\nQ2: {how many = a2} 3 points attempted by a player whose name is katie hill.\nNeuralSQL2: SELECT SUM(CAST(REPLACE(SUBSTR(`3 points`, 1, INSTR(`3 points`, '/') - 1), '\u2013', '0') AS INT)) FROM w WHERE name = 'katie hill'\nQ3: {how many = a3} 3 points attempted by a player whose name is katie hill and whose class is 3.0.\nNeuralSQL3: SELECT SUM(CAST(REPLACE(SUBSTR(`3 points`, 1, INSTR(`3 points`, '/') - 1), '\u2013', '0') AS INT)) FROM w WHERE name = 'katie hill' AND class = 3.0\nQ4: {how many = a4} 3 points attempted by a player whose name is katie hill and whose class is 3.0 and", -40.69172751551128]]}, "369": {"question": "which month had the most air dates?", "gold_answer": ["February"], "pred_answer": {"0": [[7], [7], [7], [0], [7], [7], [7], [4], [7], [7]], "1": [[5], [5], [5], [0], [5], [5], [5], [3], [5], [5]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE air date LIKE '2011-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE air date LIKE '2011-03-%'", -3.9990403349760006], [" SELECT COUNT(*) FROM w WHERE air date LIKE '2011-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE air date LIKE '2011-03-%'", -4.003789779583], [" SELECT COUNT(*) FROM w WHERE air date LIKE '2011-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE air date LIKE '2011-03-%'", -4.012866339353001], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%-%'", -6.184000160276], [" SELECT COUNT(*) FROM w WHERE air date LIKE '2011-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE air date LIKE '2011-03-%'", -7.702801918013], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03%-%'", -8.54048099147], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%'", -9.603556306879998], [" SELECT COUNT(DISTINCT(`air date`)) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL2: SELECT COUNT(DISTINCT(`air date`)) FROM w WHERE `air date` LIKE '2011-03-%'\n```", -10.604824967503003], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%'", -12.61960385198], [" SELECT COUNT(*) FROM w WHERE air date LIKE '2011-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE air date LIKE '2011-03-%'\n```", -20.363050107262996]]}, "410": {"question": "what was the number of wins kansas state had in manhattan?", "gold_answer": ["8"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [11], [11], [11], [8], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND winning team = 'kansas state'", -2.9864822295050004], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND winning team = 'kansas state'", -2.9864822295050004], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND winning team = 'kansas state'", -2.9864822295050004], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND winning team = 'kansas state'", -2.9864822295050004], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND winning team = 'kansas state'", -2.9868294567049998], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND losing team = 'kansas state'", -3.1737202018320003], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND losing team = 'kansas state'", -3.1737202018320003], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND `losing team` = 'kansas state'", -3.6175736489600006], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND winning team LIKE 'kansas state%'", -4.521309968442], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND winning team = 'kansas state'", -5.217884218860001]]}, "451": {"question": "in list of venues, how many years was beijing above moscow (1st venue is above 2nd venue, etc)?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [1], [0], [0], [0], [1], [0], [2], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (`1st venue` = 'beijing' AND `3rd venue` = 'moscow') OR (`2nd venue` = 'beijing' AND `4th venue` = 'moscow') OR (`3rd venue` = 'beijing' AND `5th venue` = 'moscow') OR (`4th venue` = 'beijing' AND `6th venue` = 'moscow')", -4.982767684322001], [" SELECT COUNT(*) FROM w WHERE (`1st venue` = 'beijing' AND `3rd venue` = 'moscow') OR (`2nd venue` = 'beijing' AND `4th venue` = 'moscow') OR (`3rd venue` = 'beijing' AND `5th venue` = 'moscow') OR (`4th venue` = 'beijing' AND `6th venue` = 'moscow')", -5.031249313624995], [" SELECT COUNT(*) FROM w WHERE (`1st venue` = 'beijing' AND `2nd venue` = 'moscow') OR (`2nd venue` = 'beijing' AND `3rd venue` = 'moscow') OR (`3rd venue` = 'beijing' AND `4th venue` = 'moscow') OR (`4th venue` = 'beijing' AND `5th venue` = 'moscow') OR (`5th venue` = 'beijing' AND `6th venue` = 'moscow')", -5.251491256856997], [" SELECT COUNT(*) FROM w WHERE `1st venue` = 'beijing' AND `3rd venue` = 'moscow' OR `2nd venue` = 'beijing' AND `4th venue` = 'moscow' OR `3rd venue` = 'beijing' AND `5th venue` = 'moscow' OR `4th venue` = 'beijing' AND `6th venue` = 'moscow'", -6.621872853337998], [" SELECT COUNT(*) FROM w WHERE (`1st venue` = 'beijing' AND `3rd venue` = 'moscow') OR (`2nd venue` = 'beijing' AND `4th venue` = 'moscow') OR (`3rd venue` = 'beijing' AND `5th venue` = 'moscow') OR (`4th venue` = 'beijing' AND `6th venue` = 'moscow') OR (`5th venue` = 'beijing' AND `7th venue` = 'moscow')", -7.080492587374997], [" SELECT COUNT(*) FROM w WHERE (`1st venue` = 'beijing' AND `3rd venue` = 'moscow') OR (`2nd venue` = 'beijing' AND `4th venue` = 'moscow') OR (`3rd venue` = 'beijing' AND `5th venue` = 'moscow') OR (`4th venue` = 'beijing' AND `6th venue` = 'moscow') OR (`5th venue` = 'beijing' AND `1st venue` = 'moscow') OR (`6th venue` = 'beijing' AND `2nd venue` = 'moscow')", -7.169256759482003], [" SELECT COUNT(*) FROM w WHERE (1st venue = 'beijing' AND 2nd venue = 'moscow') OR (2nd venue = 'beijing' AND 3rd venue = 'moscow') OR (3rd venue = 'beijing' AND 4th venue = 'moscow') OR (4th venue = 'beijing' AND 5th venue = 'moscow') OR (5th venue = 'beijing' AND 6th venue = 'moscow')", -10.056497460477999], [" SELECT COUNT(*) FROM w WHERE `1st venue` = 'beijing' AND `3rd venue` = 'moscow'", -11.103904399660001], [" SELECT COUNT(*) FROM w WHERE (1st venue = 'beijing' AND 2nd venue = 'moscow') OR (1st venue = 'moscow' AND 2nd venue = 'beijing') OR (2nd venue = 'beijing' AND 3rd venue = 'moscow') OR (2nd venue = 'moscow' AND 3rd venue = 'beijing') OR (3rd venue = 'beijing' AND 4th venue = 'moscow') OR (3rd venue = 'moscow' AND 4th venue = 'beijing') OR (4th venue = 'beijing' AND 5th venue = 'moscow') OR (4th venue = 'moscow' AND 5th venue = 'beijing') OR (5th venue = 'beijing' AND 6th venue = 'moscow') OR (5th venue = 'moscow' AND 6th venue = 'beijing')", -11.585137431105005], [" SELECT COUNT(*) FROM w WHERE `1st venue` = 'beijing' AND `3rd venue` = 'moscow'", -11.730269465330002]]}, "492": {"question": "in total, how many times were they promoted?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [2], [2], [0], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE movements LIKE '%promotion%'", -5.295643566397], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promotion%'", -5.295643566397], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promotion%'", -5.295896491897], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promotion%'", -5.2975629088969995], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promotion%'", -5.2975629088969995], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promoted%'", -5.510266523897001], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promoted%'", -5.602289419897], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promotion%'", -7.559890968896999], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promoted%'", -7.733328151247001], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%promoted%'", -12.731849991247]]}, "533": {"question": "total number of bronze medals nigeria earned?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT `bronze` FROM w WHERE nation = 'nigeria'", -3.1316551973899998], [" SELECT `bronze` FROM w WHERE nation = 'nigeria'", -3.1316551973899998], [" SELECT SUM(bronze) FROM w WHERE nation = 'nigeria'", -4.4177129692], [" SELECT bronze FROM w WHERE nation = 'nigeria'", -5.1612817398], [" SELECT bronze FROM w WHERE nation = 'nigeria'", -7.579872622030001], [" SELECT bronze FROM w WHERE nation = 'nigeria'", -8.44797725203], [" SELECT bronze FROM w WHERE nation = 'nigeria'", -8.55300029573], [" SELECT bronze FROM w WHERE nation = 'nigeria'", -9.720378231329999], [" SELECT bronze FROM w WHERE nation = 'nigeria'", -13.78849290203], [" SELECT bronze FROM w WHERE nation = 'nigeria'", -14.46509510203]]}, "574": {"question": "tell me the number of pillow pals reintroduced in 1999.", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999%'", -2.40393089712], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999%'", -2.40497661312], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%1999%'", -2.92883611356], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%1999%'", -2.93795136812], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999%'", -3.2106236581200003], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999%'", -3.2106236581200003], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999%'", -3.2106236581200003], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999%'", -3.21154292812], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999%'", -3.21304778856], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%1999%'", -4.97027191882]]}, "615": {"question": "how many states were of the same type as stuhlingen?", "gold_answer": ["3"], "pred_answer": {"0": [[16], [16], [16], [16], [16], [16], [16], [16], [16], [16]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999], [" SELECT COUNT(*) FROM w WHERE type = (SELECT type FROM w WHERE name = 'stuhlingen')", -1.9551735803499999]]}, "656": {"question": "what was the number of silver medals won by pakistan?", "gold_answer": ["36"], "pred_answer": {"0": [[36], [36], [36], [36], [36], [36], [36], [36], [36], [36]], "1": ["<error>"]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'pakistan'", -1.2001681127800001], [" SELECT silver FROM w WHERE nation = 'pakistan'", -1.2001681127800001], [" SELECT silver FROM w WHERE nation = 'pakistan'", -1.2001681127800001], [" SELECT silver FROM w WHERE nation = 'pakistan'", -1.2001681127800001], [" SELECT silver FROM w WHERE nation = 'pakistan'", -4.68275013868], [" SELECT silver FROM w WHERE nation = 'pakistan'", -5.09593412578], [" SELECT silver FROM w WHERE nation = 'pakistan'", -5.09593412578], [" SELECT silver FROM w WHERE nation = 'pakistan'", -7.72768660028], [" SELECT silver FROM w WHERE nation = 'pakistan'\n```", -9.62187735801], [" SELECT silver FROM w WHERE nation = 'pakistan'", -16.63287730515]]}, "697": {"question": "how many players were on the 2010-11 uab blazers men's basketball team?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -1.0093854701900002], [" SELECT COUNT(*) FROM w", -2.9475435086899995]]}, "700": {"question": "which is the only year that mexico is on a venue", "gold_answer": ["2007"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `1st venue` = 'mexico' OR `2nd venue` = 'mexico' OR `3rd venue` = 'mexico' OR `4th venue` = 'mexico' OR `5th venue` = 'mexico' OR `6th venue` = 'mexico'", -3.295809326755], [" SELECT COUNT(*) FROM w WHERE `1st venue` = 'mexico' OR `2nd venue` = 'mexico' OR `3rd venue` = 'mexico' OR `4th venue` = 'mexico' OR `5th venue` = 'mexico' OR `6th venue` = 'mexico'", -3.295809326755], [" SELECT COUNT(*) FROM w WHERE 1st venue = 'mexico' OR 2nd venue = 'mexico' OR 3rd venue = 'mexico' OR 4th venue = 'mexico' OR 5th venue = 'mexico' OR 6th venue = 'mexico'", -3.5162559180220008], [" SELECT COUNT(*) FROM w WHERE 1st venue = 'mexico' OR 2nd venue = 'mexico' OR 3rd venue = 'mexico' OR 4th venue = 'mexico' OR 5th venue = 'mexico' OR 6th venue = 'mexico'", -3.5162559180220008], [" SELECT COUNT(DISTINCT year) FROM w WHERE 1st venue = 'mexico' OR 2nd venue = 'mexico' OR 3rd venue = 'mexico' OR 4th venue = 'mexico' OR 5th venue = 'mexico' OR 6th venue = 'mexico'", -4.760901226628], [" SELECT COUNT(DISTINCT year) FROM w WHERE 1st venue = 'mexico' OR 2nd venue = 'mexico' OR 3rd venue = 'mexico' OR 4th venue = 'mexico' OR 5th venue = 'mexico' OR 6th venue = 'mexico'", -4.760901226628], [" SELECT COUNT(*) FROM w WHERE `1st venue` = 'mexico' OR `2nd venue` = 'mexico' OR `3rd venue` = 'mexico'", -5.117984900570001], [" SELECT COUNT(*) FROM w WHERE `1st venue` = 'mexico' OR `2nd venue` = 'mexico' OR `3rd venue` = 'mexico' OR `4th venue` = 'mexico' OR `5th venue` = 'mexico' OR `6th venue` = 'mexico'", -5.446669828898], [" SELECT COUNT(DISTINCT year) FROM w WHERE `1st venue` = 'mexico' OR `2nd venue` = 'mexico' OR `3rd venue` = 'mexico' OR `4th venue` = 'mexico' OR `5th venue` = 'mexico' OR `6th venue` = 'mexico'", -12.423895609823997], [" SELECT COUNT(DISTINCT year) FROM w WHERE `1st venue` = 'mexico' OR `2nd venue` = 'mexico' OR `3rd venue` = 'mexico' OR `4th venue` = 'mexico' OR `5th venue` = 'mexico' OR `6th venue` = 'mexico'", -12.924519319823998]]}, "721": {"question": "what was the total number of losses brazil suffered?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'l'", -3.55264545716], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -3.55264545716], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -3.55264545716], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -3.5555782950999997], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -3.8262915564399997], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -3.8342742449399996], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -5.394707964504], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -6.490975858504], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -7.91973075528], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -8.497577358504]]}, "738": {"question": "how many drivers placed below tony stewart?", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [41], [27], [41], [41], [15], [31]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE fin > (SELECT fin FROM w WHERE driver = 'tony stewart')", -3.251976574294], [" SELECT COUNT(*) FROM w WHERE fin > (SELECT fin FROM w WHERE driver = 'tony stewart')", -3.251976574294], [" SELECT COUNT(*) FROM w WHERE fin > (SELECT fin FROM w WHERE driver = 'tony stewart')", -3.251976574294], [" SELECT COUNT(*) FROM w WHERE fin > (SELECT fin FROM w WHERE driver = 'tony stewart')", -3.256559305160001], [" SELECT COUNT(*) FROM w WHERE driver < 'tony stewart'", -3.6592498288700006], [" SELECT COUNT(*) FROM w WHERE fin < (SELECT fin FROM w WHERE driver = 'tony stewart')", -3.884950327550001], [" SELECT COUNT(*) FROM w WHERE driver < 'tony stewart'", -5.126937068490001], [" SELECT COUNT(*) FROM w WHERE driver < 'tony stewart'", -5.126937068490001], [" SELECT COUNT(*) FROM w WHERE fin > (SELECT fin FROM w WHERE driver = 'tony stewart')", -5.151704703200001], [" SELECT COUNT(*) FROM w WHERE st < (SELECT st FROM w WHERE driver = 'tony stewart')", -6.60696149718]]}, "742": {"question": "what are the total number of times soldier is listed as the position on this chart?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position LIKE '%soldier%' OR position_2 LIKE '%soldier%'", -2.8979534472200004], [" SELECT COUNT(*) FROM w WHERE position LIKE '%soldier%' OR position_2 LIKE '%soldier%'", -2.8979534472200004], [" SELECT COUNT(*) FROM w WHERE position LIKE '%soldier%' OR position_2 LIKE '%soldier%'", -2.8979534472200004], [" SELECT COUNT(*) FROM w WHERE position LIKE '%soldier%' OR position_2 LIKE '%soldier%'", -2.8984485808600002], [" SELECT COUNT(*) FROM w WHERE position LIKE '%soldier%' OR position_2 LIKE '%soldier%'", -2.8984485808600002], [" SELECT COUNT(*) FROM w WHERE position LIKE '%soldier%' OR position_2 LIKE '%soldier%'", -2.8984485808600002], [" SELECT COUNT(*) FROM w WHERE position LIKE '%soldier%' OR position_2 LIKE '%soldier%'", -5.777731768590001], [" SELECT COUNT(*) FROM w WHERE position = 'soldier' OR position_2 = 'soldier'", -6.05599926049], [" SELECT COUNT(*) FROM w WHERE position = 'soldier' OR position_2 = 'soldier'", -8.944671263784], [" SELECT COUNT(*) FROM w WHERE position = 'soldier' OR position_2 = 'soldier'", -11.201194557265001]]}, "779": {"question": "did bob veith drive more indy 500 laps in the 1950s or 1960s?", "gold_answer": ["1960s"], "pred_answer": {"0": [[601], [601], [601], [601], [601], [601], [601], [601], [601], [601]], "1": [[817], [817], [817], [817], [817], [817], [817], [817], [817], [817]]}, "nsql": [[" SELECT SUM(laps) FROM w WHERE year < 1960\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year >= 1960 AND year < 1970", -4.5217792371200005], [" SELECT SUM(laps) FROM w WHERE year < 1960\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year >= 1960 AND year < 1970", -4.522566230260001], [" SELECT SUM(laps) FROM w WHERE year < 1960\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year < 1970 AND year >= 1960", -4.792189201796001], [" SELECT SUM(laps) FROM w WHERE year >= 1950 AND year < 1960\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year >= 1960 AND year < 1970", -11.02394198051], [" SELECT SUM(laps) FROM w WHERE year BETWEEN 1950 AND 1959\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year BETWEEN 1960 AND 1969", -11.183537529978], [" SELECT SUM(laps) FROM w WHERE year BETWEEN 1950 AND 1959\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year BETWEEN 1960 AND 1969", -12.522219029978], [" SELECT SUM(laps) FROM w WHERE year >= 1950 AND year < 1960\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year >= 1960 AND year < 1970", -12.7147310739], [" SELECT SUM(laps) FROM w WHERE year >= 1950 AND year <= 1959\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year >= 1960 AND year <= 1969", -13.03950336282], [" SELECT SUM(laps) FROM w WHERE year BETWEEN 1950 AND 1959\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year BETWEEN 1960 AND 1969", -13.404263854978002], [" SELECT SUM(laps) FROM w WHERE year >= 1950 AND year < 1960\nNeuralSQL2: SELECT SUM(laps) FROM w WHERE year >= 1960 AND year < 1970", -15.044126273900002]]}, "783": {"question": "how many encyclicals were issued between august 15, 1854 and october 26, 1867?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1854-08-15 00:00:00' AND '1867-10-26 00:00:00'", -3.3453037934400003], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1854-08-15 00:00:00' AND '1867-10-26 00:00:00'", -3.348089497510001], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1854-08-15' AND '1867-10-26'", -3.410919854420001], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1854-08-15' AND '1867-10-26'", -3.410919854420001], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1854-08-15' AND '1867-10-26'", -3.411600433294], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1854-08-15 00:00:00' AND '1867-10-26 00:00:00'", -3.6014267061339997], [" SELECT COUNT(*) FROM w WHERE date >= '1854-08-15 00:00:00' AND date <= '1867-10-26 00:00:00'", -4.80518116797], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1854-08-15' AND '1867-10-26'", -4.848425844630001], [" SELECT COUNT(*) FROM w WHERE DATE(date) BETWEEN '1854-08-15' AND '1867-10-26'", -5.304314055840001], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1854-08-15 00:00:00' AND '1867-10-26 00:00:00'", -6.2545731495]]}, "824": {"question": "people's life party has at most, how many party leaders?", "gold_answer": ["1"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [1], "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE party = 'people' s life party'", -5.09762482505], [" SELECT COUNT(*) FROM w WHERE party = 'people' s life party'", -5.09995228668], [" SELECT COUNT(DISTINCT `party leader(s)`) FROM w WHERE party = 'people's life party (plp); seikatsu no t\u014d \u751f\u6d3b\u306e\u515a'", -6.023278207002439], [" SELECT COUNT(DISTINCT `party leader(s)`) FROM w WHERE party = 'people's life party (plp); seikatsu no t\u014d \u751f\u6d3b\u306e\u515a'", -6.03286040544797], [" SELECT COUNT(DISTINCT `party leader(s)`) FROM w WHERE party = 'people's life party (plp); seikatsu no t\u014d \u751f\u6d3b\u306e\u515a'", -7.03600566054694], [" SELECT COUNT(DISTINCT `party leader(s)`) FROM w WHERE party = 'people's life party (plp); seikatsu no t\u014d \u751f\u6d3b\u306e\u515a'", -7.037641909027969], [" SELECT COUNT(DISTINCT `party leader(s)`) FROM w WHERE party = \"people's life party (plp); seikatsu no t\u014d \u751f\u6d3b\u306e\u515a\"", -8.133342228528896], [" SELECT COUNT(DISTINCT `party leader(s)`) FROM w WHERE party = 'people's life party (plp); seikatsu no t\u014d \u751f\u6d3b\u306e\u515a'", -8.39190680107194], [" SELECT COUNT(DISTINCT `party leader(s)`) FROM w WHERE party = 'people's life party (plp); seikatsu no t\u014d \u751f\u6d3b\u306e\u515a'", -8.39868717228244], [" SELECT COUNT(DISTINCT `party leader(s)`) FROM w WHERE party = 'people' s life party (plp); seikatsu no t\u014d \u751f\u6d3b\u306e\u515a'", -9.179904994386]]}, "865": {"question": "other than january how many encyclicals were in 1921?", "gold_answer": ["2"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1921-%-%'", -2.5295949078450004], [" SELECT COUNT(*) FROM w WHERE date LIKE '1921-%-%'", -2.737570904245], [" SELECT COUNT(*) FROM w WHERE date LIKE '1921-%-%'", -2.737570904245], [" SELECT COUNT(*) FROM w WHERE date LIKE '1921-%-%'", -2.737570904245], [" SELECT COUNT(*) FROM w WHERE date LIKE '1921-%-%'", -2.737570904245], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1921%-%-%'", -3.2595624617449994], [" SELECT COUNT(*) FROM w WHERE date LIKE '1921%-%-%'", -3.7616761972450004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1921-%-%'", -5.530009639445001], [" SELECT COUNT(*) FROM w WHERE date LIKE '1921-%-%'", -5.592775276245], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1921-%-%'\n```", -14.962584420185]]}, "906": {"question": "what years had the most venues?", "gold_answer": ["2013", "2014"], "pred_answer": {"0": [[8], [1], [8], [1], [2], [2], [4], [8], [8], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `1st venue` IS NOT NULL AND `2nd venue` IS NOT NULL AND `3rd venue` IS NOT NULL AND `4th venue` IS NOT NULL AND `5th venue` IS NOT NULL AND `6th venue` IS NOT NULL", -6.022628274570002], [" SELECT COUNT(*) FROM w WHERE `1st venue` = 'beijing' AND `2nd venue` = 'dubai' AND `3rd venue` = 'london' AND `4th venue` = 'moscow' AND `5th venue` = 'windsor' AND `6th venue` = 'monterrey'", -9.258954735867], [" SELECT COUNT(*) FROM (SELECT COUNT(*) AS c FROM w GROUP BY year) WHERE c = (SELECT MAX(c) FROM (SELECT COUNT(*) AS c FROM w GROUP BY year))", -10.866505726223005], [" SELECT COUNT(DISTINCT year) FROM w WHERE year IN (SELECT year FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1)", -11.128263399255498], [" SELECT COUNT(*) FROM w WHERE (1st venue = 'beijing' AND 2nd venue = 'dubai' AND 3rd venue = 'london' AND 4th venue = 'moscow' AND 5th venue = 'windsor' AND 6th venue = 'monterrey') OR (1st venue = 'beijing' AND 2nd venue = 'dubai' AND 3rd venue = 'edinburgh' AND 4th venue = 'moscow' AND 5th venue = 'guadalajara' AND 6th venue = 'guadalajara')", -11.624307969123002], [" SELECT COUNT(*) FROM w WHERE (1st venue != 'na' AND 2nd venue != 'na' AND 3rd venue != 'na' AND 4th venue != 'na' AND 5th venue != 'na' AND 6th venue != 'na')", -11.68732161569], [" SELECT COUNT(DISTINCT(year)) FROM w WHERE (1st venue = 'beijing' OR 2nd venue = 'beijing' OR 3rd venue = 'beijing' OR 4th venue = 'beijing' OR 5th venue = 'beijing' OR 6th venue = 'beijing')", -11.993011965945495], [" SELECT COUNT(DISTINCT(year)) FROM w WHERE 1st venue IS NOT NULL AND 2nd venue IS NOT NULL AND 3rd venue IS NOT NULL AND 4th venue IS NOT NULL AND 5th venue IS NOT NULL AND 6th venue IS NOT NULL", -12.133279551405499], [" SELECT COUNT(*) FROM (SELECT year, COUNT(*) AS count FROM w GROUP BY year) WHERE count = (SELECT MAX(count) FROM (SELECT year, COUNT(*) AS count FROM w GROUP BY year))", -14.526107265824997], [" SELECT COUNT(*) FROM w WHERE year IN (SELECT year FROM w WHERE 1st venue != 'na' AND 2nd venue != 'na' AND 3rd venue != 'na' AND 4th venue != 'na' AND 5th venue != 'na' AND 6th venue != 'na')", -18.699781083219992]]}, "947": {"question": "what is the number of titles ken harden has one", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position LIKE '%st%' OR position LIKE '%nd%' OR position LIKE '%rd%' OR position LIKE '%th%'", -5.829678847030001], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st%' OR position LIKE '%nd%' OR position LIKE '%rd%' OR position LIKE '%th%'", -5.829678847030001], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st%' OR position LIKE '%nd%' OR position LIKE '%rd%' OR position LIKE '%th%'", -5.829678847030001], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st' OR position LIKE '%nd' OR position LIKE '%rd' OR position LIKE '%th'", -5.997718674849999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st' OR position LIKE '%nd' OR position LIKE '%rd' OR position LIKE '%th'", -5.997718674849999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st' OR position LIKE '%nd' OR position LIKE '%rd' OR position LIKE '%th'", -8.90603897905], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st' OR position LIKE '%nd' OR position LIKE '%rd' OR position LIKE '%th'", -8.911399436049999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st%' OR position LIKE '%nd%' OR position LIKE '%rd%' OR position LIKE '%th%'", -8.957799831450002], [" SELECT COUNT(DISTINCT competition) FROM w WHERE notes LIKE '%title%'", -16.717210664417], [" SELECT COUNT(*) FROM w WHERE position = '1st'\nQ2: {how many = a2} titles ken harden has one in the world championships.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = '1st' AND competition = 'world championships'\nQ3: {how many = a3} titles ken harden has one in the world championships or the african championships.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = '1st' AND (competition = 'world championships' OR competition = 'african championships')\nQ4: {how many = a4} titles ken harden has one in the world championships and the african championships.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE position = '1st' AND competition = 'world championships' AND competition = 'african championships'\nQ5: {how many = a5} titles ken harden has one in the world championships and the african championships and the all-africa games.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE position = '1st' AND competition", -32.542209858241996]]}, "988": {"question": "how many consecutive times did they play in tier 4?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [0], [0], [6], [5], [0], [0], [6], [6]], "1": ["<error>", "<error>"], "2": [[4], [6]], "3": ["<error>", "<error>"], "4": [[4], [4]], "5": ["<error>", "<error>"], "6": [[4], [2]], "7": ["<error>", "<error>"], "8": [[4], [12]], "9": ["<error>"], "10": [[4]], "11": ["<error>"], "12": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE level = 'tier 4'", -5.709344718320001], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4'", -5.709730949620001], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND (season - row_id) = 2009", -12.50798192485], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND (season - row_id) = 2008", -13.209619946079998], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND (season - row_id) = (SELECT MIN(season - row_id) FROM w WHERE level = 'tier 4')", -13.64535490292], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND (row_id + 1) IN (SELECT row_id FROM w WHERE level = 'tier 4')", -16.200280846034005], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND season = 2008 - 1 AND season = 2009 - 1", -17.52911155102], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND (row_id = 0 OR row_id = 1)", -18.576218210656002], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4'\nQ2: {how many = a2} consecutive times did they play in tier 3.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE level = 'tier 3'\nQ3: {how many = a3} consecutive times did they play in tier 3.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE level = 'tier 3'\nQ4: {how many = a4} consecutive times did they play in tier 3.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE level = 'tier 3'\nQ5: {how many = a5} consecutive times did they play in tier 3.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE level = 'tier 3'\nQ6: {how many = a6} consecutive times did they play in tier 3.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE level = 'tier 3'\nQ7: {how many = a7} consecutive times did they play in tier 3.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE level", -20.594254630181002], [" SELECT COUNT(DISTINCT(season)) FROM w WHERE level = 'tier 4'\nQ2: {how many = a2} times did they play in the kolmonen (third division).\nNeuralSQL2: SELECT COUNT(DISTINCT(season)) FROM w WHERE division = 'kolmonen (third division)'\nQ3: {how many = a3} times did they play in the kakkonen (second division).\nNeuralSQL3: SELECT COUNT(DISTINCT(season)) FROM w WHERE division = 'kakkonen (second division)'\nQ4: {how many = a4} times did they play in the kolmonen (third division) in the section 2.\nNeuralSQL4: SELECT COUNT(DISTINCT(season)) FROM w WHERE division = 'kolmonen (third division)' AND section = 'section 2'\nQ5: {how many = a5} times did they play in the kakkonen (second division) in the south group.\nNeuralSQL5: SELECT COUNT(DISTINCT(season)) FROM w", -34.34357068547332]]}, "1029": {"question": "which mountain peak is the only mountain peak in the cascade range?", "gold_answer": ["Mount Shasta"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range'", -2.00012075479], [" SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range'", -2.00012075479], [" SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range'", -2.00012075479], [" SELECT COUNT(*) FROM w WHERE mountain range = 'cascade range'", -2.4917961948680007], [" SELECT COUNT(*) FROM w WHERE mountain range = 'cascade range'", -3.1613198375900002], [" SELECT COUNT(*) FROM w WHERE mountain range = 'cascade range'", -3.1613198375900002], [" SELECT COUNT(*) FROM w WHERE mountain range = 'cascade range'", -3.1613198375900002], [" SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range'", -3.41716177649], [" SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range'", -3.41716177649], [" SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range'\nQ2: {how many = a2} mountain peak in the cascade range have a rank less than 5.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range' AND rank < 5\nQ3: {how many = a3} mountain peak in the cascade range have a rank less than 5 and a prominence larger than 1000.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range' AND rank < 5 AND prominence > 1000\nQ4: {how many = a4} mountain peak in the cascade range have a rank less than 5 and a prominence larger than 1000 and an elevation less than 14000.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `mountain range` = 'cascade range' AND rank < 5 AND prominence > 1000 AND elevation < 14000\nQ5: {how many = a5} mountain peak in the cascade range have a rank less than 5 and a prominence larger than 1000 and an elevation less than 14000 and an isolation", -39.10601988430103]]}, "1070": {"question": "what secretary of state served under both prime minister laurier and prime minister king?", "gold_answer": ["Charles Murphy"], "pred_answer": {"0": [[0], [13], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE tenure LIKE '%laurier%' AND tenure LIKE '%king%'", -4.23168621944], [" SELECT COUNT(*) FROM w WHERE prime minister IN ('laurier', 'king')", -4.91551187578], [" SELECT COUNT(*) FROM w WHERE prime minister = 'laurier' AND prime minister = 'king'", -6.35080592292], [" SELECT COUNT(*) FROM w WHERE prime minister = 'laurier' AND prime minister = 'king'", -7.07354355401], [" SELECT COUNT(*) FROM w WHERE prime minister = 'laurier' AND prime minister = 'king'", -7.07354355401], [" SELECT COUNT(*) FROM w WHERE prime minister = 'laurier' AND prime minister = 'king'", -7.076280880500001], [" SELECT COUNT(*) FROM w WHERE prime minister = 'laurier' AND prime minister = 'king'", -7.076280880500001], [" SELECT COUNT(*) FROM w WHERE prime minister = 'laurier' AND prime minister = 'king'", -7.076280880500001], [" SELECT COUNT(*) FROM w WHERE prime minister = 'laurier' AND prime minister = 'king'", -11.3699450835], [" SELECT COUNT(*) FROM w WHERE prime minister = 'laurier' AND prime minister = 'king'\nQ2: {how many = a2} secretary of state served under prime minister king and prime minister borden.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE prime minister = 'king' AND prime minister = 'borden'\nQ3: {how many = a3} secretary of state served under prime minister king and prime minister borden.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE prime minister = 'king' AND prime minister = 'borden'\nQ4: {how many = a4} secretary of state served under prime minister king and prime minister borden.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE prime minister = 'king' AND prime minister = 'borden'\nQ5: {how many = a5} secretary of state served under prime minister king and prime minister borden.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE prime minister = 'king' AND prime minister = 'borden'\nQ6: {how", -28.06601604207999]]}, "1111": {"question": "how many of these parties currently have no councillors?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -4.166901928150001], [" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -4.166901928150001], [" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -4.166901928150001], [" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -4.674984819580001], [" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -4.674984819580001], [" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -4.674984819580001], [" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -4.674984819580001], [" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -4.674984819580001], [" SELECT COUNT(*) FROM w WHERE diet representation\\ncouncillors = 0", -5.35097452588], [" SELECT COUNT(*) FROM w WHERE `diet representation\\ncouncillors` = 0", -9.8956199341]]}, "1152": {"question": "how many outgoing managers were appointed in november 2007?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date of appointment` LIKE '2007-11-%'", -4.542676499550001], [" SELECT COUNT(*) FROM w WHERE `date of appointment` LIKE '2007-11-%'", -4.54600397365], [" SELECT COUNT(*) FROM w WHERE `date of vacancy` LIKE '2007-11-%'", -5.51810396225], [" SELECT COUNT(*) FROM w WHERE date of appointment LIKE '2007-11-%'", -5.9239747085], [" SELECT COUNT(*) FROM w WHERE `date of appointment` LIKE '2007-11-%'", -6.78973162787], [" SELECT COUNT(DISTINCT outgoing manager) FROM w WHERE `date of appointment` LIKE '2007-11-%'", -7.217299572277], [" SELECT COUNT(*) FROM w WHERE `date of appointment` LIKE '2007-11-%'", -7.3025556278699995], [" SELECT COUNT(*) FROM w WHERE `date of appointment` LIKE '2007-11-%'", -7.3025556278699995], [" SELECT COUNT(*) FROM w WHERE `date of appointment` LIKE '2007-11-%'", -7.30258287657], [" SELECT COUNT(*) FROM w WHERE `date of appointment` LIKE '2007-11-%'", -7.81105392787]]}, "1193": {"question": "what are the number of floors the us bank plaza has?", "gold_answer": ["19"], "pred_answer": {"0": [[], [], [], [], [], [19.0], [19.0], [19.0], [], [19.0]]}, "nsql": [[" SELECT floors FROM w WHERE name = 'us bank plaza'", -2.8862265222600003], [" SELECT floors FROM w WHERE name = 'us bank plaza'", -2.8862265222600003], [" SELECT floors FROM w WHERE name = 'us bank plaza'", -2.8862265222600003], [" SELECT floors FROM w WHERE name = 'us bank plaza'", -2.90042736836], [" SELECT floors FROM w WHERE name = 'us bank plaza'", -3.4050524492600003], [" SELECT `floors` FROM w WHERE name LIKE '%us bank plaza%'", -4.457776975989999], [" SELECT `floors` FROM w WHERE `name` LIKE '%us bank plaza%'", -4.772129648389998], [" SELECT `floors` FROM w WHERE `name` LIKE '%us bank plaza%'", -4.772129648389998], [" SELECT `floors` FROM w WHERE name = 'us bank plaza'", -6.957820086389999], [" SELECT floors FROM w WHERE name LIKE '%us bank plaza%'", -7.05911587906]]}, "1234": {"question": "which position is listed the least amount of times on this chart?", "gold_answer": ["GK"], "pred_answer": {"0": [[2], [2], ["gk"], [5], [4], "<error>", [8], [2], [8], [2]], "1": ["<error>"], "2": [[22]], "3": ["<error>"], "4": [[10]]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY position ORDER BY COUNT(*) ASC LIMIT 1", -4.983637197379998], [" SELECT COUNT(*) FROM w GROUP BY position ORDER BY COUNT(*) ASC LIMIT 1", -4.983637197379998], [" SELECT position FROM w GROUP BY position ORDER BY COUNT(position) ASC LIMIT 1", -5.868742658110001], [" SELECT COUNT(*) FROM w WHERE position = 'mf'", -9.634081768389999], [" SELECT COUNT(*) FROM (SELECT COUNT(*) FROM w GROUP BY position)", -9.89084671935], [" SELECT MIN(COUNT(DISTINCT position)) FROM w", -9.898135333555], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -11.7012686189], [" SELECT MIN(cnt) FROM (SELECT COUNT(*) AS cnt FROM w GROUP BY position)", -13.371587755900002], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -13.694386399670002], [" SELECT COUNT(*) FROM w WHERE position = (SELECT position FROM w GROUP BY position ORDER BY COUNT(*) ASC LIMIT 1)\nQ2: {how many = a2} players have a nation of england.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'england'\nQ3: {how many = a3} players have a total goals of 0.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `total goals` = 0", -26.959303713870987]]}, "1275": {"question": "was there more gold medals won than silver?", "gold_answer": ["yes"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.8657216134640001], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.8662432666700001], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.8662432666700001], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.8662432666700001], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.8662432666700001], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.8662432666700001], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.866533931908], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.8667828425859999], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -0.8667828425859999], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE medal = 'silver'", -4.6622776920460005]]}, "16": {"question": "what is the number of buildings under 200 ft?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [0], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, ' / ') - 1) AS INT) < 200", -5.528332703776], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, '/') - 1) AS INT) < 200", -6.021653252112], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, '/') - 1) AS INT) < 200", -6.025175908681999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`, ' / ', '') AS INT) < 200", -6.414070325399998], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, '/') - 1) AS INT) < 200", -7.022157367616], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, '/') - 1) AS INT) < 200", -7.022157367616], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, ' / ') - 1) AS INT) < 200", -7.552662540916], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`, ' / ', '.') AS FLOAT) < 200", -8.657947315899998], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`, ' / ', '.') AS FLOAT) < 200", -8.657947315899998], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`, ' / ', '.') AS FLOAT) < 200", -9.29618491312]]}, "57": {"question": "were there more with inside or outside cylinders?", "gold_answer": ["Inside"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -4.931519620081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -4.931519620081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -5.076509020081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -5.076509020081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -5.076509020081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -5.429488220081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -5.964736020081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -6.207934420081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -6.208294820081], [" SELECT COUNT(*) FROM w WHERE cylinders = 'inside'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cylinders = 'outside'", -7.069389620081]]}, "60": {"question": "how many players made an appearance that year?", "gold_answer": ["20"], "pred_answer": {"0": [[20], [20], [20], [20], [20], [20], [20], [20], [20], [20]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `-1967` IS NOT NULL", -6.141230296911], [" SELECT COUNT(*) FROM w WHERE `-1967` != 'none' OR `03.30` != 'none' OR `03.31` != 'none' OR `04.04` != 'none' OR `10.14` != 'none' OR `1968` != 'none'", -6.332009461704], [" SELECT COUNT(*) FROM w WHERE `-1967` != 'none' OR `03.30` != 'none' OR `03.31` != 'none' OR `04.04` != 'none' OR `10.14` != 'none' OR `1968` != 'none'", -6.341208198734001], [" SELECT COUNT(*) FROM w WHERE `-1967` IS NOT NULL OR `03.30` IS NOT NULL OR `03.31` IS NOT NULL OR `04.04` IS NOT NULL OR `10.14` IS NOT NULL", -7.279043283883999], [" SELECT COUNT(*) FROM w WHERE -1967 <> 'none' OR 03.30 <> 'none' OR 03.31 <> 'none' OR 04.04 <> 'none' OR 10.14 <> 'none' OR 1968 <> 'none'", -7.515568159900001], [" SELECT COUNT(DISTINCT player) FROM w", -12.159557802954001], [" SELECT COUNT(*) FROM w WHERE `-1967` LIKE '%(%' OR `03.30` LIKE '%(%' OR `03.31` LIKE '%(%' OR `04.04` LIKE '%(%' OR `10.14` LIKE '%(%' OR `1968` LIKE '%(%'", -13.485059278579], [" SELECT COUNT(*) FROM w WHERE `-1967` LIKE '%(%)' OR `03.30` LIKE '%(%)' OR `03.31` LIKE '%(%)' OR `04.04` LIKE '%(%)' OR `10.14` LIKE '%(%)' OR `1968` LIKE '%(%)'", -14.603405444358001], [" SELECT COUNT(DISTINCT player) FROM w WHERE -1967 LIKE '%(%)' OR 03.30 LIKE '%(%)' OR 03.31 LIKE '%(%)' OR 04.04 LIKE '%(%)' OR 10.14 LIKE '%(%)' OR 1968 LIKE '%(%)'", -16.451080588129003], [" SELECT COUNT(*) FROM w WHERE '-1967' LIKE '%(%' OR '03.30' LIKE '%(%' OR '03.31' LIKE '%(%' OR '04.04' LIKE '%(%' OR '10.14' LIKE '%(%' OR '1968' LIKE '%(%'", -16.626885793414]]}, "81": {"question": "what is the number of products that were introduced in 2010?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010-%-%'", -2.3379662524800002], [" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010-%-%'", -2.3379662524800002], [" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010-%-%'", -2.3379662524800002], [" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010-%-%'", -2.3379662524800002], [" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010-%-%'", -2.3379662524800002], [" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010-%-%'", -2.34191630248], [" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010%'", -3.08006574248], [" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010%-%-%'", -3.22027162408], [" SELECT COUNT(*) FROM w WHERE `introduced` LIKE '2010-%-%'", -4.400902074779999], [" SELECT COUNT(*) FROM w WHERE introduced LIKE '%2010%'", -7.91286666098]]}, "98": {"question": "nations that had 10 or more medals each", "gold_answer": ["Cuba", "Jamaica", "Mexico"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.6193779875900003]]}, "102": {"question": "how many months saw record lows below freezing?", "gold_answer": ["7"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` < 32", -4.53043954266], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` < 0", -5.06906564266], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%f (%-%'", -8.91916630966], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%-%'", -8.99259222509], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%-%'", -8.99259222509], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '% ; ( - %'", -9.16726049366], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%f'", -12.273092984997], [" SELECT COUNT(*) FROM w WHERE (jan LIKE '% - %' AND CAST(REPLACE(jan, ';', '') AS INT) < 32) OR (feb LIKE '% - %' AND CAST(REPLACE(feb, ';', '') AS INT) < 32) OR (mar LIKE '% - %' AND CAST(REPLACE(mar, ';', '') AS INT) < 32) OR (apr LIKE '% - %' AND CAST(REPLACE(apr, ';', '') AS INT) < 32) OR (may LIKE '% - %' AND CAST(REPLACE(may, ';', '') AS INT) < 32) OR (jun LIKE '% - %' AND CAST(REPLACE(jun, ';', '') AS INT) < 32) OR (jul LIKE '% - %' AND CAST(REPLACE(jul, ';', '') AS INT) < 32) OR (aug LIKE '% - %' AND CAST(REPLACE(aug, ';', '') AS INT", -13.852828934044904], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '% - %' AND CAST(REPLACE(`record low \u00b0f (\u00b0c)`,'; (','') AS INT) < 0", -18.323645166014], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%f%' AND CAST(REPLACE(`record low \u00b0f (\u00b0c)`, '; (', '') AS INT) < 32", -23.701443616800002]]}, "139": {"question": "which mine was open longer, golden giant or beanland mine?", "gold_answer": ["Golden Giant Mine"], "pred_answer": {"0": [[1], ["1985-2006"], ["1985-2006"], ["1985-2006"], ["1985-2006"], [1], ["2006"], ["1985-2006"], [21], [1]], "1": [[1], ["1937-1938"], ["1937-1938"], ["1937-1938"], ["1937-1938"], [1], ["1938"], ["1937-1938"], [12], [1]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mine = 'beanland mine'", -3.93725426543], [" SELECT dates FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT dates FROM w WHERE mine = 'beanland mine'", -6.303596823609999], [" SELECT dates FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT dates FROM w WHERE mine = 'beanland mine'", -6.303596823609999], [" SELECT dates FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT dates FROM w WHERE mine = 'beanland mine'", -6.303596823609999], [" SELECT DATES FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT DATES FROM w WHERE mine = 'beanland mine'", -6.6627017342300014], [" SELECT LENGTH(dates) - LENGTH(REPLACE(dates, '-', '')) FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT LENGTH(dates) - LENGTH(REPLACE(dates, '-', '')) FROM w WHERE mine = 'beanland mine'", -6.96614926556], [" SELECT SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - INSTR(dates, ' - ')) FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - INSTR(dates, ' - ')) FROM w WHERE mine = 'beanland mine'", -10.085974610205], [" SELECT dates FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT dates FROM w WHERE mine = 'beanland mine'\n```", -10.541266839619999], [" SELECT (2006 - 1985) FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT (1918 - 1906) FROM w WHERE mine = 'barton mine'", -11.707303508909998], [" SELECT COUNT(*) FROM w WHERE mine = 'golden giant mine'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mine = 'beanland mine'\n```", -13.417264813669998]]}, "143": {"question": "how many times has this team been relegated?", "gold_answer": ["3"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -1.700437534216], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -1.700437534216], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -1.700437534216], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -1.700437534216], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -1.700437534216], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -1.700437534216], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -1.700437534216], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -3.2626567472760004], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -3.2626567472760004], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated'", -3.2626567472760004]]}, "184": {"question": "what were the number of times second place was earned?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place LIKE '%2nd%'", -4.863005071764], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -5.16496862532], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -5.183842067315], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -6.1366962071], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -6.15359494022], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -7.27595502532], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -7.39196902532], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -8.2439840071], [" SELECT COUNT(*) FROM w WHERE place LIKE '%nd'", -10.070721223349999], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -10.185279667315001]]}, "225": {"question": "were the new jersey devils in last place according to the chart?", "gold_answer": ["No"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -2.9475160116179993], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -2.9475160116179993], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -2.9511718466369996], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -2.9511718466369996], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -2.9511718466369996], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -2.9511718466369996], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -5.20226702918], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -5.33435995397], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'\n```", -5.40271922507], [" SELECT COUNT(*) FROM w WHERE opponent = 'new jersey devils'", -6.519365286949999]]}, "266": {"question": "in what year did ken harnden participate in more than one competition?", "gold_answer": ["1998"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT competition) FROM w", -1.8448535303599998], [" SELECT COUNT(DISTINCT competition) FROM w", -1.8448535303599998], [" SELECT COUNT(DISTINCT competition) FROM w", -1.8448535303599998], [" SELECT COUNT(DISTINCT competition) FROM w", -1.8448535303599998], [" SELECT COUNT(DISTINCT competition) FROM w", -1.8448535303599998], [" SELECT COUNT(DISTINCT competition) FROM w", -1.8448535303599998], [" SELECT COUNT(DISTINCT competition) FROM w", -1.8448535303599998], [" SELECT COUNT(DISTINCT competition) FROM w", -1.8448535303599998], [" SELECT COUNT(DISTINCT(competition)) FROM w", -2.69388924846], [" SELECT COUNT(DISTINCT(competition)) FROM w", -5.70355268566]]}, "307": {"question": "how many games did the bolton wanderers and newcastle united play before there was a definitive winner in the fifth round proper?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [2], [3], [2], [2], [2], [2], [3], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE home team = 'bolton wanderers' OR away team = 'bolton wanderers' OR home team = 'newcastle united' OR away team = 'newcastle united'", -5.053132687569998], [" SELECT COUNT(*) FROM w WHERE home team = 'bolton wanderers' OR away team = 'bolton wanderers' OR home team = 'newcastle united' OR away team = 'newcastle united'", -5.053132687569998], [" SELECT COUNT(*) FROM w WHERE home team = 'bolton wanderers' AND away team = 'newcastle united'", -8.802887753019997], [" SELECT COUNT(*) FROM w WHERE (home team = 'bolton wanderers' AND away team = 'newcastle united') OR (home team = 'newcastle united' AND away team = 'bolton wanderers')", -10.1550800854], [" SELECT COUNT(*) FROM w WHERE (home team = 'bolton wanderers' OR away team = 'bolton wanderers') AND (home team = 'newcastle united' OR away team = 'newcastle united') AND tie no = 'replay'", -12.31655240093], [" SELECT COUNT(*) FROM w WHERE (home team = 'bolton wanderers' OR away team = 'bolton wanderers') AND (home team = 'newcastle united' OR away team = 'newcastle united') AND tie no = 'replay'", -12.38443559944], [" SELECT COUNT(*) FROM w WHERE (home team = 'bolton wanderers' OR away team = 'bolton wanderers') AND (home team = 'newcastle united' OR away team = 'newcastle united') AND tie no LIKE '%replay%'", -12.688640508654998], [" SELECT COUNT(*) FROM w WHERE (home team = 'bolton wanderers' OR away team = 'bolton wanderers') AND (home team = 'newcastle united' OR away team = 'newcastle united') AND tie no = 'replay'", -12.69659703544], [" SELECT COUNT(*) FROM w WHERE (home team = 'bolton wanderers' AND away team = 'newcastle united') OR (home team = 'newcastle united' AND away team = 'bolton wanderers')", -15.4823934084], [" SELECT COUNT(*) FROM w WHERE (home team = 'bolton wanderers' OR away team = 'bolton wanderers') AND (home team = 'newcastle united' OR away team = 'newcastle united') AND tie no = 'replay'", -17.77598874393]]}, "348": {"question": "what are the total number of times the position of 1st place was earned?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = '1st'", -3.5698799327200006], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -3.5698799327200006], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -3.5707667937200007], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -7.82648033945], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -8.086210229286], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -8.094648329285999], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -8.586741029286], [" SELECT COUNT(*) FROM w WHERE position LIKE '1st%'", -8.641463550089998], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -9.326998029285999], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -10.286876729286]]}, "389": {"question": "how many winners won in semple stadium?", "gold_answer": ["7"], "pred_answer": {"0": [[4], [4], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT winners) FROM w WHERE venue = 'semple stadium'", -2.997214395089], [" SELECT COUNT(DISTINCT winners) FROM w WHERE venue = 'semple stadium'", -2.997214395089], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -3.5354536359649997], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -3.5354536359649997], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -5.564286240607], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'\n```", -8.685938990505], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -9.056268341965], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -9.400992530607], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -9.432684618824998], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -10.503256248825]]}, "430": {"question": "what is the total number of assemblers supporting medium genomes type technologies?", "gold_answer": ["1"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type LIKE '%genomes%' AND technologies LIKE '%medium%'", -4.279457432492], [" SELECT COUNT(*) FROM w WHERE type LIKE '%genomes%' AND technologies LIKE '%medium%'", -4.280769507032001], [" SELECT COUNT(*) FROM w WHERE type LIKE '%genomes%' AND technologies LIKE '%medium%'", -4.2834083411320005], [" SELECT COUNT(*) FROM w WHERE type = 'medium genomes' AND technologies LIKE '%type technologies%'", -6.5350596576590005], [" SELECT COUNT(*) FROM w WHERE type LIKE '%genomes%' AND technologies LIKE '%medium%'", -6.575002641172], [" SELECT COUNT(*) FROM w WHERE type = 'medium genomes' AND technologies LIKE '%medium genomes%'", -6.5887623568150016], [" SELECT COUNT(*) FROM w WHERE type = 'medium genomes' AND technologies LIKE '%medium genomes%'", -6.589034218415001], [" SELECT COUNT(*) FROM w WHERE type = 'medium genomes'", -8.125448177695], [" SELECT COUNT(*) FROM w WHERE type = 'genomes' AND technologies LIKE '%medium%'", -9.714631381117002], [" SELECT COUNT(*) FROM w WHERE type = 'medium genomes' AND technologies LIKE '%medium%'", -10.637603517502]]}, "471": {"question": "what are the number of times an artist earned first place?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place LIKE '%st%'", -3.968510701484], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.01877906723], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.01877906723], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.01877906723], [" SELECT COUNT(*) FROM w WHERE place LIKE '%st%'", -5.47181730512], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.616626667229999], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -6.10331140126], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -6.23532516723], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -6.42871080126], [" SELECT COUNT(*) FROM w WHERE place LIKE '1%'", -7.3071329374000005]]}, "512": {"question": "name another region for the 1985 release other than greece.", "gold_answer": ["Australia"], "pred_answer": {"0": [[7], [0], [5], [5], [0], [0], [5], [5], [5], [7]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE '1985%-%-%'", -4.91528474297], [" SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%-%'", -5.457282628370001], [" SELECT COUNT(DISTINCT region) FROM w WHERE `date` LIKE '1985-%-%'", -6.0568932535040005], [" SELECT COUNT(DISTINCT region) FROM w WHERE date LIKE '1985-%-%'", -6.4824184524940005], [" SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%-%'", -7.32796993697], [" SELECT COUNT(DISTINCT region) FROM w WHERE date LIKE '1985-%-%-%'", -8.880538424984], [" SELECT COUNT(DISTINCT region) FROM w WHERE date LIKE '1985-%-%'", -11.509447851100001], [" SELECT COUNT(DISTINCT region) FROM w WHERE date LIKE '1985-%-%'", -13.382262920203999], [" SELECT COUNT(DISTINCT region) FROM w WHERE date LIKE '1985-%-%'", -13.38274345366], [" SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%'\nQ2: {how many = a2} region for the 1985 release with a format of compact disc.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%' AND format = 'compact disc'\nQ3: {how many = a3} region for the 1985 release with a format of compact disc and a label of i.r.s..\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%' AND format = 'compact disc' AND label = 'i.r.s.'\nQ4: {how many = a4} region for the 1985 release with a format of compact disc and a label of i.r.s. or mca.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%' AND format = 'compact disc' AND (label = 'i.r.s.' OR label = 'mca')\nQ5: {how many = a5} region for the 1985 release with a format of compact disc and a", -32.02724820097799]]}, "553": {"question": "how many losses do the st. louis blues have?", "gold_answer": ["1,530"], "pred_answer": {"0": [[1530], [1530], [1530], [1530], [1530], [1530], [1530], [1530], [1530], [1530]], "1": ["<error>"]}, "nsql": [[" SELECT losses FROM w WHERE team = 'st. louis blues'", -2.50595485807], [" SELECT losses FROM w WHERE team = 'st. louis blues'", -2.50611881784], [" SELECT losses FROM w WHERE team LIKE '%st. louis blues%'", -5.53667058459], [" SELECT losses FROM w WHERE team LIKE '%st. louis blues%'", -6.11083556459], [" SELECT losses FROM w WHERE team LIKE '%st. louis blues%'", -6.30313346669], [" SELECT losses FROM w WHERE team LIKE '%st. louis blues%'", -6.30313346669], [" SELECT losses FROM w WHERE team LIKE '%st. louis blues%'", -6.30320041469], [" SELECT losses FROM w WHERE team = 'st. louis blues'", -7.764125015990001], [" SELECT losses FROM w WHERE team LIKE '%st. louis blues%'\n```", -9.371986645040002], [" SELECT losses FROM w WHERE team LIKE '%st. louis blues%'", -10.10856486459]]}, "594": {"question": "how many innings did bill and ted have in total?", "gold_answer": ["30"], "pred_answer": {"0": [[], [], [12], [12], [12], [12], [12], [12], [12], [12]], "1": [[], [], [18], [18], [18], [18], [18], [18], [18], [18]]}, "nsql": [[" SELECT innings FROM w WHERE player = 'bill'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted'", -2.710225017355], [" SELECT innings FROM w WHERE player = 'bill'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted'", -2.710225017355], [" SELECT innings FROM w WHERE player = 'bill roe'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted tyler'", -5.919546007185], [" SELECT innings FROM w WHERE player = 'bill roe'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted tyler'", -5.919546007185], [" SELECT innings FROM w WHERE player = 'bill roe'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted tyler'", -5.919546007185], [" SELECT innings FROM w WHERE player = 'bill roe'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted tyler'", -9.300517502184999], [" SELECT innings FROM w WHERE player = 'bill roe'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted tyler'", -9.523842641184999], [" SELECT innings FROM w WHERE player = 'bill roe'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted tyler'", -10.258748802185], [" SELECT innings FROM w WHERE player = 'bill roe'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted tyler'", -10.397172002184998], [" SELECT innings FROM w WHERE player = 'bill roe'\nNeuralSQL2: SELECT innings FROM w WHERE player = 'ted tyler'", -12.00167251499]]}, "635": {"question": "how many teams had their cws best finish in 1955?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE cws best finish LIKE '%1955%'", -2.38831223822], [" SELECT COUNT(*) FROM w WHERE cws best finish LIKE '%1955%'", -2.38831223822], [" SELECT COUNT(*) FROM w WHERE cws best finish LIKE '%1955%'", -2.38831223822], [" SELECT COUNT(*) FROM w WHERE cws best finish LIKE '%1955%'", -2.38831223822], [" SELECT COUNT(*) FROM w WHERE cws best finish LIKE '%1955%'", -2.38994158642], [" SELECT COUNT(*) FROM w WHERE cws best finish LIKE '%1955%'", -2.38994158642], [" SELECT COUNT(*) FROM w WHERE cws best finish LIKE '%1955%'", -4.41165773725], [" SELECT COUNT(*) FROM w WHERE cws best finish LIKE '%1955%'", -4.41165773725], [" SELECT COUNT(*) FROM w WHERE `cws best finish` LIKE '%1955%'", -10.62313725942], [" SELECT COUNT(*) FROM w WHERE `cws best finish` LIKE '%1955%'", -10.909222659420001]]}, "676": {"question": "how many times did he finish all 200 laps?", "gold_answer": ["4"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps = 200 AND finish = 'running'", -5.295531078680001], [" SELECT COUNT(*) FROM w WHERE laps = 200 AND finish = 'all'", -6.15426172468], [" SELECT COUNT(*) FROM w WHERE finish = '200'", -6.42732395976], [" SELECT COUNT(*) FROM w WHERE finish = '200'", -6.42732395976], [" SELECT COUNT(*) FROM w WHERE laps = 200 AND finish = 'running'", -6.5563997916800005], [" SELECT COUNT(*) FROM w WHERE finish = '200'", -6.83613865976], [" SELECT COUNT(*) FROM w WHERE finish = '200'", -7.77260445976], [" SELECT COUNT(*) FROM w WHERE finish = '200'", -8.531411559759999], [" SELECT COUNT(*) FROM w WHERE laps = 200\n```", -11.222712968779998], [" SELECT COUNT(*) FROM w WHERE laps = 200", -12.106956666610001]]}, "717": {"question": "how many teams did germany have?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [1]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT team) FROM w WHERE team LIKE '%germany%'", -2.860628056915], [" SELECT COUNT(DISTINCT team) FROM w WHERE team LIKE '%germany%'", -2.860628056915], [" SELECT COUNT(DISTINCT team) FROM w WHERE team LIKE '%germany%'", -2.8707921947649995], [" SELECT COUNT(DISTINCT team) FROM w WHERE team LIKE 'germany%'", -4.0715678909149995], [" SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -4.56127293939], [" SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -4.56127293939], [" SELECT COUNT(*) FROM w WHERE team LIKE '% germany %'", -6.45145248413], [" SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -9.298100415437], [" SELECT COUNT(DISTINCT team) FROM w WHERE team LIKE '%germany%'\n```", -15.728961112264997], [" SELECT COUNT(DISTINCT SUBSTR(team, 1, INSTR(team, '(') - 1)) FROM w WHERE team LIKE '%germany%'\n```", -24.700342692415]]}, "720": {"question": "what was the most consecutive wins for the team shown in the season?", "gold_answer": ["7"], "pred_answer": {"0": [[11], [11], [11], [11], [0], [11], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.312360276109999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.312360276109999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.312360276109999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.317042076109999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -6.86079392771], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -7.289553276109999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.05379549229], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.378009170664], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -9.451057770664], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -9.876629070664]]}, "741": {"question": "how many threads per inch does a 9/16 have?", "gold_answer": ["12"], "pred_answer": {"0": [[12.0], [12.0], [12.0], [12.0], [12.0], [12.0], [12.0], [12.0], [12.0], [12.0]]}, "nsql": [[" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.56943792536], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.56943792536], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.56943792536], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.5930358500800006], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.5930358500800006], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.5930358500800006], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.5930358500800006], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.5930358500800006], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '9/16'", -2.5930358500800006], [" SELECT `threads per\u00a0inch` FROM w WHERE whitworth size (in) = '9/16'", -6.0280850812]]}, "758": {"question": "did xu guang ci or su song create the five star charts in 1094 ad?", "gold_answer": ["Su Song \u8607\u980c"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND time created LIKE '1094%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND time created LIKE '1094%'", -5.42981163151], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094 ad%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094 ad%'", -9.64679348553], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094 ad%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094 ad%'", -9.805398277259997], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094%'", -10.384474886879998], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094%'", -10.871461237030001], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094%'", -11.11901393148], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094%'", -12.214991291659999], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094%'", -12.948553428050001], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094%'", -13.679761623360001], [" SELECT COUNT(*) FROM w WHERE creator = 'xu guang ci' AND `time created` LIKE '1094%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE creator = 'su song' AND `time created` LIKE '1094%'", -15.440471315769997]]}, "762": {"question": "what were the total number of games played in november?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [0], [4], [4], [0], [0], "<error>", "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1960-11-%'", -3.3066630516899997], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1960-11-%'", -3.3248272907899996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1960-11-%'", -3.3248368617899993], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 11 - %'", -4.807377355310001], [" SELECT COUNT(*) FROM w WHERE date LIKE '1960-11-%'", -4.946954594689999], [" SELECT COUNT(*) FROM w WHERE date LIKE '1960-11-%'", -4.949473970490001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 11 - %'", -5.117867597489999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1960-11-%-%'", -6.481879225989999], [" SELECT COUNT(*) FROM w WHERE DATE_FORMAT(date, '%M') = 'November'", -7.13378692332], [" SELECT COUNT(*) FROM w WHERE DATE_FORMAT(`date`, '%M') = 'november'\n```", -18.312795447239996]]}, "799": {"question": "how many consecutive games were goals were against san marino?", "gold_answer": ["3"], "pred_answer": {"0": [[1], [1], [1], [3], [3], [3], [0], [0], [3], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND goal = 1.0", -7.849413227230001], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND goal = 1.0", -8.606334925230001], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND goal = 1", -9.97006482823], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino'", -10.569655227027], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND (row_id = 0 OR row_id = 1 OR row_id = 2)", -12.676228814709997], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND row_id >= (SELECT row_id FROM w WHERE opponent = 'san marino' LIMIT 1)", -14.505740123699997], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND goal = (SELECT goal FROM w WHERE row_id = row_id + 1)\n```", -14.63630382648], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND (SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND `date` > `date`) > 0", -16.27505829927], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND row_id IN (SELECT row_id - 1 FROM w WHERE opponent = 'san marino' UNION SELECT row_id + 1 FROM w WHERE opponent = 'san marino')", -19.400376385290002], [" SELECT COUNT(*) FROM w WHERE opponent = 'san marino' AND row_id IN (SELECT row_id FROM w WHERE opponent = 'san marino' AND row_id > 0 AND row_id < (SELECT MAX(row_id) FROM w))", -22.36867579841]]}, "803": {"question": "how many episodes were broadcast in april 2010 in japan?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4-%'", -5.108096294729999], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4-%'", -5.108096294729999], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4-%'", -6.81086480531], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4-%'", -8.24023547315], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4-%'", -10.25477399215], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4-%'", -10.662896635149998], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4-%'", -11.22040347031], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4-%'", -12.22740517031], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4%'", -12.949750204699999], [" SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010-4%-%'", -12.96498648076]]}, "844": {"question": "how many places are in greene county?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -2.0320957341440002], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -2.0320957341440002], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -2.0320957341440002], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -2.0320957341440002], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -2.0320957341440002], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -2.0320957341440002], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -2.0320957341440002], [" SELECT COUNT(*) FROM w WHERE counties = 'greene county'", -3.4215724863500006], [" SELECT COUNT(*) FROM w WHERE counties = 'greene county'", -3.4215724863500006], [" SELECT COUNT(*) FROM w WHERE counties = 'greene county'", -5.74766242096]]}, "885": {"question": "how many times did kansas beat kansas state before 1910?", "gold_answer": ["7"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas'", -2.91621650459], [" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas'", -2.91621650459], [" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas'", -2.91621650459], [" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas' AND losing team = 'kansas state'", -3.97190356529], [" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas' AND losing team = 'kansas state'", -3.97190356529], [" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas' AND losing team = 'kansas state'", -3.97190356529], [" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas' AND losing team = 'kansas state'", -3.9781604271499997], [" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas'", -4.56191537759], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas' AND year < 1910", -11.92233003656], [" SELECT COUNT(*) FROM w WHERE year < 1910 AND winning team = 'kansas' AND losing team = 'kansas state'\n```", -12.894119168659998]]}, "926": {"question": "how many swimmers did not swim?", "gold_answer": ["4"], "pred_answer": {"0": [[14], [14], [0], [14], [0], [14], [14], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE note = 'none'", -4.935714887826], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -4.935714887826], [" SELECT COUNT(*) FROM w WHERE time = 'none'", -5.0379182124209985], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -9.069407191625999], [" SELECT COUNT(*) FROM w WHERE time = 'none'", -9.179459137221], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -9.413039191626], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -10.075972088626001], [" SELECT COUNT(*) FROM w WHERE time LIKE '% - %'", -10.196820005133999], [" SELECT COUNT(*) FROM w WHERE time = 'none'", -10.208057449221], [" SELECT COUNT(*) FROM w WHERE time = 'none'", -10.497504389221]]}, "967": {"question": "what is the number of games played in teh 2010-2011 season", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.1826567731300002], [" SELECT COUNT(*) FROM w", -1.1826567731300002], [" SELECT COUNT(*) FROM w", -1.1826567731300002], [" SELECT COUNT(*) FROM w", -1.1826567731300002], [" SELECT COUNT(*) FROM w", -1.1826567731300002], [" SELECT COUNT(*) FROM w", -1.1826567731300002], [" SELECT COUNT(*) FROM w", -1.1826567731300002], [" SELECT COUNT(*) FROM w", -1.1826567731300002], [" SELECT COUNT(*) FROM w", -2.78844980715], [" SELECT COUNT(*) FROM w", -2.78844980715]]}, "1008": {"question": "how many games were replays?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -1.6265565472949999], [" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -1.6265565472949999], [" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -1.6265565472949999], [" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -1.6265565472949999], [" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -1.6280511566950002], [" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -1.6280511566950002], [" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -1.6282334722350003], [" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -1.6282334722350003], [" SELECT COUNT(*) FROM w WHERE tie no = 'replay'", -3.1906083145549995], [" SELECT COUNT(*) FROM w WHERE `tie no` = 'replay'", -3.6700645539550005]]}, "1049": {"question": "after the election, how many seats did the liberal democratic league win?", "gold_answer": ["34"], "pred_answer": {"0": [["11"], ["11"], ["11"], ["11"], ["11"], ["11"], ["11"], ["11"], ["11"], ["11"]]}, "nsql": [[" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -5.5944434007099995], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -5.597535646940001], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -5.597535646940001], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -5.5995385220700005], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -5.60127714694], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -5.61739798934], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -5.67345385089], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -6.5793181564699985], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -6.60629845641], [" SELECT seats FROM w WHERE party = 'free-thinking democratic league'", -6.84062990071]]}, "1090": {"question": "how many names are listed with an image?", "gold_answer": ["39"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT name) FROM w WHERE name LIKE '%image%'", -4.797811617679999], [" SELECT COUNT(*) FROM w WHERE name LIKE '%(image)%'", -5.76420519573], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -5.85211089078], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -5.85211089078], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -5.85211089078], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -6.341351309709999], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -6.341351309709999], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -6.341351309709999], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -7.17577308421], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -7.17577308421]]}, "1131": {"question": "how many cities have 1926 as their incorporation date?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `incorporation\\ndate` = 1926", -2.3434773829499997], [" SELECT COUNT(*) FROM w WHERE `incorporation\\ndate` = 1926", -2.3434773829499997], [" SELECT COUNT(*) FROM w WHERE `incorporation\\ndate` = 1926", -3.1745028079499997], [" SELECT COUNT(*) FROM w WHERE `incorporation\\ndate` = 1926", -3.1745028079499997], [" SELECT COUNT(*) FROM w WHERE `incorporation date` = 1926", -3.2209961505100004], [" SELECT COUNT(*) FROM w WHERE incorporation\\ndate = 1926", -4.68192053041], [" SELECT COUNT(*) FROM w WHERE incorporation\\ndate = 1926", -4.68192053041], [" SELECT COUNT(*) FROM w WHERE incorporation\\ndate = 1926", -4.68192053041], [" SELECT COUNT(*) FROM w WHERE incorporation\\ndate = 1926", -4.68192053041], [" SELECT COUNT(*) FROM w WHERE incorporation\\ndate = 1926", -4.732561286549999]]}, "1172": {"question": "how many players were born before 1988?", "gold_answer": ["5"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [5], [12], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '19%-%-%'", -5.71333387282], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`birth date`, INSTR(`birth date`, '(') - 4, 4) AS INT) < 1988", -6.401992028759999], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(birth date, LENGTH(birth date) - 3, 4) AS INT) < 1988", -6.4597283021], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`birth date`, INSTR(`birth date`, '(') + 1, 4) AS INT) < 1988", -6.674376129063999], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(birth date, LENGTH(birth date) - 4, 4) AS INT) < 1988", -6.733216601400001], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`birth date`, LENGTH(`birth date`) - 4, 4) AS INT) < 1988", -9.64564526355], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`birth date`, LENGTH(`birth date`) - 4, 4) AS INT) < 1988", -13.33840078411], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`birth date`, 1, 4) AS INT) < 1988", -13.470260984915999], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`birth date`, INSTR(`birth date`, '(') + 1, INSTR(`birth date`, 'age') - INSTR(`birth date`, '(') - 2) AS INT) < 1988", -14.573352979980003], [" SELECT COUNT(*) FROM w WHERE birth date LIKE '%-%-% (age %' AND CAST(SUBSTR(birth date, INSTR(birth date, '-') + 1, LENGTH(birth date) - (INSTR(birth date, ' - ') + 1)) AS INT) < 1988", -24.47884403385]]}, "1213": {"question": "how many seasons did webber average over 20 points per game (ppg)?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE ppg > 20", -5.9796734018099995], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -5.9796734018099995], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -5.9796734018099995], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -7.4929430567500015], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -9.53797783901], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -9.749726039010001], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -10.07304827201], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -10.268320572010001], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -12.76994913901], [" SELECT COUNT(*) FROM w WHERE ppg > 20", -17.30862933901]]}, "1254": {"question": "how many players had a total of 4?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total = 4", -1.96104262473], [" SELECT COUNT(*) FROM w WHERE total = 4", -1.96104262473], [" SELECT COUNT(*) FROM w WHERE total = 4", -1.96104262473], [" SELECT COUNT(*) FROM w WHERE player != 'total' AND total = 4", -2.95737918023], [" SELECT COUNT(*) FROM w WHERE player != 'total' AND total = 4", -2.95737918023], [" SELECT COUNT(*) FROM w WHERE player != 'total' AND total = 4", -5.060626400229999], [" SELECT COUNT(*) FROM w WHERE player != 'total' AND total = 4", -5.060626400229999], [" SELECT COUNT(*) FROM w WHERE total = 4", -9.67613909061], [" SELECT COUNT(*) FROM w WHERE player != 'total' AND total = 4\n```", -13.903650406829998], [" SELECT COUNT(*) FROM w WHERE player != 'total' AND total = 4\n```", -15.62862069683]]}, "36": {"question": "how many provinces have the same number of districts as kabul?", "gold_answer": ["4"], "pred_answer": {"0": ["<error>", "<error>", [1], ["15 districts"], [1], [1], [1], ["15 districts"], [1], [1]], "1": ["<error>", "<error>", "<error>", [1], [1], "<error>", "<error>", [0], [0], [1]], "2": ["<error>"]}, "nsql": [[" SELECT districts FROM w WHERE province = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE districts = (SELECT districts FROM w WHERE province = 'kabul')", -4.526712331394001], [" SELECT districts FROM w WHERE province = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE districts = (SELECT districts FROM w WHERE province = 'kabul')", -4.529862596474001], [" SELECT COUNT(*) FROM w WHERE centers = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE districts = (SELECT districts FROM w WHERE centers = 'kabul')", -6.586931873864], [" SELECT `notes` FROM w WHERE province = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `notes` = '23 districts'", -6.891823800224002], [" SELECT COUNT(*) FROM w WHERE centers = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE centers = 'kabul'", -6.950616679414002], [" SELECT COUNT(*) FROM w WHERE centers = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `number of districts` = (SELECT `number of districts` FROM w WHERE centers = 'kabul')", -8.053236470264002], [" SELECT COUNT(*) FROM w WHERE province = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `districts` = (SELECT `districts` FROM w WHERE province = 'kabul')", -8.099134097834], [" SELECT notes FROM w WHERE province = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE notes LIKE '%- districts' AND CAST(REPLACE(notes, ' districts', '') AS INT) = 23", -12.035533446871003], [" SELECT COUNT(DISTINCT notes) FROM w WHERE centers = 'kabul'\nNeuralSQL2: SELECT COUNT(DISTINCT province) FROM w WHERE (SELECT COUNT(DISTINCT notes) FROM w WHERE centers = 'kabul') = (SELECT COUNT(DISTINCT notes) FROM w WHERE province = province)", -16.473233174509506], [" SELECT COUNT(*) FROM w WHERE centers = 'kabul'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE notes LIKE '% districts' AND (CAST(SUBSTR(notes, 1, INSTR(notes, ' districts') - 1) AS INT) = 23)\n```", -16.545493129394]]}, "77": {"question": "what is the total days held on # 1st?", "gold_answer": ["283"], "pred_answer": {"0": [[283], [283], [283], [283], [283], [283], [283], [283], [283], [283]]}, "nsql": [[" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.8501405654199994], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.85016716172], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.85034925108], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.85034925108], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.85034925108], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.85034925108], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.85034925108], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.85034925108], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -3.85034925108], [" SELECT SUM(`days held`) FROM w WHERE `#` = 1", -6.0246329402]]}, "80": {"question": "how many nations won at least 10 medals?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001], [" SELECT COUNT(*) FROM w WHERE total >= 10", -1.2752233076600001]]}, "101": {"question": "which year had the most competitions?", "gold_answer": ["1998"], "pred_answer": {"0": [[1998, 2], [1998, 2], [1998, 2], [1998], [1998, 2], [1998, 2], [1998, 2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT year, COUNT(*) FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", -4.439331836702], [" SELECT year, COUNT(*) FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", -4.439331836702], [" SELECT year, COUNT(*) FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", -4.440876514382001], [" SELECT year FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", -4.66364871297], [" SELECT year, COUNT(*) FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", -5.993070860010001], [" SELECT year, COUNT(*) FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", -6.11606974234], [" SELECT year, COUNT(*) FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1", -7.6345412559], [" SELECT COUNT(*) FROM w WHERE year = (SELECT year FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1)", -8.688683426270002], [" SELECT COUNT(*) FROM w WHERE year = (SELECT year FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1)", -11.329911428433004], [" SELECT COUNT(*) FROM w WHERE year = (SELECT year FROM w GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1)\n```", -14.73634120877]]}, "118": {"question": "how many games total were played?", "gold_answer": ["50"], "pred_answer": {"0": [[50], [50], [50], [50], [50], [50], [50], [50], [50], [50]], "1": ["<error>"], "2": [[50]], "3": ["<error>"], "4": [[10]], "5": ["<error>"], "6": [[10]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -3.0167292080800006], [" SELECT COUNT(*) FROM w", -3.0167292080800006], [" SELECT COUNT(*) FROM w", -6.33835992083], [" SELECT COUNT(*) FROM w", -6.511250720830001], [" SELECT COUNT(*) FROM w", -6.511250720830001], [" SELECT COUNT(*) FROM w", -6.97342802083], [" SELECT COUNT(*) FROM w", -7.0677061208300005], [" SELECT COUNT(*) FROM w", -7.1051812208300005], [" SELECT COUNT(*) FROM w", -7.34857112083], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} games were played by the black hawks.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'chicago black hawks' OR home = 'chicago black hawks'\nQ3: {how many = a3} times did the black hawks play the bruins.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE visitor = 'chicago black hawks' AND home = 'boston bruins' OR visitor = 'boston bruins' AND home = 'chicago black hawks'\nQ4: {how many = a4} games were played between the black hawks and the canadiens.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE visitor = 'chicago black hawks' AND home = 'montreal canadiens' OR visitor = 'montreal canadiens' AND home = 'chicago black hawks'\nQ5: {how many = a5} games were played by the bruins.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE visitor = 'boston", -38.23101607765802]]}, "122": {"question": "how many sacks did this player have in his first five seasons?", "gold_answer": ["34"], "pred_answer": {"0": [[15.5], [105.0], [34.0], [43.5], [34.0], [28.0], [8.5], [28.0], [null], [43.5]]}, "nsql": [[" SELECT SUM(sacks) FROM w WHERE year IN ('2007','2003','2001')", -6.016126568930001], [" SELECT SUM(sacks) FROM w WHERE year IN ('2007','2003','2001','career','2011')", -6.509235310230001], [" SELECT SUM(sacks) FROM w WHERE row_id < 5", -7.629653137830001], [" SELECT SUM(sacks) FROM w WHERE year < 2008", -8.974341001930002], [" SELECT SUM(sacks) FROM w WHERE year < '2006'", -10.05927016935], [" SELECT SUM(sacks) FROM w WHERE year < '2005'", -10.06810181033], [" SELECT SUM(sacks) FROM w WHERE year <= '2001'", -10.93380006003], [" SELECT SUM(sacks) FROM w WHERE year < '2005'", -11.12089231033], [" SELECT SUM(sacks) FROM w WHERE year LIKE '200%-%' OR year LIKE '201%-%'", -11.48821751983], [" SELECT SUM(sacks) FROM w WHERE year < 2008", -13.55959739755]]}, "159": {"question": "how many ethnicities were below 1,000 people in 2007?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000", -6.35573272493], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000", -7.7917864328499995], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < '1000'", -7.919702021830001], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000\n```", -9.28293613868], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000", -10.175240080550001], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000", -10.369129180549999], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000", -10.709342180550001], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000", -11.38367178055], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000", -13.918641445550001], [" SELECT COUNT(*) FROM w WHERE `2007 estimate` < 1000", -14.722564480549998]]}, "163": {"question": "what is the number of votes for obama for del norte and el dorado counties?", "gold_answer": ["38957"], "pred_answer": {"0": [[3791], [3791], [3791], [3791], [3791], [3791], [3791], [3791], [3791], [3791]], "1": [[35166], [35166], [35166], [35166], [35166], [35166], [35166], [35166], [35166], [35166]]}, "nsql": [[" SELECT votes FROM w WHERE county = 'del norte'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado'", -2.2999815730399997], [" SELECT votes FROM w WHERE county = 'del norte'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado'", -2.30197711736], [" SELECT votes FROM w WHERE county = 'del norte' AND obama = 'obama'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado' AND obama = 'obama'", -3.656819061206001], [" SELECT votes FROM w WHERE county = 'del norte' AND obama = 'obama'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado' AND obama = 'obama'", -3.65858109196], [" SELECT votes FROM w WHERE county = 'del norte' AND obama = 'obama'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado' AND obama = 'obama'", -3.6774269737150003], [" SELECT votes FROM w WHERE county = 'del norte' AND obama = 'obama'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado' AND obama = 'obama'", -3.6847575049850017], [" SELECT votes FROM w WHERE county = 'del norte' AND obama = 'obama'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado' AND obama = 'obama'", -3.684768265755001], [" SELECT votes FROM w WHERE county = 'del norte' AND obama = 'obama'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado' AND obama = 'obama'", -3.7250075281179993], [" SELECT votes FROM w WHERE county = 'del norte' AND obama = 'obama'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado' AND obama = 'obama'", -3.7250075281179993], [" SELECT votes FROM w WHERE county = 'del norte' AND obama = 'obama'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'el dorado' AND obama = 'obama'", -3.7250075281179993]]}, "204": {"question": "how many total options are there about anusvara?", "gold_answer": ["2"], "pred_answer": {"0": [[3], [4], [4], [4], [4], [4], [4], [1], [4], [5]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT comment) FROM w WHERE comment LIKE '%option%'", -4.50456574236], [" SELECT COUNT(*) FROM w WHERE comment LIKE '%option%'", -7.311790878210001], [" SELECT COUNT(*) FROM w WHERE comment LIKE '%option%'", -8.351968388529999], [" SELECT COUNT(*) FROM w WHERE comment LIKE '%option%'", -9.17313934118], [" SELECT COUNT(*) FROM w WHERE comment LIKE '%option%'", -9.17313934118], [" SELECT COUNT(*) FROM w WHERE comment LIKE '%option%'\n```", -11.06012770721], [" SELECT COUNT(*) FROM w WHERE comment LIKE '%option%'", -13.01043384118], [" SELECT COUNT(DISTINCT comment) FROM w WHERE comment LIKE '%iso 15919 has%'", -13.709083200071998], [" SELECT COUNT(*) FROM w WHERE comment LIKE '%option%'", -14.2038444354], [" SELECT COUNT(DISTINCT comment) FROM w WHERE comment LIKE '%iso 15919%'", -15.413070473700001]]}, "245": {"question": "how many series awarded at least $500,000 in prize money?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -4.118554487390001], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -4.96835677396], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -4.97724255127], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -5.07739857636], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -5.091979566280001], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -5.091979566280001], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -5.98200728442], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -5.9916230755], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -5.9916230755], [" SELECT COUNT(*) FROM w WHERE `prize money\\nusd` >= 500000", -9.19679287245]]}, "286": {"question": "how many games did this team win during this season?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6641202608199999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6641202608199999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6641202608199999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6641202608199999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6641202608199999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6641202608199999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6641202608199999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -4.16944575716], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -5.49855341664], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.31799577582]]}, "327": {"question": "how many countries have produced the same number of championship golfers as canada?", "gold_answer": ["3"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], "<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT country) FROM w WHERE total = (SELECT total FROM w WHERE country = 'canada')", -4.011116180031999], [" SELECT COUNT(*) FROM w WHERE total = (SELECT total FROM w WHERE country = 'canada')", -4.826464047774001], [" SELECT COUNT(*) FROM w WHERE total = (SELECT total FROM w WHERE country = 'canada')", -4.826464047774001], [" SELECT COUNT(*) FROM w WHERE total = (SELECT total FROM w WHERE country = 'canada')", -4.827839185969999], [" SELECT COUNT(*) FROM w WHERE total = (SELECT total FROM w WHERE country = 'canada')", -6.003309040930001], [" SELECT COUNT(*) FROM w WHERE total = (SELECT total FROM w WHERE country = 'canada')", -6.00849698483], [" SELECT COUNT(*) FROM w WHERE `total` = (SELECT `total` FROM w WHERE country = 'canada')", -6.057622213959999], [" SELECT COUNT(*) FROM w WHERE total = (SELECT total FROM w WHERE country = 'canada')", -7.230258847460002], [" SELECT COUNT(*) FROM w WHERE masters + `u.s. open` + `the open` + pga = (SELECT SUM(masters + `u.s. open` + `the open` + pga) FROM w WHERE country = 'canada')", -8.58569750637], [" SELECT COUNT(*) FROM w WHERE (masters + us + the_open + pga) = (SELECT SUM(masters + us + the_open + pga) FROM w WHERE country = 'canada')", -13.731173431229996]]}, "368": {"question": "how many games did the harrisburg heat lose to the cleveland freeze in total.", "gold_answer": ["4"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [0], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND results\\nscore LIKE 'l%'", -4.7699780695], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND results\\nscore LIKE 'l%'", -4.7699780695], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND results\\nscore LIKE 'l%'", -4.7699780695], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND results\\nscore LIKE 'l%'", -4.77724299434], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND results\\nscore LIKE 'l %'", -6.0723919675], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND `results\\nscore` LIKE 'l%'", -7.737512058899998], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND (results\\nscore LIKE 'l % - %' OR results\\nscore LIKE '% - l %')", -9.3150351751], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND `results\\nscore` LIKE 'l%'", -9.61702059858], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND (results\\nscore LIKE 'l%' OR results\\nscore LIKE '%l')", -11.553198037840001], [" SELECT COUNT(*) FROM w WHERE opponent = 'cleveland freeze' AND (`results\\nscore` LIKE 'l % - %' OR `results\\nscore` LIKE '% - % l')", -14.2437371297]]}, "409": {"question": "how many points were scored in the final round of the 2012 summer olympics afc qualification?", "gold_answer": ["12"], "pred_answer": {"0": [[1], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `competition` = '2012 summer olympics afc qualification' AND `stage` = 'final round'", -6.369484656710002], [" SELECT SUM(CAST(REPLACE(scorers, '\u2013', '') AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'", -7.0680251372299985], [" SELECT SUM(CAST(REPLACE(scorers, '\u2013', '-') AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'", -7.312615687950001], [" SELECT SUM(CAST(REPLACE(scorers, '\u2013', '-') AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'", -7.312615687950001], [" SELECT SUM(CAST(SUBSTR(scorers, 1, INSTR(scorers, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(scorers, INSTR(scorers, '-') + 1, LENGTH(scorers) - (INSTR(scorers, ' - ') + 1)) AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'", -8.091068658978998], [" SELECT SUM(CAST(SUBSTR(scorers, 1, INSTR(scorers, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(scorers, INSTR(scorers, '-') + 1, LENGTH(scorers) - (INSTR(scorers, ' - ') + 1)) AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'", -8.091068658978998], [" SELECT SUM(CAST(REPLACE(scorers, '\u2013', ' ') AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'", -8.57383533679], [" SELECT SUM(CAST(REPLACE(`scorers`, '\u2013', '-') AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'", -10.45021329646], [" SELECT SUM(CAST(SUBSTR(scorers, INSTR(scorers, '-') + 1, LENGTH(scorers) - (INSTR(scorers, ' - ') + 1)) AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'", -16.660191857264], [" SELECT SUM(CAST(SUBSTR(scorers, 1, INSTR(scorers, '\u2013') - 1) AS INT)) + SUM(CAST(SUBSTR(scorers, INSTR(scorers, '\u2013') + 1, LENGTH(scorers) - (INSTR(scorers, '\u2013') + 1)) AS INT)) FROM w WHERE competition = '2012 summer olympics afc qualification' AND stage = 'final round'\nQ2: {how many = a2} matches in the 2003 fifa world cup ended with a score of 1-2.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE competition = '2003 fifa world cup' AND scorers = '1\u20132'\nQ3: {how many = a3} matches in the 2003 fifa world cup ended with a score of 1-2.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE competition = '2003 fifa world cup' AND scorers = '1\u20132'\nQ4: {how many = a4} matches in the 2003 fifa world cup ended with a score of 1-2.\nNeural", -40.654172969701]]}, "450": {"question": "what are the number of times re-elected is listed as the result?", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 're-elected'", -1.9175758506500002], [" SELECT COUNT(*) FROM w WHERE result = 're-elected'", -1.9175758506500002], [" SELECT COUNT(*) FROM w WHERE result = 're-elected'", -1.924003237356], [" SELECT COUNT(*) FROM w WHERE result LIKE '%re-elected%'", -2.8277889258359994], [" SELECT COUNT(*) FROM w WHERE result LIKE '%re-elected%'", -2.8277889258359994], [" SELECT COUNT(*) FROM w WHERE result LIKE '%re-elected%'", -2.828144348636], [" SELECT COUNT(*) FROM w WHERE result LIKE '%re-elected%'", -2.828144348636], [" SELECT COUNT(*) FROM w WHERE result LIKE 're-elected'", -4.1994349894730005], [" SELECT COUNT(*) FROM w WHERE result LIKE '%re-elected%'", -4.711948588836], [" SELECT COUNT(*) FROM w WHERE result = 're-elected'", -5.589448636186]]}, "491": {"question": "how many games took place in ostrava?", "gold_answer": ["2"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue LIKE '%ostrava%'", -2.34460116183], [" SELECT COUNT(*) FROM w WHERE venue = 'bazaly, ostrava'", -2.60020308523], [" SELECT COUNT(*) FROM w WHERE venue = 'bazaly, ostrava'", -2.60020308523], [" SELECT COUNT(*) FROM w WHERE venue = 'bazaly, ostrava'", -2.60020308523], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%ostrava%'", -3.2650990026699995], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%ostrava%'", -3.2650990026699995], [" SELECT COUNT(*) FROM w WHERE venue = 'bazaly, ostrava'", -3.6488640177300002], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%ostrava%'", -4.74983298999], [" SELECT COUNT(*) FROM w WHERE venue = 'ostrava'", -9.802712292543], [" SELECT COUNT(*) FROM w WHERE venue = 'ostrava'", -10.754030592543002]]}, "532": {"question": "what is the number of different nationalities represented by the top 5 athletes?", "gold_answer": ["4"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [2], [2], [10], [10], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT nationality) FROM w LIMIT 5", -2.794812223356], [" SELECT COUNT(DISTINCT nationality) FROM w LIMIT 5", -2.794812223356], [" SELECT COUNT(DISTINCT nationality) FROM w LIMIT 5", -2.7950072015860004], [" SELECT COUNT(DISTINCT nationality) FROM w LIMIT 5", -2.7950072015860004], [" SELECT COUNT(DISTINCT nationality) FROM w LIMIT 5", -2.7950072015860004], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 5", -3.412900452157], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 5", -3.412900452157], [" SELECT COUNT(DISTINCT nationality) FROM w ORDER BY rank LIMIT 5", -4.4167841570510005], [" SELECT COUNT(DISTINCT nationality) FROM w LIMIT 5", -4.895841342331001], [" SELECT COUNT(DISTINCT(nationality)) FROM w WHERE rank <= 5", -5.376273570251]]}, "573": {"question": "how many different teams are represented in the table?", "gold_answer": ["4"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>", "<error>"], "2": [[8], [2]], "3": ["<error>", "<error>"], "4": [[3], [2]], "5": ["<error>", "<error>"], "6": [[4], [1]], "7": ["<error>", "<error>"], "8": [[5], "<error>"], "9": ["<error>"], "10": [[7]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT team) FROM w", -3.320023641339], [" SELECT COUNT(DISTINCT team) FROM w", -3.3226716467390007], [" SELECT COUNT(DISTINCT team) FROM w", -8.083341102219], [" SELECT COUNT(DISTINCT team) FROM w", -8.793051403010999], [" SELECT COUNT(DISTINCT team) FROM w", -9.392326174219], [" SELECT COUNT(DISTINCT team) FROM w", -9.655351375293], [" SELECT COUNT(DISTINCT(team)) FROM w", -9.781045543819001], [" SELECT COUNT(DISTINCT team) FROM w", -11.232778583011], [" SELECT COUNT(DISTINCT team) FROM w\nQ2: {how many = a2} different seasons are represented in the table.\nNeuralSQL2: SELECT COUNT(DISTINCT season) FROM w\nQ3: {how many = a3} different chassis are represented in the table.\nNeuralSQL3: SELECT COUNT(DISTINCT chassis) FROM w\nQ4: {how many = a4} different engines are represented in the table.\nNeuralSQL4: SELECT COUNT(DISTINCT engine) FROM w\nQ5: {how many = a5} different drivers are represented in the table.\nNeuralSQL5: SELECT COUNT(DISTINCT driver) FROM w\nQ6: {how many = a6} different race distances are represented in the table.\nNeuralSQL6: SELECT COUNT(DISTINCT `race distance\\nlaps`) FROM w\nQ7: {how many = a7} different race distances are represented in the table.\nNeuralSQL7: SELECT COUNT(DISTINCT `race distance\\nmiles (km)`)", -27.654242403661584], [" SELECT COUNT(DISTINCT team) FROM w\nQ2: {how many = a2} records have a chassis that is lola.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE chassis = 'lola'\nQ3: the number of records that have a chassis that is lola and an engine that is ford-cosworth is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE chassis = 'lola' AND engine = 'ford-cosworth'\nQ4: the number of records that have a chassis that is lola and an engine that is ford-cosworth and a driver that is justin wilson is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE chassis = 'lola' AND engine = 'ford-cosworth' AND driver = 'justin wilson'\nQ5: the number of records that have a chassis that is lola and an engine that is ford-cosworth and a driver that is justin wilson and a season that is 2006 is {how many = a5}.\nNeuralSQL", -45.95092979693999]]}, "614": {"question": "how many players are fws?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'fw'", -3.1848621010800002], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -4.656349060769999], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -4.656349060769999], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -6.667655642769999], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -6.73247858362], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -6.949671442770001], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -7.05257788362], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -8.06215098362], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -8.80327458362], [" SELECT COUNT(*) FROM w WHERE position = 'fw'", -8.93126584277]]}, "655": {"question": "how many winning scores were less than -14?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`winning score`,'(','') AS INT) < -14", -4.7579802332700005], [" SELECT COUNT(*) FROM w WHERE `winning score` LIKE '%-14%'", -5.063586483899999], [" SELECT COUNT(*) FROM w WHERE `winning score` < -14", -5.17676512587], [" SELECT COUNT(*) FROM w WHERE `winning score` < '-14'", -5.71056610387], [" SELECT COUNT(*) FROM w WHERE `winning score` < '-14'", -6.750773882463001], [" SELECT COUNT(*) FROM w WHERE `winning score` < '-14'", -6.943119982463001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`winning score`,'(','') AS INT) < -14", -6.997741053370001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`winning score`,'\u2212','') AS INT) < -14", -7.015099184470001], [" SELECT COUNT(*) FROM w WHERE `winning score` < '-14'", -7.084094174776], [" SELECT COUNT(*) FROM w WHERE `winning score` < -14", -10.744225064344]]}, "696": {"question": "what two hospitals holding consecutive rankings of 8 and 9 respectively, both provide 1200 hospital beds?", "gold_answer": ["Laguna Honda Hospital Rehabilitation Center", "Atascadero State Hospital"], "pred_answer": {"0": [[2], [0], [2], [2], [2], [0], [0], [0], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (rank = 8 OR rank = 9) AND `# beds` = 1200", -5.99355782689], [" SELECT COUNT(*) FROM w WHERE rank = 8 AND # beds = 1200 AND rank = 9 AND # beds = 1200", -6.875804820390002], [" SELECT COUNT(*) FROM w WHERE # beds = 1200 AND (rank = 8 OR rank = 9)", -7.458014962879998], [" SELECT COUNT(*) FROM w WHERE # beds = 1200 AND rank IN (8, 9)", -7.964911401339999], [" SELECT COUNT(*) FROM w WHERE (rank = 8 AND # beds = 1200) OR (rank = 9 AND # beds = 1200)", -8.161835088950001], [" SELECT COUNT(*) FROM w WHERE # beds = 1200 AND rank = 8 AND rank = 9", -8.211634574649999], [" SELECT COUNT(*) FROM w WHERE # beds = 1200 AND rank = 8 AND rank = 9", -8.560821547560002], [" SELECT COUNT(*) FROM w WHERE # beds = 1200 AND rank = 8 AND rank = 9", -9.4915085038], [" SELECT COUNT(*) FROM w WHERE rank = 8 AND rank = 9 AND # beds = 1200", -9.871274254480001], [" SELECT COUNT(*) FROM w WHERE hospital = 'santa clara valley medical center' AND city = 'san jose' AND county = 'santa clara' AND `# beds` = 524 AND type of hospital = 'general acute care'", -16.159229441579996]]}, "737": {"question": "how many players represented scotland?", "gold_answer": ["1"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -3.3828026510500004], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -3.3828026510500004], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -4.658260081122], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -4.658260081122], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -5.330491081122], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -5.818252381122001], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -6.1693375460199995], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -6.3042476256399995], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -6.380370081122001], [" SELECT COUNT(*) FROM w WHERE country = 'scotland'", -7.740490166360001]]}, "740": {"question": "what was the first tv series that gauri tejwani appeared in?", "gold_answer": ["Noorjahan"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[3]]}, "nsql": [[" SELECT COUNT(DISTINCT(show)) FROM w", -6.705450045944], [" SELECT COUNT(DISTINCT show) FROM w", -8.439112502354], [" SELECT COUNT(DISTINCT show) FROM w", -8.663919437944], [" SELECT COUNT(DISTINCT show) FROM w", -9.745630388354], [" SELECT COUNT(DISTINCT show) FROM w", -10.240251788354], [" SELECT COUNT(DISTINCT show) FROM w", -10.271908388354], [" SELECT COUNT(DISTINCT show) FROM w", -10.865516212353999], [" SELECT COUNT(DISTINCT show) FROM w", -11.265918062353999], [" SELECT COUNT(DISTINCT(show)) FROM w", -11.273077837944001], [" SELECT COUNT(DISTINCT show) FROM w\nQ2: there are {how many = a2} records with a role of gauri tejwani.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE role = 'gauri tejwani'\nQ3: the number of records with a year of 2005 is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = '2005'\nQ4: gauri tejwani appeared in {how many = a4} tv series in 2005.\nNeuralSQL4: SELECT COUNT(DISTINCT show) FROM w WHERE year = '2005'", -40.44279914363399]]}, "761": {"question": "what is the difference of population in easton and reno?", "gold_answer": ["102"], "pred_answer": {"0": [[1245], [1245], [1245], [1245], [1245], [1245], [1245], [1245], [1245], [1245]], "1": [[1143], [1143], [1143], [1143], [1143], [1143], [1143], [1143], [1143], [1143]]}, "nsql": [[" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -5.084036343829999], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -5.084036343829999], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -5.901480182884], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -8.0470115982], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -8.486792351034001], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -8.741252051034], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -9.011623305034], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -9.407109051034], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -11.170979851034001], [" SELECT population FROM w WHERE township = 'easton'\nNeuralSQL2: SELECT population FROM w WHERE township = 'reno'", -12.392810205034]]}, "778": {"question": "which network has the most satellite stations?", "gold_answer": ["CTV"], "pred_answer": {"0": [["ctv"], ["ctv", 8], ["ctv", 8], ["ctv", 8], [8], ["ctv"], [1], ["ctv", 8], ["ctv", 7], ["ctv", 7]]}, "nsql": [[" SELECT network FROM w GROUP BY network ORDER BY COUNT(*) DESC LIMIT 1", -4.50203632119], [" SELECT network, COUNT(*) FROM w GROUP BY network ORDER BY COUNT(*) DESC LIMIT 1", -5.21746464226], [" SELECT network, COUNT(*) FROM w GROUP BY network ORDER BY COUNT(*) DESC LIMIT 1", -5.21746464226], [" SELECT network, COUNT(*) FROM w GROUP BY network ORDER BY COUNT(*) DESC LIMIT 1", -6.68490485598], [" SELECT COUNT(*) FROM w GROUP BY network ORDER BY COUNT(*) DESC LIMIT 1", -7.48718844132], [" SELECT network FROM w GROUP BY network ORDER BY COUNT(network) DESC LIMIT 1", -7.9602462981299995], [" SELECT COUNT(DISTINCT(network)) FROM w WHERE notes LIKE '%satellite%'", -9.2743568732], [" SELECT network, COUNT(*) AS c FROM w GROUP BY network ORDER BY c DESC LIMIT 1", -9.45950157623], [" SELECT network, COUNT(network) AS count FROM w WHERE notes LIKE '%satellite%' GROUP BY network ORDER BY count DESC LIMIT 1", -9.735214158730003], [" SELECT network, COUNT(*) FROM w WHERE notes LIKE '%satellite%' GROUP BY network ORDER BY COUNT(*) DESC LIMIT 1;", -10.35193972509]]}, "782": {"question": "how many are listed as \"all\" technologies?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -1.1078101949199999], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -1.1078101949199999], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -1.1078101949199999], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -1.1078101949199999], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -1.1078101949199999], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -1.1078101949199999], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -1.1078101949199999], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -3.6938227164199997], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'", -5.120750718279999], [" SELECT COUNT(*) FROM w WHERE technologies = 'all'\n```", -9.92087546982]]}, "819": {"question": "what is the total number of free fees?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE fee = 'free'", -3.7367410624999993], [" SELECT COUNT(*) FROM w WHERE fee = 'free'", -3.7436385665000005], [" SELECT COUNT(*) FROM w WHERE fee = 'free'", -5.229963537429999], [" SELECT COUNT(*) FROM w WHERE fee = 'free'", -5.232318788465], [" SELECT COUNT(*) FROM w WHERE fee = 'free'", -6.22365285743], [" SELECT COUNT(*) FROM w WHERE fee = 'free'", -6.22365285743], [" SELECT COUNT(*) FROM w WHERE fee = 'free'", -6.35485605743], [" SELECT COUNT(*) FROM w WHERE fee = 'free'", -7.079320157430001], [" SELECT COUNT(*) FROM w WHERE fee = 'free'\n```", -8.0040758189], [" SELECT COUNT(*) FROM w WHERE fee = 'free'\n```", -8.09656705874]]}, "823": {"question": "number of codes containing a 2?", "gold_answer": ["28"], "pred_answer": {"0": [[0], [0], [0], [0], [28], [0], [0], [0], [0], [28]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE code LIKE '%2%'", -2.24846245707], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%'", -2.2490840371699994], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%'", -2.24919963519], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%'", -2.250803065], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%' OR code_2 LIKE '%2%' OR code_3 LIKE '%2%'", -3.0346013672700005], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%'", -4.067261542570001], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%'", -4.067320102230001], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%'", -4.06747316522], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%'", -4.514564658069999], [" SELECT COUNT(*) FROM w WHERE code LIKE '%2%' OR code_2 LIKE '%2%' OR code_3 LIKE '%2%'", -17.18528423007]]}, "864": {"question": "what is the difference in employees for rank 1 and rank 3?", "gold_answer": ["39,872 employees"], "pred_answer": {"0": ["<error>", [4445], [4445], [4445], [4445], [4445], [4445], [4445], [4445], [4445]], "1": ["<error>", [44317], [44317], [44317], [44317], [44317], [44317], [44317], [44317], [44317]], "2": ["<error>"]}, "nsql": [[" SELECT employees FROM w WHERE rank in 2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in 2011 = 3", -3.561630409863], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3", -6.988741873956999], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3", -6.988741873956999], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3", -6.988741873956999], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3", -6.988741873956999], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3", -8.626287073956998], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3", -8.748431012376999], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3", -8.815963073957], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3", -8.864142688247], [" SELECT employees FROM w WHERE rank in\\n2011 = 1\nNeuralSQL2: SELECT employees FROM w WHERE rank in\\n2011 = 3\n\"\"\"", -12.253452810826998]]}, "905": {"question": "what are the total number of times the soviet union is listed under the gold column?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.4132100626799997], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.4132100626799997], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.4132100626799997], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.41963006208], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.41963006208], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.42400672062], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.42400672062], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -3.603930390080001], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -3.603930390080001], [" SELECT COUNT(*) FROM w WHERE gold LIKE 'soviet union%'", -3.6864101946283]]}, "946": {"question": "how many penalties did germany get all together?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [1], [1], [0], [0], [11], [11], [11], [11]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT)) FROM w WHERE nationality = 'germany'", -4.9956886669100005], [" SELECT SUM(CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT)) FROM w WHERE nationality = 'germany'", -5.918939167010001], [" SELECT SUM(CAST(SUBSTR(`penalties (p+p+s+s)`, INSTR(`penalties (p+p+s+s)`, '(') + 1, INSTR(`penalties (p+p+s+s)`, ')') - (INSTR(`penalties (p+p+s+s)`, '(') + 1)) AS INT)) FROM w WHERE nationality = 'germany'", -6.601632034810001], [" SELECT SUM(CAST(SUBSTR(`penalties (p+p+s+s)`, INSTR(`penalties (p+p+s+s)`, '(') + 1, INSTR(`penalties (p+p+s+s)`, ')') - (INSTR(`penalties (p+p+s+s)`, '(') + 1)) AS INT)) FROM w WHERE nationality = 'germany'", -6.601632034810001], [" SELECT SUM(CAST(SUBSTR(`penalties (p+p+s+s)`, 2, INSTR(`penalties (p+p+s+s)`, '(') - 2) AS INT)) FROM w WHERE nationality = 'germany'", -6.712376883600003], [" SELECT SUM(CAST(SUBSTR(`penalties (p+p+s+s)`, 2, INSTR(`penalties (p+p+s+s)`, '(') - 2) AS INT)) FROM w WHERE nationality = 'germany'", -6.727170406880001], [" SELECT SUM(CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT)) FROM w WHERE nationality = 'germany'", -8.323848782214], [" SELECT SUM(CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT)) FROM w WHERE nationality = 'germany'", -8.760400593934001], [" SELECT SUM(CAST(REPLACE(`penalties (p+p+s+s)`,'(0+0+0+0)','') AS INT)) FROM w WHERE nationality = 'germany'", -8.82628764174], [" SELECT SUM(CAST(SUBSTR(penalties (p+p+s+s), 1, INSTR(penalties (p+p+s+s), '(') - 1) AS INT)) FROM w WHERE nationality = 'germany'", -9.00055325136]]}, "987": {"question": "in which major competitions did yoichiro kakitani have at least 3 starts?", "gold_answer": ["2006 AFC U-17 Championship", "2008 AFC Youth Championship qualification"], "pred_answer": {"0": [[2], [2], [2], [2], [3], [0], [2], [2], [2], [0]], "1": ["<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `appearances\\nstart` >= 3", -3.6454802504899995], [" SELECT COUNT(*) FROM w WHERE `appearances\\nstart` >= 3", -3.6454802504899995], [" SELECT COUNT(*) FROM w WHERE `appearances\\nstart` >= 3\n```", -5.82961639755], [" SELECT COUNT(*) FROM w WHERE `appearances\\nstart` >= 3", -5.924448863169999], [" SELECT COUNT(*) FROM w WHERE (`appearances\\nstart` + `appearances\\nsub`) >= 3", -7.013420250580001], [" SELECT COUNT(*) FROM w WHERE category = 'senior' AND `appearances\\nstart` >= 3\n```", -9.518059881649998], [" SELECT COUNT(*) FROM w WHERE `appearances\\nstart` >= 3 AND `competition` LIKE '% championship%'", -10.42444609305], [" SELECT COUNT(DISTINCT competition) FROM w WHERE appearances\\nstart >= 3\n```", -12.179051987728998], [" SELECT COUNT(*) FROM w WHERE appearances\\nstart >= 3", -12.606764091869998], [" SELECT COUNT(*) FROM w WHERE appearances\\nstart >= 3 AND category != 'u-19' AND category != 'u-18' AND category != 'u-17' AND category != 'u-16'", -19.513514033309995]]}, "1028": {"question": "what is the difference in the number of goals scored in the 1999 fifa world cup and the 2000 summer olympics?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [1], [0], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [1], [1]]}, "nsql": [[" SELECT SUM(CAST(REPLACE(scorers, 'none', '0') AS INT)) FROM w WHERE competition = '1999 fifa world cup'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(scorers, 'none', '0') AS INT)) FROM w WHERE competition = '2000 summer olympics'", -6.1163456362070034], [" SELECT SUM(CAST(REPLACE(scorers, 'none', '0') AS INT)) FROM w WHERE competition = '1999 fifa world cup'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(scorers, 'none', '0') AS INT)) FROM w WHERE competition = '2000 summer olympics'", -6.1179234022059985], [" SELECT SUM(CAST(REPLACE(scorers, 'none', '0') AS INT)) FROM w WHERE competition = '1999 fifa world cup'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(scorers, 'none', '0') AS INT)) FROM w WHERE competition = '2000 summer olympics'", -6.122472794599999], [" SELECT SUM(CAST(REPLACE(scorers, 'none', '0') AS INT)) FROM w WHERE competition = '1999 fifa world cup'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(scorers, 'none', '0') AS INT)) FROM w WHERE competition = '2000 summer olympics'", -6.147783340281999], [" SELECT SUM(CAST(SUBSTR(scorers, 1, INSTR(scorers, '-') - 1) AS INT)) FROM w WHERE competition = '1999 fifa world cup'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(scorers, 1, INSTR(scorers, '-') - 1) AS INT)) FROM w WHERE competition = '2000 summer olympics'", -7.307208000106], [" SELECT SUM(CAST(REPLACE(scorers, '\u2013', '-') AS INT)) FROM w WHERE competition = '1999 fifa world cup'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(scorers, '\u2013', '-') AS INT)) FROM w WHERE competition = '2000 summer olympics'", -8.094074728768001], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) AS INT)) FROM w WHERE competition = '1999 fifa world cup'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) AS INT)) FROM w WHERE competition = '2000 summer olympics'", -8.7247273348544], [" SELECT SUM(CAST(REPLACE(scorers, '\u2013', ' ') AS INT)) FROM w WHERE competition = '1999 fifa world cup'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(scorers, '\u2013', ' ') AS INT)) FROM w WHERE competition = '2000 summer olympics'", -8.986697650553], [" SELECT COUNT(*) FROM w WHERE competition = '1999 fifa world cup' AND scorers IS NOT NULL\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE competition = '2000 summer olympics' AND scorers IS NOT NULL", -14.04324961362], [" SELECT COUNT(*) FROM w WHERE competition = '1999 fifa world cup' AND scorers IS NOT NULL\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE competition = '2000 summer olympics' AND scorers IS NOT NULL", -17.325934139069997]]}, "1069": {"question": "the only player to sign in july?", "gold_answer": ["Troy Nolan"], "pred_answer": {"0": [[0], [0], [0], [0], [1], [1], [1], [0], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%-07-%'", -2.7093728973999998], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%-07-%'", -2.7095448974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%-07-%'", -2.7095448974], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%-07-%'", -2.7106592637999998], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%july%'", -3.0394241074], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'july%'", -3.6196506747999995], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'july%'", -3.6310965139], [" SELECT COUNT(*) FROM w WHERE date signed LIKE '%-07-%'", -6.871717532900001], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%-07-%'", -10.67657010937], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%july%'", -11.501165676860001]]}, "1110": {"question": "how many different tv shows was gauri tejwani in before 2000?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT show) FROM w WHERE year < '2000'", -2.8728733087900005], [" SELECT COUNT(DISTINCT show) FROM w WHERE year < '2000'", -2.8728733087900005], [" SELECT COUNT(DISTINCT show) FROM w WHERE year < '2000'", -2.8728733087900005], [" SELECT COUNT(DISTINCT show) FROM w WHERE year < '2000'", -2.8728733087900005], [" SELECT COUNT(DISTINCT show) FROM w WHERE year < '2000'", -2.8728733087900005], [" SELECT COUNT(DISTINCT show) FROM w WHERE year < 2000", -6.61727606697], [" SELECT COUNT(DISTINCT show) FROM w WHERE year < 2000", -6.61727606697], [" SELECT COUNT(DISTINCT show) FROM w WHERE `year` < 2000", -6.86379067409], [" SELECT COUNT(DISTINCT show) FROM w WHERE year < 2000", -6.93552306697], [" SELECT COUNT(DISTINCT show) FROM w WHERE year < 2000", -7.51215656697]]}, "1151": {"question": "which city has the largest number of historic sites?", "gold_answer": ["Coldwater"], "pred_answer": {"0": [["coldwater", 15], ["coldwater", 15], ["coldwater", 15], ["coldwater", 15], ["coldwater", 15], ["coldwater", 15], ["coldwater", 15], [15], ["coldwater", 15], [15]]}, "nsql": [[" SELECT city, COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -3.6251242403199986], [" SELECT city, COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -3.6251242403199986], [" SELECT city, COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -3.6251242403199986], [" SELECT city, COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -3.6386581055599994], [" SELECT city, COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -3.6386581055599994], [" SELECT city, COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -5.6614519535799985], [" SELECT city, COUNT(*) AS num FROM w GROUP BY city ORDER BY num DESC LIMIT 1", -7.25143395673], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -7.3534522518399985], [" SELECT city, COUNT(*) as c FROM w GROUP BY city ORDER BY c DESC LIMIT 1", -7.657827508809999], [" SELECT MAX(c) FROM (SELECT COUNT(*) AS c FROM w GROUP BY city)", -10.339921210174996]]}, "1192": {"question": "at the 2006 gran premio telmex, did oriol servia or katherine legge complete more laps?", "gold_answer": ["Oriol Servi\u00e0"], "pred_answer": {"0": [[66], [66], [66], [66], [66], [66], [66], [66], [66], [1]], "1": [[63], [63], [63], [63], [63], [63], [63], [63], [63], [1]]}, "nsql": [[" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -1.11195693041], [" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -1.1128613139499999], [" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -1.1128613139499999], [" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -1.1129206810949999], [" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -1.1129206810949999], [" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -1.1129206810949999], [" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -1.1129206810949999], [" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -1.1129206810949999], [" SELECT laps FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT laps FROM w WHERE driver = 'katherine legge'", -4.2688678504699995], [" SELECT COUNT(*) FROM w WHERE driver = 'oriol servia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'katherine legge'", -7.984392157695002]]}, "1233": {"question": "how many times has charmaine sheh won on a variety show?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `winner(s)` LIKE '%charmaine sheh%'", -2.5432223650599997], [" SELECT COUNT(*) FROM w WHERE `winner(s)` LIKE '%charmaine sheh%'", -3.9534079019499995], [" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -5.21473830579], [" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -5.8080664016800005], [" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -6.780207520205], [" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -9.446410583205001], [" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -9.622685483205], [" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -9.936658683205], [" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -10.977284433004], [" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -12.072524233004]]}, "1274": {"question": "charles zwolsman acquired the same number of points as who?", "gold_answer": ["Dan Clarke"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": ["<error>"]}, "nsql": [[" SELECT points FROM w WHERE driver = 'charles zwolsman'", -1.72500863408], [" SELECT points FROM w WHERE driver = 'charles zwolsman'", -1.72500863408], [" SELECT points FROM w WHERE driver = 'charles zwolsman'", -1.72500863408], [" SELECT SUM(points) FROM w WHERE driver = 'charles zwolsman'", -2.4633403273399996], [" SELECT points FROM w WHERE driver = 'charles zwolsman'", -3.28734630556], [" SELECT points FROM w WHERE driver = 'charles zwolsman'", -3.28734630556], [" SELECT points FROM w WHERE driver = 'charles zwolsman'", -3.28734630556], [" SELECT points FROM w WHERE driver = 'charles zwolsman'", -3.28734630556], [" SELECT points FROM w WHERE driver = 'charles zwolsman'", -5.031582436200001], [" SELECT SUM(points) FROM w WHERE driver = 'charles zwolsman'\n\"\"\"", -11.883797275147]]}, "15": {"question": "does december or january have more snow days?", "gold_answer": ["January"], "pred_answer": {"0": [["9.1; (48.4)"], ["9.1; (48.4)"], ["9.1; (48.4)"], "<error>", "<error>", [39, 21, 15, 9, 0, 14, 0, 0, 0, 0], [39, 21, 15, 9, 0, 14, 0, 0, 0, 0], [0], [0], [39, 21, 15, 9, 0, 14, 0, 0, 0, 0]], "1": [["8.2; (46.8)"], ["8.2; (46.8)"], ["8.2; (46.8)"], "<error>", "<error>", [38, 20, 14, 8, 0, 16, 0, 0, 0, 0], [38, 20, 14, 8, 0, 16, 0, 0, 0, 0], [0], [0], [38, 20, 14, 8, 0, 16, 0, 0, 0, 0]]}, "nsql": [[" SELECT `dec` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'\nNeuralSQL2: SELECT `jan` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'", -3.6472938984399996], [" SELECT `dec` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'\nNeuralSQL2: SELECT `jan` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'", -3.651008995213999], [" SELECT `dec` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'\nNeuralSQL2: SELECT `jan` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'", -3.651008995213999], [" SELECT CAST(SUBSTR(dec, 1, INSTR(dec, ';') - 1) AS INT)\nNeuralSQL2: SELECT CAST(SUBSTR(jan, 1, INSTR(jan, ';') - 1) AS INT)", -6.297444907984], [" SELECT CAST(SUBSTR(dec, 1, INSTR(dec, ';') - 1) AS INT)\nNeuralSQL2: SELECT CAST(SUBSTR(jan, 1, INSTR(jan, ';') - 1) AS INT)", -6.297444907984], [" SELECT CAST(SUBSTR(`dec`, 1, INSTR(`dec`, ';') - 1) AS INT) FROM w\nNeuralSQL2: SELECT CAST(SUBSTR(`jan`, 1, INSTR(`jan`, ';') - 1) AS INT) FROM w", -7.813346856156], [" SELECT CAST(SUBSTR(`dec`, 1, INSTR(`dec`, ';') - 1) AS INT) FROM w\nNeuralSQL2: SELECT CAST(SUBSTR(`jan`, 1, INSTR(`jan`, ';') - 1) AS INT) FROM w", -8.8457867148], [" SELECT COUNT(*) FROM w WHERE dec LIKE '%snow%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE jan LIKE '%snow%'", -11.132601205101999], [" SELECT COUNT(*) FROM w WHERE dec LIKE '%snow%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE jan LIKE '%snow%'", -11.650809705101999], [" SELECT CAST(SUBSTR(dec, 1, INSTR(dec, ';') - 1) AS INT) FROM w\nNeuralSQL2: SELECT CAST(SUBSTR(jan, 1, INSTR(jan, ';') - 1) AS INT) FROM w", -11.752574368994999]]}, "56": {"question": "what is the only train to reach a top speed of 500 or more?", "gold_answer": ["Transrapid SMT"], "pred_answer": {"0": [[7], [0], [0], [0], [0], [0], [1], [7], [7], [7]], "1": ["<error>", "<error>"], "2": [[7], [7]], "3": ["<error>", "<error>"], "4": [[7], [7]], "5": ["<error>", "<error>"], "6": [[7], [7]], "7": ["<error>", "<error>"], "8": [[7], [7]], "9": ["<error>", "<error>"], "10": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500", -3.0027331744000003], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` LIKE '%500%'", -4.1496399535199995], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` LIKE '%500%'", -4.14989950647], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` LIKE '%500%'", -4.155474790123998], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` LIKE '%500%'", -5.162422985399999], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` LIKE '%500%'", -5.162422985399999], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)'", -7.644499476949999], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= '500'", -12.95281140454], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ2: there are {how many = a2} train to reach a top speed of 500 or more.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ3: there are {how many = a3} train to reach a top speed of 500 or more.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ4: there are {how many = a4} train to reach a top speed of 500 or more.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ5: there are {how many = a5} train to reach a top speed of 500 or more.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ6: there are {how many = a6} train to reach a top speed of 500 or more.\nNeuralSQL6: SELECT COUNT(", -15.44847764612602], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ2: there are {how many = a2} train to reach a top speed of 500 or more.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ3: there are {how many = a3} train to reach a top speed of 500 or more.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ4: there are {how many = a4} train to reach a top speed of 500 or more.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ5: there are {how many = a5} train to reach a top speed of 500 or more.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` >= 500\nQ6: there are {how many = a6} train to reach a top speed of 500 or more.\nNeuralSQL6: SELECT COUNT(", -15.45046694382201]]}, "97": {"question": "what is the total number of times johan bryneel's name appears on all of these lists?", "gold_answer": ["6"], "pred_answer": {"0": [[5], [5], [5], [5], "<error>", [5], [5], [5], "<error>", [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `best manager` = 'johan bruyneel'", -4.64208915962], [" SELECT COUNT(*) FROM w WHERE best manager = 'johan bruyneel'", -5.66130732357], [" SELECT COUNT(*) FROM w WHERE best manager = 'johan bruyneel' OR crystal bicycle\\n(best professional cyclist) = 'johan bruyneel' OR best young rider = 'johan bruyneel' OR crystal drop of sweat\\n(best helper) = 'johan bruyneel'", -7.0761804596700015], [" SELECT COUNT(*) FROM w WHERE best manager = 'johan bruyneel' OR crystal bicycle\\n(best professional cyclist) = 'johan bruyneel' OR best young rider = 'johan bruyneel' OR crystal drop of sweat\\n(best helper) = 'johan bruyneel'", -7.081375578910997], [" SELECT COUNT(*) FROM w WHERE best manager = 'johan bruyneel' OR crystal bicycle = 'johan bruyneel' OR best young rider = 'johan bruyneel'", -8.310801913139999], [" SELECT COUNT(*) FROM w WHERE `best manager` = 'johan bruyneel' OR `crystal bicycle\\n(best professional cyclist)` = 'johan bruyneel' OR `best young rider` = 'johan bruyneel' OR `crystal drop of sweat\\n(best helper)` = 'johan bruyneel'", -9.705608899377], [" SELECT COUNT(*) FROM w WHERE `best manager` = 'johan bruyneel' OR `best young rider` = 'johan bruyneel' OR `crystal bicycle\\n(best professional cyclist)` = 'johan bruyneel'", -10.334753795361003], [" SELECT COUNT(*) FROM w WHERE `best manager` = 'johan bruyneel' OR `crystal drop of sweat\\n(best helper)` = 'johan bruyneel' OR `best young rider` = 'johan bruyneel' OR `crystal bicycle\\n(best professional cyclist)` = 'johan bruyneel'", -10.992661108276], [" SELECT COUNT(*) FROM w WHERE `best manager` = 'johan bruyneel' OR `best young rider` = 'johan bruyneel' OR `crystal bicycle` = 'johan bruyneel'", -12.972226671595003], [" SELECT COUNT(*) FROM w WHERE `best manager` LIKE '%johan bruyneel%' OR `crystal bicycle\\n(best professional cyclist)` LIKE '%johan bruyneel%' OR `best young rider` LIKE '%johan bruyneel%' OR `crystal drop of sweat\\n(best helper)` LIKE '%johan bruyneel%'", -16.398096589754005]]}, "100": {"question": "japan and france each won how many gold medals?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT SUM(gold) FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation = 'france'", -2.0715116619], [" SELECT SUM(gold) FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation = 'france'", -2.0715778346000002], [" SELECT SUM(gold) FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation = 'france'", -2.0718560079499997], [" SELECT SUM(gold) FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation = 'france'", -2.0730758962599998], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -8.117633748480001], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -8.417572147929999], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -8.78059206343], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -9.22934233793], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -10.03192232793], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -11.001011358480001]]}, "121": {"question": "what's the number of schools represented in the table?", "gold_answer": ["28"], "pred_answer": {"0": [[28], [28], [28], [28], [28], [28], [28], [28], [28], [28]]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.26408563684], [" SELECT COUNT(*) FROM w", -2.26408563684], [" SELECT COUNT(*) FROM w", -3.16774263624], [" SELECT COUNT(DISTINCT school) FROM w", -5.3044378309499995], [" SELECT COUNT(DISTINCT school) FROM w", -5.3044378309499995], [" SELECT COUNT(DISTINCT school) FROM w", -5.3044378309499995], [" SELECT COUNT(DISTINCT school) FROM w", -5.3044378309499995], [" SELECT COUNT(DISTINCT school) FROM w", -5.3044378309499995], [" SELECT COUNT(DISTINCT school) FROM w", -6.98433963095], [" SELECT COUNT(DISTINCT school) FROM w", -8.12281293095]]}, "138": {"question": "how many teams played on february 14th, 1976?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT home team) FROM w WHERE `date` LIKE '1976-02-14%'", -5.064782395179], [" SELECT COUNT(DISTINCT(home team)) FROM w WHERE `date` LIKE '1976-02-14%'", -5.845691388215], [" SELECT COUNT(DISTINCT `home team`) FROM w WHERE `date` = '1976-02-14 00:00:00'", -5.936548658369001], [" SELECT COUNT(DISTINCT(home team)) FROM w WHERE `date` = '1976-02-14 00:00:00'", -6.138638593264997], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-02-14%'", -9.167625356265], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-02-14%'", -9.299082278264999], [" SELECT COUNT(DISTINCT(home team)) FROM w WHERE date = '1976-02-14 00:00:00'", -10.160246104504001], [" SELECT COUNT(DISTINCT home team) FROM w WHERE `date` = '1976-02-14 00:00:00'", -10.513285696805], [" SELECT COUNT(DISTINCT home team) FROM w WHERE date = '1976-02-14 00:00:00'", -10.761398465879], [" SELECT COUNT(DISTINCT home team) FROM w WHERE date = '1976-02-14 00:00:00'", -10.947644947079]]}, "142": {"question": "what are the number of kurt maschler awards helen oxenbury has won?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -1.7088314385999999], [" SELECT COUNT(*) FROM w WHERE illustrator = 'helen oxenbury'", -2.7490615345999996]]}, "179": {"question": "how many of these monarchs died before the age of 65?", "gold_answer": ["4"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [5], [4], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE death < '65'", -5.12833486739], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(death, INSTR(death, 'aged') + 5, LENGTH(death) - (INSTR(death, 'aged') + 5)) AS INT) < 65", -7.16684624182], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(death, INSTR(death, 'aged ') + 5, LENGTH(death) - (INSTR(death, 'aged ') + 5)) AS INT)) < 65", -8.390045826362], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(death, LENGTH(death) - 3, 4) AS INT) - CAST(SUBSTR(birth, LENGTH(birth) - 3, 4) AS INT)) < 65", -9.093117967681], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(death, INSTR(death, 'aged') + 5, LENGTH(death) - (INSTR(death, 'aged') + 5)) AS INT)) < 65", -9.126498954601999], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(death, INSTR(death, ';') + 1, LENGTH(death) - (INSTR(death, ';') + 1)) AS INT)) < 65", -9.149441091512001], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(death, LENGTH(death) - 4, 5) AS INT) - CAST(SUBSTR(birth, LENGTH(birth) - 4, 5) AS INT) < 65", -9.604604974557999], [" SELECT COUNT(*) FROM w WHERE death LIKE '%-%-%' AND CAST(SUBSTR(death, LENGTH(death) - 4, 4) AS INT) - CAST(SUBSTR(birth, LENGTH(birth) - 4, 4) AS INT) < 65", -13.884581218518], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(birth, 1, INSTR(birth, ';') - 1) AS INT) + 65) > CAST(SUBSTR(death, 1, INSTR(death, ';') - 1) AS INT)", -15.296928384359997], [" SELECT COUNT(*) FROM w WHERE SUBSTR(death, INSTR(death, '; ') + 2, LENGTH(death) - (INSTR(death, '; ') + 2)) < 65", -15.59203329905]]}, "183": {"question": "did brazil score more goals against the soviet union or portugal in 1982?", "gold_answer": ["Portugal"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [2], [2], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [3], [3], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opposition = 'portugal'", -3.42125860965], [" SELECT COUNT(*) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opposition = 'portugal'", -3.42125860965], [" SELECT COUNT(*) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opposition = 'portugal'", -3.42125860965], [" SELECT COUNT(*) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opposition = 'portugal'", -3.42125860965], [" SELECT COUNT(*) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opposition = 'portugal'", -3.42125860965], [" SELECT COUNT(*) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opposition = 'portugal'", -3.42125860965], [" SELECT COUNT(*) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opposition = 'portugal'", -3.43249283206], [" SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) FROM w WHERE opposition = 'portugal'", -4.4093206955249995], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE opposition = 'portugal'", -12.751809059638997], [" SELECT COUNT(DISTINCT SUBSTR(SUBSTR(score, 1, INSTR(score,'-') - 1),1,1)) FROM w WHERE opposition = 'soviet union'\nNeuralSQL2: SELECT COUNT(DISTINCT SUBSTR(SUBSTR(score, 1, INSTR(score,'-') - 1),1,1)) FROM w WHERE opposition = 'portugal'", -16.097118446722998]]}, "224": {"question": "how many total titles were published by walker?", "gold_answer": ["5"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.618553540945], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.618553540945], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.618553540945], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.618577265445], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.6189030816449999], [" SELECT COUNT(DISTINCT(title)) FROM w WHERE publisher = 'walker'", -3.1703991801450004], [" SELECT COUNT(*) FROM w WHERE publisher = 'walker'", -4.011304807365001], [" SELECT COUNT(*) FROM w WHERE publisher = 'walker'", -5.946414042311001], [" SELECT COUNT(*) FROM w WHERE publisher = 'walker'", -10.643617168705], [" SELECT COUNT(*) FROM w WHERE publisher = 'walker'", -11.161803000311]]}, "265": {"question": "how many teams had more points than silex?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -1.6862698074000004], [" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -1.6862698074000004], [" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -1.6862698074000004], [" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -1.6862698074000004], [" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -1.6868877025200004], [" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -1.6877376985099999], [" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -1.6877503245099996], [" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -3.98080393642], [" SELECT COUNT(*) FROM w WHERE points > (SELECT points FROM w WHERE team = 'silex')", -3.98080393642], [" SELECT COUNT(*) FROM w WHERE team = 'silex'", -5.07485051415]]}, "306": {"question": "how many silver medals did kenya earn?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'kenya'", -0.88007472546], [" SELECT silver FROM w WHERE nation = 'kenya'", -0.88007472546], [" SELECT silver FROM w WHERE nation = 'kenya'", -0.88007472546], [" SELECT silver FROM w WHERE nation = 'kenya'", -0.88007472546], [" SELECT silver FROM w WHERE nation = 'kenya'", -0.88007472546], [" SELECT silver FROM w WHERE nation = 'kenya'", -0.88007472546], [" SELECT silver FROM w WHERE nation = 'kenya'", -0.88007472546], [" SELECT silver FROM w WHERE nation = 'kenya'", -0.88007472546], [" SELECT silver FROM w WHERE nation = 'kenya'", -11.568001677060002], [" SELECT silver FROM w WHERE nation = 'kenya'", -14.12047101706]]}, "347": {"question": "who had more silver medals, cuba or brazil?", "gold_answer": ["Cuba"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": ["<error>"]}, "nsql": [[" SELECT `silver` FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT `silver` FROM w WHERE nation = 'brazil'", -3.6877828394600005], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'", -5.643415747130001], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'", -8.455219623129999], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'", -8.55012715818], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'", -8.58328141513], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'", -8.87673957968], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'", -8.99260337968], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'", -9.02359347968], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'", -9.164578015130001], [" SELECT silver FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'brazil'\n```", -9.635608111029999]]}, "388": {"question": "by how many chart positions higher did \"revolving door\" peak in the uk compared to the peak position of \"drowning\" in the uk?", "gold_answer": ["27"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "2": ["<error>"]}, "nsql": [[" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -6.422236707615], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -9.120364689615], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -9.416155289615], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -9.509343289615], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -9.557846489615], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -10.450788389615], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -10.946038589615], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = \"revolving door\"\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = \"drowning\"\n```", -11.19295151327], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -11.501612089615], [" SELECT `peak chart positions\\nuk` FROM w WHERE title = 'revolving door'\nNeuralSQL2: SELECT `peak chart positions\\nuk` FROM w WHERE title = 'drowning'", -13.344698289615]]}, "429": {"question": "how many companies are under the united states?", "gold_answer": ["14"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], "<error>"], "1": ["<error>", "<error>", "<error>"], "2": [[6], [10], "<error>"], "3": ["<error>", "<error>", "<error>"], "4": [[12], [3], [12929.545454545454]], "5": ["<error>", "<error>", "<error>"], "6": [[4], "<error>", "<error>"], "7": ["<error>", "<error>"], "8": [[22], "<error>"], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '%united states%'", -4.305103516340001], [" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '%united states%'", -4.30582610354], [" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '%united states%'", -4.50130740487], [" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '%united states%'", -4.50357059217], [" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '%united states%'", -4.50357059217], [" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '%united states%'", -4.50357059217], [" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '% united states%'", -7.116139965409999], [" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '%united states%'\nQ2: {how many = a2} companies have a arms sales as share of company\u2019s total sales (%) larger than 80.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` > 80\nQ3: {how many = a3} companies have a arms sales as share of company\u2019s total sales (%) smaller than 70.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 70\nQ4: {how many = a4} companies have a arms sales as share of company\u2019s total sales (%) between 70 and 80.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` BETWEEN 70 AND 80\nQ5: {how many = a5} companies have a arms sales as share of company\u2019s total sales (%) larger than 90.\nNeuralSQL5: SELECT COUNT(*) FROM w", -36.747105322938715], [" SELECT COUNT(*) FROM w WHERE `company (country)` LIKE '%united states%'\nQ2: {how many = a2} records have a arms sales as share of company\u2019s total sales (%) greater than 70.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` > 70\nQ3: {how many = a3} records have a arms sales as share of company\u2019s total sales (%) greater than 70 and less than 80.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` > 70 AND `arms sales as share of company\u2019s total sales (%)` < 80\nQ4: the number of companies with a arms sales as share of company\u2019s total sales (%) greater than 70 and less than 80 is {how many = a4}.\nNeuralSQL4: SELECT COUNT(DISTINCT `company (country)`) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` > 70 AND `arms sales as share of company\u2019", -41.09682899582702], [" SELECT COUNT(DISTINCT company) FROM w WHERE company LIKE '%united states%'\nQ2: {how many = a2} records are under the united states.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE company LIKE '%united states%'\nQ3: the average arms sales in 2011 is {how many = a3}.\nNeuralSQL3: SELECT AVG(`2011 arms sales (us$ m.)`) FROM w\nQ4: the average arms sales in 2011 of the companies under the united states is {how many = a4}.\nNeuralSQL4: SELECT AVG(`2011 arms sales (us$ m.)`) FROM w WHERE company LIKE '%united states%'\nQ5: the average arms sales in 2011 of the companies under the united states is {how many = a5}.\nNeuralSQL5: SELECT AVG(`2011 arms sales (us$ m.)`) FROM w WHERE company LIKE '%united states%'\nQ6: the average arms sales in 2011 of the companies under the united states is {how many = a6}.\nNeuralSQL6: SELECT AVG(`2011", -42.19995371827601]]}, "470": {"question": "how many voronezh radars are in kaliningrad or in krasnodar?", "gold_answer": ["2"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%'", -2.4353862402099997], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%'", -2.4353862402099997], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%' AND type LIKE '%voronezh%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%' AND type LIKE '%voronezh%'", -3.8132900098000007], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%' AND type LIKE '%voronezh%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%' AND type LIKE '%voronezh%'", -3.8132900098000007], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%' AND type LIKE '%voronezh%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%' AND type LIKE '%voronezh%'", -3.8132900098000007], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%' AND type LIKE '%voronezh%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%' AND type LIKE '%voronezh%'", -3.821958242175001], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%' AND type LIKE 'voronezh%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%' AND type LIKE 'voronezh%'", -8.383404887184001], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%' AND type LIKE 'voronezh%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%' AND type LIKE 'voronezh%'", -10.638323606184002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%' AND type LIKE 'voronezh%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%' AND type LIKE 'voronezh%'", -10.741401006184002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%kaliningrad%' AND type LIKE 'voronezh%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location LIKE '%krasnodar%' AND type LIKE 'voronezh%'", -11.219738644933999]]}, "511": {"question": "how many total laps have been driven in the indy 500?", "gold_answer": ["1130"], "pred_answer": {"0": [[2260], [2260], [2260], [2260], [2260], [2260], [2260], [2260], [2260], [2260]]}, "nsql": [[" SELECT SUM(laps) FROM w", -1.175079855392], [" SELECT SUM(laps) FROM w", -1.175079855392], [" SELECT SUM(laps) FROM w", -1.175079855392], [" SELECT SUM(laps) FROM w", -1.175079855392], [" SELECT SUM(laps) FROM w", -1.175079855392], [" SELECT SUM(laps) FROM w", -1.175079855392], [" SELECT SUM(laps) FROM w", -1.175079855392], [" SELECT SUM(laps) FROM w", -1.175079855392], [" SELECT SUM(laps) FROM w", -2.49124799211], [" SELECT SUM(laps) FROM w", -2.49336821211]]}, "552": {"question": "how many nations earned at least ten bronze medals?", "gold_answer": ["9"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE bronze >= 10", -1.2123949797069997], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -1.2123949797069997], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -1.2123949797069997], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -1.2123949797069997], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -1.2123949797069997], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -1.2123949797069997], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -1.2123949797069997], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -1.2123949797069997], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -3.2458445182999998], [" SELECT COUNT(*) FROM w WHERE bronze >= 10", -3.6034627674799995]]}, "593": {"question": "how many teams had a manner of departure due to there contract being terminated?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -1.6565600792600002], [" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -1.6565600792600002], [" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -1.6565600792600002], [" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -1.6565600792600002], [" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -1.6565600792600002], [" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -1.6565600792600002], [" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -2.63775266826], [" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -2.63775266826], [" SELECT COUNT(*) FROM w WHERE `manner of departure` = 'contract terminated'", -2.63775266826], [" SELECT COUNT(DISTINCT team) FROM w WHERE `manner of departure` = 'contract terminated'", -5.104371825694001]]}, "634": {"question": "what is the total number of preserved hunslet narrow gauge locomotives currently located in ffestiniog railway", "gold_answer": ["554"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE current location = 'ffestiniog railway'", -2.1948637759149996], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -3.5922864984409997], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -3.5922864984409997], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -3.592291006408], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -3.592291006408], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -5.626753875387999], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -5.626753875387999], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -5.626753875387999], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -5.626753875387999], [" SELECT COUNT(*) FROM w WHERE `current location` = 'ffestiniog railway'", -7.705273991261]]}, "675": {"question": "how many of the schools had at least 500 students enrolled in the 2010-2011 and 2011-2012 season?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>", "<error>"], "2": [[5], [5]], "3": ["<error>", "<error>"], "4": [[4], [3]], "5": ["<error>", "<error>"], "6": ["<error>", [0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500", -3.8530632362899997], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500", -3.8530632362899997], [" SELECT COUNT(DISTINCT school) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500", -4.286262580686], [" SELECT COUNT(*) FROM w WHERE enrollment (2010-11 & 2011\u201312) >= 500", -5.21277764849], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500", -5.546561645754], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500", -8.445670548754], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500", -8.999164648754], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500", -9.512275748754], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500\nQ2: {how many = a2} schools had at least 500 students enrolled in the 2010-2011 and 2011-2012 season and are in class 4.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500 AND `primary mshsaa class*` = 4\nQ3: {how many = a3} schools had at least 500 students enrolled in the 2010-2011 and 2011-2012 season and are in class 4 and are in the football class 4.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500 AND `primary mshsaa class*` = 4 AND `football class` = 4\nQ4: {how many = a4} schools had at least 500 students enrolled in the 2010-2011 and 2011-2012 season and are in class 4 and are in the football class 4 and are in buchanan county.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE", -27.56366441809101], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` >= 500\nQ2: {how many = a2} schools are in the class 4.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `primary mshsaa class*` = 4\nQ3: {how many = a3} schools are in the class 3.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `primary mshsaa class*` = 3\nQ4: {how many = a4} schools are in the class 2.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `primary mshsaa class*` = 2\nQ5: {how many = a5} schools are in the class 1.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `primary mshsaa class*` = 1\nQ6: {how many = a6} schools are in the class 1 and class 2.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `primary mshsaa class*` = 1 OR `primary mshsaa class", -30.16502836764781]]}, "716": {"question": "what division were they in the most, section 3 or 2?", "gold_answer": ["3"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.20623147037], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.20623147037], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.20623147037], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.20623147037], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.20623147037], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.20623147037], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.20623147037], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.2069613338799998], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.2069613338799998], [" SELECT COUNT(*) FROM w WHERE section = 'section 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE section = 'section 2'", -1.2069613338799998]]}, "757": {"question": "how many contestants were from thailand?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -2.9727399775700003], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -2.9728936598700004], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -4.9863971955], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -4.987849559504], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -7.1311921335], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -7.591227284504001], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -8.578630004504], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -9.011705603500001], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'", -9.9132756435], [" SELECT COUNT(*) FROM w WHERE nationality = 'thailand'\n```", -15.767824283469999]]}, "760": {"question": "how many kingdoms are listed?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.2994842733700005], [" SELECT COUNT(*) FROM w", -2.8246706163], [" SELECT COUNT(DISTINCT `name of kingdom`) FROM w", -3.163424971522999], [" SELECT COUNT(DISTINCT `name of kingdom`) FROM w", -3.163424971522999], [" SELECT COUNT(DISTINCT `name of kingdom`) FROM w", -3.163424971522999], [" SELECT COUNT(DISTINCT `name of kingdom`) FROM w", -3.163424971522999], [" SELECT COUNT(DISTINCT name of kingdom) FROM w", -4.238389010523], [" SELECT COUNT(DISTINCT(name of kingdom)) FROM w", -4.635637770523001], [" SELECT COUNT(DISTINCT name of kingdom) FROM w", -6.932387908103], [" SELECT COUNT(DISTINCT name of kingdom) FROM w", -6.937319808103]]}, "781": {"question": "what is the total number of title?", "gold_answer": ["38"], "pred_answer": {"0": [[38], [2], [36], [36], [36], [2], "<error>", [36], [2], [38]], "1": ["<error>"], "2": [[38]], "3": ["<error>"], "4": [[38]], "5": ["<error>"], "6": [[38]], "7": ["<error>"], "8": [[38]], "9": ["<error>"], "10": [[38]]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.3044374847799998], [" SELECT COUNT(DISTINCT title (english translation)) FROM w", -3.9687420554900004], [" SELECT COUNT(DISTINCT title (latin)) FROM w", -4.042262518144999], [" SELECT COUNT(DISTINCT title (latin)) FROM w", -4.042262518144999], [" SELECT COUNT(DISTINCT title (latin)) FROM w", -4.042262518144999], [" SELECT COUNT(DISTINCT `title (english translation)`) FROM w", -5.030167764819999], [" SELECT COUNT(DISTINCT title) FROM w", -5.8737656955799995], [" SELECT COUNT(DISTINCT title (latin)) FROM w", -6.142963540245], [" SELECT COUNT(DISTINCT(title (english translation))) FROM w", -7.38079470752], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} title in English.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `title (english translation)` IS NOT NULL\nQ3: {how many = a3} title in Latin.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `title (latin)` IS NOT NULL\nQ4: {how many = a4} title in English and Latin.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `title (latin)` IS NOT NULL AND `title (english translation)` IS NOT NULL\nQ5: {how many = a5} title in English or Latin.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `title (latin)` IS NOT NULL OR `title (english translation)` IS NOT NULL\nQ6: {how many = a6} title in English and Latin and subject.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `title (latin)` IS NOT NULL AND `title (english translation)` IS NOT NULL AND subject IS NOT NULL\n", -34.353636645939986]]}, "798": {"question": "how many games did the wildcats play in daytona beach, fl?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE site LIKE '%daytona beach, fl%'", -2.3861983807100002], [" SELECT COUNT(*) FROM w WHERE site LIKE '%daytona beach, fl%'", -2.3861983807100002], [" SELECT COUNT(*) FROM w WHERE site LIKE '%daytona beach, fl%'", -2.3861983807100002], [" SELECT COUNT(*) FROM w WHERE site LIKE '%daytona beach, fl%'", -2.8918761827100004], [" SELECT COUNT(*) FROM w WHERE site LIKE '%daytona beach, fl%'", -2.8918761827100004], [" SELECT COUNT(*) FROM w WHERE site LIKE '%daytona beach, fl%'", -2.8918761827100004], [" SELECT COUNT(*) FROM w WHERE site LIKE '%daytona beach%'", -3.23902145413], [" SELECT COUNT(*) FROM w WHERE site LIKE '%daytona beach%'", -3.23902145413], [" SELECT COUNT(*) FROM w WHERE site LIKE '% \u2022 daytona beach, fl'", -3.97094759761], [" SELECT COUNT(*) FROM w WHERE site LIKE '% daytona beach, fl'", -5.172408408029999]]}, "802": {"question": "how many stations broadcast with a power of 5kw?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -2.15466987803], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -2.15486868988], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -2.15486868988], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -2.15486868988], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -2.15494630458], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -2.15504587608], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -2.1558831078799994], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -2.1567716718799996], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'", -3.6538518148799994], [" SELECT COUNT(*) FROM w WHERE `power (kw)` = '5 kw'\n```", -14.562750703879999]]}, "839": {"question": "what are the total number of bronze medals sri lanka have earned?", "gold_answer": ["62"], "pred_answer": {"0": [[62], [62], [62], [62], [62], [62], [62], [62], [62], [62]], "1": ["<error>"]}, "nsql": [[" SELECT `bronze` FROM w WHERE nation = 'sri lanka'", -2.90371810437], [" SELECT `bronze` FROM w WHERE nation = 'sri lanka'", -2.91046580887], [" SELECT `bronze` FROM w WHERE nation = 'sri lanka'", -4.86451190837], [" SELECT bronze FROM w WHERE nation = 'sri lanka'", -8.099698476595], [" SELECT bronze FROM w WHERE nation = 'sri lanka'", -8.445213676595], [" SELECT bronze FROM w WHERE nation = 'sri lanka'\n```", -8.58732927702], [" SELECT bronze FROM w WHERE nation = 'sri lanka'", -8.986689676594999], [" SELECT bronze FROM w WHERE nation = 'sri lanka'", -9.583618076595], [" SELECT bronze FROM w WHERE nation = 'sri lanka'", -10.004179276595], [" SELECT bronze FROM w WHERE nation = 'sri lanka'", -10.559908976595]]}, "843": {"question": "what was the total number of goals score in the sri lanka - malaysia game of march 24, 2007?", "gold_answer": ["5"], "pred_answer": {"0": [[1], [0], [1], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT SUM(CAST(score AS INT)) FROM w WHERE date = '2007-03-24 00:00:00'", -5.68115588371], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND venue = 'sugathadasa stadium, colombo, sri lanka'", -8.534348704574002], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND venue = 'sugathadasa stadium, colombo, sri lanka'", -8.832852101783], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND venue = 'sugathadasa stadium, colombo, sri lanka' AND opponent = 'malaysia'", -8.836096645709999], [" SELECT SUM(CAST(REPLACE(score, '\u2013', '-') AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND venue = 'sugathadasa stadium, colombo, sri lanka' AND opponent = 'malaysia'", -9.274036593524002], [" SELECT SUM(CAST(REPLACE(score, '\u2013', '-') AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND opponent = 'malaysia'", -10.358084968310001], [" SELECT SUM(CAST(REPLACE(score, '-', '') AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND venue = 'sugathadasa stadium, colombo, sri lanka' AND opponent = 'malaysia'", -11.204614354533996], [" SELECT SUM(CAST(REPLACE(score, '-', ' ') AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND opponent = 'malaysia'", -13.096736904480002], [" SELECT SUM(CAST(REPLACE(score, '\u2013', '-') AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND opponent = 'malaysia'", -13.727658684480003], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date = '2007-03-24 00:00:00' AND opponent = 'malaysia'", -17.843947650330005]]}, "884": {"question": "how many non-qualifying games did he score in?", "gold_answer": ["1"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition NOT LIKE '%qualifying%'", -3.8108676560500006], [" SELECT COUNT(*) FROM w WHERE competition NOT LIKE '%qualifying%'", -3.8108676560500006], [" SELECT COUNT(*) FROM w WHERE competition NOT LIKE '%qualifying%'", -3.8108676560500006], [" SELECT COUNT(*) FROM w WHERE competition != 'euro 2012 qualifying' AND goal > 0", -4.15003858755], [" SELECT COUNT(*) FROM w WHERE competition != 'euro 2012 qualifying'", -5.48971114705], [" SELECT COUNT(*) FROM w WHERE competition NOT LIKE '%qualifying%' AND goal > 0", -7.2026591764540004], [" SELECT COUNT(*) FROM w WHERE competition NOT LIKE '%qualifying%' AND goal > 0", -10.254958287673], [" SELECT COUNT(*) FROM w WHERE competition NOT LIKE '%qualifying%' AND goal > 0", -10.411689187673002], [" SELECT COUNT(*) FROM w WHERE competition NOT LIKE '%qualifying' AND goal > 0", -11.475353083136001], [" SELECT COUNT(*) FROM w WHERE competition NOT LIKE '%qualifying%' AND goal > 0", -12.008462487673]]}, "925": {"question": "how many total names are there?", "gold_answer": ["116"], "pred_answer": {"0": [[116], [116], [116], [116], [116], [116], [116], [116], [116], [116]], "1": ["<error>"], "2": [[40]], "3": ["<error>"], "4": [[28]], "5": ["<error>"], "6": [[24]], "7": ["<error>"], "8": [[49]], "9": ["<error>"], "10": [[20]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT name) FROM w", -4.225390285164], [" SELECT COUNT(DISTINCT name) FROM w", -4.225390285164], [" SELECT COUNT(DISTINCT name) FROM w", -4.225390285164], [" SELECT COUNT(*) FROM w", -4.30466892079], [" SELECT COUNT(*) FROM w", -4.503363559596], [" SELECT COUNT(DISTINCT name) FROM w", -4.8719974044539995], [" SELECT COUNT(DISTINCT(name)) FROM w", -5.600547736794], [" SELECT COUNT(DISTINCT name) FROM w", -7.427148964303999], [" SELECT COUNT(DISTINCT name) FROM w", -8.058735522164], [" SELECT COUNT(DISTINCT name) FROM w\nQ2: there are {how many = a2} records with a rank_2 larger than 60.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank_2 > 60\nQ3: there are {how many = a3} records with a difference larger than 5.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE difference > 5\nQ4: there are {how many = a4} records with a rank_3 smaller than 25.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE rank_3 < 25\nQ5: there are {how many = a5} records with a rank_2 smaller than 50.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE rank_2 < 50\nQ6: there are {how many = a6} records with a rank_3 larger than 35.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE rank_3 > 35\nQ7: there are {how many = a7} records with a rank_2 larger than 40.\nNeuralSQL7: SELECT C", -51.12278947576096]]}, "966": {"question": "how many nations received more medals than canada?", "gold_answer": ["2"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>", "<error>"], "2": [[3]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[3]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT nation) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'canada')", -4.240171549186001], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'canada')", -5.707041361062], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'canada')", -5.707041361062], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'canada')", -5.707041361062], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'canada')\n```", -7.036334640470001], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'canada')", -7.428419322183], [" SELECT COUNT(DISTINCT nation) FROM w WHERE nation != 'canada' AND total > (SELECT total FROM w WHERE nation = 'canada')", -7.475442398366], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'canada')", -8.105249441906], [" SELECT COUNT(*) FROM w WHERE nation != 'canada' AND total > (SELECT total FROM w WHERE nation = 'canada')", -8.904275354475999], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'canada')\nQ2: {how many = a2} nations have more than 2 gold medals.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold > 2\nQ3: {how many = a3} nations have more than 2 gold medals and received more medals than canada.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE gold > 2 AND total > (SELECT total FROM w WHERE nation = 'canada')\nQ4: {how many = a4} nations have more than 2 gold medals and received more medals than canada and have more than 0 bronze medals.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE gold > 2 AND total > (SELECT total FROM w WHERE nation = 'canada') AND bronze > 0\nQ5: {how many = a5} nations have more than 2 gold medals and received more medals than canada and have more than 0 bronze medals and have more than 0 silver medals.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE gold > 2 AND total > (SELECT total FROM", -42.11239045102201]]}, "1007": {"question": "did romney earn more or less votes than obama did in alameda county?", "gold_answer": ["less"], "pred_answer": {"0": [[108182], [108182], [108182], [108182], [108182], [108182], [108182], [108182], [108182], [108182]], "1": [[469684], [469684], [469684], [469684], [469684], [469684], [469684], [469684], [469684], [469684]]}, "nsql": [[" SELECT `votes_2` FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT `votes` FROM w WHERE county = 'alameda'", -2.5212441719800003], [" SELECT `votes_2` FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT `votes` FROM w WHERE county = 'alameda'", -2.5225189943299995], [" SELECT `votes_2` FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT `votes` FROM w WHERE county = 'alameda'", -2.52617994762], [" SELECT `votes_2` FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT `votes` FROM w WHERE county = 'alameda'", -2.5435003434099994], [" SELECT `votes_2` FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'alameda'", -3.20001169043], [" SELECT `votes_2` FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'alameda'", -3.20001169043], [" SELECT `votes_2` FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'alameda'", -3.209515039689999], [" SELECT votes_2 FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'alameda'", -5.889407113124999], [" SELECT votes_2 FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT votes FROM w WHERE county = 'alameda'", -9.20020317501], [" SELECT SUM(votes_2) FROM w WHERE county = 'alameda'\nNeuralSQL2: SELECT SUM(votes) FROM w WHERE county = 'alameda'", -11.195369397506001]]}, "1048": {"question": "how many games more than chamaco valaguez did sangre chicana win?", "gold_answer": ["0"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -8.977011655396], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -9.074950855396], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -9.452980455396], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -9.661953255396], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -9.867521055396], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -10.153797255396], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -10.596002855396], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -10.599529655396001], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -11.449449455396], [" SELECT COUNT(*) FROM w WHERE winner = 'sangre chicana'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'chamaco valaguez'", -12.098473355395999]]}, "1089": {"question": "spicy pony released a total of three games; their game, \"american mcgee's crooked house\" was released on which platforms?", "gold_answer": ["iPad, iPhone, iPod"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>", "<error>", [1], "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE developer = 'spicy pony'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'american mcgee's crooked house'", -4.3102490894339995], [" SELECT COUNT(DISTINCT title) FROM w WHERE developer = 'spicy pony'\nNeuralSQL2: SELECT COUNT(DISTINCT platforms) FROM w WHERE title = 'american mcgee's crooked house'", -4.890495479270938], [" SELECT COUNT(*) FROM w WHERE developer = \"spicy pony\"\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = \"american mcgee's crooked house\"", -6.432503387589999], [" SELECT COUNT(*) FROM w WHERE developer = 'spicy pony'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'american mcgee's crooked house' AND platforms LIKE '% %'", -7.6927340075099995], [" SELECT COUNT(*) FROM w WHERE developer = 'spicy pony'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'american mcgee's crooked house' AND platforms LIKE '% %'", -7.6933612698100005], [" SELECT COUNT(*) FROM w WHERE developer = 'spicy pony'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'american mcgee's crooked house' AND platforms LIKE '%platforms%'", -7.735458834720001], [" SELECT COUNT(*) FROM w WHERE developer = 'spicy pony'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'american mcgee's crooked house' AND platforms LIKE '% - %'", -8.07067530791], [" SELECT COUNT(DISTINCT title) FROM w WHERE developer = \"spicy pony\"\nNeuralSQL2: SELECT COUNT(DISTINCT platforms) FROM w WHERE title = 'american mcgee's crooked house'", -8.50742474736467], [" SELECT COUNT(DISTINCT title) FROM w WHERE developer = 'spicy pony'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'american mcgee's crooked house'", -9.375676276994], [" SELECT COUNT(DISTINCT title) FROM w WHERE developer = 'spicy pony'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'american mcgee's crooked house' AND platforms LIKE '%platforms%'", -12.561937549856]]}, "1130": {"question": "how many players in the 2009 world matchplay won at least 30 legs?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.570784419444], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.5715456048839997], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.571967541004], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.571967541004], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.571967541004], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.571967541004], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.572078373914], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.5720899949740001], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.5720899949740001], [" SELECT COUNT(*) FROM w WHERE `legs won` >= 30", -1.5720899949740001]]}, "1171": {"question": "how many riders manufacturer is honda?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.0023757558699997], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.0023757558699997], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.0023757558699997], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.0023757558699997], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.21638031282], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.21638031282], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.21638031282], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.21638031282], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.21638031282], [" SELECT COUNT(*) FROM w WHERE manufacturer = 'honda'", -3.21638031282]]}, "1212": {"question": "how many winners were there before bruno victoria lost?", "gold_answer": ["3"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [19], [0], [10]], "1": ["<error>", "<error>"], "2": [[0]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[3]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT winner) FROM w WHERE date < (SELECT date FROM w WHERE loser = 'bruno victoria')", -3.3906596074400004], [" SELECT COUNT(DISTINCT winner) FROM w WHERE date < (SELECT date FROM w WHERE loser = 'bruno victoria')", -3.3906596074400004], [" SELECT COUNT(DISTINCT winner) FROM w WHERE date < (SELECT date FROM w WHERE loser = 'bruno victoria')", -3.3961444491900004], [" SELECT COUNT(DISTINCT winner) FROM w WHERE date < (SELECT date FROM w WHERE loser = 'bruno victoria')", -3.3961444491900004], [" SELECT COUNT(DISTINCT winner) FROM w WHERE date < (SELECT date FROM w WHERE loser = 'bruno victoria')", -3.3962089105239994], [" SELECT COUNT(DISTINCT winner) FROM w WHERE date < (SELECT date FROM w WHERE loser = 'bruno victoria')", -3.3962089105239994], [" SELECT COUNT(DISTINCT winner) FROM w WHERE date < (SELECT date FROM w WHERE loser = 'bruno victoria')", -6.252136857310001], [" SELECT COUNT(*) FROM w WHERE winner != 'bruno victoria'\n```", -9.32699547188], [" SELECT COUNT(*) FROM w WHERE winner = 'bruno victoria'", -13.375831249396], [" SELECT COUNT(DISTINCT winner) FROM w WHERE date < (SELECT date FROM w WHERE loser = 'bruno victoria')\nQ2: {how many = a2} winners were there after bruno victoria lost.\nNeuralSQL2: SELECT COUNT(DISTINCT winner) FROM w WHERE date > (SELECT date FROM w WHERE loser = 'bruno victoria')\nQ3: {how many = a3} winners were there in the same year as bruno victoria lost.\nNeuralSQL3: SELECT COUNT(DISTINCT winner) FROM w WHERE SUBSTR(date, 1, 4) = (SELECT SUBSTR(date, 1, 4) FROM w WHERE loser = 'bruno victoria')\nQ4: {how many = a4} winners were there in the same year as bruno victoria lost.\nNeuralSQL4: SELECT COUNT(DISTINCT winner) FROM w WHERE SUBSTR(date, 1, 4) = (SELECT SUBSTR(date, 1, 4) FROM w WHERE loser = 'bruno victoria')\nQ5: {how many = a5} winners", -30.642413169843994]]}, "1253": {"question": "how many german women won medals?", "gold_answer": ["5"], "pred_answer": {"0": [[0], [0], [5], [0], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold_2 LIKE '%(ger)%' OR silver_2 LIKE '%(ger)%' OR bronze_2 LIKE '%(ger)%'", -4.145868554150001], [" SELECT COUNT(*) FROM w WHERE gold_2 LIKE '%ger%' OR silver_2 LIKE '%ger%' OR bronze_2 LIKE '%ger%'", -8.70503418931], [" SELECT COUNT(*) FROM w WHERE (gold LIKE '%(ger)%' OR silver LIKE '%(ger)%' OR bronze LIKE '%(ger)%')", -8.747639488339999], [" SELECT COUNT(*) FROM w WHERE gold_2 LIKE '%ger%' OR silver_2 LIKE '%ger%' OR bronze_2 LIKE '%ger%'", -8.91910864301], [" SELECT COUNT(*) FROM w WHERE (gold LIKE '%(ger)%' OR silver LIKE '%(ger)%' OR bronze LIKE '%(ger)%')", -9.817617488339998], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(ger)%' OR silver LIKE '%(ger)%' OR bronze LIKE '%(ger)%'", -10.562432766539999], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(ger)%' OR silver LIKE '%(ger)%' OR bronze LIKE '%(ger)%'", -10.810202885819997], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(ger)%' OR silver LIKE '%(ger)%' OR bronze LIKE '%(ger)%'", -11.202429366539999], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(ger)%' OR silver LIKE '%(ger)%' OR bronze LIKE '%(ger)%'", -11.227999266539998], [" SELECT COUNT(DISTINCT gold) FROM w WHERE gold LIKE '%(ger)%' OR gold_2 LIKE '%(ger)%' OR silver LIKE '%(ger)%' OR silver_2 LIKE '%(ger)%' OR bronze LIKE '%(ger)%' OR bronze_2 LIKE '%(ger)%'", -12.601575847661998]]}, "35": {"question": "how many draft picks were between frank tripucka and dale armstrong?", "gold_answer": ["10"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [10], [10], [12], [12], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE pick BETWEEN (SELECT pick FROM w WHERE player = 'frank tripucka') AND (SELECT pick FROM w WHERE player = 'dale armstrong')", -4.046390709750001], [" SELECT COUNT(*) FROM w WHERE pick BETWEEN (SELECT pick FROM w WHERE player = 'frank tripucka') AND (SELECT pick FROM w WHERE player = 'dale armstrong')", -4.046390709750001], [" SELECT COUNT(*) FROM w WHERE pick BETWEEN (SELECT pick FROM w WHERE player = 'frank tripucka') AND (SELECT pick FROM w WHERE player = 'dale armstrong')", -4.046390709750001], [" SELECT COUNT(*) FROM w WHERE pick BETWEEN (SELECT pick FROM w WHERE player = 'frank tripucka') AND (SELECT pick FROM w WHERE player = 'dale armstrong')", -4.046390709750001], [" SELECT COUNT(*) FROM w WHERE pick BETWEEN (SELECT pick FROM w WHERE player = 'frank tripucka') AND (SELECT pick FROM w WHERE player = 'dale armstrong')", -4.046425332750001], [" SELECT COUNT(*) FROM w WHERE pick > (SELECT pick FROM w WHERE player = 'frank tripucka') AND pick < (SELECT pick FROM w WHERE player = 'dale armstrong')", -4.9049717192500015], [" SELECT COUNT(*) FROM w WHERE (pick > (SELECT pick FROM w WHERE player = 'frank tripucka') AND pick < (SELECT pick FROM w WHERE player = 'dale armstrong'))", -6.584135591559999], [" SELECT COUNT(*) FROM w WHERE (rd, pick) BETWEEN (SELECT rd, pick FROM w WHERE player = 'frank tripucka') AND (SELECT rd, pick FROM w WHERE player = 'dale armstrong')", -7.811201611779997], [" SELECT COUNT(DISTINCT pick) FROM w WHERE pick BETWEEN (SELECT pick FROM w WHERE player = 'frank tripucka') AND (SELECT pick FROM w WHERE player = 'dale armstrong')", -9.811899273045999], [" SELECT COUNT(*) FROM w WHERE (rd = 3 AND pick > 29) OR (rd > 3 AND rd < 13) OR (rd = 13 AND pick < 131)", -14.352993745480001]]}, "76": {"question": "what is the number of lakes that have an area less than 100 km squared?", "gold_answer": ["51"], "pred_answer": {"0": [[51], [51], [51], [51], [51], [51], [51], [51], [51], [51]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -1.52087233066], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -1.52087233066], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -1.52087233066], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -1.52087233066], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -1.52087233066], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -1.5234793114799998], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -1.5234793114799998], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -1.52455504163], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -2.81252202622], [" SELECT COUNT(*) FROM w WHERE `area in km\u00b2` < 100", -2.8149909788199996]]}, "117": {"question": "how many players had a field goal percentage greater than .500?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `field goal\u00a0%` > 0.5", -2.50702545563], [" SELECT COUNT(*) FROM w WHERE `field goal\u00a0%` > 0.5", -2.50702545563], [" SELECT COUNT(*) FROM w WHERE `field goal\u00a0%` > 0.5", -2.50702545563], [" SELECT COUNT(*) FROM w WHERE `field goal\u00a0%` > 0.5", -2.50703251453], [" SELECT COUNT(*) FROM w WHERE `field goal %` > 0.5", -3.1095738070299994], [" SELECT COUNT(*) FROM w WHERE `field goal\u00a0%` > .5", -3.46635273723], [" SELECT COUNT(*) FROM w WHERE `field goal\u00a0%` > 0.5", -3.66911633153], [" SELECT COUNT(*) FROM w WHERE `field goal\u00a0%` > 0.5", -3.67187103763], [" SELECT COUNT(*) FROM w WHERE `field goal\u00a0%` > 0.5", -3.67187103763], [" SELECT COUNT(*) FROM w WHERE `field goal %` > 0.5", -4.67162111003]]}, "120": {"question": "how many members were inducted for announcing?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'", -1.1250368105700002], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'", -1.1250368105700002], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'", -1.1250368105700002], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'", -1.1250368105700002], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'", -1.1250368105700002], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'", -3.3090874409700004], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'", -3.3090874409700004], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'", -3.3090874409700004], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'\n```", -9.5338906577], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'announcing'\n```", -15.7110623277]]}, "141": {"question": "on average how many of the swara have a short name that begin with d or g?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -1.489764822818], [" SELECT COUNT(*) FROM w WHERE `short name` LIKE 'd%' OR `short name` LIKE 'g%'", -13.676267369868002]]}, "158": {"question": "which country had the most wins?", "gold_answer": ["Kilkenny"], "pred_answer": {"0": [["kilkenny", 18], ["kilkenny", 18], [6], [6], [18], [18], [1], [16], [18], [6]]}, "nsql": [[" SELECT county, COUNT(*) FROM w GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1", -4.57616035175], [" SELECT county, COUNT(*) FROM w GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1", -5.570163567839999], [" SELECT COUNT(DISTINCT county) FROM w", -5.631399738810001], [" SELECT COUNT(DISTINCT county) FROM w", -5.631399738810001], [" SELECT COUNT(*) FROM w WHERE county = 'kilkenny'", -5.994048976370001], [" SELECT COUNT(*) FROM w GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1", -6.7766744368100005], [" SELECT COUNT(DISTINCT county) FROM w WHERE winner = 'ballyhale shamrocks'", -9.341718752100999], [" SELECT COUNT(DISTINCT winner) FROM w", -12.62443092195], [" SELECT COUNT(*) FROM w GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1", -12.665455832480001], [" SELECT COUNT(DISTINCT county) FROM w", -12.960296539319998]]}, "162": {"question": "how many medals were won after august 3?", "gold_answer": ["9"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [10], [10], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date > 'august 3'", -2.2436622483099997], [" SELECT COUNT(*) FROM w WHERE date > 'august 3'", -2.2436622483099997], [" SELECT COUNT(*) FROM w WHERE date > 'august 3'", -2.2436622483099997], [" SELECT COUNT(*) FROM w WHERE date > 'august 3'", -2.2436622483099997], [" SELECT COUNT(*) FROM w WHERE date > 'august 3'", -2.2436622483099997], [" SELECT COUNT(*) FROM w WHERE `date` > 'august 3'", -2.77647767481], [" SELECT COUNT(*) FROM w WHERE date >= 'august 3'", -3.41148030506], [" SELECT COUNT(*) FROM w WHERE `date` >= 'august 3'", -4.23792580361], [" SELECT COUNT(*) FROM w WHERE `date` > 'august 3'", -4.54979836281], [" SELECT COUNT(*) FROM w WHERE date > 'august 3'", -4.57158602356]]}, "199": {"question": "does clemson or western michigan have more cws appearances?", "gold_answer": ["Western Michigan"], "pred_answer": {"0": [["1; (last: 1958)"], ["1; (last: 1958)"], ["1; (last: 1958)"], ["1; (last: 1958)"], ["1; (last: 1958)"], ["1; (last: 1958)"], ["1; (last: 1958)"], ["1; (last: 1958)"], ["1; (last: 1958)"], [1]], "1": [["3; (last: 1958)"], ["3; (last: 1958)"], ["3; (last: 1958)"], ["3; (last: 1958)"], ["3; (last: 1958)"], ["3; (last: 1958)"], ["3; (last: 1958)"], ["3; (last: 1958)"], ["3; (last: 1958)"], [3]]}, "nsql": [[" SELECT cws appearances FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT cws appearances FROM w WHERE school = 'western michigan'", -2.5285340510650003], [" SELECT `cws appearances` FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT `cws appearances` FROM w WHERE school = 'western michigan'", -5.4707937424], [" SELECT `cws appearances` FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT `cws appearances` FROM w WHERE school = 'western michigan'", -5.8592717169499995], [" SELECT `cws appearances` FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT `cws appearances` FROM w WHERE school = 'western michigan'", -6.00740071695], [" SELECT `cws appearances` FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT `cws appearances` FROM w WHERE school = 'western michigan'", -6.015729545904], [" SELECT `cws appearances` FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT `cws appearances` FROM w WHERE school = 'western michigan'", -6.849361045903999], [" SELECT `cws appearances` FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT `cws appearances` FROM w WHERE school = 'western michigan'", -6.852707445903999], [" SELECT `cws appearances` FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT `cws appearances` FROM w WHERE school = 'western michigan'", -6.951973016949999], [" SELECT `cws appearances` FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT `cws appearances` FROM w WHERE school = 'western michigan'", -7.050117045903999], [" SELECT CAST(REPLACE(`cws appearances`,'; (last: 1958)','') AS INT) FROM w WHERE school = 'clemson'\nNeuralSQL2: SELECT CAST(REPLACE(`cws appearances`,'; (last: 1958)','') AS INT) FROM w WHERE school = 'western michigan'", -11.070061229434002]]}, "203": {"question": "what is the number of times a brazilian has won a medal?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%'", -2.90717222875], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%'", -2.90717222875], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%'", -2.90717222875], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%'", -2.90717222875], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%'", -3.9161211297499996], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%'", -3.9161211297499996], [" SELECT COUNT(*) FROM w WHERE gold LIKE '% brazil%' OR silver LIKE '% brazil%' OR bronze LIKE '% brazil%'", -4.212583213139999], [" SELECT COUNT(*) FROM w WHERE (gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%')", -4.768931528869998], [" SELECT COUNT(*) FROM w WHERE (gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%')", -8.26706029132], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%brazil%' OR silver LIKE '%brazil%' OR bronze LIKE '%brazil%'\nQ2: {how many = a2} times a russian has won a medal.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold LIKE '%russian%' OR silver LIKE '%russian%' OR bronze LIKE '%russian%'", -19.515599645469003]]}, "244": {"question": "how many tons does the te-class displace?", "gold_answer": ["1,400 tons"], "pred_answer": {"0": [["1400 tons"], ["1400 tons"], ["1400 tons", "1300 tons"], ["1400 tons"], ["1400 tons"], ["1400 tons"], ["1400 tons"], ["1400 tons"], ["1400 tons"], ["1400 tons"]]}, "nsql": [[" SELECT `displacement` FROM w WHERE name = 'te-class'", -5.155632689639999], [" SELECT displacement FROM w WHERE name = 'te-class'", -6.443779484439999], [" SELECT displacement FROM w WHERE name LIKE '%te-class%'", -6.46740349054], [" SELECT displacement FROM w WHERE name = 'te-class'", -8.758081928984998], [" SELECT displacement FROM w WHERE name = 'te-class'", -8.868951698984999], [" SELECT displacement FROM w WHERE name = 'te-class'", -10.029057538984999], [" SELECT displacement FROM w WHERE name = 'te-class'", -10.029057538984999], [" SELECT displacement FROM w WHERE name = 'te-class'", -10.393578835985], [" SELECT displacement FROM w WHERE name = 'te-class'", -10.595854135985], [" SELECT displacement FROM w WHERE name = 'te-class'", -12.024900129285]]}, "285": {"question": "other than m1 how many notations have \"1\" in them?", "gold_answer": ["4"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [0], [5], [5], [5]], "1": ["<error>"], "2": [[6]], "3": ["<error>"], "4": [[16]], "5": ["<error>"], "6": [[4]], "7": ["<error>"], "8": [[9]], "9": ["<error>"], "10": [[10]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'", -1.9408248907799999], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'", -1.9408248907799999], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'", -1.9408248907799999], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'", -1.9408248907799999], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'", -1.9408248907799999], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'", -1.9408248907799999], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%-1-%'", -3.69376816328], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'", -4.42806101036], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'", -5.357989326359999], [" SELECT COUNT(*) FROM w WHERE notation LIKE '%1%'\nQ2: {how many = a2} short names have \"i\" in them.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE short name LIKE '%i%'\nQ3: {how many = a3} swaras have \"a\" in them.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE swara LIKE '%a%'\nQ4: {how many = a4} notations have \"3\" in them.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE notation LIKE '%3%'\nQ5: {how many = a5} swaras have \"u\" in them.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE swara LIKE '%u%'\nQ6: {how many = a6} short names have \"a\" in them.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE short name LIKE '%a%'\nQ7: {how many = a7} mnemonics have \"u\" in them.\n", -31.982177436532506]]}, "326": {"question": "who scored better in the 1995 fifa world cup denmark or the united states?", "gold_answer": ["United States"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE scorers LIKE '%denmark%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE scorers LIKE '%united states%'", -3.5505247598200005], [" SELECT COUNT(*) FROM w WHERE scorers LIKE '%denmark%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE scorers LIKE '%united states%'", -3.5505247598200005], [" SELECT COUNT(*) FROM w WHERE scorers LIKE '%denmark%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE scorers LIKE '%united states%'", -3.5505247598200005], [" SELECT COUNT(*) FROM w WHERE scorers LIKE '%denmark%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE scorers LIKE '%united states%'", -3.5505247598200005], [" SELECT COUNT(*) FROM w WHERE scorers LIKE '%denmark%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE scorers LIKE '%united states%'", -3.5505247598200005], [" SELECT COUNT(*) FROM w WHERE scorers LIKE '%denmark%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE scorers LIKE '%united states%'", -3.5505247598200005], [" SELECT SUM(CAST(SUBSTR(scorers, 1, INSTR(scorers, '-') - 1) AS INT)) FROM w WHERE opponent LIKE '%denmark%'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(scorers, 1, INSTR(scorers, '-') - 1) AS INT)) FROM w WHERE opponent LIKE '%united states%'", -13.724417940242006], [" SELECT SUM(CAST(REPLACE(scorers, '\u2013', '-') AS INT)) FROM w WHERE opponent LIKE '%denmark%'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(scorers, '\u2013', '-') AS INT)) FROM w WHERE opponent LIKE '%united states%'", -16.254782518779997], [" SELECT SUM(CAST(REPLACE(scorers, '\u2013', '+') AS INT)) FROM w WHERE opponent LIKE '%denmark%'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(scorers, '\u2013', '+') AS INT)) FROM w WHERE opponent LIKE '%united states%'", -16.397929052214003], [" SELECT COUNT(*) FROM w WHERE opponent = 'denmark' AND result LIKE '%\u2013%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'united states' AND result LIKE '%\u2013%'\n```", -21.049143282010007]]}, "367": {"question": "what is the total number of competitions on this chart?", "gold_answer": ["6"], "pred_answer": {"0": [[4], [6], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>", "<error>"], "2": [[2]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT competition) FROM w", -4.309638049597001], [" SELECT COUNT(*) FROM w", -4.34286939912], [" SELECT COUNT(DISTINCT competition) FROM w", -8.813157972653], [" SELECT COUNT(DISTINCT competition) FROM w", -9.796956002653], [" SELECT COUNT(DISTINCT competition) FROM w", -11.118535012653], [" SELECT COUNT(DISTINCT competition) FROM w", -12.122551296653], [" SELECT COUNT(DISTINCT competition) FROM w", -14.688838272652998], [" SELECT COUNT(DISTINCT competition) FROM w", -17.237528036947], [" SELECT COUNT(DISTINCT competition) FROM w\n```", -19.048832353637], [" SELECT COUNT(DISTINCT(competition)) FROM w\nQ2: {how many = a2} competitions in 1998.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1998\nQ3: {how many = a3} competitions in 1998 and 1999.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1998 OR year = 1999\nQ4: {how many = a4} competitions in 1998 or 1999 and the position is 6th.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE (year = 1998 OR year = 1999) AND position = '6th'\nQ5: {how many = a5} competitions in 1998 or 1999 and the position is 6th or 7th.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE (year = 1998 OR year = 1999) AND (position = '6th' OR position = '7th')\nQ6: {how many = a6} competitions in 1998 or 1999 and the position is 6th or 7th and the venue is athens, greece.\nNeuralSQL6: SELECT COUNT(*) FROM", -42.18097231376198]]}, "408": {"question": "who had more points takaji mori or junji kawano?", "gold_answer": ["Takaji Mori"], "pred_answer": {"0": [["9(1)"], [13], [131], [91], [131], [91], ["9(1)"], [13.0], [13], [0]], "1": [["0(0)"], [1], [10], [0], [10], [0], ["0(0)"], [1.0], [1], [0]]}, "nsql": [[" SELECT `-1967` FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT `-1967` FROM w WHERE player = 'junji kawano'", -6.713680416989999], [" SELECT SUM(CAST(`-1967` AS INT) + CAST(`03.30` AS INT) + CAST(`03.31` AS INT) + CAST(`04.04` AS INT) + CAST(`10.14` AS INT) + CAST(`1968` AS INT)) FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT SUM(CAST(`-1967` AS INT) + CAST(`03.30` AS INT) + CAST(`03.31` AS INT) + CAST(`04.04` AS INT) + CAST(`10.14` AS INT) + CAST(`1968` AS INT)) FROM w WHERE player = 'junji kawano'", -7.176977713905497], [" SELECT SUM(CAST(REPLACE(total, '(', '') AS INT)) FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(total, '(', '') AS INT)) FROM w WHERE player = 'junji kawano'", -7.950643741290001], [" SELECT SUM(CAST(REPLACE(`-1967`, '(', '') AS INT)) FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`-1967`, '(', '') AS INT)) FROM w WHERE player = 'junji kawano'", -12.889423040880006], [" SELECT SUM(CAST(REPLACE(`total`,'(','') AS INT)) FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`total`,'(','') AS INT)) FROM w WHERE player = 'junji kawano'", -13.097162253485], [" SELECT SUM(CAST(REPLACE(`-1967`, '(', '') AS INT)) FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`-1967`, '(', '') AS INT)) FROM w WHERE player = 'junji kawano'", -13.601347140880005], [" SELECT -1967 FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT -1967 FROM w WHERE player = 'junji kawano'", -15.07360815257], [" SELECT SUM(`-1967`) + SUM(`03.30`) + SUM(`03.31`) + SUM(`04.04`) + SUM(`10.14`) + SUM(`1968`) FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT SUM(`-1967`) + SUM(`03.30`) + SUM(`03.31`) + SUM(`04.04`) + SUM(`10.14`) + SUM(`1968`) FROM w WHERE player = 'junji kawano'", -15.678378932575], [" SELECT SUM(CAST(SUBSTR(total, 1, INSTR(total, '(') - 1) AS INT)) FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(total, 1, INSTR(total, '(') - 1) AS INT)) FROM w WHERE player = 'junji kawano'", -17.184884813125002], [" SELECT SUM(CAST(REPLACE(total,'(','') AS INT) - CAST(REPLACE(total,'(','') AS INT)) FROM w WHERE player = 'takaji mori'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(total,'(','') AS INT) - CAST(REPLACE(total,'(','') AS INT)) FROM w WHERE player = 'junji kawano'", -20.110787373877]]}, "449": {"question": "which country had the most finishers in the top 8?", "gold_answer": ["Russia"], "pred_answer": {"0": [[5], [5], [4], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank <= 8", -3.7408332916500004], [" SELECT COUNT(*) FROM w WHERE rank <= 8", -3.7408332916500004], [" SELECT COUNT(*) FROM w WHERE rank < 8", -5.539548752649999], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 8", -6.064987565269], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 8", -6.064987565269], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 8", -6.064987565269], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 8", -6.064987565269], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 8", -6.942255165269], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 8.0", -6.948389606680999], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE rank <= 8", -7.594447465268999]]}, "490": {"question": "how many names do not have images next to them?", "gold_answer": ["41"], "pred_answer": {"0": [[35], [35], [35], [35], [35], [35], [35], [35], [35], [45]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -3.0126102161099992], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -3.0126102161099992], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -3.0126102161099992], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -3.0126102161099992], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -3.0126102161099992], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -3.0126102161099992], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -5.26305873067], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -5.26305873067], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%\u2020%'", -5.70717686202], [" SELECT COUNT(*) FROM w WHERE `location` NOT LIKE '%\u2020%'", -8.34645032502]]}, "531": {"question": "what company is the only one with a revenue greater than 75,000,000 thou. pln?", "gold_answer": ["PKN Orlen SA"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], "<error>", [1]], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[6]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000", -1.8526171572399996], [" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000", -1.8532193346099999], [" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000", -1.85382425821], [" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000", -1.8547976286059997], [" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000", -1.85966363052], [" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000", -1.85966363052], [" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000", -4.247195086935], [" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000", -4.24982644412], [" SELECT COUNT(*) FROM w WHERE `revenue (thou. pln)` > 75000000", -7.963149350349999], [" SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000\nQ2: {how many = a2} company has a rank greater than 5.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `rank in\\n2011` > 5\nQ3: {how many = a3} company has a revenue greater than 75,000,000 thou. pln and a rank greater than 5.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000 AND `rank in\\n2011` > 5\nQ4: {how many = a4} company has a revenue greater than 75,000,000 thou. pln or a rank greater than 5.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `revenue\\n(thou.\\n\u00a0pln)` > 75000000 OR `rank in\\n2011` > 5\nQ5: {how many = a5} company has a revenue greater than 75,000,000 thou. pln and a", -25.501899878011994]]}, "572": {"question": "what is the total number of participants between norway and france?", "gold_answer": ["7"], "pred_answer": {"0": [[0], [0], [0], [0], [2], [2], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality BETWEEN 'norway' AND 'france'", -5.90742472017], [" SELECT COUNT(*) FROM w WHERE nationality BETWEEN 'norway' AND 'france'", -5.90742472017], [" SELECT COUNT(*) FROM w WHERE nationality BETWEEN 'norway' AND 'france'", -6.373650021287], [" SELECT COUNT(*) FROM w WHERE nationality BETWEEN 'norway' AND 'france'", -6.373650021287], [" SELECT COUNT(*) FROM w WHERE bib BETWEEN (SELECT bib FROM w WHERE nationality = 'norway') AND (SELECT bib FROM w WHERE nationality = 'france')", -6.778685587266001], [" SELECT COUNT(*) FROM w WHERE bib BETWEEN (SELECT bib FROM w WHERE nationality = 'norway') AND (SELECT bib FROM w WHERE nationality = 'france')", -6.778685587266001], [" SELECT COUNT(*) FROM w WHERE nationality BETWEEN 'norway' AND 'france'", -8.998113742087002], [" SELECT COUNT(*) FROM w WHERE nationality BETWEEN 'norway' AND 'france'", -8.998113742087002], [" SELECT COUNT(*) FROM w WHERE nationality BETWEEN 'norway' AND 'france'", -9.083203342087002], [" SELECT COUNT(*) FROM w WHERE nationality BETWEEN 'norway' AND 'france'", -9.083203342087002]]}, "613": {"question": "how many consecutive stops must you travel through is you board the kibi line at bizen-mikado at depart at kibitsu?", "gold_answer": ["2"], "pred_answer": {"0": [[10.3], [18.200000000000003], [2], [18.200000000000003], [9.8], [10.3], [20.1], [18.200000000000003], [9.8], [10.3]]}, "nsql": [[" SELECT SUM(`distance\\n(km)`) FROM w WHERE name IN ('bizen-mikado', 'kibitsu')", -6.908137464570002], [" SELECT SUM(`distance\\n(km)`) FROM w WHERE row_id >= 2 AND row_id <= 4", -7.07915915099], [" SELECT COUNT(*) FROM w WHERE name = 'bizen-mikado' OR name = 'kibitsu'", -7.335691478369999], [" SELECT SUM(distance\\n(km)) FROM w WHERE row_id BETWEEN 2 AND 4", -7.58862965659], [" SELECT SUM(distance\\n(km)) FROM w WHERE row_id BETWEEN 2 AND 3", -7.8113791903899985], [" SELECT SUM(distance\\n(km)) FROM w WHERE name IN ('bizen-mikado', 'kibitsu')", -7.876071775619998], [" SELECT SUM(`distance\\n(km)`) FROM w WHERE row_id >= (SELECT row_id FROM w WHERE name = 'bizen-mikado') AND row_id <= (SELECT row_id FROM w WHERE name = 'kibitsu')", -11.19461041229], [" SELECT SUM(distance\\n(km)) FROM w WHERE row_id >= 2 AND row_id <= 4", -11.946810026069999], [" SELECT SUM(`distance\\n(km)`) FROM w WHERE row_id BETWEEN 2 AND 3", -12.019420772200002], [" SELECT SUM(`distance\\n(km)`) FROM w WHERE `name` IN ('bizen-mikado', 'kibitsu')", -15.54350719009]]}, "654": {"question": "how many candidates had more votes than tamara lorincz?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.67549565492], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.67549565492], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.6756710052300001], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.6756710052300001], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.6756710052300001], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.6756710052300001], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.6757639600899998], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.6757639600899998], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')", -1.6766822164200001], [" SELECT COUNT(*) FROM w WHERE votes > (SELECT votes FROM w WHERE candidate = 'tamara lorincz')\n```", -19.341229725900003]]}, "695": {"question": "what are the number of league apps ted davis has?", "gold_answer": ["27"], "pred_answer": {"0": [[27], [27], [27], [27], [27], [27], [27], [27], [27], [27]]}, "nsql": [[" SELECT `league apps` FROM w WHERE name = 'ted davis'", -1.59795167728], [" SELECT `league apps` FROM w WHERE name = 'ted davis'", -1.59795167728], [" SELECT `league apps` FROM w WHERE name = 'ted davis'", -1.59795167728], [" SELECT `league apps` FROM w WHERE name = 'ted davis'", -1.59795167728], [" SELECT `league apps` FROM w WHERE name = 'ted davis'", -3.28501968508], [" SELECT `league apps` FROM w WHERE name = 'ted davis'", -3.28501968508], [" SELECT `league apps` FROM w WHERE name = 'ted davis'", -3.28501968508], [" SELECT `league apps` FROM w WHERE name = 'ted davis'", -3.28501968508], [" SELECT league apps FROM w WHERE name = 'ted davis'", -5.73129070408], [" SELECT league apps FROM w WHERE name = 'ted davis'", -7.845814216080001]]}, "736": {"question": "did italy or norway have 51 total medals?", "gold_answer": ["Italy"], "pred_answer": {"0": [[51], [51], [51], [51], [51], [51], [51], [51], [51], [51]], "1": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'norway'", -2.6605177618799996], [" SELECT `total` FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT `total` FROM w WHERE nation = 'norway'", -3.08133968822], [" SELECT total FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'norway'", -7.11898573666], [" SELECT total FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'norway'", -7.11898573666], [" SELECT total FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'norway'", -8.592251926660001], [" SELECT total FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'norway'", -8.99528516166], [" SELECT total FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'norway'", -9.86033650206], [" SELECT total FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'norway'", -10.26813304666], [" SELECT total FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'norway'", -10.67375154666], [" SELECT total FROM w WHERE nation = 'italy'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'norway'", -11.45621664666]]}, "777": {"question": "what is the total amount of districts listed?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.517183444986], [" SELECT COUNT(*) FROM w", -1.517183444986], [" SELECT COUNT(*) FROM w", -1.517183444986], [" SELECT COUNT(*) FROM w", -1.517183444986], [" SELECT COUNT(*) FROM w", -1.517183444986], [" SELECT COUNT(*) FROM w", -1.517183444986], [" SELECT COUNT(*) FROM w", -1.517183444986], [" SELECT COUNT(*) FROM w", -1.517183444986], [" SELECT COUNT(*) FROM w", -2.6836553298800006], [" SELECT COUNT(DISTINCT district) FROM w", -11.705892353455]]}, "780": {"question": "how many total marriages did james i have?", "gold_answer": ["3"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [4], [4], [4], [4], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name LIKE '%james i%'", -3.09101129162], [" SELECT COUNT(*) FROM w WHERE name LIKE '%james i%'", -3.09101129162], [" SELECT COUNT(*) FROM w WHERE name LIKE '%james i%'", -3.09101129162], [" SELECT COUNT(*) FROM w WHERE name LIKE '%james i%'", -3.09101129162], [" SELECT COUNT(*) FROM w WHERE name LIKE 'james i%'", -4.16280641162], [" SELECT COUNT(DISTINCT marriages) FROM w WHERE name LIKE '%james i%'", -6.13319373142], [" SELECT COUNT(DISTINCT marriages) FROM w WHERE name LIKE '%james i%'", -6.13319373142], [" SELECT COUNT(DISTINCT marriages) FROM w WHERE name LIKE '%james i%'", -6.13319373142], [" SELECT COUNT(DISTINCT(marriages)) FROM w WHERE name LIKE '%james i%'", -7.23417801022], [" SELECT SUM(CAST(SUBSTR(marriages, 1, INSTR(marriages, ';') - 1) AS INT)) FROM w WHERE name LIKE '%james i%'", -10.796783809059997]]}, "801": {"question": "what are the number of times norra was listed as the section?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>", "<error>"], "2": [[1], [1]], "3": ["<error>", "<error>"], "4": [[12], [1]], "5": ["<error>", "<error>"], "6": [[10], [4]], "7": ["<error>", "<error>"], "8": [[3], [0]], "9": ["<error>", "<error>"], "10": [[1]], "11": ["<error>"], "12": [[1]], "13": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE section = 'norra'", -2.58329779744], [" SELECT COUNT(*) FROM w WHERE section = 'norra'", -4.93354999528], [" SELECT COUNT(*) FROM w WHERE section = 'norra'", -4.93354999528], [" SELECT COUNT(*) FROM w WHERE section = 'norra'", -4.93354999528], [" SELECT COUNT(*) FROM w WHERE section = 'norra'", -4.93354999528], [" SELECT COUNT(*) FROM w WHERE section = 'norra'", -4.93354999528], [" SELECT COUNT(*) FROM w WHERE section = 'norra'", -4.93354999528], [" SELECT COUNT(*) FROM w WHERE section = 'norra'", -6.72958409528], [" SELECT COUNT(*) FROM w WHERE section = 'norra'\nQ2: {how many = a2} times the movements was relegation playoffs.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE movements = 'relegation playoffs'\nQ3: {how many = a3} times the level was tier 3.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE level = 'tier 3'\nQ4: {how many = a4} times the division was division 2.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE division = 'division 2'\nQ5: {how many = a5} times the position was 3rd.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE position = '3rd'\nQ6: {how many = a6} times the movements was relegated.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE movements = 'relegated'\nQ7: {how many = a7} times the section was s\u00f6dra.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE section = 's\u00f6dra'\nQ8", -31.346821401787004], [" SELECT COUNT(*) FROM w WHERE section = 'norra'\nQ2: {how many = a2} times the team was in the relegation playoffs.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE movements = 'relegation playoffs'\nQ3: {how many = a3} times the team was in the relegation playoffs and the section was norra.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE movements = 'relegation playoffs' AND section = 'norra'\nQ4: {how many = a4} times the team was in the relegation playoffs or the section was norra.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE movements = 'relegation playoffs' OR section = 'norra'\nQ5: {how many = a5} times the team was in the relegation playoffs and the section was norra and the season was 2000.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE movements = 'relegation playoffs' AND section = 'norra' AND season = 2000\nQ6: {how many = a6} times the team was in the relegation playoffs", -35.247628612533]]}, "818": {"question": "the most goals scored by brazil in a game", "gold_answer": ["6"], "pred_answer": {"0": [["6"], [6], [6], [6], [63], [6], [6], [6], [6], ["6"]], "1": ["<error>"], "2": [["6"]], "3": ["<error>"], "4": [["6"]], "5": ["<error>"], "6": [["6"]], "7": ["<error>"], "8": [["6"]], "9": ["<error>"]}, "nsql": [[" SELECT MAX(SUBSTR(score, 1, INSTR(score, '-') - 1)) FROM w", -4.3302683156900015], [" SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -5.706804797709999], [" SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -7.4065020359], [" SELECT MAX(CAST(score AS INT)) FROM w", -7.81636199112], [" SELECT MAX(CAST(REPLACE(score,'-','') AS INT)) FROM w", -9.08645916472], [" SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -9.745530324899999], [" SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -11.929026976409999], [" SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -12.35778938382], [" SELECT MAX(CAST(REPLACE(score, '-', ',') AS INT)) FROM w", -12.587363557330002], [" SELECT MAX(SUBSTR(score, 1, INSTR(score, '-') - 1)) FROM w\nQ2: {how many = a2} is the most goals scored by brazil in a game.\nNeuralSQL2: SELECT MAX(SUBSTR(score, 1, INSTR(score, '-') - 1)) FROM w\nQ3: {how many = a3} is the most goals scored by brazil in a game.\nNeuralSQL3: SELECT MAX(SUBSTR(score, 1, INSTR(score, '-') - 1)) FROM w\nQ4: {how many = a4} is the most goals scored by brazil in a game.\nNeuralSQL4: SELECT MAX(SUBSTR(score, 1, INSTR(score, '-') - 1)) FROM w\nQ5: {how many = a5} is the most goals scored by brazil in a game.\nNeuralSQL5: SELECT MAX(SUBSTR(score, 1, INSTR(score, '-') - 1)) FROM w\nQ6: {how many = a6} is the", -18.4696686201819]]}, "822": {"question": "what two cyclists come from teams with no laps down?", "gold_answer": ["Iryna Shpylova", "Jessie Daams"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `laps\\ndown` = 0", -3.0525540423300006], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` = 0", -3.0525540423300006], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` = 0.0", -4.114833312520001], [" SELECT COUNT(DISTINCT team) FROM w WHERE laps\\ndown = 0", -4.65369357711], [" SELECT COUNT(DISTINCT team) FROM w WHERE laps\\ndown = 0", -4.660359653647999], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` = 0", -5.105384783170001], [" SELECT COUNT(DISTINCT(cyclist)) FROM w WHERE `laps\\ndown` = 0", -6.470096773148001], [" SELECT COUNT(*) FROM w WHERE `laps down` = 0", -7.167879707950001], [" SELECT COUNT(DISTINCT team) FROM w WHERE `laps\\ndown` = 0", -8.901257456827999], [" SELECT COUNT(DISTINCT(team)) FROM w WHERE `laps\\ndown` = 0", -9.22343033444]]}, "859": {"question": "which car is the only one with more than 230 hp?", "gold_answer": ["'99-02 S15 Silvia"], "pred_answer": {"0": [[0], [0], [9], [9], [9], [9], [9], [9], [9], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT car) FROM w WHERE power > 230", -6.0916146738894], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(power, '\u00a0kw', '') AS INT) > 230", -6.2076375940799995], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(power, '\u00a0kw (', '') AS INT) > 230", -7.183051582080003], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(power, '\u00a0kw (', '') AS INT) > 230", -11.731992261527], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(power, '\u00a0kw (', '') AS INT) > 230", -13.733085765127003], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(power, '\u00a0kw (', '') AS INT) > 230", -13.923422807527], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(power, '\u00a0kw (', '') AS INT) > 230", -14.410398307527], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(power, '\u00a0kw (', '') AS INT) > 230", -14.460046840527001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(power, '\u00a0kw (', '') AS INT) > 230", -15.201494938005002], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`power`,'kw (','') AS INT) > 230", -17.878201383396]]}, "863": {"question": "what were the number of medals iran earned?", "gold_answer": ["14"], "pred_answer": {"0": [[null], [null], [null], [14], [null], [null], [null], [14], [null], [14]], "1": ["<error>"], "2": [[10]], "3": ["<error>"], "4": [[10]], "5": ["<error>"], "6": [[10]], "7": ["<error>"], "8": [[10]], "9": ["<error>"], "10": [[10]], "11": ["<error>"], "12": [[10]], "13": ["<error>"]}, "nsql": [[" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'iran'", -3.8613345473859995], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'iran'", -3.8613345473859995], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'iran'", -3.8613345473859995], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%iran%'", -4.258647206816], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'iran'", -5.63883992351], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'iran'", -6.675688250386], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'iran'", -6.675688250386], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%iran%'", -10.697977785815999], [" SELECT SUM(total) FROM w WHERE nation = 'iran'", -11.63242391169], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%iran%'\nQ2: {how many = a2} countries earned more than 20 medals.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total > 20\nQ3: {how many = a3} countries earned more than 20 medals.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE total > 20\nQ4: {how many = a4} countries earned more than 20 medals.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE total > 20\nQ5: {how many = a5} countries earned more than 20 medals.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE total > 20\nQ6: {how many = a6} countries earned more than 20 medals.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE total > 20\nQ7: {how many = a7} countries earned more than 20 medals.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE total > 20\nQ8: {how many = a8}", -25.933387107991997]]}, "904": {"question": "how many teams had at least two drivers this season?", "gold_answer": ["17"], "pred_answer": {"0": [[3, 5, 2, 2, 3, 2, 3, 3, 3, 2, 3, 2, 3, 3, 2, 4, 5], [17], [19], [17], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [17], [17], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [3, 5, 2, 2, 3, 2, 3, 3, 3, 2, 3, 2, 3, 3, 2, 4, 5], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY team HAVING COUNT(*) > 1", -5.04985961518], [" SELECT COUNT(DISTINCT team) FROM w WHERE team IN (SELECT team FROM w GROUP BY team HAVING COUNT(*) >= 2)", -6.344199660107], [" SELECT COUNT(DISTINCT team) FROM w WHERE no > 1", -6.570181574727], [" SELECT COUNT(DISTINCT team) FROM w WHERE team IN (SELECT team FROM w GROUP BY team HAVING COUNT(*) > 1)", -6.881452304107], [" SELECT COUNT(DISTINCT team) FROM w GROUP BY team HAVING COUNT(*) >= 2", -7.546793364217], [" SELECT COUNT(DISTINCT team) FROM w WHERE team IN (SELECT team FROM w GROUP BY team HAVING COUNT(*) >= 2)", -8.109310138927], [" SELECT COUNT(DISTINCT team) FROM w WHERE team IN (SELECT team FROM w GROUP BY team HAVING COUNT(*) > 1)", -8.660152679107], [" SELECT COUNT(DISTINCT team) FROM w GROUP BY team HAVING COUNT(DISTINCT driver) > 1", -11.077595498856999], [" SELECT COUNT(*) FROM w GROUP BY team HAVING COUNT(*) > 1", -12.294871407510001], [" SELECT COUNT(*) FROM (SELECT team, COUNT(*) FROM w GROUP BY team HAVING COUNT(*) > 2)", -15.36680891372]]}, "945": {"question": "how many races occurred before alain prost won a pole position?", "gold_answer": ["5"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [14], [4], [4], [1], [2]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[2]], "9": ["<error>"], "10": [[2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'", -3.312395736], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'", -3.3133259384799993], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'", -4.36063409], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'", -4.36063409], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'", -4.363434067089999], [" SELECT COUNT(*) FROM w WHERE `pole position` != 'alain prost'", -5.3266125011500005], [" SELECT COUNT(*) FROM w WHERE date < (SELECT date FROM w WHERE pole position = 'alain prost')", -5.486934311880002], [" SELECT COUNT(*) FROM w WHERE date < (SELECT date FROM w WHERE pole position = 'alain prost')", -8.207634220250002], [" SELECT COUNT(*) FROM w WHERE pole position = 'alain prost' AND date < '1989-01-01'", -12.091285417629997], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'\nQ2: {how many = a2} races occurred before alain prost won a pole position.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'\nQ3: {how many = a3} races occurred before alain prost won a pole position.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'\nQ4: {how many = a4} races occurred before alain prost won a pole position.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'\nQ5: {how many = a5} races occurred before alain prost won a pole position.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'\nQ6: {how many = a6} races occurred before alain prost won a pole position.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'\n", -15.244704662786019]]}, "986": {"question": "what hospital in los angeles county providing hospital beds specifically for rehabilitation is ranked at least among the top 10 hospitals?", "gold_answer": ["Lanterman Developmental Center"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND type of hospital = 'rehabilitation' AND rank <= 10", -5.28382931336], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND type of hospital = 'rehabilitation' AND rank <= 10", -5.28382931336], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND type of hospital = 'rehabilitation' AND rank <= 10", -5.28382931336], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND type of hospital = 'rehabilitation' AND rank <= 10", -5.291984305169999], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND type of hospital = 'rehabilitation' AND rank <= 10", -5.291984305169999], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND type of hospital = 'rehabilitation' AND rank <= 10", -5.291984305169999], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND type of hospital = 'rehabilitation' AND rank < 10", -6.92491815536], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND `type of hospital` = 'rehabilitation' AND rank <= 10", -6.98683259355], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND `# beds` > 0 AND `type of hospital` = 'rehabilitation' AND rank <= 10", -9.12733121893], [" SELECT COUNT(*) FROM w WHERE county = 'los angeles' AND `# beds` > 0 AND type of hospital = 'rehabilitation' AND rank <= 10", -10.77866233205]]}, "1027": {"question": "how many matches did jones kusi-asare play in in his first season?", "gold_answer": ["15"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]]}, "nsql": [[" SELECT matches FROM w WHERE season = '2006'", -2.358400215904], [" SELECT matches FROM w WHERE season = '2006'", -2.358434524404], [" SELECT matches FROM w WHERE season = '2006'", -2.358434524404], [" SELECT matches FROM w WHERE season = '2006'", -2.358434524404], [" SELECT matches FROM w WHERE season = '2006'", -2.358434524404], [" SELECT matches FROM w WHERE season = '2006'", -2.358434524404], [" SELECT matches FROM w WHERE season = '2006'", -2.358434524404], [" SELECT matches FROM w WHERE season = '2006'", -2.362065555694], [" SELECT matches FROM w WHERE season = '2006'", -4.276735053574], [" SELECT matches FROM w WHERE season = '2006'", -4.277372494574]]}, "1068": {"question": "how many trains listed have the same speed as the hmb2?", "gold_answer": ["0"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)'", -4.449625964880001], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)'", -4.449625964880001], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)'", -4.449625964880001], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)'", -4.449625964880001], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)'", -5.47764335688], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)'", -5.47764335688], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '160 / 230 (1974)\u00a0?'", -5.830714908579999], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '160 / 230 (1974)\u00a0?'", -6.83216959758], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = (SELECT `top speed (km/h)` FROM w WHERE train = 'hmb2')", -7.633754628745001], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '160 / 230 (1974)\u00a0?'\nQ2: {how many = a2} trains listed have the same speed as the hmb2.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '160 / 230 (1974)\u00a0?'\nQ3: the number of trains listed have the same speed as the hmb2.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '160 / 230 (1974)\u00a0?'\nQ4: the number of trains listed have the same speed as the hmb2.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '160 / 230 (1974)\u00a0?'\nQ5: the number of trains listed have the same speed as the hmb2.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '160 / 230 (1974)\u00a0?'\nQ6: the number of trains listed have", -28.690303965092998]]}, "1109": {"question": "what is the number of trains that were either scrapped or destroyed?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'", -2.3339440040549997], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'", -2.33441690827], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'", -2.3356030506939995], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'", -2.3356030506939995], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'", -2.3356030506939995], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'", -2.3356030506939995], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'\n```", -4.288811133439999], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'\n```", -4.288811133439999], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'", -4.47146157541], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comments LIKE '%destroyed%'", -5.550064204079999]]}, "1150": {"question": "vladimir bukiyevskiy had how many appearances?", "gold_answer": ["199"], "pred_answer": {"0": [[199], [199], [199], [199], [199], [199], [199], [199], [199], [199]]}, "nsql": [[" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -1.7267555222099997], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -1.7267555222099997], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -1.7267555222099997], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -3.0120320663799998], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -3.0120320663799998], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -3.0120320663799998], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -3.0120320663799998], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -3.0120320663799998], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -3.0120320663799998], [" SELECT appearances FROM w WHERE name = 'vladimir bukiyevskiy'", -5.34391483638]]}, "1191": {"question": "how many champions were from norway?", "gold_answer": ["0"], "pred_answer": {"0": [[1], [1], [1], [1], [0], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'", -7.711201735498], [" SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'", -7.711201735498], [" SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'", -8.128578009498002], [" SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'", -8.128578009498002], [" SELECT COUNT(*) FROM w WHERE round = 'final' AND opponent LIKE '%norway%'", -10.272194466443999], [" SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'", -11.239072689498], [" SELECT COUNT(*) FROM w WHERE round = 'final' AND opponent = 'gary anderson'", -11.881781533689999], [" SELECT COUNT(DISTINCT player) FROM w WHERE year = '2011' AND round = 'final' AND result = 'won'", -12.520764324967], [" SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'", -15.1787550468], [" SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'\nQ2: {how many = a2} champions were from norway.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'\nQ3: {how many = a3} champions were from norway.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'\nQ4: {how many = a4} champions were from norway.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'\nQ5: {how many = a5} champions were from norway.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'\nQ6: {how many = a6} champions were from norway.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE result = 'won' AND opponent = 'gary anderson'\nQ7: {how many =", -17.257290519055992]]}, "1232": {"question": "who scored more points, larry johnson or charlie ward?", "gold_answer": ["Larry Johnson"], "pred_answer": {"0": [[645], [645], [645], [645], [645], [645], [645], [645], [645], [645]], "1": [[433], [433], [433], [433], [433], [433], [433], [433], [433], [433]]}, "nsql": [[" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.455719968895], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.455719968895], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.4588356833500002], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.4588356833500002], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.4588356833500002], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.4588356833500002], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.4588356833500002], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.4588356833500002], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -1.4588356833500002], [" SELECT points FROM w WHERE player = 'larry johnson'\nNeuralSQL2: SELECT points FROM w WHERE player = 'charlie ward'", -4.174411682530001]]}, "1273": {"question": "what was the only nation to win less than 10 medals total?", "gold_answer": ["Maldives"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10", -1.3255124631500002], [" SELECT COUNT(*) FROM w WHERE total < 10\nQ2: {how many = a2} nation to win less than 10 gold medals.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold < 10\nQ3: {how many = a3} nation to win less than 10 silver medals.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE silver < 10\nQ4: {how many = a4} nation to win less than 10 bronze medals.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE bronze < 10\nQ5: {how many = a5} nation to win less than 10 medals total and less than 10 gold medals.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE total < 10 AND gold < 10\nQ6: {how many = a6} nation to win less than 10 medals total and less than 10 silver medals.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE total < 10 AND silver < 10\nQ7: {how many = a7} nation to win less than 10 medals total and less than 10 bronze medals.\nNeuralSQL7: SELECT", -24.919500287336977]]}, "14": {"question": "what is the number of games played against vietnam?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -1.422283049125], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -1.4224983722599998], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -1.4224983722599998], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -1.4224983722599998], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -1.4224983722599998], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -1.4245298845660002], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -1.4245298845660002], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -2.61657283703], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -2.6176661992], [" SELECT COUNT(*) FROM w WHERE opponent = 'vietnam'", -3.63683252923]]}, "55": {"question": "which opera has at least 5 acts?", "gold_answer": ["Il Giustino"], "pred_answer": {"0": ["<error>", [2], [2], [2], [2], [52], [2], "<error>", [2], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE acts >= 5", -5.443837111773999], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%' AND CAST(REPLACE(`sub\u00addivisions`,'acts','') AS INT) >= 5", -7.860258247973999], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%' AND CAST(REPLACE(`sub\u00addivisions`, 'acts', '') AS INT) >= 5", -8.659449342974], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts' AND CAST(REPLACE(`sub\u00addivisions`, 'acts', '') AS INT) >= 5", -9.513138146554002], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%' AND CAST(REPLACE(`sub\u00addivisions`,'acts','') AS INT) > 4", -9.799263535973997], [" SELECT COUNT(*) FROM w WHERE sub\u00addivisions LIKE '% act%'", -9.814036035773999], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '% acts' AND CAST(SUBSTR(`sub\u00addivisions`, 1, INSTR(`sub\u00addivisions`, ' acts') - 1) AS INT) >= 5", -10.672248842704002], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%' AND (CAST(REPLACE(`sub\u00addivisions`,'acts','')) AS INT) >= 5", -11.278098831374], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%' AND (CAST(SUBSTR(`sub\u00addivisions`, 1, INSTR(`sub\u00addivisions`, 'acts') - 1) AS INT) >= 5)", -11.606352786433996], [" SELECT COUNT(*) FROM w WHERE genre LIKE '%acts%' AND (CAST(REPLACE(SUBSTR(genre, INSTR(genre, 'acts') - 1, 1), 'acts', '') AS INT) >= 5)", -14.955713266823995]]}, "96": {"question": "total number of encyclicals on churches .", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": ["<error>"], "2": [[38]], "3": ["<error>"], "4": [[38]], "5": ["<error>"], "6": [[38]], "7": ["<error>"], "8": [[38]], "9": ["<error>"], "10": [[38]], "11": ["<error>"], "12": [[38]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE subject LIKE '%church%'", -2.2370530341039996], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%church%'", -2.2370530341039996], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%church%'", -2.2370530341039996], [" SELECT COUNT(*) FROM w WHERE `subject` LIKE '%church%'", -3.39321119144], [" SELECT COUNT(*) FROM w WHERE `subject` LIKE '%church%'", -3.39321119144], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%church%'", -4.763882937939999], [" SELECT COUNT(*) FROM w WHERE `subject` LIKE '%church%'", -5.897803628439999], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%church%'", -6.17599366481], [" SELECT COUNT(*) FROM w WHERE `subject` LIKE '%church%'", -6.3158087284399995], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%church%'\nQ2: {how many = a2} encyclicals have a title.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `title (english translation)` IS NOT NULL\nQ3: there are {how many = a3} encyclicals have a subject.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE subject IS NOT NULL\nQ4: {how many = a4} encyclicals have a date.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE date IS NOT NULL\nQ5: there are {how many = a5} encyclicals have a title.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `title (english translation)` IS NOT NULL\nQ6: {how many = a6} encyclicals have a subject.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE subject IS NOT NULL\nQ7: there are {how many = a7} encyclicals have a date.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE date IS NOT NULL", -40.10635279582601]]}, "137": {"question": "how many goals did ismail isa score this season?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [1], [1], [3], [8], [1], [8], [3]]}, "nsql": [[" SELECT SUM(league) + SUM(cup) + SUM(europa league) FROM w WHERE player = 'ismail isa'", -5.866711413159999], [" SELECT SUM(total) FROM w WHERE player = 'ismail isa'", -6.180313854254001], [" SELECT SUM(total) FROM w WHERE player = 'ismail isa'", -6.524188204345], [" SELECT COUNT(*) FROM w WHERE player = 'ismail isa'", -6.916482752189998], [" SELECT COUNT(*) FROM w WHERE player = 'ismail isa'", -6.918463537015], [" SELECT SUM(league) FROM w WHERE player = 'ismail isa'", -7.955858841995], [" SELECT SUM(total) FROM w WHERE player = 'ismail isa'", -8.209350882345], [" SELECT COUNT(*) FROM w WHERE player = 'ismail isa'", -8.761062698359998], [" SELECT SUM(total) FROM w WHERE player = 'ismail isa'", -10.67981852418], [" SELECT SUM(league) FROM w WHERE player = 'ismail isa'", -12.432011313805]]}, "140": {"question": "which nation was not in the top 10 iran or germany?", "gold_answer": ["Germany"], "pred_answer": {"0": [[0], [0], [0], [0], [0], ["8"], ["8"], ["8"], [0], [0]], "1": [[0], [0], [0], [0], [0], ["14"], ["14"], ["14"], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nation = 'iran' AND rank <= 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'germany' AND rank <= 10", -2.8090776821200003], [" SELECT COUNT(*) FROM w WHERE nation = 'iran' AND rank <= 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'germany' AND rank <= 10", -2.8090776821200003], [" SELECT COUNT(*) FROM w WHERE nation = 'iran' AND rank <= 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'germany' AND rank <= 10", -2.8090776821200003], [" SELECT COUNT(*) FROM w WHERE nation = 'iran' AND rank <= 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'germany' AND rank <= 10", -2.8090776821200003], [" SELECT COUNT(*) FROM w WHERE nation = 'iran' AND rank <= 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'germany' AND rank <= 10", -2.8090776821200003], [" SELECT rank FROM w WHERE nation = 'iran'\nNeuralSQL2: SELECT rank FROM w WHERE nation = 'germany'", -3.1126404202799995], [" SELECT rank FROM w WHERE nation = 'iran'\nNeuralSQL2: SELECT rank FROM w WHERE nation = 'germany'", -3.1126404202799995], [" SELECT rank FROM w WHERE nation = 'iran'\nNeuralSQL2: SELECT rank FROM w WHERE nation = 'germany'", -3.1126404202799995], [" SELECT COUNT(*) FROM w WHERE nation = 'iran' AND rank < 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'germany' AND rank < 10", -4.138228787620001], [" SELECT COUNT(*) FROM w WHERE nation = 'iran' AND rank <= 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'germany' AND rank <= 10", -6.86617939612]]}, "161": {"question": "did the team win or lose more games?", "gold_answer": ["win"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6670763384959995], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6672196509560004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6672196509560004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6672196509560004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.667220869986], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -8.51614547316], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -10.96112114916], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -12.00729142316], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -12.69566672316], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -14.19381112316]]}, "178": {"question": "name all the companies whose arms sales as share of company's total sales is below 75%.", "gold_answer": ["Boeing", "General Dynamics", "Airbus Group", "Finmeccanica", "United Technologies Corporation", "Thales Group", "Honeywell", "SAFRAN", "Computer Sciences Corp.", "Rolls-Royce", "Oshkosh Corporation", "General Electric", "ITT Corp."], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], "<error>", "<error>", [13]], "1": ["<error>"], "2": [[8]], "3": ["<error>"], "4": [[5]], "5": ["<error>"], "6": [[22]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 75", -4.17269908128], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 75", -4.17269908128], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 75", -4.17869487618], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 75", -4.17869487618], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 75", -4.3277610975], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 75", -4.3287240435], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 75", -4.3287240435], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company's total sales (%)` < 75", -5.0658484693300005], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company's total sales (%),` < 75", -7.08744938667], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 75\nQ2: {how many = a2} companies whose arms sales as share of company's total sales is above 75%.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` > 75\nQ3: {how many = a3} companies whose arms sales as share of company's total sales is above 75% and below 90%.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 90 AND `arms sales as share of company\u2019s total sales (%)` > 75\nQ4: {how many = a4} companies whose arms sales as share of company's total sales is above 75% or below 90%.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 90 OR `arms sales as share of company\u2019s total sales (%)` > 75\nQ5: {how many = a5} companies whose arms sales", -28.033230376395657]]}, "182": {"question": "which was the only kolmonen whose movements were promoted?", "gold_answer": ["2009"], "pred_answer": {"0": [[1], [0], [0], [0], [0], [1], [0], [1], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE division = 'kolmonen (third division)' AND movements LIKE '%promoted%'", -4.660806342243999], [" SELECT COUNT(*) FROM w WHERE level = 'kolmonen' AND movements LIKE '%promoted%'", -5.136500697948001], [" SELECT COUNT(*) FROM w WHERE level = 'kolmonen' AND movements LIKE '%promoted%'", -5.137576213074001], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND movements = 'play-offs - promoted'", -6.667572067743999], [" SELECT COUNT(*) FROM w WHERE level = 'kolmonen' AND movements = 'promoted'", -8.478928425504], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND movements LIKE '%promoted%'", -9.028869533574], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND movements LIKE '% - promoted'", -11.777647029029001], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND movements LIKE '%promoted%'", -12.041043921694001], [" SELECT COUNT(*) FROM w WHERE level = 'kolmonen (third division)' AND movements = 'play-offs - promoted'", -12.240131879224002], [" SELECT COUNT(*) FROM w WHERE level = 'kolmonen (third division)' AND movements = 'play-offs - promoted'", -13.301929993224]]}, "219": {"question": "how many causes were responsible for more than 50,000 confirmed deaths?", "gold_answer": ["5"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [1], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total > 50000", -2.30512066959], [" SELECT COUNT(*) FROM w WHERE total > 50000", -2.30512066959], [" SELECT COUNT(*) FROM w WHERE total > 50000", -2.30512066959], [" SELECT COUNT(*) FROM w WHERE total > 50000", -2.3056202395899996], [" SELECT COUNT(*) FROM w WHERE total > 50000", -2.30562535409], [" SELECT COUNT(*) FROM w WHERE total > 50000", -2.30593437159], [" SELECT COUNT(*) FROM w WHERE total > 50000", -4.67400575959], [" SELECT COUNT(*) FROM w WHERE total > 50000", -5.060479459590001], [" SELECT COUNT(*) FROM w WHERE description = 'total unsolved cases' AND total > 50000", -7.244908633090001], [" SELECT COUNT(*) FROM w WHERE description <> 'total unsolved cases' AND description <> 'total population before flight & expulsion' AND description <> 'during the wartime flight' AND total > 50000", -8.819654121060003]]}, "223": {"question": "how many seasons did internacional de madrid cf play in the preferente division?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE division = 'preferente'", -1.4637672201499998], [" SELECT COUNT(*) FROM w WHERE division = 'preferente'", -1.4637672201499998], [" SELECT COUNT(*) FROM w WHERE division = 'preferente'", -1.4637672201499998], [" SELECT COUNT(*) FROM w WHERE division = 'preferente'", -1.4642538697310001], [" SELECT COUNT(*) FROM w WHERE division = 'preferente'", -1.4642538697310001], [" SELECT COUNT(*) FROM w WHERE division = 'preferente'", -1.4642538697310001], [" SELECT COUNT(*) FROM w WHERE division = 'preferente'", -3.4388924517560002], [" SELECT COUNT(*) FROM w WHERE division = 'preferente'", -4.201690677416], [" SELECT COUNT(DISTINCT season) FROM w WHERE division = 'preferente'", -10.061673410566], [" SELECT COUNT(DISTINCT season) FROM w WHERE division = 'preferente'\n```", -10.068304770706]]}, "264": {"question": "what is the total number of names on the chart?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(DISTINCT name) FROM w", -1.3505710468], [" SELECT COUNT(DISTINCT name) FROM w", -1.3505710468], [" SELECT COUNT(DISTINCT name) FROM w", -1.3505710468], [" SELECT COUNT(DISTINCT name) FROM w", -1.3505710468], [" SELECT COUNT(DISTINCT name) FROM w", -1.3505710468], [" SELECT COUNT(DISTINCT name) FROM w", -1.3505710468], [" SELECT COUNT(DISTINCT name) FROM w", -2.6174524968000004], [" SELECT COUNT(DISTINCT name) FROM w", -2.6174524968000004], [" SELECT COUNT(*) FROM w", -4.77185776348], [" SELECT COUNT(*) FROM w", -10.443208349876]]}, "305": {"question": "how many times did s\u00e9bastien bourdais win the champ car world series between 2005 and 2007?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season BETWEEN 2005 AND 2007", -3.0764904744100003], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season BETWEEN 2005 AND 2007", -3.0764904744100003], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season BETWEEN 2005 AND 2007", -3.0806418739079993], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season BETWEEN 2005 AND 2007", -3.0806893858579993], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season BETWEEN 2005 AND 2007", -3.0806893858579993], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season BETWEEN 2005 AND 2007", -3.0806893858579993], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season BETWEEN 2005 AND 2007", -3.0806893858579993], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season >= 2005 AND season <= 2007", -3.5251470180179996], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season >= 2005 AND season <= 2007", -3.5251470180179996], [" SELECT COUNT(*) FROM w WHERE driver = 's\u00e9bastien bourdais' AND season >= 2005 AND season <= 2007", -3.5266258622599995]]}, "346": {"question": "what is the number of teams that had drivers all from the same country?", "gold_answer": ["4"], "pred_answer": {"0": [[1, 1], [1, 1], "<error>", [0], [2], [19], [1, 1], "<error>", [19], [19]]}, "nsql": [[" SELECT COUNT(DISTINCT team) FROM w GROUP BY team HAVING COUNT(DISTINCT driver) = 1", -5.076611157947001], [" SELECT COUNT(DISTINCT team) FROM w GROUP BY team HAVING COUNT(DISTINCT driver) = 1", -5.076611157947001], [" SELECT COUNT(DISTINCT team) FROM w GROUP BY team HAVING COUNT(DISTINCT country) = 1", -6.171590159546999], [" SELECT COUNT(DISTINCT team) FROM w WHERE (SELECT COUNT(DISTINCT driver) FROM w WHERE team = w.team) = 1", -8.584437419656998], [" SELECT COUNT(DISTINCT team) FROM w WHERE team IN (SELECT DISTINCT team FROM w GROUP BY team HAVING COUNT(DISTINCT driver) = 1)", -9.169249119737001], [" SELECT COUNT(DISTINCT team) FROM w WHERE driver LIKE '% %' AND driver NOT LIKE '% % %'", -10.013546467637003], [" SELECT COUNT(*) FROM w GROUP BY team HAVING COUNT(DISTINCT driver) = 1", -11.063501323027], [" SELECT COUNT(DISTINCT team) FROM w WHERE team IN (SELECT DISTINCT team FROM w GROUP BY team HAVING COUNT(DISTINCT country) = 1)", -11.848483507827002], [" SELECT COUNT(DISTINCT team) FROM w WHERE driver IN (SELECT DISTINCT driver FROM w WHERE team = team)", -11.879482637086998], [" SELECT COUNT(DISTINCT(team)) FROM w WHERE driver LIKE '% %' AND (SUBSTR(driver, INSTR(driver, ' ') + 1, LENGTH(driver) - (INSTR(driver, ' ') + 1)) NOT LIKE '% %')", -20.959094562376997]]}, "387": {"question": "what is the total number of her 2nd place finishes on the list?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place = '2nd'", -3.7265287392200004], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -5.030291632415], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -5.030291632415], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -5.030291632415], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -5.033087546451999], [" SELECT COUNT(*) FROM w WHERE place = '2nd'\n```", -5.58579064696], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -6.274445346452], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -7.15030789402], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -7.15274585738], [" SELECT COUNT(*) FROM w WHERE place = '2nd'", -8.224554132415]]}, "428": {"question": "what is the difference between the number of affiliates galavision has and the number of affiliates azteca 13 has?", "gold_answer": ["0"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT affiliates FROM w WHERE network name = 'galavision'\nNeuralSQL2: SELECT affiliates FROM w WHERE network name = 'azteca 13'", -3.018738004832], [" SELECT affiliates FROM w WHERE network name = 'galavision'\nNeuralSQL2: SELECT affiliates FROM w WHERE network name = 'azteca 13'", -3.018738004832], [" SELECT affiliates FROM w WHERE network name = 'galavision'\nNeuralSQL2: SELECT affiliates FROM w WHERE network name = 'azteca 13'", -3.018738004832], [" SELECT COUNT(*) FROM w WHERE `network name` = 'galavision'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `network name` = 'azteca 13'", -3.9529380516990003], [" SELECT COUNT(*) FROM w WHERE network name = 'galavision'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE network name = 'azteca 13'", -4.166882419226001], [" SELECT COUNT(*) FROM w WHERE network name = 'galavision'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE network name = 'azteca 13'", -4.169038111865002], [" SELECT affiliates FROM w WHERE `network name` = 'galavision'\nNeuralSQL2: SELECT affiliates FROM w WHERE `network name` = 'azteca 13'", -6.086644016802], [" SELECT affiliates FROM w WHERE `network name` = 'galavision'\nNeuralSQL2: SELECT affiliates FROM w WHERE `network name` = 'azteca 13'", -6.086644016802], [" SELECT affiliates FROM w WHERE `network name` = 'galavision'\nNeuralSQL2: SELECT affiliates FROM w WHERE `network name` = 'azteca 13'", -9.734853241482], [" SELECT `affiliates` FROM w WHERE `network name` = 'galavision'\nNeuralSQL2: SELECT `affiliates` FROM w WHERE `network name` = 'azteca 13'", -9.756233940362]]}, "469": {"question": "which name appears more often, kottern or bayreuth?", "gold_answer": ["Bayreuth"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -9.0228147442], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -9.780334188910999], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -10.792284809971], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -10.902330960713002], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -11.311282741323998], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -11.316644678323998], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -11.510054313333997], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -11.550569978323999], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -11.980353741323999], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kottern%' OR south LIKE '%kottern%' OR east LIKE '%kottern%' OR west LIKE '%kottern%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north LIKE '%bayreuth%' OR south LIKE '%bayreuth%' OR east LIKE '%bayreuth%' OR west LIKE '%bayreuth%'", -12.436228241323999]]}, "510": {"question": "was the attendance of the game held on 11/19/2013 greater than 1,000?", "gold_answer": ["Yes"], "pred_answer": {"0": [["1180"], ["1180"], ["1180"], ["1180"], ["1180"], ["1180"], ["1180"], ["1180"], ["1180"], ["1180"]]}, "nsql": [[" SELECT attendance FROM w WHERE date = '11/19/2013'", -4.00073540714], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -4.19575643402], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -4.19575643402], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -4.19575643402], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -4.19575643402], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -4.20022998593], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -4.20022998593], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -4.47416173402], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -5.19235807714], [" SELECT attendance FROM w WHERE date = '11/19/2013'", -7.20786698593]]}, "551": {"question": "what is the total number of international goals \u00e1d\u00e1m szalai has made?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [28.0], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT goal) FROM w", -3.15950689302], [" SELECT COUNT(goal) FROM w", -3.9189679333450007], [" SELECT COUNT(*) FROM w", -5.46861993], [" SELECT COUNT(*) FROM w", -5.4704944077499995], [" SELECT COUNT(*) FROM w", -5.76328293], [" SELECT SUM(goal) FROM w", -6.107149428834999], [" SELECT COUNT(*) FROM w", -6.16096270775], [" SELECT COUNT(*) FROM w", -6.3940531077500005], [" SELECT COUNT(*) FROM w", -7.0813194553], [" SELECT COUNT(*) FROM w", -7.9396349299999995]]}, "592": {"question": "how many times did he finish in the top three?", "gold_answer": ["2"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0563116318900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003], [" SELECT COUNT(*) FROM w WHERE finish <= 3", -2.0573862698900003]]}, "633": {"question": "how many games did the harrisburg heat win in which they scored eight or more goals?", "gold_answer": ["4"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE results\\nscore LIKE '%8 - %'", -9.288256557239999], [" SELECT COUNT(*) FROM w WHERE `results\\nscore` LIKE '%8-%' AND `results\\nscore` LIKE '%w%'", -10.36676039518], [" SELECT COUNT(*) FROM w WHERE `results\\nscore` LIKE '%w %' AND `results\\nscore` LIKE '% - 8'", -12.219689119069999], [" SELECT COUNT(*) FROM w WHERE `results\\nscore` LIKE '% - 8' OR `results\\nscore` LIKE '% - 9' OR `results\\nscore` LIKE '% - 10'", -12.576007305599997], [" SELECT COUNT(*) FROM w WHERE results\\nscore LIKE '% 8 - %' AND results\\nrecord LIKE 'w%'", -12.625065387440001], [" SELECT COUNT(*) FROM w WHERE (results\\nscore LIKE '% - 8' OR results\\nscore LIKE '8 - %') AND (results\\nrecord LIKE '% - w' OR results\\nrecord LIKE 'w - %')", -15.56388604079], [" SELECT COUNT(*) FROM w WHERE `results\\nscore` LIKE '% - 8' OR `results\\nscore` LIKE '% - 9' OR `results\\nscore` LIKE '% - 10' OR `results\\nscore` LIKE '% - 11' OR `results\\nscore` LIKE '% - 12' OR `results\\nscore` LIKE '% - 13' OR `results\\nscore` LIKE '% - 14' OR `results\\nscore` LIKE '% - 15' OR `results\\nscore` LIKE '% - 16' OR `results\\nscore` LIKE '% - 17' OR `results\\nscore` LIKE '% - 18' OR `results\\nscore` LIKE '% - 19' OR `results\\nscore` LIKE '% - 20'", -15.839220597217992], [" SELECT COUNT(*) FROM w WHERE `results\\nscore` LIKE '% - %' AND `results\\nrecord` LIKE 'w%' AND (CAST(SUBSTR(`results\\nscore`, 1, INSTR(`results\\nscore`, '-') - 1) AS INT) - CAST(SUBSTR(`results\\nscore`, INSTR(`results\\nscore`, '-') + 1, LENGTH(`results\\nscore`) - (INSTR(`results\\nscore`, ' - ') + 1)) AS INT)) >= 8", -16.671473955779497], [" SELECT COUNT(*) FROM w WHERE `results\\nscore` LIKE 'w %' AND `results\\nscore` LIKE '% - %' AND CAST(SUBSTR(`results\\nscore`, INSTR(`results\\nscore`, '-') + 1, LENGTH(`results\\nscore`) - (INSTR(`results\\nscore`, ' - ') + 1)) AS INT) > 8", -24.239686707870003], [" SELECT COUNT(*) FROM w WHERE `results\\nscore` LIKE '% - 8%' OR `results\\nscore` LIKE '% - 9%' OR `results\\nscore` LIKE '% - 10%' OR `results\\nscore` LIKE '% - 11%' OR `results\\nscore` LIKE '% - 12%'\nQ2: {how many = a2} games were played in which the harrisburg heat scored at least seven goals.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `results\\nscore` LIKE '% - 7%' OR `results\\nscore` LIKE '% - 8%' OR `results\\nscore` LIKE '% - 9%' OR `results\\nscore` LIKE '% - 10%' OR `results\\nscore` LIKE '% - 11%' OR `results\\nscore` LIKE '% - 12%'\nQ3: {how many = a3} games were played in which the harrisburg heat scored at least seven goals and lost.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `results\\nscore", -34.25778143196997]]}, "674": {"question": "how many runs did ted tyler have?", "gold_answer": ["297"], "pred_answer": {"0": [[297], [297], [297], [297], [297], [297], [297], [297], [297], [297]]}, "nsql": [[" SELECT runs FROM w WHERE player = 'ted tyler'", -3.91048705457], [" SELECT runs FROM w WHERE player = 'ted tyler'", -3.91048705457], [" SELECT runs FROM w WHERE player = 'ted tyler'", -3.91048705457], [" SELECT runs FROM w WHERE player = 'ted tyler'", -4.13683564027], [" SELECT runs FROM w WHERE player = 'ted tyler'", -4.432101412470001], [" SELECT runs FROM w WHERE player = 'ted tyler'", -5.833584052269999], [" SELECT runs FROM w WHERE player = 'ted tyler'", -5.833584052269999], [" SELECT runs FROM w WHERE player = 'ted tyler'", -6.256966812269999], [" SELECT runs FROM w WHERE player = 'ted tyler'", -6.256966812269999], [" SELECT runs FROM w WHERE player = 'ted tyler'", -9.99824729427]]}, "715": {"question": "which type of medal does belarus not have?", "gold_answer": ["Silver"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "3": ["<error>"]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'", -0.9160805149030001], [" SELECT gold FROM w WHERE nation = 'belarus'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'belarus'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'belarus'\n```", -15.449386800572999]]}, "756": {"question": "how many more medals did india earn compared to pakistan?", "gold_answer": ["1"], "pred_answer": {"0": [[null], [null], [null], [null], [3], [3], [3], [3], [3], [3]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'pakistan'", -3.250564363666], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'pakistan'", -3.250564363666], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'pakistan'", -3.2519628562349996], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'pakistan'", -3.8166123118699997], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%india%'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%pakistan%'", -6.722092602228999], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation LIKE '%india%'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation LIKE '%pakistan%'", -7.358607248809999], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%india%'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%pakistan%'", -7.602926476097997], [" SELECT SUM(total) FROM w WHERE nation LIKE '%india%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%pakistan%'", -8.0344787542], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%india%'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation LIKE '%pakistan%'", -8.049869267599], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation LIKE '%india%'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation LIKE '%pakistan%'", -8.06284262283]]}, "797": {"question": "how many floors does the foshay tower have?", "gold_answer": ["32"], "pred_answer": {"0": [[32], [32], [32], [32], [32], [32], [32], [32], [32], [32]]}, "nsql": [[" SELECT floors FROM w WHERE name = 'foshay tower'", -2.8052426594749997], [" SELECT floors FROM w WHERE name = 'foshay tower'", -2.80664637268], [" SELECT floors FROM w WHERE name = 'foshay tower'", -2.8088729749300003], [" SELECT floors FROM w WHERE name = 'foshay tower'", -2.809192357739], [" SELECT floors FROM w WHERE name = 'foshay tower'", -2.809192357739], [" SELECT floors FROM w WHERE name = 'foshay tower'", -2.809192357739], [" SELECT floors FROM w WHERE name = 'foshay tower'", -2.809192357739], [" SELECT `floors` FROM w WHERE name = 'foshay tower'", -3.263457925422], [" SELECT floors FROM w WHERE name = 'foshay tower'", -4.563551722195001], [" SELECT floors FROM w WHERE name = 'foshay tower'", -5.262976891355001]]}, "800": {"question": "how many action games were released in north america?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [0], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -4.377152982315], [" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -4.377152982315], [" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -6.959595895725], [" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -6.959595895725], [" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -9.958441164145], [" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -9.958441164145], [" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -9.958441164145], [" SELECT COUNT(*) FROM w WHERE release LIKE '%na%' AND genre = 'action'", -10.515259851864998], [" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -10.811428200284999], [" SELECT COUNT(*) FROM w WHERE genre = 'action' AND regions LIKE '%na%'", -11.368418560904999]]}, "821": {"question": "what is the total number of cbs stations?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.74657181096], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.74657181096], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.75804293092], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.75804293092], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.75804293092], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.7586847184599996], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.7586847184599996], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -3.10438190961], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -3.1150790163999997], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -3.1150790163999997]]}, "838": {"question": "how many times did kansas and kansas state play in lawrence from 1902-1968?", "gold_answer": ["34"], "pred_answer": {"0": [[34], [34], [34], [34], [34], [34], [34], [34], [34], [34]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (year BETWEEN 1902 AND 1968) AND site = 'lawrence'", -5.62087023987], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year BETWEEN 1902 AND 1968", -5.711338822695999], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year BETWEEN 1902 AND 1968", -5.711338822695999], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year BETWEEN 1902 AND 1968", -5.711338822695999], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year BETWEEN 1902 AND 1968", -5.7348094006500006], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year BETWEEN 1902 AND 1968", -5.7348094006500006], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year >= 1902 AND year <= 1968", -6.08800062889], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year >= 1902 AND year <= 1968", -6.091869229706999], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year BETWEEN 1902 AND 1968", -6.365768202629998], [" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND year >= 1902 AND year <= 1968", -7.835834129706999]]}, "842": {"question": "how many rolls did jennifer tilly play in the 1980s?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": ["<error>"], "2": [[34]], "3": ["<error>"], "4": [[28]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year BETWEEN 1980 AND 1989", -6.260387261726001], [" SELECT COUNT(*) FROM w WHERE year >= 1980 AND year < 1990", -6.3165421335200005], [" SELECT COUNT(*) FROM w WHERE year >= 1980 AND year < 1990", -6.3198627451950005], [" SELECT COUNT(*) FROM w WHERE year >= 1980 AND year < 1990", -8.65230720162], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1980 AND 1989", -10.43931258634], [" SELECT COUNT(*) FROM w WHERE year >= 1980 AND year <= 1989", -10.4704114913], [" SELECT COUNT(*) FROM w WHERE year >= 1980 AND year < 1990", -10.471918140195], [" SELECT COUNT(*) FROM w WHERE year >= 1980 AND year < 1990", -10.584950040195], [" SELECT COUNT(*) FROM w WHERE year >= 1980 AND year < 1990", -10.65532412452], [" SELECT COUNT(*) FROM w WHERE year >= 1980 AND year < 1990\nQ2: {how many = a2} rolls did jennifer tilly play in the 2000s.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year >= 2000 AND year < 2010\nQ3: {how many = a3} rolls did jennifer tilly play in the 1990s.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year >= 1990 AND year < 2000", -14.221422421636005]]}, "879": {"question": "who had more silvers? colmbia or the bahamas", "gold_answer": ["Colombia"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": ["<error>"]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -4.692883607310001], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -4.692883607310001], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -4.69702426737], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -5.09069883851], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -5.20835309637], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -5.21134850731], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -5.21134850731], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'\n```", -8.421557051390002], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -8.65366226937], [" SELECT silver FROM w WHERE nation = 'colombia'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'bahamas'", -11.13782926731]]}, "883": {"question": "how many male and female german speakers are there?", "gold_answer": ["35931"], "pred_answer": {"0": [[17409], [17409], [17409], [17409], [17409], [17409], [17409], [17409], [17409], [17409]], "1": [[18522], [18522], [18522], [18522], [18522], [18522], [18522], [18522], [18522], [18522]]}, "nsql": [[" SELECT males FROM w WHERE language = 'german'\nNeuralSQL2: SELECT females FROM w WHERE language = 'german'", -2.0081003377349997], [" SELECT `males` FROM w WHERE language = 'german'\nNeuralSQL2: SELECT `females` FROM w WHERE language = 'german'", -2.4809093929150015], [" SELECT `males` FROM w WHERE language = 'german'\nNeuralSQL2: SELECT `females` FROM w WHERE language = 'german'", -2.4809093929150015], [" SELECT `males` FROM w WHERE `language` = 'german'\nNeuralSQL2: SELECT `females` FROM w WHERE `language` = 'german'", -8.919050666244999], [" SELECT SUM(males) FROM w WHERE language = 'german'\nNeuralSQL2: SELECT SUM(females) FROM w WHERE language = 'german'", -9.038377043314998], [" SELECT SUM(males) FROM w WHERE language = 'german'\nNeuralSQL2: SELECT SUM(females) FROM w WHERE language = 'german'", -9.398966153315], [" SELECT SUM(males) FROM w WHERE language = 'german'\nNeuralSQL2: SELECT SUM(females) FROM w WHERE language = 'german'", -9.990781439314999], [" SELECT SUM(males) FROM w WHERE language = 'german'\nNeuralSQL2: SELECT SUM(females) FROM w WHERE language = 'german'", -10.410053531315], [" SELECT SUM(males) FROM w WHERE language = 'german'\nNeuralSQL2: SELECT SUM(females) FROM w WHERE language = 'german'", -11.563807193314998], [" SELECT SUM(males) FROM w WHERE language = 'german'\nNeuralSQL2: SELECT SUM(females) FROM w WHERE language = 'german'", -11.778259153315]]}, "924": {"question": "which site has the most radars?", "gold_answer": ["Armavir Radar Station, Krasnodar"], "pred_answer": {"0": [["pionersky radar station at former dunayevka air base near pionersky, kaliningrad", 1], [1], [1], [1], [6], [1], [1], [9], ["altai republic", "armavir radar station, krasnodar", "krasnoyarsk", "lekhtusi radar station, leningrad oblast", "mishelevka radar station, irkutsk", "olenegorsk radar station, murmansk", "orenburg", "pechora radar station, komi", "pionersky radar station at former dunayevka air base near pionersky, kaliningrad"], [1]]}, "nsql": [[" SELECT location, COUNT(*) FROM w GROUP BY location ORDER BY COUNT(*) DESC LIMIT 1", -4.862531162659999], [" SELECT COUNT(*) FROM w WHERE location = 'pechora radar station, komi'", -8.438919007820001], [" SELECT COUNT(*) FROM w WHERE location = 'orenburg'", -8.99510191762], [" SELECT COUNT(*) FROM w WHERE location = 'altai republic'", -9.039707995619999], [" SELECT COUNT(*) FROM w WHERE type != 'none'", -9.998699514240002], [" SELECT COUNT(*) FROM w WHERE location = 'orenburg'", -10.974513636420001], [" SELECT COUNT(*) FROM w WHERE location = 'orenburg'", -11.311916036420001], [" SELECT COUNT(DISTINCT location) FROM w", -12.229594458746], [" SELECT location FROM w GROUP BY location HAVING COUNT(*) = (SELECT MAX(c) FROM (SELECT COUNT(*) AS c FROM w GROUP BY location) AS b)", -14.827418023696005], [" SELECT COUNT(*) FROM w WHERE location = 'pechora radar station, komi'", -14.890294130409998]]}, "965": {"question": "how many more releases were in compact disc format than cassette tape?", "gold_answer": ["5"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `format` = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `format` = 'cassette tape'", -2.973622493787001], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'", -5.343337809154], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'", -5.3681042516529995], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'", -6.74574183719], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'\n```", -8.170576661190001], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'", -8.4075536832], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'", -9.389211816653], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'", -9.451062716653], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'", -10.016524803989999], [" SELECT COUNT(*) FROM w WHERE format = 'compact disc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'cassette tape'", -14.105222916653002]]}, "1006": {"question": "which is the only subdivision to have a greater area than argyll and bute?", "gold_answer": ["Highland"], "pred_answer": {"0": [[20], [20], [20], [20], [20], [20], "<error>", [20], [20], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `area\\n(sq miles)` > (SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'argyll and bute')", -3.4469372571400005], [" SELECT COUNT(*) FROM w WHERE `area\\n(sq miles)` > (SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'argyll and bute')", -3.4522942314000002], [" SELECT COUNT(*) FROM w WHERE `area\\n(sq miles)` > (SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'argyll and bute')", -3.4522942314000002], [" SELECT COUNT(*) FROM w WHERE `area\\n(sq miles)` > (SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'argyll and bute')", -3.4522942314000002], [" SELECT COUNT(*) FROM w WHERE area\\n(sq miles) > (SELECT area\\n(sq miles) FROM w WHERE mainland = 'argyll and bute')", -4.043539901690001], [" SELECT COUNT(*) FROM w WHERE area\\n(sq miles) > (SELECT area\\n(sq miles) FROM w WHERE mainland = 'argyll and bute')", -4.052109450850001], [" SELECT COUNT(*) FROM w WHERE area > (SELECT area FROM w WHERE mainland = 'argyll and bute')", -4.68187303371], [" SELECT COUNT(*) FROM w WHERE `area\\n(sq miles)` > (SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'argyll and bute')", -5.71606617919], [" SELECT COUNT(*) FROM w WHERE `area\\n(sq miles)` > (SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'argyll and bute')", -5.719040998549999], [" SELECT COUNT(*) FROM w WHERE area > (SELECT area FROM w WHERE mainlad = 'argyll and bute')", -7.616436475430001]]}, "1047": {"question": "how many games have been held in minneapolis?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -2.1575800222640003], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -2.158923997984], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -2.1609309249840005], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -5.996916774474], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -6.759529214474001], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -6.962807933414001], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -7.215902244474001], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -7.3520420004739995], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'\n```", -8.979303780514], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis'", -9.309396844474]]}, "1088": {"question": "how many tournaments has this player won in his career so far?", "gold_answer": ["10"], "pred_answer": {"0": [[7], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT tournament) FROM w WHERE outcome = 'winner'", -3.3802314017400006], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -3.8939449397400003], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -3.8939449397400003], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -6.07496424449], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -6.18944916674], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -6.18944916674], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -9.54833389449], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -9.70277469449], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -10.533527194489999], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'\n```", -14.03757110154]]}, "1129": {"question": "how many gold medals were awarded between all 7 nations?", "gold_answer": ["163"], "pred_answer": {"0": [[163], [163], [163], [163], [163], [163], [163], [163], [163], [163]], "1": ["<error>"], "2": [[6]], "3": ["<error>"], "4": [[7]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT SUM(gold) FROM w", -4.550932099660002], [" SELECT SUM(gold) FROM w", -4.9554653433], [" SELECT SUM(gold) FROM w", -5.025075343299999], [" SELECT SUM(gold) FROM w", -5.1429793433], [" SELECT SUM(gold) FROM w", -5.2073923433000004], [" SELECT SUM(gold) FROM w", -5.2441260433], [" SELECT SUM(gold) FROM w", -5.4108733433000005], [" SELECT SUM(gold) FROM w", -5.523261743299999], [" SELECT SUM(gold) FROM w", -7.63704882629], [" SELECT SUM(gold) FROM w\nQ2: {how many = a2} nations won at least one gold medal.\nNeuralSQL2: SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0\nQ3: {how many = a3} nations won at least one medal of any kind.\nNeuralSQL3: SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0 OR silver > 0 OR bronze > 0\nQ4: {how many = a4} nations won at least one gold medal and one bronze medal.\nNeuralSQL4: SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0 AND bronze > 0\nQ5: {how many = a5} nations won at least one medal of any kind but no gold medals.\nNeuralSQL5: SELECT COUNT(DISTINCT nation) FROM w WHERE gold = 0 AND (silver > 0 OR bronze > 0)\nQ6: {how many = a6} nations won at least one gold medal but no silver medals.\nNeuralSQL6: SELECT COUNT(DISTINCT nation) FROM w WHERE gold >", -44.76574027442102]]}, "1170": {"question": "county has altoona and augusta?", "gold_answer": ["Eau Claire"], "pred_answer": {"0": [[1], [0], [0], [2], [0], [0], [0], [0], [0], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT county(ies)) FROM w WHERE city IN ('altoona', 'augusta')", -4.268242562], [" SELECT COUNT(*) FROM w WHERE city = 'altoona' AND city = 'augusta'", -4.28012098288], [" SELECT COUNT(*) FROM w WHERE city = 'altoona' AND city = 'augusta'", -4.28012098288], [" SELECT COUNT(*) FROM w WHERE city = 'altoona' OR city = 'augusta'", -4.980378256370001], [" SELECT COUNT(*) FROM w WHERE city LIKE '%altoona%' AND city LIKE '%augusta%'", -5.0389892003700005], [" SELECT COUNT(*) FROM w WHERE city = 'altoona' AND city = 'augusta'", -6.049485911049999], [" SELECT COUNT(*) FROM w WHERE city = 'altoona' AND city = 'augusta'", -6.049485911049999], [" SELECT COUNT(DISTINCT county(ies)) FROM w WHERE city = 'altoona' AND city = 'augusta'", -6.149376428769999], [" SELECT COUNT(DISTINCT county(ies)) FROM w WHERE city = 'altoona' AND city = 'augusta'", -6.149376428769999], [" SELECT COUNT(*) FROM w WHERE city IN ('altoona', 'augusta')", -8.228323982869998]]}, "1211": {"question": "how many more strokes were in the klm open than the barclays scottish open?", "gold_answer": ["2 strokes"], "pred_answer": {"0": [[0], [67], [6], ["67-66-66=266)"], [67], [4], [0], ["67-66-66=266"], [0], [67]], "1": [[0], [69], [6], ["65-66-69=269)"], [69], [2], [0], ["65-66-69=269"], [0], [69]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE tournament = 'klm open' AND winning score LIKE '%-% strokes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'barclays scottish open' AND winning score LIKE '%-% strokes'", -7.575669807068997], [" SELECT CAST(SUBSTR(`winning score`, INSTR(`winning score`, '(') + 1, LENGTH(`winning score`) - (INSTR(`winning score`, '(') + 1)) AS INT) FROM w WHERE tournament = 'klm open'\nNeuralSQL2: SELECT CAST(SUBSTR(`winning score`, INSTR(`winning score`, '(') + 1, LENGTH(`winning score`) - (INSTR(`winning score`, '(') + 1)) AS INT) FROM w WHERE tournament = 'barclays scottish open'", -9.159083848159996], [" SELECT LENGTH(`margin of\\nvictory`) - LENGTH(REPLACE(`margin of\\nvictory`, 'stroke', '')) FROM w WHERE tournament = 'klm open'\nNeuralSQL2: SELECT LENGTH(`margin of\\nvictory`) - LENGTH(REPLACE(`margin of\\nvictory`, 'stroke', '')) FROM w WHERE tournament = 'barclays scottish open'", -10.274905731753005], [" SELECT SUBSTR(`winning score`, INSTR(`winning score`, '-') + 1, LENGTH(`winning score`) - (INSTR(`winning score`, ' - ') + 1)) FROM w WHERE tournament = 'klm open'\nNeuralSQL2: SELECT SUBSTR(`winning score`, INSTR(`winning score`, '-') + 1, LENGTH(`winning score`) - (INSTR(`winning score`, ' - ') + 1)) FROM w WHERE tournament = 'barclays scottish open'", -13.834165314827992], [" SELECT CAST(SUBSTR(`winning score`, INSTR(`winning score`, '(') + 1, INSTR(`winning score`, '(') - 1) AS INT) FROM w WHERE tournament = 'klm open'\nNeuralSQL2: SELECT CAST(SUBSTR(`winning score`, INSTR(`winning score`, '(') + 1, INSTR(`winning score`, '(') - 1) AS INT) FROM w WHERE tournament = 'barclays scottish open'", -14.377852313805002], [" SELECT CAST(REPLACE(`margin of\\nvictory`, ' strokes', '') AS INT) FROM w WHERE tournament = 'klm open'\nNeuralSQL2: SELECT CAST(REPLACE(`margin of\\nvictory`, ' strokes', '') AS INT) FROM w WHERE tournament = 'barclays scottish open'", -14.872859974250002], [" SELECT COUNT(*) FROM w WHERE tournament = 'klm open' AND (`winning score` LIKE '%strokes%' OR `winning score` LIKE '%stroke%')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'barclays scottish open' AND (`winning score` LIKE '%strokes%' OR `winning score` LIKE '%stroke%')", -16.096859218948], [" SELECT SUBSTR(`winning score`, INSTR(`winning score`, '-') + 1, LENGTH(`winning score`) - (INSTR(`winning score`, '-') + 1)) FROM w WHERE tournament = 'klm open'\nNeuralSQL2: SELECT SUBSTR(`winning score`, INSTR(`winning score`, '-') + 1, LENGTH(`winning score`) - (INSTR(`winning score`, '-') + 1)) FROM w WHERE tournament = 'barclays scottish open'", -16.888191680919], [" SELECT COUNT(*) FROM w WHERE tournament = 'klm open' AND `winning score` LIKE '%stroke%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'barclays scottish open' AND `winning score` LIKE '%stroke%'", -17.161305457159997], [" SELECT SUM(CAST(SUBSTR(`winning score`, INSTR(`winning score`, '(') + 1, LENGTH(`winning score`) - (INSTR(`winning score`, '(') + 1)) AS INT)) FROM w WHERE tournament = 'klm open'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`winning score`, INSTR(`winning score`, '(') + 1, LENGTH(`winning score`) - (INSTR(`winning score`, '(') + 1)) AS INT)) FROM w WHERE tournament = 'barclays scottish open'", -17.244653011009]]}, "1252": {"question": "how many films did morgan creek make in 2006?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998], [" SELECT COUNT(*) FROM w WHERE year = 2006", -1.0512894504459998]]}, "34": {"question": "do chipper adams and justin beyendeza have more than 3 wins?", "gold_answer": ["no"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -6.166500249069999], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -6.66647822807], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -6.83981726041], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -9.78733660904], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -10.05055325641], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -10.73966645641], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -10.85095685641], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -10.924358196788], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -10.93593586994], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -13.076785080410001]]}, "75": {"question": "what number of nations received 1 medal?", "gold_answer": ["10"], "pred_answer": {"0": [[14], [14], [14], [14], [10], [10], [10], [10], [10], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 1 OR silver = 1 OR bronze = 1", -2.779561020055001], [" SELECT COUNT(*) FROM w WHERE gold = 1 OR silver = 1 OR bronze = 1", -2.779561020055001], [" SELECT COUNT(*) FROM w WHERE gold = 1 OR silver = 1 OR bronze = 1", -2.7800224104550004], [" SELECT COUNT(*) FROM w WHERE gold = 1 OR silver = 1 OR bronze = 1", -2.7800224104550004], [" SELECT COUNT(*) FROM w WHERE total = 1", -2.862868791655], [" SELECT COUNT(*) FROM w WHERE total = 1", -2.862868791655], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze = 1", -2.9725332492649996], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze = 1", -2.9736886917649996], [" SELECT COUNT(*) FROM w WHERE (gold + silver + bronze) = 1", -7.129859641354999], [" SELECT COUNT(*) FROM w WHERE (gold = 1 OR silver = 1 OR bronze = 1) AND rank != 'total' AND rank != 'none'", -7.695906201554998]]}, "116": {"question": "how many more medals did egypt win than ivory coast?", "gold_answer": ["5"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [1], [1], [11.0], [11]], "1": [[6], [6], [6], [6], [6], [6], [1], [1], [null], [6]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'ivory coast'", -2.235837725596], [" SELECT SUM(total) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'ivory coast'", -2.235837725596], [" SELECT SUM(total) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'ivory coast'", -2.235837725596], [" SELECT SUM(total) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'ivory coast'", -2.235837725596], [" SELECT SUM(total) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'ivory coast'", -2.235837725596], [" SELECT SUM(total) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'ivory coast'", -2.235837725596], [" SELECT COUNT(*) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'ivory coast'", -3.1200418208059992], [" SELECT COUNT(*) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'ivory coast'", -3.1200418208059992], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'ivory coast'", -4.2439667668319965], [" SELECT SUM(total) FROM w WHERE nation = 'egypt'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'ivory coast'", -5.1360759001959995]]}, "157": {"question": "how many schools have had at least 3 share titles?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -3.6465858729239997], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -3.6465858729239997], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -6.809253099724], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -8.659033544374], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -9.516437276374], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -9.925386011374], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -10.395750738549001], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -10.409872738549002], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -12.088607887549], [" SELECT COUNT(*) FROM w WHERE `shared titles` >= 3", -12.108145416374]]}, "160": {"question": "how many solar saros events lasted longer than 4 minutes?", "gold_answer": ["12"], "pred_answer": {"0": [[19], [19], [4], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[20]], "3": ["<error>"], "4": [[16]], "5": ["<error>"], "6": [[3]], "7": ["<error>"], "8": [[7]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` > '4m'", -6.4876910484899994], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` > '4m'", -6.4876910484899994], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` LIKE '%m 4%'", -7.055425455416], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` LIKE '%m%' AND CAST(SUBSTR(`duration\\n(min:sec)`, 1, INSTR(`duration\\n(min:sec)`, 'm') - 1) AS INT) > 4", -9.836531549420002], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` LIKE '%m%' AND CAST(SUBSTR(`duration\\n(min:sec)`, 1, INSTR(`duration\\n(min:sec)`, 'm') - 1) AS INT) > 4", -9.836531549420002], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` LIKE '%m %s' AND CAST(SUBSTR(`duration\\n(min:sec)`, 1, INSTR(`duration\\n(min:sec)`, 'm') - 1) AS INT) > 4", -12.082403343519996], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` LIKE '%-%' AND (CAST(SUBSTR(`duration\\n(min:sec)`, 1, INSTR(`duration\\n(min:sec)`, ':') - 1) AS INT) * 60 + CAST(SUBSTR(`duration\\n(min:sec)`, INSTR(`duration\\n(min:sec)`, ':') + 1, LENGTH(`duration\\n(min:sec)`) - (INSTR(`duration\\n(min:sec)`, ':') + 1)) AS INT)) > 240", -14.732087699027996], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` LIKE '%m %s' AND CAST(SUBSTR(`duration\\n(min:sec)`, 1, INSTR(`duration\\n(min:sec)`, 'm') - 1) AS INT) > 4", -15.86456335796], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` LIKE '%m %s' AND CAST(SUBSTR(`duration\\n(min:sec)`, 1, INSTR(`duration\\n(min:sec)`, 'm') - 1) AS INT) > 4", -19.772957427959998], [" SELECT COUNT(*) FROM w WHERE `duration\\n(min:sec)` LIKE '%m%' AND CAST(SUBSTR(`duration\\n(min:sec)`, 1, INSTR(`duration\\n(min:sec)`, 'm') - 1) AS INT) > 4\nQ2: {how many = a2} solar saros events were annular.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'annular'\nQ3: {how many = a3} solar saros events were total.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE type = 'total'\nQ4: {how many = a4} solar saros events were hybrid.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE type = 'hybrid'\nQ5: {how many = a5} solar saros events were partial.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE type = 'partial'\nQ6: {how many = a6} solar saros events were partial.\nNeuralSQL6: SELECT COUNT(*) FROM", -32.67306121721501]]}, "181": {"question": "what was the number of swedes in the top fifteen?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank <= 15", -2.7576871864399997], [" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank <= 15", -2.7576871864399997], [" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank < 15", -3.28570494544], [" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank <= 15", -4.16972757944], [" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank <= 15", -4.1713262824], [" SELECT COUNT(*) FROM w WHERE rank <= 15 AND nation = 'sweden'", -4.755775433140001], [" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank_3 <= 15", -7.835968425439999], [" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank_3 <= 15", -7.835968425439999], [" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank_2 <= 15", -8.006390577494999], [" SELECT COUNT(*) FROM w WHERE nation = 'sweden' AND rank_3 <= 15", -12.360548507289998]]}, "198": {"question": "which month held the most winchester 400 races?", "gold_answer": ["October"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": [[31], [31], [31], [31], [31], [31], [31], [31], [31], [31]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE 'september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'october%'", -2.8432454609969997], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '%october%'", -3.0006278274549993], [" SELECT COUNT(*) FROM w WHERE date LIKE '%september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '%october%'", -3.352337825657], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'october%'", -7.032720032946001], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'october%'", -7.058748788915], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '%october%'", -7.239521386154999], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'october%'", -7.2548255439460005], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'october%'", -10.056910754946001], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'october%'", -10.608446538618], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'october%'", -13.718527256335]]}, "202": {"question": "which is the only player from germany?", "gold_answer": ["Jeanvion Yulu-Matondo"], "pred_answer": {"0": ["<error>", [0], "<error>", [0], [0], [0], "<error>", "<error>", "<error>", [14]], "1": ["<error>"], "2": [[14]], "3": ["<error>"], "4": [[14]], "5": ["<error>"], "6": [[14]], "7": ["<error>"], "8": [[14]], "9": ["<error>"], "10": [[14]], "11": ["<error>"], "12": [[14]], "13": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'germany'", -5.071259364414001], [" SELECT COUNT(*) FROM w WHERE player LIKE '%germany%'", -5.454712023603999], [" SELECT COUNT(*) FROM w WHERE country = 'germany'", -5.998569437774], [" SELECT COUNT(*) FROM w WHERE player = 'germany'", -7.847942320144], [" SELECT COUNT(*) FROM w WHERE player = 'germany'", -7.863121324093999], [" SELECT COUNT(*) FROM w WHERE player = 'germany'", -7.9625115157240005], [" SELECT COUNT(*) FROM w WHERE country = 'germany'", -8.722897597774], [" SELECT COUNT(*) FROM w WHERE country = 'germany'", -8.936863486154], [" SELECT COUNT(*) FROM w WHERE country = 'germany'", -10.029362497774], [" SELECT COUNT(*) FROM w WHERE player NOT LIKE 'total'\nQ2: {how many = a2} player from germany.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player NOT LIKE 'total'\nQ3: {how many = a3} player from germany.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE player NOT LIKE 'total'\nQ4: {how many = a4} player from germany.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE player NOT LIKE 'total'\nQ5: {how many = a5} player from germany.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE player NOT LIKE 'total'\nQ6: {how many = a6} player from germany.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE player NOT LIKE 'total'\nQ7: {how many = a7} player from germany.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE player NOT LIKE 'total'\nQ8: {how many = a8} player from", -22.81571528463098]]}, "239": {"question": "is the number of freshmen (fr.) greater than, equal to, or less than the number of juniors (jr.)?", "gold_answer": ["greater"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE class = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'jr.'", -1.4460580937779999], [" SELECT COUNT(*) FROM w WHERE class = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'jr.'", -1.4460580937779999], [" SELECT COUNT(*) FROM w WHERE class = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'jr.'", -1.4460580937779999], [" SELECT COUNT(*) FROM w WHERE class = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'jr.'", -1.4460580937779999], [" SELECT COUNT(*) FROM w WHERE class = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'jr.'", -1.4460580937779999], [" SELECT COUNT(*) FROM w WHERE class = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'jr.'", -1.4460580937779999], [" SELECT COUNT(*) FROM w WHERE class = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'jr.'", -1.4460580937779999], [" SELECT COUNT(*) FROM w WHERE class = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'jr.'", -1.4460580937779999], [" SELECT COUNT(*) FROM w WHERE `class` = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `class` = 'jr.'", -6.371368794339001], [" SELECT COUNT(*) FROM w WHERE `class` = 'fr.'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `class` = 'jr.'", -6.374332194339001]]}, "243": {"question": "how many champions are listend in the north?", "gold_answer": ["9"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE north LIKE '%champion%'", -4.358265224165], [" SELECT COUNT(*) FROM w WHERE north LIKE '%champion%'", -4.358265224165], [" SELECT COUNT(*) FROM w WHERE north LIKE '%champions%'", -4.912220688975], [" SELECT COUNT(*) FROM w WHERE north LIKE '%champions%'", -4.912220688975], [" SELECT COUNT(*) FROM w WHERE north LIKE '%champion%'", -5.974936758865001], [" SELECT COUNT(*) FROM w WHERE north = '1. ec senden'", -6.834899623265], [" SELECT COUNT(*) FROM w WHERE north IS NOT NULL", -9.782852949605001], [" SELECT COUNT(DISTINCT north) FROM w", -10.61748667087], [" SELECT COUNT(*) FROM w WHERE north IS NOT NULL", -11.772134450605], [" SELECT COUNT(*) FROM w WHERE north IS NOT NULL", -12.291750344605]]}, "284": {"question": "how many winning oldsmobile vehicles made the list?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"], "2": [[26]], "3": ["<error>"], "4": [[26]], "5": ["<error>"], "6": [[26]], "7": ["<error>"], "8": [[26]], "9": ["<error>"], "10": [[26]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'", -3.9058887466499996], [" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'", -5.593743822499], [" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'", -5.594385991104], [" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'", -5.594385991104], [" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'", -7.149607747599001], [" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'", -7.252699991103999], [" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'", -7.326265508543], [" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'", -7.737782091104], [" SELECT COUNT(*) FROM w WHERE make LIKE '%olds%'", -7.99519193727], [" SELECT COUNT(*) FROM w WHERE make = 'oldsmobile'\nQ2: {how many = a2} of the winning vehicles were made by chevrolet.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE make = 'chevrolet'\nQ3: {how many = a3} of the winning vehicles were made by chevrolet.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE make = 'chevrolet'\nQ4: {how many = a4} of the winning vehicles were made by chevrolet.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE make = 'chevrolet'\nQ5: {how many = a5} of the winning vehicles were made by chevrolet.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE make = 'chevrolet'\nQ6: {how many = a6} of the winning vehicles were made by chevrolet.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE make = 'chevrolet'\nQ7: {how many = a7} of the winning vehicles were made by chevrolet.\nNe", -25.38744744063849]]}, "325": {"question": "what is the difference between the number of times the position of third was achieved and the number of times the position of first was achieved?", "gold_answer": ["1"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = '3rd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = '1st'", -1.8471150902970002], [" SELECT COUNT(*) FROM w WHERE position = '3rd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = '1st'", -1.849068856793], [" SELECT COUNT(*) FROM w WHERE position = '3rd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = '1st'", -1.849068856793], [" SELECT COUNT(*) FROM w WHERE position = '3rd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = '1st'", -1.849068856793], [" SELECT COUNT(*) FROM w WHERE position = '3rd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = '1st'", -1.849068856793], [" SELECT COUNT(*) FROM w WHERE position LIKE '%3rd%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position LIKE '%1st%'", -7.8205024936320005], [" SELECT COUNT(*) FROM w WHERE position LIKE '%3rd%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position LIKE '%1st%'", -7.820558990528], [" SELECT COUNT(*) FROM w WHERE position LIKE '%3rd%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position LIKE '%1st%'", -8.516435390528], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position LIKE '%st%'\n```", -11.653092625669998], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position LIKE '%st%'", -12.91901204525]]}, "366": {"question": "what are the total of super chinese games released?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [12], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w", -4.266994670110001], [" SELECT COUNT(*) FROM w", -4.266994670110001], [" SELECT COUNT(*) FROM w", -4.266994670110001], [" SELECT COUNT(*) FROM w WHERE japanese title LIKE 'super chinese%'", -5.460110543209999], [" SELECT COUNT(*) FROM w", -5.70890875986], [" SELECT COUNT(*) FROM w", -7.19534075086], [" SELECT COUNT(*) FROM w", -7.19534075086], [" SELECT COUNT(*) FROM w", -9.82938455086], [" SELECT COUNT(*) FROM w", -10.036979650860001], [" SELECT COUNT(DISTINCT japanese title) FROM w", -12.152784771330001]]}, "407": {"question": "what is the total current listing of names on this chart?", "gold_answer": ["23"], "pred_answer": {"0": [[23], [23], [23], [23], [23], [23], [23], [23], [23], [23]], "1": ["<error>", "<error>"], "2": [[7]], "3": ["<error>"], "4": [[15]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[7]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.3786833052069998], [" SELECT COUNT(*) FROM w", -1.3786833052069998], [" SELECT COUNT(*) FROM w", -1.3786833052069998], [" SELECT COUNT(*) FROM w", -1.3786833052069998], [" SELECT COUNT(*) FROM w", -3.4669660815400003], [" SELECT COUNT(*) FROM w\n```", -4.349603449990001], [" SELECT COUNT(DISTINCT name) FROM w", -4.49220277293], [" SELECT COUNT(DISTINCT name) FROM w", -6.174126567719998], [" SELECT COUNT(DISTINCT name) FROM w", -11.05352139176], [" SELECT COUNT(*) FROM w\nQ2: the total current listing of cities on this chart is {how many = a2}.\nNeuralSQL2: SELECT COUNT(DISTINCT city) FROM w\nQ3: there are {how many = a3} city with the name of coldwater.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE city = 'coldwater'\nQ4: the number of city with the name of coldwater is {how many = a4}.\nNeuralSQL4: SELECT COUNT(DISTINCT city) FROM w WHERE city = 'coldwater'\nQ5: the number of cities with the name of coldwater is {how many = a5}.\nNeuralSQL5: SELECT COUNT(DISTINCT city) FROM w WHERE city = 'coldwater'\nQ6: the total current listing of cities on this chart is {how many = a6}.\nNeuralSQL6: SELECT COUNT(DISTINCT city) FROM w\nQ7: the number of cities with the name of coldwater is {how many = a7}.\nNeuralSQL7: SELECT", -51.303193972781976]]}, "448": {"question": "which other traine, other than wall street, had philadelphia as a destination?", "gold_answer": ["Crusader"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE destination LIKE '%philadelphia%'", -1.815852627275], [" SELECT COUNT(*) FROM w WHERE destination LIKE '%philadelphia%'", -1.815852627275], [" SELECT COUNT(*) FROM w WHERE destination LIKE '%philadelphia%'", -1.892131544705], [" SELECT COUNT(*) FROM w WHERE destination LIKE '%philadelphia%'", -1.892131544705], [" SELECT COUNT(*) FROM w WHERE destination LIKE '%philadelphia%'", -1.892131544705], [" SELECT COUNT(*) FROM w WHERE destination LIKE '%philadelphia%'", -1.892131544705], [" SELECT COUNT(*) FROM w WHERE destination LIKE '%philadelphia%'", -1.892131544705], [" SELECT COUNT(*) FROM w WHERE destination = 'philadelphia, pennsylvania'", -2.4444891943849996], [" SELECT COUNT(*) FROM w WHERE destination LIKE '%philadelphia%'", -3.102831224355], [" SELECT COUNT(*) FROM w WHERE destination = 'philadelphia, pennsylvania'", -3.3572599638550003]]}, "489": {"question": "did mitsuo kamata have more than 40 total points?", "gold_answer": ["No"], "pred_answer": {"0": [["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], [40]]}, "nsql": [[" SELECT total FROM w WHERE player = 'mitsuo kamata'", -2.1698266452599997], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -2.1698266452599997], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -2.1698266452599997], [" SELECT `total` FROM w WHERE player = 'mitsuo kamata'", -2.70247083959], [" SELECT `total` FROM w WHERE player = 'mitsuo kamata'", -2.70247083959], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -4.57454362657], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -4.57454362657], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -4.57454362657], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -6.05081024763], [" SELECT SUM(CAST(SUBSTR(total, 1, INSTR(total, '(') - 1) AS INT)) FROM w WHERE player = 'mitsuo kamata'", -6.074660562069999]]}, "530": {"question": "how many times were roddick's opponents not from the usa?", "gold_answer": ["8"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -2.3074853943], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -2.3074853943], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -2.3074853943], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -2.3074853943], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -2.3074853943], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -2.3074853943], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -2.3074853943], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -3.9810946825999998], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -3.9810946825999998], [" SELECT COUNT(*) FROM w WHERE opponent NOT LIKE '%usa%'", -3.9810946825999998]]}, "571": {"question": "how many times was the album released?", "gold_answer": ["13"], "pred_answer": {"0": [[16], [9], [9], [7], [14], [7], [7], [9], [9], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w", -3.8818598470300003], [" SELECT COUNT(DISTINCT date) FROM w", -9.85031080148], [" SELECT COUNT(DISTINCT date) FROM w", -9.85031080148], [" SELECT COUNT(DISTINCT region) FROM w", -9.915752386350002], [" SELECT COUNT(DISTINCT catalog) FROM w", -10.394372770554], [" SELECT COUNT(DISTINCT region) FROM w", -11.08343875535], [" SELECT COUNT(DISTINCT region) FROM w", -11.255036938424], [" SELECT COUNT(DISTINCT(date)) FROM w", -12.02625071037], [" SELECT COUNT(DISTINCT date) FROM w", -14.160063802074], [" SELECT COUNT(DISTINCT region) FROM w", -16.145481276494003]]}, "612": {"question": "how many times was josh constable second?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE second = 'josh constable'", -1.8988743539300001], [" SELECT COUNT(*) FROM w WHERE second = 'josh constable'", -1.8988743539300001], [" SELECT COUNT(*) FROM w WHERE second = 'josh constable'", -1.8988743539300001], [" SELECT COUNT(*) FROM w WHERE second = 'josh constable'", -1.8988743539300001], [" SELECT COUNT(*) FROM w WHERE second = 'josh constable'", -1.8988743539300001], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -2.9981784635499995], [" SELECT COUNT(*) FROM w WHERE second = 'josh constable'", -3.5478174869599997], [" SELECT COUNT(*) FROM w WHERE second = 'josh constable'", -3.5478174869599997], [" SELECT COUNT(*) FROM w WHERE second = 'josh constable'", -3.5478174869599997], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -5.08268773743]]}, "653": {"question": "which countries won the same number of gold medals as japan?", "gold_answer": ["Afghanistan (AFG)", "Qatar (QAT)"], "pred_answer": {"0": [[], [], [], [], [], [], [null], [1], [], []], "1": [[0], [0], [0], [0], [0], [0], [0], [3], [0], [0]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = (SELECT gold FROM w WHERE nation = 'japan')", -3.5352403482979993], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = (SELECT gold FROM w WHERE nation = 'japan')", -3.5352403482979993], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = (SELECT gold FROM w WHERE nation = 'japan')", -3.5352403482979993], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = (SELECT gold FROM w WHERE nation = 'japan')", -3.5352403482979993], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = (SELECT gold FROM w WHERE nation = 'japan')", -3.538474662048], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = (SELECT gold FROM w WHERE nation = 'japan')", -3.5394717117079995], [" SELECT SUM(gold) FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = (SELECT gold FROM w WHERE nation = 'japan')", -5.360180315317998], [" SELECT SUM(gold) FROM w WHERE nation LIKE '%japan%'\nNeuralSQL2: SELECT COUNT(DISTINCT nation) FROM w WHERE gold = (SELECT gold FROM w WHERE nation LIKE '%japan%')", -7.0948814514404], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation != 'japan' AND gold = (SELECT gold FROM w WHERE nation = 'japan')", -9.272810034748003], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT COUNT(DISTINCT gold) FROM w WHERE gold = (SELECT gold FROM w WHERE nation = 'japan')", -14.112345558411498]]}, "694": {"question": "how many people live in the bold civil parish?", "gold_answer": ["2,283"], "pred_answer": {"0": [[11913], [110316], [110316], [110316], [110316], [110316], [11913], [11913], [110316], [11913]]}, "nsql": [[" SELECT population FROM w WHERE name = 'rainhill'", -3.4534920939999996], [" SELECT SUM(population) FROM w WHERE status = 'civil parish'", -5.546195745127], [" SELECT SUM(population) FROM w WHERE status = 'civil parish'", -5.546195745127], [" SELECT SUM(population) FROM w WHERE status = 'civil parish'", -5.546195745127], [" SELECT SUM(population) FROM w WHERE status = 'civil parish'", -5.546195745127], [" SELECT SUM(population) FROM w WHERE status = 'civil parish'", -5.546195745127], [" SELECT population FROM w WHERE name = 'rainhill'", -6.1768572125], [" SELECT population FROM w WHERE name = 'rainhill'", -6.1768572125], [" SELECT SUM(population) FROM w WHERE status = 'civil parish'", -7.7967192361], [" SELECT SUM(population) FROM w WHERE name = 'rainhill'", -8.402355532751999]]}, "735": {"question": "in how many games were than more than 80,000 people attending", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance > 80000", -1.1627597483], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -1.1632774344], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -1.1637431438], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -1.1637431438], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -1.1637431438], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -1.1637564745], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -1.1639855698000001], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -3.0110181593000003], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -3.0157668821], [" SELECT COUNT(*) FROM w WHERE attendance > 80000", -4.0534635012999995]]}, "776": {"question": "how many series had 8 episodes?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(*) FROM w WHERE `no. of ep.` = '8'", -1.5910945964650003], [" SELECT COUNT(DISTINCT(`dvd title`)) FROM w WHERE `no. of ep.` = '8'", -13.674226119361002]]}, "817": {"question": "which was better selling, hunningolla or vain elamaa?", "gold_answer": ["Vain el\u00e4m\u00e4\u00e4"], "pred_answer": {"0": [[27655], [27655], [27655], [27655], [27655], [], [27655], [1], [null], [27655]], "1": [[164119, 81725], [164119, 81725], [245844], [245844], [245844], [164119, 81725], [164119, 81725], [2], [245844], [164119, 81725]], "2": ["<error>"]}, "nsql": [[" SELECT sales FROM w WHERE album = 'hunningolla'\nNeuralSQL2: SELECT sales FROM w WHERE album = 'vain elamaa'", -2.864099733871], [" SELECT sales FROM w WHERE album = 'hunningolla'\nNeuralSQL2: SELECT sales FROM w WHERE album = 'vain elamaa'", -2.865503679960001], [" SELECT SUM(sales) FROM w WHERE album = 'hunningolla'\nNeuralSQL2: SELECT SUM(sales) FROM w WHERE album = 'vain elamaa'", -3.9577095300550003], [" SELECT SUM(sales) FROM w WHERE album = 'hunningolla'\nNeuralSQL2: SELECT SUM(sales) FROM w WHERE album = 'vain elamaa'", -3.9577095300550003], [" SELECT SUM(sales) FROM w WHERE album = 'hunningolla'\nNeuralSQL2: SELECT SUM(sales) FROM w WHERE album = 'vain elamaa'", -3.960539476734], [" SELECT sales FROM w WHERE artist(s) = 'hunningolla'\nNeuralSQL2: SELECT sales FROM w WHERE album = 'vain elamaa'", -4.554364754336], [" SELECT sales FROM w WHERE album = 'hunningolla'\nNeuralSQL2: SELECT sales FROM w WHERE album = 'vain elamaa'", -4.93394397124], [" SELECT COUNT(*) FROM w WHERE album = 'hunningolla'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE album = 'vain elamaa'", -5.804960986465], [" SELECT SUM(sales) FROM w WHERE artist(s) LIKE '%hunningolla%'\nNeuralSQL2: SELECT SUM(sales) FROM w WHERE album = 'vain elamaa'", -7.848304347489999], [" SELECT sales FROM w WHERE album = 'hunningolla'\nNeuralSQL2: SELECT sales FROM w WHERE album = 'vain elamaa'\n```", -13.894398496826001]]}, "820": {"question": "what is the number of seasons covered in the table?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(DISTINCT season) FROM w", -7.5751373412100005], [" SELECT COUNT(DISTINCT season) FROM w", -8.249475881210001], [" SELECT COUNT(DISTINCT season) FROM w", -8.25583077948], [" SELECT COUNT(DISTINCT season) FROM w", -8.272599411209999], [" SELECT COUNT(DISTINCT season) FROM w", -8.47091914948], [" SELECT COUNT(DISTINCT season) FROM w", -8.99150541121], [" SELECT COUNT(DISTINCT season) FROM w", -9.105706583009999], [" SELECT COUNT(DISTINCT season) FROM w", -9.903008503479999], [" SELECT COUNT(DISTINCT season) FROM w", -10.68296255321], [" SELECT COUNT(DISTINCT season) FROM w", -11.79201295948]]}, "841": {"question": "how many were released after zenone, imperator d'oriente?", "gold_answer": ["52"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [47]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` > (SELECT `premi\u00e8re date` FROM w WHERE title = 'zenone, imperator d'oriente')", -3.6636859852400003], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` > (SELECT `premi\u00e8re date` FROM w WHERE title = 'zenone, imperator d'oriente')", -3.6636859852400003], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` > (SELECT `premi\u00e8re date` FROM w WHERE title = 'zenone, imperator d'oriente')", -3.6636859852400003], [" SELECT COUNT(*) FROM w WHERE title > 'zenone, imperator d'oriente'", -4.57487493588], [" SELECT COUNT(*) FROM w WHERE title > 'zenone, imperator d'oriente'", -4.57487493588], [" SELECT COUNT(*) FROM w WHERE title > 'zenone, imperator d'oriente'", -4.57487493588], [" SELECT COUNT(*) FROM w WHERE title > 'zenone, imperator d'oriente'", -4.57487493588], [" SELECT COUNT(*) FROM w WHERE title > 'zenone, imperator d''oriente'", -5.36713737362], [" SELECT COUNT(*) FROM w WHERE title > 'zenone, imperator d''oriente'", -5.36713737362], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` > '1700, fa'", -9.02880269203]]}, "858": {"question": "what number of \"irregular\" types are there?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -3.7024203930499997], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -3.70319929705], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -3.70319929705], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -3.70319929705], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -3.70319929705], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -6.59265772235], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -6.5931370861400005], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -6.95769717015], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -7.197905170150001], [" SELECT COUNT(*) FROM w WHERE type LIKE '%irregular%'", -9.14487047015]]}, "862": {"question": "which year was more successful, 2007 or 2002?", "gold_answer": ["2002"], "pred_answer": {"0": [["relegated"], ["relegated"], ["14th"], [1], [1], [1], [1], [0], [0], [1]], "1": [["none"], ["none"], ["2nd"], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT `movements` FROM w WHERE season = '2007'\nNeuralSQL2: SELECT `movements` FROM w WHERE season = '2002'", -3.9480591939699994], [" SELECT `movements` FROM w WHERE season = '2007'\nNeuralSQL2: SELECT `movements` FROM w WHERE season = '2002'", -3.9483183871039995], [" SELECT position FROM w WHERE season = '2007'\nNeuralSQL2: SELECT position FROM w WHERE season = '2002'", -4.561167233539999], [" SELECT COUNT(*) FROM w WHERE season = '2007' AND position = '14th'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2002' AND position = '2nd'", -11.485747253532], [" SELECT COUNT(*) FROM w WHERE season = '2007' AND position = '14th'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2002' AND position = '2nd'", -12.978570484698], [" SELECT COUNT(*) FROM w WHERE season = '2007' AND position LIKE '%th'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2002' AND position LIKE '%nd'", -14.922531004059998], [" SELECT COUNT(*) FROM w WHERE season = '2007' and position = '14th'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2002' and position = '2nd'\n```", -15.064350689179998], [" SELECT COUNT(*) FROM w WHERE season = '2007' AND (position = '1st' OR position = '2nd' OR position = '3rd')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2002' AND (position = '1st' OR position = '2nd' OR position = '3rd')", -15.927271841129999], [" SELECT COUNT(*) FROM w WHERE season = '2007' AND (position = '1st' OR position = '2nd' OR position = '3rd')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2002' AND (position = '1st' OR position = '2nd' OR position = '3rd')", -18.023064019047997], [" SELECT SUM(CASE WHEN position = '14th' THEN 1 ELSE 0 END) FROM w WHERE season = '2007'\nNeuralSQL2: SELECT SUM(CASE WHEN position = '2nd' THEN 1 ELSE 0 END) FROM w WHERE season = '2002'", -18.62711579442999]]}, "899": {"question": "which airport had more passengers handled than the united kingdom?", "gold_answer": ["Netherlands - Amsterdam"], "pred_answer": {"0": [[0], [1], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport = 'united kingdom')", -5.4102926909699995], [" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport LIKE '%united kingdom%')", -6.024352436315001], [" SELECT COUNT(*) FROM w WHERE passengers handled > (SELECT passengers handled FROM w WHERE airport = 'united kingdom')", -6.341188187979999], [" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport = 'united kingdom')", -6.6738383682319995], [" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport = 'united kingdom')", -6.6738383682319995], [" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport = 'united kingdom')", -7.198996568231999], [" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport = 'united kingdom')", -7.541545010425001], [" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport = 'united kingdom')", -7.545094568232], [" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport = 'united kingdom')", -7.771781468232], [" SELECT COUNT(*) FROM w WHERE `passengers handled` > (SELECT `passengers handled` FROM w WHERE airport = 'united kingdom')", -9.08310397524]]}, "903": {"question": "how many singles have a ranking of 1 under ger?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'", -3.91856769304], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'", -3.921118063299999], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'", -3.92708024314], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'", -11.288213427999999], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'", -11.784234728], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'", -12.188466978], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'\n```", -12.526618613739998], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'", -12.64069634219], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'", -13.651255428], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nger` = '1'\n```", -17.00908790654]]}, "944": {"question": "how many competitors did not start the preliminaries?", "gold_answer": ["4"], "pred_answer": {"0": [[14], [14], [14], [14], [14], [0], [0], [0], [0], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE note = 'none'", -5.19060420478], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -5.19060420478], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -5.51406163488], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -5.51406163488], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -5.51406163488], [" SELECT COUNT(*) FROM w WHERE time = 'none'", -5.552427295373], [" SELECT COUNT(*) FROM w WHERE rank = 'none'", -8.434801944739998], [" SELECT COUNT(*) FROM w WHERE time = 'none'", -10.256637661373], [" SELECT COUNT(*) FROM w WHERE time = 'none'", -10.380002261373], [" SELECT COUNT(*) FROM w WHERE note = 'none'", -12.8819606143]]}, "985": {"question": "how many stars do not have a current magnitude greater than zero?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [14], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` <= 0", -2.5022477673699997], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` <= 0", -2.5022477673699997], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` <= 0", -2.5023088155], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` <= 0", -2.5023088155], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` <= 0", -2.5023088155], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` < 0", -2.7518235260999995], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` < 0", -2.75266451241], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` < 0", -2.75266451241], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -3.3139751988299997], [" SELECT COUNT(*) FROM w WHERE current\\nmagnitude < 0", -7.12756217495]]}, "1026": {"question": "how many matches are wins?", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'w'", -2.6554963010300003], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -2.6554963010300003], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -2.6554963010300003], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -2.6554963010300003], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -4.8336268185], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -7.5490145045000006], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.1563760045], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.3671261045], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -10.0471393045], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -10.5068997045]]}, "1067": {"question": "how many drivers were competing for brazil?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], "<error>", [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver LIKE '%brazil%'", -3.6580331276499995], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%brazil%'", -3.6580331276499995], [" SELECT COUNT(DISTINCT driver) FROM w WHERE country = 'brazil'", -4.079183817250001], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% brazil %'", -4.22675718217], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% brazil %'", -4.22675718217], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team = 'brazil'", -5.676846071489999], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% brazil%'", -8.31928057427], [" SELECT COUNT(*) FROM w WHERE driver = 'brazil'", -11.47395372547], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%brazil%'", -12.26830053751], [" SELECT COUNT(DISTINCT driver) FROM w WHERE team LIKE '%brazil%'", -14.20887953743]]}, "1108": {"question": "what is the difference between the number of awards won in 1988 and the number of awards won in 1995?", "gold_answer": ["4"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -1.5364840734220002], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -1.5364840734220002], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -1.5364840734220002], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -1.5364840734220002], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -1.5364840734220002], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -1.5364840734220002], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -1.5364840734220002], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -1.5364840734220002], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995", -2.681491982422], [" SELECT COUNT(*) FROM w WHERE `date of award` = 1988\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date of award` = 1995\n```", -16.726736132021998]]}, "1149": {"question": "what is the number of employees who work for pgnig sa?", "gold_answer": ["33,071"], "pred_answer": {"0": ["<error>", [33071], [33071], [33071], [33071], [33071], [33071], [33071], "<error>", [33071]]}, "nsql": [[" SELECT employees FROM w WHERE name of concern = 'pgnig sa'", -3.2400763105699997], [" SELECT employees FROM w WHERE name of\\nconcern = 'pgnig sa'", -3.3001515974400006], [" SELECT employees FROM w WHERE name of\\nconcern = 'pgnig sa'", -3.3001515974400006], [" SELECT employees FROM w WHERE name of\\nconcern = 'pgnig sa'", -3.3001515974400006], [" SELECT employees FROM w WHERE name of\\nconcern = 'pgnig sa'", -3.31805996644], [" SELECT employees FROM w WHERE name of\\nconcern = 'pgnig sa'", -3.8387973094400003], [" SELECT employees FROM w WHERE name of\\nconcern = 'pgnig sa'", -3.8387973094400003], [" SELECT employees FROM w WHERE name of\\nconcern = 'pgnig sa'", -3.8387973094400003], [" SELECT COUNT(*) FROM w WHERE name of concern = 'pgnig sa'", -4.29152566138], [" SELECT employees FROM w WHERE `name of\\nconcern` = 'pgnig sa'", -5.832275171739999]]}, "1190": {"question": "how many countries won at least 1 gold and 1 silver medal?", "gold_answer": ["5"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.5904914778700001], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.5904914778700001], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.5904914778700001], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.59123826751], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.59445676031], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.59445676031], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.59445676031], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.59445676031], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -1.59864895478], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0", -2.8483424683100003]]}, "1231": {"question": "how many times, from june 23, 1992 to december 3, 2000, did the suicide blondes hold the title?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%suicide blondes%' AND `date` >= '1992-06-23' AND `date` <= '2000-12-03'", -6.960466868740001], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%suicide blondes%' AND `date` BETWEEN '1992-06-23' AND '2000-12-03'", -7.452481496859997], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%suicide blondes%' AND (date BETWEEN '1992-06-23 00:00:00' AND '2000-12-03 00:00:00')", -8.425784793890001], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%suicide blondes%' AND date BETWEEN '1992-06-23' AND '2000-12-03'", -8.530063412519999], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%suicide blondes%' AND `date` BETWEEN '1992-6-23' AND '2000-12-3'", -8.547645834059997], [" SELECT COUNT(*) FROM w WHERE (date BETWEEN '1992-06-23' AND '2000-12-03') AND wrestlers LIKE '%suicide blondes%'", -9.259704177899001], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%suicide blondes%' AND date BETWEEN '1992-06-23' AND '2000-12-03'", -9.563345765345002], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%suicide blondes%' AND date >= '1992-06-23' AND date <= '2000-12-03'", -10.28209689066], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%suicide blondes%' AND date >= '1992-06-23' AND date <= '2000-12-03'", -10.28544489457], [" SELECT COUNT(*) FROM w WHERE `wrestlers` LIKE '%suicide blondes%' AND `date` >= '1992-06-23' AND `date` <= '2000-12-03'", -11.028097008910002]]}, "1272": {"question": "how many total pillow pals were both reintroduced and retired in 1999?", "gold_answer": ["12"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE reintroduced = '1999 (neon)' AND retired = 1999.0", -6.12427526864], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%1999%' AND `retired` = 1999.0", -7.63012940525], [" SELECT COUNT(*) FROM w WHERE reintroduced LIKE '%1999%' AND retired = '1999.0'", -8.257747820230001], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%1999%' AND `retired` LIKE '%1999%'", -9.546123946365999], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%1999%' AND `retired` = '1999.0'", -10.21598148719], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%1999%' AND `retired` = '1999.0'", -10.77884572804], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%1999%' AND `retired` = 1999.0", -13.88951401817], [" SELECT COUNT(*) FROM w WHERE reintroduced LIKE '1999%' AND retired = 1999.0", -14.206610223139998], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999%' AND `retired` LIKE '1999%'", -14.3111169652], [" SELECT COUNT(*) FROM w WHERE reintroduced LIKE '1999%' AND retired = 1999.0", -14.790364023139997]]}, "13": {"question": "what year had a total of 2 titles released?", "gold_answer": ["2010"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = a2", -4.472894942149999], [" SELECT COUNT(*) FROM w WHERE year = a2", -4.472894942149999], [" SELECT COUNT(DISTINCT title) FROM w WHERE year = a2", -5.0320698966999995], [" SELECT COUNT(*) FROM w WHERE year = {a2}", -7.098987956969999], [" SELECT COUNT(*) FROM w WHERE year = {a2}", -7.098987956969999], [" SELECT COUNT(*) FROM w WHERE year = {a2}", -7.13863275697], [" SELECT COUNT(*) FROM w WHERE year = {a2}", -7.13863275697], [" SELECT COUNT(*) FROM w WHERE year = a2", -7.225745061615002], [" SELECT COUNT(*) FROM w WHERE year = {a2}", -8.64253795697], [" SELECT COUNT(*) FROM w WHERE year = a2", -11.277222205615]]}, "54": {"question": "who was the only driver to win in a car other than a subaru impreza after the year 2005?", "gold_answer": ["Jas Mangat"], "pred_answer": {"0": [[1], [1], [1], [8], [5], [5], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year > 2005 AND car NOT LIKE 'subaru impreza%'", -4.374654405015], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car NOT LIKE 'subaru impreza%'", -4.374654405015], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car NOT LIKE '%subaru impreza%'", -4.812733330164999], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car != 'subaru impreza'", -6.336897827924998], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car != 'subaru impreza n10'", -6.576943984554999], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car != 'subaru impreza n10'", -9.595284495155], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car != 'subaru impreza'", -10.871675700155], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car != 'subaru impreza'", -11.448256499825], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car != 'subaru impreza'", -11.930557900155], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND car != 'subaru impreza'", -12.527406700155002]]}, "95": {"question": "what is the number of townships with a population larger than 2,000?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9531377782], [" SELECT COUNT(*) FROM w WHERE population > 2000", -5.7273984152]]}, "136": {"question": "how many canadian players are listed?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -3.8236118058], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -3.8236118058], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.3936079908200005], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.3936079908200005], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.3936079908200005], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.47602479082], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.66345779082], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.66345779082], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -6.85529225776], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -10.14052019082]]}, "177": {"question": "how many songs are listed from 1998?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1998", -1.22294289822], [" SELECT COUNT(*) FROM w WHERE year = 1998", -1.22294289822], [" SELECT COUNT(*) FROM w WHERE year = 1998", -1.22294289822], [" SELECT COUNT(*) FROM w WHERE year = 1998", -1.2245391997200001], [" SELECT COUNT(*) FROM w WHERE year = 1998", -1.2245391997200001], [" SELECT COUNT(*) FROM w WHERE year = 1998", -1.2245391997200001], [" SELECT COUNT(*) FROM w WHERE year = 1998", -1.2245391997200001], [" SELECT COUNT(*) FROM w WHERE year = 1998", -1.2245391997200001], [" SELECT COUNT(*) FROM w WHERE year = 1998", -1.2245391997200001], [" SELECT COUNT(*) FROM w WHERE year = 1998", -3.8466288083199993]]}, "180": {"question": "what is the total number of shows sophie colguhoun appeared in?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(DISTINCT title) FROM w", -1.5067383135499999], [" SELECT COUNT(DISTINCT title) FROM w", -1.5067383135499999], [" SELECT COUNT(DISTINCT title) FROM w", -1.5067383135499999], [" SELECT COUNT(DISTINCT title) FROM w", -1.5067383135499999], [" SELECT COUNT(DISTINCT title) FROM w", -1.5067383135499999], [" SELECT COUNT(DISTINCT title) FROM w", -1.5067383135499999], [" SELECT COUNT(DISTINCT title) FROM w", -1.5067383135499999], [" SELECT COUNT(DISTINCT title) FROM w", -1.5067383135499999], [" SELECT COUNT(DISTINCT title) FROM w", -2.92824609255], [" SELECT COUNT(*) FROM w", -10.691969238630001]]}, "201": {"question": "which nation won gold but did not win silver?", "gold_answer": ["United States"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -2.113796182357], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -2.113796182357], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -2.113796182357], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -2.113796182357], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -2.113796182357], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -2.113796182357], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -2.113796182357], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -2.12414409223], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0", -4.83845908815], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0 AND silver = 0", -11.154378899207]]}, "218": {"question": "did austria or russia rank higher?", "gold_answer": ["Russia"], "pred_answer": {"0": [[4.0], [4.0], [4.0], [4.0], [4.0], [4.0], [4.0], [4.0], [], [4.0]], "1": [[null], [null], [null], [null], [null], [null], [null], [null], [], [null]], "2": ["<error>"]}, "nsql": [[" SELECT `rank` FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT `rank` FROM w WHERE nationality = 'russia'", -2.9885800539849994], [" SELECT `rank` FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT `rank` FROM w WHERE nationality = 'russia'", -2.9885800539849994], [" SELECT `rank` FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT `rank` FROM w WHERE nationality = 'russia'", -2.9885800539849994], [" SELECT rank FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT rank FROM w WHERE nationality = 'russia'", -4.019554685188001], [" SELECT rank FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT rank FROM w WHERE nationality = 'russia'", -4.028358859952], [" SELECT rank FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT rank FROM w WHERE nationality = 'russia'", -4.028358859952], [" SELECT rank FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT rank FROM w WHERE nationality = 'russia'", -4.028358859952], [" SELECT rank FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT rank FROM w WHERE nationality = 'russia'", -6.816108752351999], [" SELECT rank FROM w WHERE name = 'austria'\nNeuralSQL2: SELECT rank FROM w WHERE name = 'russia'", -7.98495037568], [" SELECT rank FROM w WHERE nationality = 'austria'\nNeuralSQL2: SELECT rank FROM w WHERE nationality = 'russia'\n```", -8.865953793277999]]}, "222": {"question": "between the topped ranked airport, netherlands - amsterdam, & spain - palma de mallorca, what is the difference in the amount of passengers handled?", "gold_answer": ["77,631"], "pred_answer": {"0": [[105349], [105349], [105349], [105349], [105349], [105349], [105349], [105349], [105349], [105349]], "1": [[27718], [27718], [27718], [27718], [27718], [27718], [27718], [27718], [27718], [27718]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'", -5.667004683675001], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'\n```", -7.938387753590002], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'\n```", -8.96193805359], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'", -9.066702296239999], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'", -9.63870989271], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'", -9.67806481291], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'", -9.81458930446], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'", -10.57119109271], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'", -11.15035111348], [" SELECT `passengers handled` FROM w WHERE airport = 'netherlands - amsterdam'\nNeuralSQL2: SELECT `passengers handled` FROM w WHERE airport = 'spain - palma de mallorca'", -11.363633292710002]]}, "259": {"question": "what is the total number of sheriffs that were in office in suffolk county between 1903 and 1957?", "gold_answer": ["17"], "pred_answer": {"0": [[0], [0], [0], [0], [17], [17], [17], [17], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE start of term >= 1903 AND start of term <= 1957", -4.348684898679999], [" SELECT COUNT(*) FROM w WHERE start of term >= 1903 AND start of term <= 1957", -4.348684898679999], [" SELECT COUNT(*) FROM w WHERE start of term > 1903 AND start of term < 1957", -4.65967264458], [" SELECT COUNT(*) FROM w WHERE start of term > 1903 AND start of term < 1957", -4.65967264458], [" SELECT COUNT(*) FROM w WHERE start of term BETWEEN 1903 AND 1957 OR start of term_2 BETWEEN 1903 AND 1957 OR start of term_3 BETWEEN 1903 AND 1957", -6.335139208955], [" SELECT COUNT(*) FROM w WHERE (1903 <= start of term AND start of term <= 1957) OR (1903 <= start of term_2 AND start of term_2 <= 1957) OR (1903 <= start of term_3 AND start of term_3 <= 1957)", -6.810851588519999], [" SELECT COUNT(*) FROM w WHERE (start of term >= 1903 AND start of term <= 1957) OR (start of term_2 >= 1903 AND start of term_2 <= 1957) OR (start of term_3 >= 1903 AND start of term_3 <= 1957)", -7.783364676910002], [" SELECT COUNT(*) FROM w WHERE (start of term >= 1903 AND start of term <= 1957) OR (start of term_2 >= 1903 AND start of term_2 <= 1957) OR (start of term_3 >= 1903 AND start of term_3 <= 1957)", -7.815781449499999], [" SELECT COUNT(*) FROM w WHERE `start of term` > 1903 AND `start of term` < 1957", -13.18798150562], [" SELECT COUNT(*) FROM w WHERE start of term >= 1903 AND start of term <= 1957\n```", -19.621403986380002]]}, "263": {"question": "how many players had at least 20 league goals scored?", "gold_answer": ["56"], "pred_answer": {"0": [[56], [56], [56], [56], [56], [56], [56], [56], [0], "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE goals >= 20", -2.144136927], [" SELECT COUNT(*) FROM w WHERE goals >= 20", -2.144136927], [" SELECT COUNT(*) FROM w WHERE goals >= 20", -2.144136927], [" SELECT COUNT(*) FROM w WHERE goals >= 20", -2.144136927], [" SELECT COUNT(*) FROM w WHERE goals >= 20", -2.144136927], [" SELECT COUNT(*) FROM w WHERE goals >= 20", -4.6496984801000005], [" SELECT COUNT(*) FROM w WHERE goals >= 20", -4.6496984801000005], [" SELECT COUNT(*) FROM w WHERE goals >= 20", -4.6496984801000005], [" SELECT COUNT(*) FROM w WHERE `spartak career` LIKE '% - %' AND CAST(SUBSTR(`spartak career`, INSTR(`spartak career`, ' - ') + 1, LENGTH(`spartak career`) - (INSTR(`spartak career`, ' - ') + 1)) AS INT) >= 20", -10.361644477126998], [" SELECT COUNT(*) FROM w WHERE `spartak career` LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0\n```", -15.603477133452797]]}, "304": {"question": "what is the only county whose name comes from a battle?", "gold_answer": ["Alamance County"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -2.1949166216199996], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -2.19637645719], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -2.19637645719], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -2.19637645719], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -2.19637645719], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -2.19637645719], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -2.19637645719], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -2.19637645719], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -3.4267642639399996], [" SELECT COUNT(*) FROM w WHERE etymology LIKE '%battle%'", -3.4267642639399996]]}, "345": {"question": "how many titles did walker publish?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.5899743119979999], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.5899743119979999], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.5899743119979999], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.5899743119979999], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.5899743119979999], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.5899743119979999], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -1.5899743119979999], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'", -2.5248349304980002], [" SELECT COUNT(*) FROM w WHERE publisher = 'walker'", -6.3834495300950005], [" SELECT COUNT(DISTINCT title) FROM w WHERE publisher = 'walker'\n```", -19.532276505604997]]}, "386": {"question": "how many buildings had alfred waterhouse as their architect?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -4.23065072591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -4.23065072591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -4.23065072591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -4.23065072591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -4.23065072591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -4.23065072591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -4.23065072591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -4.23065072591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -5.01308332591], [" SELECT COUNT(*) FROM w WHERE architect = 'alfred waterhouse'", -5.96862862591]]}, "427": {"question": "the artist ash only had one song that appeared in the o.c. what is the name of that song?", "gold_answer": ["\"Burn Baby Burn\""], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT song) FROM w WHERE artist = 'ash'", -2.54054901096], [" SELECT COUNT(DISTINCT song) FROM w WHERE artist = 'ash'", -2.54070036096], [" SELECT COUNT(DISTINCT song) FROM w WHERE artist = 'ash'", -2.55744123933], [" SELECT COUNT(*) FROM w WHERE artist = 'ash'", -5.54039906455], [" SELECT COUNT(*) FROM w WHERE artist = 'ash'", -5.595116438200001], [" SELECT COUNT(*) FROM w WHERE artist = 'ash'", -7.7944726511], [" SELECT COUNT(*) FROM w WHERE artist = 'ash'", -7.800042546200001], [" SELECT COUNT(*) FROM w WHERE artist = 'ash'", -8.6206719511], [" SELECT COUNT(*) FROM w WHERE artist = 'ash'", -9.2876777511], [" SELECT COUNT(DISTINCT(artist)) FROM w WHERE artist LIKE '%ash%'", -12.179404639560001]]}, "468": {"question": "what is the number of times a hard surface was used?", "gold_answer": ["5"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]], "11": ["<error>"], "12": [[1]], "13": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6006305619], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6006305619], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6006305619], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.6006305619], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -2.8732349630500007], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -2.8732349630500007], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -2.8732349630500007], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -2.8732349630500007], [" SELECT COUNT(DISTINCT surface) FROM w WHERE surface = 'hard'", -5.384786883367], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'\nQ2: {how many = a2} times a hard surface was used.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'\nQ3: {how many = a3} times a hard surface was used.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE surface = 'hard'\nQ4: {how many = a4} times a hard surface was used.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE surface = 'hard'\nQ5: {how many = a5} times a hard surface was used.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE surface = 'hard'\nQ6: {how many = a6} times a hard surface was used.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE surface = 'hard'\nQ7: {how many = a7} times a hard surface was used.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE surface = 'hard'\nQ8: {how many = a8} times a hard", -14.52153186185199]]}, "509": {"question": "which make was used the least?", "gold_answer": ["Mercury"], "pred_answer": {"0": [["dodge"], ["dodge"], ["dodge"], ["dodge"], ["dodge"], ["dodge"], ["dodge"], [1], [2], [1]]}, "nsql": [[" SELECT make FROM w GROUP BY make ORDER BY COUNT(*) LIMIT 1", -5.3313859451419985], [" SELECT make FROM w GROUP BY make ORDER BY COUNT(make) ASC LIMIT 1", -5.62751977142], [" SELECT make FROM w GROUP BY make ORDER BY COUNT(make) ASC LIMIT 1", -5.62751977142], [" SELECT make FROM w GROUP BY make ORDER BY COUNT(make) ASC LIMIT 1", -5.63143168397], [" SELECT make FROM w GROUP BY make ORDER BY COUNT(make) ASC LIMIT 1", -5.63182233757], [" SELECT make FROM w GROUP BY make ORDER BY COUNT(*) ASC LIMIT 1", -6.689712083369999], [" SELECT make FROM w GROUP BY make ORDER BY COUNT(*) ASC LIMIT 1", -9.906055823069998], [" SELECT COUNT(*) FROM w WHERE make = (SELECT make FROM w GROUP BY make ORDER BY COUNT(*) ASC LIMIT 1)", -10.110319104850001], [" SELECT COUNT(*) FROM w WHERE make = 'none'", -14.16005214736], [" SELECT MIN(cnt) FROM (SELECT COUNT(*) AS cnt FROM w GROUP BY make)", -17.819661454080002]]}, "550": {"question": "does punia have more or less villages than godara?", "gold_answer": ["less"], "pred_answer": {"0": [[], [300], [300], [300], [300], [], [1], [], [300], [300]], "1": [[], [700], [700], [700], [700], [], [1], [], [], [700]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT `no. of villages` FROM w WHERE name of king = 'punia'\nNeuralSQL2: SELECT `no. of villages` FROM w WHERE name of king = 'godara'", -3.4966856112760003], [" SELECT `no. of villages` FROM w WHERE name of kingdom = 'punia'\nNeuralSQL2: SELECT `no. of villages` FROM w WHERE name of kingdom = 'godara'", -4.305308220486], [" SELECT `no. of villages` FROM w WHERE `name of kingdom` = 'punia'\nNeuralSQL2: SELECT `no. of villages` FROM w WHERE `name of kingdom` = 'godara'", -6.738051185326], [" SELECT no. of villages FROM w WHERE name of kingdom = 'punia'\nNeuralSQL2: SELECT no. of villages FROM w WHERE name of kingdom = 'godara'\n```", -6.767947817106], [" SELECT `no. of villages` FROM w WHERE `name of kingdom` = 'punia'\nNeuralSQL2: SELECT `no. of villages` FROM w WHERE `name of kingdom` = 'godara'", -7.4670092903960015], [" SELECT no. of villages FROM w WHERE name of king = 'punia'\nNeuralSQL2: SELECT no. of villages FROM w WHERE name of king = 'godara'", -7.892468774266002], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'punia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara'", -8.001733694776], [" SELECT `no. of villages` FROM w WHERE `name of king` = 'punia'\nNeuralSQL2: SELECT `no. of villages` FROM w WHERE `name of king` = 'godara'", -8.616671113726], [" SELECT no. of villages FROM w WHERE name of kingdom = 'punia'\nNeuralSQL2: SELECT no. of villages FROM w WHERE name of king = 'godara'", -8.623442297995998], [" SELECT `no. of villages` FROM w WHERE name of kingdom = 'punia'\nNeuralSQL2: SELECT `no. of villages` FROM w WHERE name of kingdom = 'godara'\n```", -12.813622475056002]]}, "591": {"question": "total number of wins", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]], "1": ["<error>", "<error>"], "2": [[0], [16]], "3": ["<error>", "<error>"], "4": [[0], [2]], "5": ["<error>", "<error>"], "6": [[0], [2]], "7": ["<error>", "<error>"], "8": [[2]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'w'", -2.45368294435], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -6.719844789142], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.097960089142001], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.265351189142], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.435683189141999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.776321589142], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.906671789142], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -10.132222989142], [" SELECT COUNT(*) FROM w WHERE result = 'w'\nQ2: {how many = a2} wins in 1968-07-28.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'w' AND date = '1968-07-28 00:00:00'\nQ3: {how many = a3} wins in 1968-07-28 with the score is 4-0.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE result = 'w' AND date = '1968-07-28 00:00:00' AND score = '4-0'\nQ4: {how many = a4} wins in 1968-07-28 with the score is 4-0 and the opposition is paraguay.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE result = 'w' AND date = '1968-07-28 00:00:00' AND score = '4-0' AND opposition = 'paraguay'\nQ5: {how many = a5} wins in 1968-07-28 with the score is 4-0 and the opposition is paraguay", -36.104073331341006], [" SELECT COUNT(*) FROM w WHERE result = 'w'\nQ2: {how many = a2} matches in the international friendly.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE competition = 'international friendly'\nQ3: there are {how many = a3} matches in the international friendly with a score of 3 - 2.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND score = '3 - 2'\nQ4: the number of matches in the international friendly with a score of 3 - 2 is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND score = '3 - 2'\nQ5: {how many = a5} matches in the international friendly with a score of 3 - 2.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND score = '3 - 2'\nQ6: there are {how many = a6} matches in the international friendly with a score of 3 - 2.\nNeuralSQL6: SELECT COUNT(*) FROM", -42.27882252924202]]}, "632": {"question": "what is the total amount of current state regents who are bankers?", "gold_answer": ["2"], "pred_answer": {"0": [[1], [2], [2], [1], [2], [2], [2], [2], [2], [2]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE profession = 'banker' AND `term expires` > 2017", -5.446729315020001], [" SELECT COUNT(*) FROM w WHERE profession = 'banker' AND `term expires` > 2016", -5.610094355019999], [" SELECT COUNT(*) FROM w WHERE profession = 'banker' AND `term expires` > 2016", -5.610094355019999], [" SELECT COUNT(*) FROM w WHERE profession = 'banker' AND term expires > 2017", -5.612404660520001], [" SELECT COUNT(*) FROM w WHERE profession = 'banker' AND term expires > 2012", -5.98733493052], [" SELECT COUNT(*) FROM w WHERE profession = 'banker' AND `term expires` >= 2017", -6.106496615019999], [" SELECT COUNT(*) FROM w WHERE profession = 'banker'", -6.74520712434], [" SELECT COUNT(*) FROM w WHERE profession = 'banker'", -8.93088554434], [" SELECT COUNT(*) FROM w WHERE profession = 'banker'", -10.36463484434], [" SELECT COUNT(*) FROM w WHERE profession = 'banker'\nQ2: {how many = a2} state regents are from oklahoma city.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'\nQ3: {how many = a3} state regents have a term that expires in 2012.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `term expires` = '2012'\nQ4: there are {how many = a4} state regents whose hometown is oklahoma city and whose term expires in 2012.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city' AND `term expires` = '2012'\nQ5: {how many = a5} state regents are from oklahoma city and whose term expires in 2012.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city' AND `term expires` = '2012'\nQ6: {how many = a6} state regents are from oklahoma city or whose term expires in 2012.\nNeuralSQL6: SELECT COUNT", -43.974982982658]]}, "673": {"question": "which kingdom contained the second most villages, next only to godara?", "gold_answer": ["Johiya"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `no. of villages` = (SELECT MAX(`no. of villages`) FROM w WHERE `no. of villages` < (SELECT MAX(`no. of villages`) FROM w))", -4.99509201044], [" SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(no. of villages) FROM w WHERE no. of villages < (SELECT MAX(no. of villages) FROM w))", -5.503234612669997], [" SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(no. of villages) FROM w WHERE no. of villages < (SELECT MAX(no. of villages) FROM w))", -5.503234612669997], [" SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(no. of villages) FROM w WHERE no. of villages < (SELECT MAX(no. of villages) FROM w))", -5.50354767657], [" SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(no. of villages) FROM w WHERE no. of villages < (SELECT MAX(no. of villages) FROM w))", -5.50354767657], [" SELECT COUNT(*) FROM w WHERE `no. of villages` = (SELECT MAX(`no. of villages`) FROM w WHERE `no. of villages` < (SELECT MAX(`no. of villages`) FROM w))", -6.30178619844], [" SELECT COUNT(*) FROM w WHERE `no. of villages` = (SELECT MAX(`no. of villages`) FROM w WHERE `no. of villages` < (SELECT MAX(`no. of villages`) FROM w))", -6.30178619844], [" SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(`no. of villages`) FROM w WHERE `no. of villages` < (SELECT MAX(`no. of villages`) FROM w))", -6.44426524053], [" SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(`no. of villages`) FROM w WHERE `no. of villages` < (SELECT MAX(`no. of villages`) FROM w))", -6.44426524053], [" SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(no. of villages) FROM w WHERE no. of villages < (SELECT MAX(no. of villages) FROM w))\nQ2: {how many = a2} kingdom contained the second most villages.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(no. of villages) FROM w WHERE no. of villages < (SELECT MAX(no. of villages) FROM w))\nQ3: {how many = a3} kingdom contained the second most villages.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(no. of villages) FROM w WHERE no. of villages < (SELECT MAX(no. of villages) FROM w))\nQ4: {how many = a4} kingdom contained the second most villages.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE no. of villages = (SELECT MAX(no. of villages) FROM w WHERE no. of villages < (SELECT MAX(no. of villages) FROM w))\nQ5: {how many = a", -19.288910806496595]]}, "714": {"question": "how many athletes were from china?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -3.2077153833], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -3.2077153833], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -3.2084286429999995], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -3.918427342266], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -3.918427342266], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -4.4530828398299995], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -4.469164642266], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -5.06379223983], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -6.127465512140001], [" SELECT COUNT(*) FROM w WHERE nationality = 'china'", -7.07986414802]]}, "755": {"question": "does the crest white strips pro last as long as the crest white strips renewal?", "gold_answer": ["yes"], "pred_answer": {"0": [["p18m"], ["p18m"], ["p18m"], ["p18m"], [18], ["p18m"], ["p18m"], ["p18m"], ["p18m"], ["p18m"]], "1": [["p18m"], ["p18m"], ["p18m"], ["p18m"], [18], ["p18m"], ["p18m"], ["p18m"], ["p18m"], ["p18m"]], "2": ["<error>"]}, "nsql": [[" SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips renewal'", -3.5266625039059987], [" SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips renewal'", -3.527706913566999], [" SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips renewal'", -3.5283753987560003], [" SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips renewal'", -3.5283753987560003], [" SELECT CAST(REPLACE(`last of whiteness`, 'p', '') AS INT) FROM w WHERE model = 'crest white strips pro'\nNeuralSQL2: SELECT CAST(REPLACE(`last of whiteness`, 'p', '') AS INT) FROM w WHERE model = 'crest white strips renewal'", -6.881014616015], [" SELECT `last of whiteness` FROM w WHERE model = 'crest white strips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest white strips renewal'", -11.596104463735], [" SELECT `last of whiteness` FROM w WHERE model = 'crest white strips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest white strips renewal'", -11.684518002306], [" SELECT `last of whiteness` FROM w WHERE model = 'crest white strips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest white strips renewal'", -12.214073963734998], [" SELECT `last of whiteness` FROM w WHERE model = 'crest white strips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest white strips renewal'", -12.97139534642], [" SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips pro'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips renewal'\n```", -16.661333699649]]}, "796": {"question": "after 1940, how many steam locomotives were built?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `year built` > 1940", -4.43371898597], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940", -4.43371898597], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940", -4.43371898597], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940 AND `wheel arr.` LIKE '%st%'", -4.626942442630001], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940 AND `wheel arr.` LIKE '%st%'", -4.626942442630001], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940 AND `wheel arr.` LIKE '%st%'", -4.65102882163], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940 AND `wheel arr.` LIKE '%st'", -4.77385871263], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940 AND `wheel arr.` LIKE '%st'", -4.806996451230002], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940 AND `wheel arr.` LIKE '%-%-%st'", -8.48445479523], [" SELECT COUNT(*) FROM w WHERE `year built` > 1940 AND `wheel arr.` LIKE '%st'\nQ2: {how many = a2} locomotives were built for the vale of rheidol railway.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original owner` = 'vale of rheidol railway'\nQ3: {how many = a3} locomotives were built for the vale of rheidol railway and have a gauge of 2 ft.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `original owner` = 'vale of rheidol railway' AND `gauge` = '2 ft'\nQ4: {how many = a4} locomotives were built for the vale of rheidol railway and have a gauge of 2 ft and a wheel arr. of 0-4-0st.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `original owner` = 'vale of rheidol railway' AND `gauge` = '2 ft' AND `wheel arr.` = '0-4-0st'", -42.36335901892996]]}, "837": {"question": "what is the total number of class a models?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"], "2": [[4]], "3": ["<error>"], "4": [[154632.66666666666]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE class = 'class a'", -3.74517221085], [" SELECT COUNT(DISTINCT model) FROM w WHERE class = 'class a'", -5.19176928773], [" SELECT COUNT(*) FROM w WHERE class = 'class a'", -5.79727155386], [" SELECT COUNT(*) FROM w WHERE class = 'class a'", -6.34247005386], [" SELECT COUNT(*) FROM w WHERE class = 'class a'", -6.34247005386], [" SELECT COUNT(*) FROM w WHERE class = 'class a'", -6.43206555386], [" SELECT COUNT(*) FROM w WHERE class = 'class a'", -6.44152155386], [" SELECT COUNT(*) FROM w WHERE class = 'class a'", -6.74052515386], [" SELECT COUNT(*) FROM w WHERE class = 'class a'", -7.99410095386], [" SELECT COUNT(*) FROM w WHERE class = 'class a'\nQ2: {how many = a2} models are longer than 30 feet.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE length > '30'\nQ3: the average starting price of all models is {how many = a3}.\nNeuralSQL3: SELECT AVG(CAST(REPLACE(`starting price`,'$','') AS INT)) FROM w", -24.577618311888006]]}, "840": {"question": "how many times did brazil play against argentina in the international friendly competition?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>", "<error>"], "2": [[2]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opposition = 'argentina' AND competition = 'international friendly'", -5.328258424953], [" SELECT COUNT(*) FROM w WHERE opposition = 'argentina' AND competition = 'international friendly'", -5.437064024953], [" SELECT COUNT(*) FROM w WHERE opposition = 'argentina' AND competition = 'international friendly'", -5.437064024953], [" SELECT COUNT(*) FROM w WHERE opposition = 'argentina' AND competition = 'international friendly'", -5.437064024953], [" SELECT COUNT(*) FROM w WHERE opposition = 'argentina' AND competition = 'international friendly'", -5.8464468249529995], [" SELECT COUNT(*) FROM w WHERE opposition = 'argentina' AND competition = 'international friendly'", -6.080023824953], [" SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND opposition = 'argentina'", -6.240787197884], [" SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND opposition = 'argentina'", -7.204535397883999], [" SELECT COUNT(*) FROM w WHERE opposition = 'argentina' AND competition = 'international friendly'\n```", -8.77726314285], [" SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND opposition = 'argentina'\nQ2: brazil played {how many = a2} times against argentina in the international friendly competition and won.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND opposition = 'argentina' AND result = 'w'\nQ3: brazil played {how many = a3} times against argentina in the international friendly competition and won.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND opposition = 'argentina' AND result = 'w'\nQ4: brazil played {how many = a4} times against argentina in the international friendly competition and won.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE competition = 'international friendly' AND opposition = 'argentina' AND result = 'w'\nQ5: brazil played {how many = a5} times against argentina in the international friendly competition and won.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE competition = '", -24.692943811299997]]}, "861": {"question": "what is the total number of medals between south korea, north korea, sweden, and brazil?", "gold_answer": ["150"], "pred_answer": {"0": [[22], [22], [22], [22], [22], [22], [22], [22], [22], [22]], "1": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "2": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "3": [[114], [114], [114], [114], [114], [114], [114], [114], [114], [114]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(total) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(total) FROM w WHERE nation = 'brazil'", -2.088953108853999], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(total) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(total) FROM w WHERE nation = 'brazil'", -2.100068770239999], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(total) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(total) FROM w WHERE nation = 'brazil'", -2.100575772569999], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(total) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(total) FROM w WHERE nation = 'brazil'", -2.100575772569999], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(total) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(total) FROM w WHERE nation = 'brazil'", -2.100575772569999], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'brazil'", -3.143103091636001], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'brazil'", -3.1559406893629984], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'brazil'", -3.1642304854159993], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'brazil'", -6.703427512538003], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'\nNeuralSQL3: SELECT SUM(total) FROM w WHERE nation = 'sweden'\nNeuralSQL4: SELECT SUM(total) FROM w WHERE nation = 'brazil'", -18.33756108883]]}, "878": {"question": "how many performers appeared on the air date 21 january 2011?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `air date` = '2011-01-21 00:00:00'", -3.0089727284239998], [" SELECT COUNT(*) FROM w WHERE `air date` = '2011-01-21 00:00:00'", -3.0089727284239998], [" SELECT COUNT(*) FROM w WHERE `air date` = '2011-01-21 00:00:00'", -3.0089727284239998], [" SELECT COUNT(*) FROM w WHERE air date = '2011-01-21 00:00:00'", -4.071103125174001], [" SELECT COUNT(*) FROM w WHERE `air date` = '2011-01-21 00:00:00'", -4.944487780424001], [" SELECT COUNT(*) FROM w WHERE `air date` = '2011-01-21 00:00:00'", -4.944487780424001], [" SELECT COUNT(*) FROM w WHERE `air date` = '2011-01-21 00:00:00'", -5.686464380424001], [" SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` = '2011-01-21 00:00:00'", -6.726662983937001], [" SELECT COUNT(DISTINCT performer) FROM w WHERE air date = '2011-01-21 00:00:00'", -7.265716405347], [" SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` = '2011-01-21 00:00:00'", -11.765468117146302]]}, "882": {"question": "after playing seven games, how many players individual points were above 30?", "gold_answer": ["4"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -2.2953609483900004], [" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -2.2953609483900004], [" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -2.2953609483900004], [" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -2.2953609483900004], [" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -2.2953609483900004], [" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -2.2953609483900004], [" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -2.2953609483900004], [" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -3.7946665184200006], [" SELECT COUNT(*) FROM w WHERE games = 7 AND points > 30", -3.7946665184200006], [" SELECT COUNT(*) FROM w WHERE games = 7 AND CAST(REPLACE(points, ',', '') AS INT) > 30", -12.004198532139998]]}, "919": {"question": "which team won more matches, finland or norway?", "gold_answer": ["Norway"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [1], [0], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT SUM(won) FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT SUM(won) FROM w WHERE team = 'norway'", -3.356549925425], [" SELECT COUNT(*) FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'norway'", -4.190023192380001], [" SELECT COUNT(*) FROM w WHERE team = 'finland' AND won = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'norway' AND won = 1", -5.023846904204001], [" SELECT won FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT won FROM w WHERE team = 'norway'", -9.360617398755002], [" SELECT won FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT won FROM w WHERE team = 'norway'", -9.706356268755], [" SELECT won FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT won FROM w WHERE team = 'norway'", -9.815186869615], [" SELECT won FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT won FROM w WHERE team = 'norway'", -10.609702393755], [" SELECT won FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT won FROM w WHERE team = 'norway'", -11.405215195755], [" SELECT won FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT won FROM w WHERE team = 'norway'", -12.032811070685], [" SELECT won FROM w WHERE team = 'finland'\nNeuralSQL2: SELECT won FROM w WHERE team = 'norway'", -12.793288668755]]}, "923": {"question": "how many platforms did american mcgee's grimm run on?", "gold_answer": ["1"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE title = 'american mcgee's grimm'", -2.21770299353], [" SELECT COUNT(*) FROM w WHERE title = 'american mcgee's grimm'", -2.21770299353], [" SELECT COUNT(*) FROM w WHERE title = 'american mcgee's grimm'", -2.21770299353], [" SELECT COUNT(*) FROM w WHERE title = 'american mcgee's grimm'", -2.21770299353], [" SELECT COUNT(*) FROM w WHERE title = 'american mcgee's grimm'", -2.21770299353], [" SELECT COUNT(*) FROM w WHERE title = 'american mcgee's grimm'", -2.21770299353], [" SELECT COUNT(DISTINCT platforms) FROM w WHERE title = 'american mcgee's grimm'", -3.8383815029240003], [" SELECT COUNT(DISTINCT platforms) FROM w WHERE title = 'american mcgee's grimm'", -4.979676904164001], [" SELECT COUNT(DISTINCT platforms) FROM w WHERE title = 'american mcgee's grimm'", -4.979676904164001], [" SELECT COUNT(DISTINCT platform) FROM w WHERE title = 'american mcgee's grimm'", -5.207337881814]]}, "964": {"question": "how many 3rd place finishes has npsl had?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE regular season LIKE '3rd%'", -3.79203594284], [" SELECT COUNT(*) FROM w WHERE regular season LIKE '3rd%'", -3.7934134636400003], [" SELECT COUNT(*) FROM w WHERE regular season LIKE '3rd%'", -3.79813116876], [" SELECT COUNT(*) FROM w WHERE regular season LIKE '%3rd%'", -4.326849859289999], [" SELECT COUNT(*) FROM w WHERE regular season LIKE '3rd%' AND league = 'npsl'", -4.555175864250001], [" SELECT COUNT(*) FROM w WHERE regular season LIKE '3rd%' AND league = 'npsl'", -4.555175864250001], [" SELECT COUNT(*) FROM w WHERE league = 'npsl' AND regular season LIKE '3rd%'", -4.66753112966], [" SELECT COUNT(*) FROM w WHERE regular season LIKE '3rd,%'", -4.831226718289999], [" SELECT COUNT(*) FROM w WHERE regular season LIKE '3rd,%' AND league = 'npsl'", -5.79399162564], [" SELECT COUNT(*) FROM w WHERE regular season LIKE '3rd%'", -6.137418869289999]]}, "1005": {"question": "in which year did ms. starfelt produce the most films?", "gold_answer": ["2008"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -5.430948618037999], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -6.170073059098], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -6.176723601218], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -6.210418118038], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -7.936401218218], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -8.535335409032001], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -11.231446418217999], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -11.53420517383], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -12.009833218217999], [" SELECT COUNT(*) FROM w WHERE year = 2002\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2004\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2011", -13.028626109031999]]}, "1046": {"question": "how many hospitals have at least 1,000 beds?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.219926443704], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.2231970149839997], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.2231970149839997], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.2231970149839997], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.2231970149839997], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.2236817431040006], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.743471344604], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.743471344604], [" SELECT COUNT(*) FROM w WHERE `# beds` >= 1000", -3.7450992196039996], [" SELECT COUNT(*) FROM w WHERE '# beds' >= 1000", -5.246543461733999]]}, "1087": {"question": "how long after the founding of panama city, panama was the city of rio de janeiro, brazil founded?", "gold_answer": ["46 years"], "pred_answer": {"0": [[46], [null], [0], [0], [1], [1], [1], [0], [0], [0]]}, "nsql": [[" SELECT (SELECT year FROM w WHERE city = 'rio de janeiro' AND country = 'brazil') - (SELECT year FROM w WHERE city = 'panama city' AND country = 'panama')", -5.780013535680001], [" SELECT (SELECT year FROM w WHERE city = 'rio de janeiro' AND state, province, dept., etc. = 'brazil') - (SELECT year FROM w WHERE city = 'panama city' AND state, province, dept., etc. = 'panama')", -5.911718332760003], [" SELECT COUNT(*) FROM w WHERE year - (SELECT year FROM w WHERE city = 'panama city' AND country = 'panama') = (SELECT year FROM w WHERE city = 'rio de janeiro' AND country = 'brazil')", -7.891556234329997], [" SELECT COUNT(*) FROM w WHERE year = (SELECT year FROM w WHERE city = 'rio de janeiro' AND state, province, dept., etc. = 'brazil') - (SELECT year FROM w WHERE city = 'panama city' AND state, province, dept., etc. = 'panama')", -8.642752470115996], [" SELECT COUNT(*) FROM w WHERE year > (SELECT year FROM w WHERE city = 'panama city' AND country = 'panama') AND city = 'rio de janeiro' AND country = 'brazil'", -9.932688859896], [" SELECT COUNT(*) FROM w WHERE year > (SELECT year FROM w WHERE city = 'panama city' AND country = 'panama') AND city = 'rio de janeiro' AND country = 'brazil'", -9.944281167244], [" SELECT COUNT(*) FROM w WHERE year > (SELECT year FROM w WHERE city = 'panama city' AND country = 'panama') AND city = 'rio de janeiro' AND country = 'brazil'", -9.94632563947], [" SELECT COUNT(*) FROM w WHERE year - (SELECT year FROM w WHERE city = 'rio de janeiro' AND state, province, dept., etc. = 'brazil') > 0", -10.147175124870001], [" SELECT COUNT(*) FROM w WHERE (year - (SELECT year FROM w WHERE city = 'panama city' AND country = 'panama')) = (SELECT year FROM w WHERE city = 'rio de janeiro' AND country = 'brazil')", -11.442314884599998], [" SELECT COUNT(*) FROM w WHERE year > (SELECT year FROM w WHERE city = 'panama city' AND state, province, dept., etc. = 'panama') AND city = 'rio de janeiro' AND state, province, dept., etc. = 'brazil'", -11.60889877798]]}, "1128": {"question": "how many floors does the capitol square have?", "gold_answer": ["26"], "pred_answer": {"0": [[26], [26], [26], [26], [26], [26], [26], [26], [26], [26]]}, "nsql": [[" SELECT floors FROM w WHERE name = 'capitol square'", -1.9223021438899999], [" SELECT floors FROM w WHERE name = 'capitol square'", -1.9223021438899999], [" SELECT floors FROM w WHERE name = 'capitol square'", -1.9223021438899999], [" SELECT floors FROM w WHERE name = 'capitol square'", -1.9229114090900001], [" SELECT floors FROM w WHERE name = 'capitol square'", -1.92293564989], [" SELECT floors FROM w WHERE name = 'capitol square'", -2.5783676578900003], [" SELECT floors FROM w WHERE name = 'capitol square'", -2.58356080689], [" SELECT floors FROM w WHERE name = 'capitol square'", -2.58356080689], [" SELECT floors FROM w WHERE name = 'capitol square'", -2.58356080689], [" SELECT floors FROM w WHERE name = 'capitol square'", -2.58621144989]]}, "1169": {"question": "how many teams had at most an attendance of 1,000?", "gold_answer": ["6"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [24]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance = '1,000'", -5.702916786345], [" SELECT COUNT(*) FROM w WHERE attendance = '1,000'", -5.71091041987], [" SELECT COUNT(*) FROM w WHERE attendance LIKE '%1,000%'", -6.50849584994], [" SELECT COUNT(*) FROM w WHERE attendance = '1,000'", -6.644090086345], [" SELECT COUNT(*) FROM w WHERE attendance = '1,000'", -6.818480486345], [" SELECT COUNT(DISTINCT(opponent)) FROM w WHERE attendance = '1000'", -7.039913128817], [" SELECT COUNT(*) FROM w WHERE attendance LIKE '1,000'", -7.529497248964001], [" SELECT COUNT(*) FROM w WHERE attendance = '1000'", -8.794272198155001], [" SELECT COUNT(*) FROM w WHERE attendance LIKE '1,000'", -9.633096219359999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(attendance, ',' , '') AS INT) > 1000", -10.448961673064]]}, "1210": {"question": "how many competitions were in budapest, hungary and came in 1st position?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [0], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue = 'budapest, hungary' AND position = '1st'", -4.21202502442], [" SELECT COUNT(*) FROM w WHERE venue = 'budapest, hungary' AND position = '1st'", -4.21202502442], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%budapest, hungary%' AND position = '1st'", -4.946142746464], [" SELECT COUNT(*) FROM w WHERE venue = 'budapest, hungary' AND position = '1st'", -6.033473955873999], [" SELECT COUNT(*) FROM w WHERE venue = 'budapest, hungary' AND position = '1st'", -6.524291355873999], [" SELECT COUNT(*) FROM w WHERE venue = 'budapest, hungary' AND position = '1st'", -6.628962740024], [" SELECT COUNT(*) FROM w WHERE venue = 'budapest, hungary' AND position = '1st'", -6.728947955873999], [" SELECT COUNT(*) FROM w WHERE venue = 'budapest, hungary' AND position = '1st'", -7.5263329558739995], [" SELECT COUNT(*) FROM w WHERE venue = 'budapest, hungary' AND position = '1st'", -8.011538955874], [" SELECT COUNT(*) FROM w WHERE position = '1st' AND venue = 'budapest, hungary'", -9.079175677375]]}, "1251": {"question": "how many titles had the same author listed as the illustrator?", "gold_answer": ["7"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE author = illustrator", -0.96659224608], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -0.96659224608], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -0.96659224608], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -0.96659224608], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -0.96659224608], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -0.96659224608], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -0.96659224608], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -3.7968399152799996], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -3.7968399152799996], [" SELECT COUNT(*) FROM w WHERE author = illustrator", -12.18238760998]]}, "33": {"question": "tell me the number of shows that only have one host per day.", "gold_answer": ["7"], "pred_answer": {"0": [[9], [9], [7], [7], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `host(s)` NOT LIKE '% , %'", -8.287790594714998], [" SELECT COUNT(*) FROM w WHERE `host(s)` NOT LIKE '% , %'", -8.287790594714998], [" SELECT COUNT(*) FROM w WHERE `host(s)` LIKE '%' AND `host(s)` NOT LIKE '%,%'", -9.102371469399998], [" SELECT COUNT(*) FROM w WHERE INSTR(host(s), ',') = 0", -10.082979182499997], [" SELECT COUNT(*) FROM w WHERE `host(s)` LIKE '% - %'", -10.508684890729999], [" SELECT COUNT(*) FROM w WHERE host(s) LIKE '% - %' AND host(s) NOT LIKE '% - % - %'", -11.274621665420005], [" SELECT COUNT(*) FROM w WHERE days available = 'monday' AND host(s) LIKE '% - %'", -11.69016621627], [" SELECT COUNT(*) FROM w WHERE `host(s)` LIKE '%' AND `host(s)` NOT LIKE '%'", -14.6837062226], [" SELECT COUNT(*) FROM w WHERE SUBSTR(`days available`, 1, INSTR(`days available`, '-') - 1) = SUBSTR(`days available`, INSTR(`days available`, '-') + 1, LENGTH(`days available`) - (INSTR(`days available`, '-') + 1)) AND INSTR(`host(s)`, ',') = 0", -16.067600945320002], [" SELECT COUNT(*) FROM w WHERE (days available = 'monday\u2013friday' OR days available = 'monday\u2013saturday' OR days available = 'monday\u2013sunday') AND host(s) LIKE '% - %'", -19.782332408729996]]}, "74": {"question": "which broadcaster hosted 3 titles but they had only 1 episode?", "gold_answer": ["Channel 4"], "pred_answer": {"0": [[1], [1], [1], [1], "<error>", [0], [1], [0], [3], [0]], "1": [[1], [1], [1], [1], "<error>", [0], [1], [0], [3], "<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT broadcaster) FROM w GROUP BY broadcaster HAVING COUNT(DISTINCT title) = 3\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w GROUP BY broadcaster HAVING COUNT(DISTINCT title) = 3 AND COUNT(DISTINCT episodes) = 1", -5.4258913582275], [" SELECT COUNT(DISTINCT broadcaster) FROM w GROUP BY broadcaster HAVING COUNT(DISTINCT title) = 3\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w GROUP BY broadcaster HAVING COUNT(DISTINCT title) = 3 AND COUNT(DISTINCT episodes) = 1", -5.426525809509001], [" SELECT COUNT(DISTINCT broadcaster) FROM w GROUP BY broadcaster HAVING COUNT(*) = 3\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w WHERE episodes = 1 GROUP BY broadcaster HAVING COUNT(*) = 3", -5.9865215978569], [" SELECT COUNT(DISTINCT broadcaster) FROM w GROUP BY broadcaster HAVING COUNT(title) = 3\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w WHERE episodes = 1 GROUP BY broadcaster HAVING COUNT(title) = 3", -6.176203401456196], [" SELECT COUNT(DISTINCT broadcaster) FROM w WHERE COUNT(DISTINCT title) = 3\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w WHERE COUNT(DISTINCT title) = 3 AND COUNT(DISTINCT episodes) = 1", -6.498797778982898], [" SELECT COUNT(DISTINCT broadcaster) FROM w WHERE title = 3\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w WHERE title = 3 AND episodes = 1", -6.924166458889002], [" SELECT COUNT(DISTINCT broadcaster) FROM w GROUP BY broadcaster HAVING COUNT(*) = 3\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w GROUP BY broadcaster HAVING COUNT(*) = 3 AND COUNT(DISTINCT episodes) = 1", -7.2511343942249], [" SELECT COUNT(DISTINCT broadcaster) FROM w WHERE (SELECT COUNT(DISTINCT title) FROM w WHERE broadcaster = broadcaster) = 3\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w WHERE (SELECT COUNT(DISTINCT title) FROM w WHERE broadcaster = broadcaster) = 3 AND (SELECT COUNT(DISTINCT episodes) FROM w WHERE broadcaster = broadcaster) = 1", -8.790500357509938], [" SELECT COUNT(*) FROM w GROUP BY broadcaster HAVING COUNT(*) = 3\nNeuralSQL2: SELECT COUNT(*) FROM w GROUP BY broadcaster HAVING COUNT(*) = 3 AND COUNT(DISTINCT episodes) = 1", -11.608821265075], [" SELECT COUNT(DISTINCT broadcaster) FROM w WHERE title = '3'\nNeuralSQL2: SELECT COUNT(DISTINCT broadcaster) FROM w WHERE title = '3' AND episode = '1'", -12.830811793607001]]}, "115": {"question": "how many bmws finished before webber?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [0], [1], [0], [1], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE constructor LIKE '%bmw%' AND pos < (SELECT pos FROM w WHERE driver = 'mark webber')", -6.192932615229998], [" SELECT COUNT(*) FROM w WHERE constructor = 'williams-bmw' AND pos < (SELECT pos FROM w WHERE driver = 'mark webber')", -6.22994761558], [" SELECT COUNT(*) FROM w WHERE constructor = 'williams-bmw' AND pos < (SELECT pos FROM w WHERE driver = 'mark webber')", -6.234113858719999], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '%-bmw' AND row_id < (SELECT row_id FROM w WHERE driver = 'mark webber')", -7.94702928948], [" SELECT COUNT(*) FROM w WHERE constructor = 'bmw' AND row_id < (SELECT row_id FROM w WHERE driver = 'webber')", -8.020559265849998], [" SELECT COUNT(*) FROM w WHERE constructor = 'williams-bmw' AND pos < (SELECT pos FROM w WHERE driver = 'mark webber')", -8.02416786058], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '% - bmw%' AND pos < (SELECT pos FROM w WHERE driver = 'mark webber')", -8.96610181838], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '%bmw' AND pos < (SELECT pos FROM w WHERE driver = 'mark webber')", -9.61534103948], [" SELECT COUNT(*) FROM w WHERE constructor = 'bmw' AND pos < (SELECT pos FROM w WHERE driver = 'webber')", -12.73437251278], [" SELECT COUNT(*) FROM w WHERE `time/retired` != 'nan' AND `time/retired` != '+4 laps' AND `time/retired` != '+1:12.543' AND `time/retired` != '+41.631' AND `time/retired` != 'engine' AND `time/retired` != 'collision' AND `constructor` = 'williams-bmw'", -14.339856520547]]}, "156": {"question": "how many models are available in lengths longer than 30 feet?", "gold_answer": ["7"], "pred_answer": {"0": [[0], [4], "<error>", [3], [0], [0], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE LENGTH(`length`) > 30", -5.767904105134], [" SELECT COUNT(*) FROM w WHERE length > '30'", -6.0413074911099995], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, '\\'', '') AS INT) > 30", -6.656646622154001], [" SELECT COUNT(*) FROM w WHERE length LIKE '%-%' AND CAST(SUBSTR(length, 1, INSTR(length, '-') - 1) AS INT) > 30", -7.169579436126001], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) > 30", -8.6842885884], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) > 30", -8.8902429884], [" SELECT COUNT(*) FROM w WHERE length > '30'", -11.100726679619997], [" SELECT COUNT(*) FROM w WHERE length > '30'", -12.01162785927], [" SELECT COUNT(*) FROM w WHERE length > '30'", -12.970421180619999], [" SELECT COUNT(*) FROM w WHERE length > '30'", -14.23053447962]]}, "197": {"question": "what is the total number of nations that did not win gold?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 0", -2.0464285707000003], [" SELECT COUNT(*) FROM w WHERE gold = 0", -2.0464285707000003], [" SELECT COUNT(*) FROM w WHERE gold = 0", -2.0464285707000003], [" SELECT COUNT(*) FROM w WHERE gold = 0", -2.04979468476], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold = 0", -3.1337864543919998], [" SELECT COUNT(*) FROM w WHERE nation != 'total' AND gold = 0", -3.7617507485000004], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND rank != 'total'", -5.0386626728], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND rank != 'total'", -5.0386626728], [" SELECT COUNT(*) FROM w WHERE gold = 0", -11.459568463970001], [" SELECT COUNT(*) FROM w WHERE gold = 0", -14.464035429970002]]}, "200": {"question": "which is the only team to score 13 points in 9 games?", "gold_answer": ["Corinthians"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE points = 13", -1.3756444229240001], [" SELECT COUNT(*) FROM w WHERE points = 13", -1.3756444229240001], [" SELECT COUNT(*) FROM w WHERE points = 13", -1.3756444229240001], [" SELECT COUNT(*) FROM w WHERE points = 13", -1.3756444229240001], [" SELECT COUNT(*) FROM w WHERE points = 13", -1.3756444229240001], [" SELECT COUNT(*) FROM w WHERE points = 13", -1.3756444229240001], [" SELECT COUNT(*) FROM w WHERE points = 13", -1.3756444229240001], [" SELECT COUNT(*) FROM w WHERE points = 13", -3.653302521004], [" SELECT COUNT(*) FROM w WHERE points = 13 AND played = 9", -8.639728443733999], [" SELECT COUNT(*) FROM w WHERE points = 13 AND played = 9", -12.568215293734]]}, "221": {"question": "what is the number of kingdoms that have more than 300 villages?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -1.43359434915], [" SELECT COUNT(*) FROM w WHERE `no. of villages` > 300", -6.6459239014]]}, "238": {"question": "how many 1 seeds are there?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -1.13356823081], [" SELECT COUNT(*) FROM w WHERE seed = 1", -4.00976268881]]}, "242": {"question": "after their first place win in 2009, how did poland place the next year at the speedway junior world championship?", "gold_answer": ["3rd place"], "pred_answer": {"0": [[5], [1], [1], [5], [1], [0], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%' AND year > (SELECT year FROM w WHERE winners LIKE '%poland%')", -7.8269574106699995], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%' AND year = (SELECT year FROM w WHERE winners LIKE '%poland%') + 1", -8.54818744937], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%' AND `year` = (SELECT `year` + 1 FROM w WHERE winners LIKE '%poland%')", -8.732244768320001], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%' AND year > (SELECT year FROM w WHERE winners LIKE '%poland%')", -9.11799665467], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%' AND `year` = (SELECT `year` FROM w WHERE winners LIKE '%poland%') + 1", -9.935099665280005], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%' AND year > (SELECT year FROM w WHERE winners LIKE '%poland%' ORDER BY year DESC LIMIT 1)", -10.494242662610006], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%' AND `year` = (SELECT `year` FROM w WHERE winners LIKE '%poland%' ORDER BY `year` DESC LIMIT 1)", -11.427771503580002], [" SELECT COUNT(*) FROM w WHERE (`winners` LIKE '%poland%' OR `runner-up` LIKE '%poland%' OR `3rd place` LIKE '%poland%') AND `year` = (SELECT `year` + 1 FROM w WHERE `winners` LIKE '%poland%' OR `runner-up` LIKE '%poland%' OR `3rd place` LIKE '%poland%')", -13.638543760135994], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%' AND (year - 1) IN (SELECT year FROM w WHERE winners NOT LIKE '%poland%')", -14.7400048091], [" SELECT COUNT(*) FROM w WHERE `winners` LIKE '%poland%' AND `year` = (SELECT MAX(year) FROM w WHERE `winners` LIKE '%poland%' AND `year` < (SELECT year FROM w WHERE `winners` LIKE '%poland%'))", -16.292091781154]]}, "279": {"question": "how many competitors from venezuela qualified for the final?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [0], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND note = 'q'", -2.107668238486], [" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND note = 'q'", -2.107668238486], [" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND note = 'q'", -2.107668238486], [" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND note = 'q'", -2.107668238486], [" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND note = 'q'", -4.046025959134], [" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND note = 'q'", -4.046025959134], [" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND note = 'q'", -4.465428487014], [" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND note = 'q'", -4.465428487014], [" SELECT COUNT(*) FROM w WHERE country = 'venezuela' AND `time` LIKE '%q%'", -5.126178679514], [" SELECT COUNT(DISTINCT swimmer) FROM w WHERE country = 'venezuela' AND note = 'q'", -11.243871796206]]}, "283": {"question": "how many seasons are shown in this chart?", "gold_answer": ["17"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]]}, "nsql": [[" SELECT COUNT(DISTINCT season) FROM w", -5.3982100679450005], [" SELECT COUNT(DISTINCT season) FROM w", -5.3982100679450005], [" SELECT COUNT(DISTINCT season) FROM w", -5.3982100679450005], [" SELECT COUNT(DISTINCT(season)) FROM w", -7.675670333687999], [" SELECT COUNT(DISTINCT season) FROM w", -8.268282310763999], [" SELECT COUNT(DISTINCT season) FROM w", -9.116016216244999], [" SELECT COUNT(DISTINCT season) FROM w", -9.818994096245], [" SELECT COUNT(DISTINCT(season)) FROM w", -10.716774485973], [" SELECT COUNT(DISTINCT(season)) FROM w", -11.347530685973], [" SELECT COUNT(DISTINCT season) FROM w", -11.915179716245]]}, "324": {"question": "how many metres is the mississippi aerial river transit from bottom to top?", "gold_answer": ["109 m"], "pred_answer": {"0": [["109 m"], ["109 m"], ["109 m"], ["109 m"], ["109 m"], ["109 m"], ["109 m"], [1], ["109 m"], [109]]}, "nsql": [[" SELECT height FROM w WHERE name = 'mississippi aerial river transit'", -6.298752174376999], [" SELECT height FROM w WHERE name = 'mississippi aerial river transit'", -6.298752174376999], [" SELECT height FROM w WHERE name = 'mississippi aerial river transit'", -6.298752174376999], [" SELECT `height` FROM w WHERE name = 'mississippi aerial river transit'", -6.8219559815999995], [" SELECT `height` FROM w WHERE name = 'mississippi aerial river transit'", -7.0678995038300005], [" SELECT height FROM w WHERE name = 'mississippi aerial river transit'", -7.360045786939999], [" SELECT height FROM w WHERE name = 'mississippi aerial river transit'", -8.252573020377], [" SELECT COUNT(*) FROM w WHERE name = 'mississippi aerial river transit'", -10.43793159144], [" SELECT height FROM w WHERE name = 'mississippi aerial river transit'", -10.991979420377], [" SELECT CAST(SUBSTR(height, 1, INSTR(height, ' ') - 1) AS INT) FROM w WHERE name = 'mississippi aerial river transit'", -12.880661858460002]]}, "365": {"question": "how many countries had more than one player in the consolation cup?", "gold_answer": ["4"], "pred_answer": {"0": [[13], [13], "<error>", [13], [10], [13], [13], [13], [9], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT player) FROM w WHERE `#` > 1", -5.926271362064001], [" SELECT COUNT(DISTINCT(player)) FROM w WHERE `#` > 1", -6.5088961510639995], [" SELECT COUNT(DISTINCT country) FROM w WHERE `#` > 1", -7.8676816540639996], [" SELECT COUNT(*) FROM w WHERE `#` > 1", -8.51510672901], [" SELECT COUNT(DISTINCT SUBSTR(player, INSTR(player, '(') + 1, INSTR(player, ')') - (INSTR(player, '(') + 1))) FROM w WHERE # > 1", -8.610695562572001], [" SELECT COUNT(*) FROM w WHERE qual. > 1", -9.36275441443], [" SELECT COUNT(DISTINCT(player)) FROM w WHERE `#` > 1", -12.260653453864], [" SELECT COUNT(DISTINCT(player)) FROM w WHERE `#` > 1.0", -12.682523459543999], [" SELECT COUNT(DISTINCT SUBSTR(player, INSTR(player, '(') + 1, INSTR(player, ')') - (INSTR(player, '(') + 1))) FROM w WHERE qual. > 0", -14.17846027354], [" SELECT COUNT(DISTINCT SUBSTR(player, INSTR(player, '(') + 1, INSTR(player, ')') - INSTR(player, '(') - 1)) FROM w WHERE `#` = 'nan'", -14.807623800983999]]}, "406": {"question": "who perfomed the most number of laps, marco simoncelli or hiroshi aoyama?", "gold_answer": ["Marco Simoncelli"], "pred_answer": {"0": [[25.0], [25.0], [25.0], [25.0], [25.0], [25.0], [25.0], [25.0], [25.0], [25.0]], "1": [[15.0], [15.0], [15.0], [15.0], [15.0], [15.0], [15.0], [15.0], [15.0], [15.0]]}, "nsql": [[" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5364001962100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5364001962100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5364001962100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5364001962100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5364001962100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5364001962100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5376647606100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5376647606100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5376647606100002], [" SELECT laps FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT laps FROM w WHERE rider = 'hiroshi aoyama'", -1.5381330828600004]]}, "447": {"question": "tell me the number of residents in formby.", "gold_answer": ["23,586"], "pred_answer": {"0": [[23586], [23586], [23586], [23586], [23586], [23586], [23586], [23586], [23586], [23586]]}, "nsql": [[" SELECT population FROM w WHERE name = 'formby'", -1.6980307384899997], [" SELECT population FROM w WHERE name = 'formby'", -1.6980307384899997], [" SELECT population FROM w WHERE name = 'formby'", -1.6980307384899997], [" SELECT population FROM w WHERE name = 'formby'", -1.6980307384899997], [" SELECT population FROM w WHERE name = 'formby'", -2.4468580174900003], [" SELECT population FROM w WHERE name = 'formby'", -2.4468580174900003], [" SELECT SUM(population) FROM w WHERE name = 'formby'", -5.3337740373499996], [" SELECT SUM(population) FROM w WHERE name = 'formby'", -5.786134979152], [" SELECT SUM(population) FROM w WHERE name = 'formby'", -5.786134979152], [" SELECT SUM(population) FROM w WHERE name = 'formby'", -9.993950319151999]]}, "488": {"question": "in how many titles on this list did he not play the role of phineas bogg?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [6], [6], [4], [4], [5], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE title != 'voyager from the unknown' AND role != 'phineas bogg'", -4.398301400369999], [" SELECT COUNT(*) FROM w WHERE title NOT LIKE '%phineas bogg%'", -4.452090699769999], [" SELECT COUNT(*) FROM w WHERE title NOT LIKE '%phineas bogg%'", -4.452090699769999], [" SELECT COUNT(*) FROM w WHERE role != 'phineas bogg'", -5.9192095325450005], [" SELECT COUNT(*) FROM w WHERE role != 'phineas bogg'", -5.9192095325450005], [" SELECT COUNT(*) FROM w WHERE title != 'voyager from the unknown'", -6.90450074644], [" SELECT COUNT(*) FROM w WHERE role != 'phineas bogg'", -7.507829432545], [" SELECT COUNT(*) FROM w WHERE title != 'voyager from the unknown' AND title != 'voyagers!'", -8.06398685528], [" SELECT COUNT(*) FROM w WHERE title != 'voyager from the unknown' AND title != 'voyagers!'", -8.06398685528], [" SELECT COUNT(*) FROM w WHERE title != 'voyager from the unknown' AND title != 'voyagers!'", -8.06398685528]]}, "529": {"question": "which country is represented by the most drivers?", "gold_answer": ["United Kingdom"], "pred_answer": {"0": ["<error>", "<error>", "<error>", [9], "<error>", [9], [18], [0], "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1", -7.562570700026001], [" SELECT COUNT(*) FROM w GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1", -7.562570700026001], [" SELECT COUNT(DISTINCT(country)) FROM w", -11.274890863803], [" SELECT COUNT(DISTINCT(team)) FROM w", -11.722785172428999], [" SELECT COUNT(DISTINCT country) FROM w", -13.394937070599001], [" SELECT COUNT(DISTINCT team) FROM w", -13.965371585954001], [" SELECT COUNT(*) FROM w WHERE team IN (SELECT team FROM w GROUP BY team HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM w GROUP BY team)))", -15.481789272535998], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% '", -18.263770184736], [" SELECT COUNT(DISTINCT(country)) FROM w WHERE country = (SELECT country FROM w GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1)", -18.819169918509004], [" SELECT COUNT(DISTINCT(country)) FROM w WHERE country = 'united states'", -21.606655168768995]]}, "570": {"question": "how many people are on the list?", "gold_answer": ["9"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.0291998972099998], [" SELECT COUNT(*) FROM w", -1.02993173725], [" SELECT COUNT(*) FROM w", -1.02996376401], [" SELECT COUNT(*) FROM w", -1.03064004505], [" SELECT COUNT(*) FROM w", -1.031006047705], [" SELECT COUNT(*) FROM w", -1.031006047705], [" SELECT COUNT(*) FROM w", -1.031006047705], [" SELECT COUNT(*) FROM w", -1.031802623605], [" SELECT COUNT(*) FROM w", -2.5230267461399998], [" SELECT COUNT(*) FROM w", -2.5233570151400007]]}, "611": {"question": "which event won the most medals?", "gold_answer": ["Cycling"], "pred_answer": {"0": ["<error>", [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE event = a1", -3.83452965946], [" SELECT COUNT(*) FROM w WHERE event = '{event = a1}'", -3.88183799601], [" SELECT COUNT(*) FROM w WHERE event = '{event = a1}'", -3.88183799601], [" SELECT COUNT(*) FROM w WHERE event = '{event = a1}'", -3.88183799601], [" SELECT COUNT(*) FROM w WHERE event = '{event = a1}'", -4.706737132860001], [" SELECT COUNT(*) FROM w WHERE event = '{a1}'", -5.834496975059999], [" SELECT COUNT(*) FROM w WHERE event = '{event}'", -7.50083663487], [" SELECT COUNT(*) FROM w WHERE event = '{event}'", -8.13367558336], [" SELECT COUNT(*) FROM w WHERE event = '{a1}'", -8.212275355], [" SELECT COUNT(*) FROM w WHERE event = '{a1}'", -8.629382455]]}, "652": {"question": "how many more silver medals did gillis grafstr\u00f6m have compared to sonja henie?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -3.9076059949000004], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -5.568941076860001], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -5.569714234260001], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -5.569714234260001], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -5.57246657686], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -5.57246657686], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -5.57246657686], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -5.57246657686], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -8.720185421460002], [" SELECT silver FROM w WHERE athlete = 'gillis grafstr\u00f6m'\nNeuralSQL2: SELECT silver FROM w WHERE athlete = 'sonja henie'", -11.908543938360001]]}, "693": {"question": "what are the number of pga winning golfers that zimbabwe has?", "gold_answer": ["2"], "pred_answer": {"0": [[1], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"], "2": [[4]], "3": ["<error>"], "4": [[4]], "5": ["<error>"], "6": [[4]], "7": ["<error>"], "8": [[4]], "9": ["<error>"], "10": [[4]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe' AND pga > 0", -3.9096096569200007], [" SELECT `pga` FROM w WHERE country = 'zimbabwe'", -3.9770331143099997], [" SELECT `pga` FROM w WHERE country = 'zimbabwe'", -3.9770331143099997], [" SELECT `pga` FROM w WHERE country = 'zimbabwe'", -3.979983534534999], [" SELECT `pga` FROM w WHERE country = 'zimbabwe'", -3.979983534534999], [" SELECT pga FROM w WHERE country = 'zimbabwe'", -5.63730961015], [" SELECT pga FROM w WHERE country = 'zimbabwe'", -5.63730961015], [" SELECT `pga` FROM w WHERE country = 'zimbabwe'", -5.79419581588], [" SELECT pga FROM w WHERE country = 'zimbabwe'", -8.44645077622], [" SELECT pga FROM w WHERE country = 'zimbabwe'\nQ2: the number of countries that have {how many = a2} pga winning golfers.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE pga = '1'\nQ3: the number of countries that have {how many = a3} pga winning golfers.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE pga = '1'\nQ4: the number of countries that have {how many = a4} pga winning golfers.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE pga = '1'\nQ5: the number of countries that have {how many = a5} pga winning golfers.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE pga = '1'\nQ6: the number of countries that have {how many = a6} pga winning golfers.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE pga = '1'\nQ7: the number of countries that have {how many = a7} pga winning golfers", -30.692042057147994]]}, "734": {"question": "who won the most marlboro tours?", "gold_answer": ["Carlo Guieb"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner LIKE '%manuel buenaventura%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner LIKE '%armando catalan%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner LIKE '%victor espiritu%'", -2.3204744474980004], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%manuel buenaventura%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner LIKE '%armando catalan%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner LIKE '%victor espiritu%'", -2.328910660857], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%manuel buenaventura%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner LIKE '%armando catalan%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner LIKE '%victor espiritu%'", -2.328910660857], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%manuel buenaventura%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner LIKE '%armando catalan%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner LIKE '%victor espiritu%'", -2.328910660857], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%manuel buenaventura%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner LIKE '%armando catalan%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner LIKE '%victor espiritu%'", -2.328910660857], [" SELECT COUNT(*) FROM w WHERE winner = 'manuel buenaventura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'armando catalan'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner = 'victor espiritu'", -10.291207986022], [" SELECT COUNT(*) FROM w WHERE winner = 'manuel buenaventura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'armando catalan'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner = 'victor espiritu'", -10.327708170192], [" SELECT COUNT(*) FROM w WHERE winner = 'manuel buenaventura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'armando catalan'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner = 'victor espiritu'", -11.449045354922001], [" SELECT COUNT(*) FROM w WHERE winner = 'manuel buenaventura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'armando catalan'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner = 'victor espiritu'", -11.865563004921999], [" SELECT COUNT(*) FROM w WHERE winner = 'manuel buenaventura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'armando catalan'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner = 'victor espiritu'", -12.316117938922002]]}, "775": {"question": "how many players play a position other than guard?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position != 'guard'", -3.8414632673140003], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -3.8414632673140003], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -5.0762365192], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -5.080174169834], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -5.080174169834], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -5.826720942834], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -6.319113930834], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -6.320222053654001], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -7.752280604834], [" SELECT COUNT(*) FROM w WHERE position != 'guard'", -9.163454816554]]}, "816": {"question": "how many teams have won more than 1,500 games?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE wins > 1500", -1.06942720039], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -1.06942720039], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -1.06942720039], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -1.06942720039], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -1.06942720039], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -1.06942720039], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -1.06942720039], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -1.06942720039], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -3.3922297801900005], [" SELECT COUNT(*) FROM w WHERE wins > 1500", -3.3922297801900005]]}, "857": {"question": "how many films were there in 1990?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[3]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1990", -1.375305627854], [" SELECT COUNT(*) FROM w WHERE year = 1990", -1.375305627854], [" SELECT COUNT(*) FROM w WHERE year = 1990", -1.375305627854], [" SELECT COUNT(*) FROM w WHERE year = 1990", -1.375305627854], [" SELECT COUNT(*) FROM w WHERE year = 1990", -1.375305627854], [" SELECT COUNT(*) FROM w WHERE year = 1990", -1.375305627854], [" SELECT COUNT(*) FROM w WHERE year = 1990", -1.375305627854], [" SELECT COUNT(*) FROM w WHERE year = 1990", -3.029788947754001], [" SELECT COUNT(*) FROM w WHERE year = '1990'", -7.317232112753999], [" SELECT COUNT(*) FROM w WHERE year = 1990\nQ2: {how many = a2} films have a budget of $18000000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE budget = '$18000000'\nQ3: {how many = a3} films were directed by peter hyams.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE director = 'peter hyams'\nQ4: {how many = a4} films were directed by peter hyams and have a budget of $18000000.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE director = 'peter hyams' AND budget = '$18000000'\nQ5: {how many = a5} films were directed by peter hyams or have a budget of $18000000.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE director = 'peter hyams' OR budget = '$18000000'\nQ6: {how many = a6} films were directed by peter hyams and have a budget of $18000000 and were there in 1990.\nNeuralSQL6:", -36.897735369467505]]}, "860": {"question": "how many days does the japan super series last?", "gold_answer": ["5"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT DATEDIFF(`date\\nfinish`, `date\\nstart`) FROM w WHERE `official title` = 'japan super series'", -4.24260018105], [" SELECT DATEDIFF(`date\\nfinish`, `date\\nstart`) FROM w WHERE `official title` = 'japan super series'", -4.24267565002], [" SELECT DATEDIFF(`date\\nfinish`, `date\\nstart`) FROM w WHERE `official title` = 'japan super series'", -4.24267565002], [" SELECT DATEDIFF(date\\nfinish, date\\nstart) FROM w WHERE official title = 'japan super series'", -4.532083880559999], [" SELECT DATEDIFF(`date\\nfinish`, `date\\nstart`) FROM w WHERE `official title` = 'japan super series'", -6.7715955792499996], [" SELECT DATE_DIFF(`date\\nfinish`, `date\\nstart`) FROM w WHERE `official title` = 'japan super series'", -7.346539546500001], [" SELECT (CAST(SUBSTR(`date\\nfinish`, INSTR(`date\\nfinish`, ' ') + 1, LENGTH(`date\\nfinish`) - (INSTR(`date\\nfinish`, ' ') + 1)) AS INT) - CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT)) FROM w WHERE `official title` = 'japan super series'", -7.999301277401998], [" SELECT (CAST(SUBSTR(`date\\nfinish`, INSTR(`date\\nfinish`, ' ') + 1, LENGTH(`date\\nfinish`) - (INSTR(`date\\nfinish`, ' ') + 1)) AS INT) - CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT)) FROM w WHERE `official title` = 'japan super series'\n```", -10.332492507800998], [" SELECT (CAST(SUBSTR(`date\\nfinish`, INSTR(`date\\nfinish`, ' ') + 1, LENGTH(`date\\nfinish`) - (INSTR(`date\\nfinish`, ' ') + 1)) AS INT) - CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT)) FROM w WHERE `official title` = 'japan super series'", -10.5498219969695], [" SELECT (CAST(SUBSTR(`date\\nfinish`, INSTR(`date\\nfinish`, ' ') + 1, LENGTH(`date\\nfinish`) - (INSTR(`date\\nfinish`, ' ') + 1)) AS INT) - CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT)) FROM w WHERE `official title` = 'japan super series'", -10.594781421928994]]}, "881": {"question": "who coached the silverbacks longer, abundis or chacon?", "gold_answer": ["Chacon"], "pred_answer": {"0": [[0], "<error>", "<error>", "<error>", "<error>", "<error>", [], "<error>", [null], "<error>"], "1": [[0], "<error>", "<error>", "<error>", "<error>", "<error>", [], "<error>", [null], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name = 'abundis' AND club = 'silverbacks'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chacon' AND club = 'silverbacks'", -5.39614136645], [" SELECT (CAST(until AS INT) - from) FROM w WHERE name = 'abundis'\nNeuralSQL2: SELECT (CAST(until AS INT) - from) FROM w WHERE name = 'chacon'", -7.525025706870001], [" SELECT (MAX(from) - MIN(from)) FROM w WHERE name = 'abundis'\nNeuralSQL2: SELECT (MAX(from) - MIN(from)) FROM w WHERE name = 'chacon'", -8.563777946630001], [" SELECT (until - from) FROM w WHERE name = 'abundis'\nNeuralSQL2: SELECT (until - from) FROM w WHERE name = 'chacon'", -9.086667485280001], [" SELECT (until - from) FROM w WHERE name = 'abundis'\nNeuralSQL2: SELECT (until - from) FROM w WHERE name = 'chacon'", -9.087405963200002], [" SELECT SUM(CAST(UNTIL AS INT) - CAST(FROM AS INT)) FROM w WHERE name = 'abundis'\nNeuralSQL2: SELECT SUM(CAST(UNTIL AS INT) - CAST(FROM AS INT)) FROM w WHERE name = 'chacon'", -9.2225141636155], [" SELECT (`until` - `from`) FROM w WHERE name = 'abundis'\nNeuralSQL2: SELECT (`until` - `from`) FROM w WHERE name = 'chacon'", -10.157535186469998], [" SELECT (until - from) FROM w WHERE name = 'abundis'\nNeuralSQL2: SELECT (until - from) FROM w WHERE name = 'chacon'", -10.371106263200002], [" SELECT SUM(CAST(until AS INT) - `from`) FROM w WHERE name = 'abundis'\nNeuralSQL2: SELECT SUM(CAST(until AS INT) - `from`) FROM w WHERE name = 'chacon'", -13.669689654799997], [" SELECT COUNT(DISTINCT(from)) FROM w WHERE name = 'abundis' AND club = 'silverbacks'\nNeuralSQL2: SELECT COUNT(DISTINCT(from)) FROM w WHERE name = 'chacon' AND club = 'silverbacks'", -15.425374964983998]]}, "898": {"question": "what are the total number of times european junior championships is listed as the competition?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -1.48420887534], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -1.48420887534], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -1.48420887534], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -1.48420887534], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -1.48420887534], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -2.55207474934], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -2.55207474934], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -2.55207474934], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -2.55207474934], [" SELECT COUNT(*) FROM w WHERE competition = 'european junior championships'", -4.07884704934]]}, "902": {"question": "did the broncos on september 29th win by less than 5 points?", "gold_answer": ["yes"], "pred_answer": {"0": [[28270], [28270], [0], "<error>", [0], [0], [0], [28270], [0], [28270]], "1": ["<error>"]}, "nsql": [[" SELECT attendance FROM w WHERE date = 'september 29'", -4.0531636660000006], [" SELECT attendance FROM w WHERE date = 'september 29th'", -4.7949771956000005], [" SELECT CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) FROM w WHERE date = 'september 29'", -6.509871359300001], [" SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) FROM w WHERE date = 'september 29'", -6.731072138509999], [" SELECT CAST(SUBSTR(result, 1, INSTR(result, ' - ') - 1) AS INT) FROM w WHERE date = 'september 29'", -7.2551543395700016], [" SELECT CAST(SUBSTR(result, 1, INSTR(result, ' - ') - 1) AS INT) FROM w WHERE date = 'september 29'", -7.2551543395700016], [" SELECT (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) FROM w WHERE date = 'september 29'", -9.909104597055], [" SELECT `attendance` FROM w WHERE date = 'september 29th' AND result LIKE 'w%'", -10.986374148533999], [" SELECT SUM(CAST(REPLACE(SUBSTR(result, 1, INSTR(result, '-') - 1), 'w', '') AS INT) - CAST(REPLACE(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)), 'l', '') AS INT)) FROM w WHERE date = 'september 29'", -14.276028519680002], [" SELECT attendance FROM w WHERE date = 'september 29' AND result LIKE '%w%'\n```", -17.234860546000004]]}, "939": {"question": "what is the number of seniors on the team?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -3.527973147116], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -3.527973147116], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -3.527973147116], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -4.939525455248], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -4.939525455248], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -4.939525455248], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -4.939525455248], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -4.939525455248], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -4.952854902911], [" SELECT COUNT(*) FROM w WHERE class = 'sr.'", -4.952854902911]]}, "943": {"question": "which whitworth size has the same number of threads per inch as 3/16?", "gold_answer": ["7/32"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = (SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '3/16')", -3.6172579003500003], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = (SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '3/16')", -3.61728973735], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = (SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '3/16')", -3.61728973735], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = (SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '3/16')", -3.617913619450001], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = (SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '3/16')", -3.62144690458], [" SELECT COUNT(*) FROM w WHERE `threads per inch` = (SELECT `threads per inch` FROM w WHERE `whitworth size (in)` = '3/16')", -4.28897051109], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = (SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '3/16')", -4.9528790991700005], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = (SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '3/16')", -5.4632526524500005], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = (SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '3/16')", -5.471523952170001], [" SELECT COUNT(*) FROM w WHERE `threads per inch` = (SELECT `threads per inch` FROM w WHERE `whitworth size (in)` = '3/16')", -6.074981520180001]]}, "984": {"question": "what is the larger laps between 1963 or 1968", "gold_answer": ["1968"], "pred_answer": {"0": [[74], [74], [74], [74], [74], [74], [74], [74], [74], [74]], "1": [[196], [196], [196], [196], [196], [196], [196], [196], [196], [196]]}, "nsql": [[" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -1.2974725538799998], [" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -1.2974725538799998], [" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -1.29910005223], [" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -1.2992964640600002], [" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -1.29943761319], [" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -1.29943761319], [" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -1.29943761319], [" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -1.29943761319], [" SELECT laps FROM w WHERE year = '1963'\nNeuralSQL2: SELECT laps FROM w WHERE year = '1968'", -4.22015064888], [" SELECT laps FROM w WHERE year = 1963\nNeuralSQL2: SELECT laps FROM w WHERE year = 1968", -9.33606579785]]}, "1025": {"question": "what is the total count of athletes included in the rankings chart, including those classified as dsq & dnf?", "gold_answer": ["46"], "pred_answer": {"0": [[46], [35], [35], [35], [35], [35], [35], [35], [35], [35]]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.0228299827], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -6.182316895622], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -8.04848867326], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -8.056911091239998], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -8.056911091239998], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -8.964936561621998], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -8.988568248390001], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -9.270800954165], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -14.827588962164999], [" SELECT COUNT(*) FROM w WHERE NOT (rank = 'nan' OR rank = 'dsq' OR rank = 'dnf')", -16.786084647173997]]}, "1066": {"question": "how many voronezh radars were built before 2010?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [0], [1], [1], [1], [2], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE built < '2010' AND type LIKE '%voronezh%'", -5.034888334294], [" SELECT COUNT(*) FROM w WHERE built < '2010' AND type LIKE '%voronezh%'", -5.034888334294], [" SELECT COUNT(*) FROM w WHERE `built` < '2010' AND `type` LIKE '%voronezh%'", -5.518969348473999], [" SELECT COUNT(*) FROM w WHERE built LIKE '%2010%'", -6.372884202934001], [" SELECT COUNT(*) FROM w WHERE type = 'voronezh' AND built < '2010'", -7.005451856873999], [" SELECT COUNT(*) FROM w WHERE type = 'voronezh' AND `built` < '2010'", -8.204516492874], [" SELECT COUNT(*) FROM w WHERE type = 'voronezh' AND built < '2010'", -8.351645439123999], [" SELECT COUNT(*) FROM w WHERE built < '2010' AND type LIKE 'voronezh%'", -11.554822671674], [" SELECT COUNT(*) FROM w WHERE type = 'voronezh' AND built < '2010'", -12.401270552124], [" SELECT COUNT(*) FROM w WHERE type = 'voronezh' AND built < '2010'", -12.529174752124]]}, "1107": {"question": "which month had the most sunny days?", "gold_answer": ["August"], "pred_answer": {"0": [["193"], ["193"], ["193"], ["193"], ["193"], ["193"], ["193"], ["193"], ["193"], ["193"]], "1": [["137"], ["137"], ["137"], ["137"], ["137"], ["137"], ["137"], ["137"], ["137"], ["137"]], "2": [["155"], ["155"], ["155"], ["155"], ["155"], ["155"], ["155"], ["155"], ["155"], ["155"]], "3": [["167"], ["167"], ["167"], ["167"], ["167"], ["167"], ["167"], ["167"], ["167"], ["167"]], "4": [["163"], ["163"], ["163"], ["163"], ["163"], ["163"], ["163"], ["163"], ["163"], ["163"]], "5": [["178"], ["178"], ["178"], ["178"], ["178"], ["178"], ["178"], ["178"], ["178"], ["178"]]}, "nsql": [[" SELECT jan FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT feb FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT mar FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT apr FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT may FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT jun FROM w WHERE month = 'mean p1m sunshine hours'", -3.2385425599079998], [" SELECT jan FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT feb FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT mar FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT apr FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT may FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT jun FROM w WHERE month = 'mean p1m sunshine hours'", -3.2385425599079998], [" SELECT `jan` FROM w WHERE `month` = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT `feb` FROM w WHERE `month` = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT `mar` FROM w WHERE `month` = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT `apr` FROM w WHERE `month` = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT `may` FROM w WHERE `month` = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT `jun` FROM w WHERE `month` = 'mean p1m sunshine hours'", -4.687766407566], [" SELECT jan FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT feb FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT mar FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT apr FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT may FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT jun FROM w WHERE month = 'mean p1m sunshine hours'", -5.215570939908], [" SELECT jan FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT feb FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT mar FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT apr FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT may FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT jun FROM w WHERE month = 'mean p1m sunshine hours'", -5.215570939908], [" SELECT `jan` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT `feb` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT `mar` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT `apr` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT `may` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT `jun` FROM w WHERE month = 'mean p1m sunshine hours'", -8.316122263224997], [" SELECT `jan` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT `feb` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT `mar` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT `apr` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT `may` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT `jun` FROM w WHERE month = 'mean p1m sunshine hours'", -8.316654706261996], [" SELECT `jan` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT `feb` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT `mar` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT `apr` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT `may` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT `jun` FROM w WHERE month = 'mean p1m sunshine hours'", -9.570931044398996], [" SELECT `jan` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT `feb` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT `mar` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT `apr` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT `may` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT `jun` FROM w WHERE month = 'mean p1m sunshine hours'", -11.042844344398997], [" SELECT `jan` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL2: SELECT `feb` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL3: SELECT `mar` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL4: SELECT `apr` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL5: SELECT `may` FROM w WHERE month = 'mean p1m sunshine hours'\nNeuralSQL6: SELECT `jun` FROM w WHERE month = 'mean p1m sunshine hours'", -12.298046121678999]]}, "1148": {"question": "how many drivers are from italy?", "gold_answer": ["48"], "pred_answer": {"0": [[0], [0], [0], [0], "<error>", [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE drivers LIKE '%italy%'", -3.1820812690599998], [" SELECT COUNT(*) FROM w WHERE drivers LIKE '%italy%'", -3.1820812690599998], [" SELECT COUNT(*) FROM w WHERE drivers LIKE '%italy%'", -4.854177208019999], [" SELECT COUNT(DISTINCT drivers) FROM w WHERE drivers LIKE '%italy%'", -6.045554805089999], [" SELECT COUNT(DISTINCT drivers) FROM w WHERE country = 'italy'", -7.123645062590001], [" SELECT COUNT(DISTINCT(drivers)) FROM w WHERE drivers LIKE '%italy%'", -9.03277912752], [" SELECT COUNT(DISTINCT drivers) FROM w WHERE drivers LIKE '%italy%'", -11.32261929742], [" SELECT COUNT(DISTINCT drivers) FROM w WHERE drivers LIKE '%italy%'", -11.98870579742], [" SELECT COUNT(DISTINCT drivers) FROM w WHERE drivers LIKE '%italy%'", -12.80576779742], [" SELECT COUNT(DISTINCT(drivers)) FROM w WHERE drivers LIKE '%italy%'\nQ2: {how many = a2} drivers are from italy and have the same no.\nNeuralSQL2: SELECT COUNT(DISTINCT(drivers)) FROM w WHERE drivers LIKE '%italy%' AND no = (SELECT no FROM w WHERE drivers LIKE '%italy%' LIMIT 1)\nQ3: {how many = a3} drivers are from italy and have the same no and the same class.\nNeuralSQL3: SELECT COUNT(DISTINCT(drivers)) FROM w WHERE drivers LIKE '%italy%' AND no = (SELECT no FROM w WHERE drivers LIKE '%italy%' LIMIT 1) AND class = (SELECT class FROM w WHERE drivers LIKE '%italy%' LIMIT 1)\nQ4: {how many = a4} drivers are from italy and have the same no and the same class and the same team.\nNeuralSQL4: SELECT COUNT(DISTINCT(drivers)) FROM w WHERE drivers LIKE '%italy%' AND no", -36.514312014862014]]}, "1189": {"question": "how many surfaces are grass?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -3.4822569561699996], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -3.4822569561699996], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -8.53329104574], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -8.58456304574], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -8.71601504574], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -8.760081745739999], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -8.85909344574], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -8.978050745740001], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -9.14981684574], [" SELECT COUNT(*) FROM w WHERE surface = 'grass'", -10.51752664574]]}, "1230": {"question": "what are the number of laetare medalist that held a diplomat position?", "gold_answer": ["8"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -2.0241600972400002], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -2.0241600972400002], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -2.0241600972400002], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -2.0241600972400002], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -2.0241600972400002], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -2.0241600972400002], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -2.0241600972400002], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -3.72505223104], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat'", -3.72505223104], [" SELECT COUNT(*) FROM w WHERE position = 'diplomat' OR position_2 = 'diplomat'", -4.2135278095399995]]}, "1271": {"question": "how many consecutive players were released on july 9?", "gold_answer": ["6"], "pred_answer": {"0": [[0], [0], [6], [6], [6], [6], [5], [5], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date = '2012-07-09'", -4.64137682419], [" SELECT COUNT(*) FROM w WHERE date = '2012-07-09'", -4.64137682419], [" SELECT COUNT(*) FROM w WHERE date = '2012-07-09 00:00:00'", -6.0816755992500005], [" SELECT COUNT(*) FROM w WHERE date = '2012-07-09 00:00:00'", -7.8355765026], [" SELECT COUNT(*) FROM w WHERE date = '2012-07-09 00:00:00'", -8.53138703057], [" SELECT COUNT(*) FROM w WHERE date = '2012-07-09 00:00:00'", -9.527070845], [" SELECT COUNT(*) FROM w WHERE date = '2012-07-09 00:00:00' AND row_id - 1 IN (SELECT row_id FROM w WHERE date = '2012-07-09 00:00:00')", -10.408427218649999], [" SELECT COUNT(*) FROM w WHERE date = '2012-07-09 00:00:00' AND row_id - 1 IN (SELECT row_id FROM w WHERE date = '2012-07-09 00:00:00')", -10.414968040899996], [" SELECT COUNT(*) FROM w WHERE DATE(date) = '2012-07-09'", -10.75159534188], [" SELECT COUNT(*) FROM w WHERE date = '2012-07-09 00:00:00'", -11.471986330570001]]}, "12": {"question": "how many consecutive songs were by the album leaf?", "gold_answer": ["6"], "pred_answer": {"0": [[5], [0], [6], [1], [6], [4], [5], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf' AND row_id + 1 IN (SELECT row_id FROM w WHERE artist = 'the album leaf')", -6.56790770033], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf' AND row_id = row_id + 1", -6.77998559439], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf'", -7.85768880601], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf' AND row_id = (SELECT row_id FROM w WHERE artist = 'the album leaf' LIMIT 1) + 1", -9.100424976860003], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf'", -9.13870940601], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf' AND row_id IN (SELECT row_id + 1 FROM w WHERE artist = 'the album leaf' AND row_id IN (SELECT row_id + 1 FROM w WHERE artist = 'the album leaf'))", -10.96874591018], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf' AND row_id IN (SELECT row_id FROM w WHERE artist = 'the album leaf' AND row_id + 1 IN (SELECT row_id FROM w WHERE artist = 'the album leaf'))", -12.124387536789998], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf' AND song = 'another day again'", -17.69114002004], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf' AND song = 'the album leaf' AND artist = 'the album leaf'", -18.828468520509997], [" SELECT COUNT(*) FROM w WHERE artist = 'the album leaf' AND song = 'another day again' AND artist = 'the album leaf' AND song = 'always for you'", -20.394723]]}, "53": {"question": "how many of these missouri tv stations are actually licensed in a city in illinois (il)?", "gold_answer": ["7"], "pred_answer": {"0": [[8], [8], [7], [7], [7], [7], [7], [8], [7], [8]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city of license LIKE '%il%'", -3.022842368850001], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%il%'", -3.0228440396000007], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '% il'", -4.29127475409], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '% il'", -4.29127475409], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '% il'", -4.29127475409], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '% il'", -5.3363929366], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '% il'", -6.026570497960001], [" SELECT COUNT(*) FROM w WHERE `city of license` LIKE '%il%'", -6.3797888531], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%il'", -6.406055642599999], [" SELECT COUNT(*) FROM w WHERE `city of license` LIKE '%il%'\n```", -14.49733481413]]}, "94": {"question": "which year had the most releases?", "gold_answer": ["1985"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-%-%'", -3.0794416132240015], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-%-%'", -3.080743898559001], [" SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE '1998-%-%'", -3.3704404125762992], [" SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE '1998-%-%'", -3.3704404125762992], [" SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE '1998-%-%'", -3.3704404125762992], [" SELECT COUNT(*) FROM w WHERE date LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE '1998-%-%'", -3.3704404125762992], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1985%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1990%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE '1998%'", -3.9887926783560004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-%-%'", -5.478681893514001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-%-%'", -6.28270976031], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1985-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1990-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-%-%'", -6.945387635115001]]}, "135": {"question": "how many teams won 6 matches?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE won = 6", -1.3326450852960001], [" SELECT COUNT(*) FROM w WHERE won = 6", -1.3333184577160002], [" SELECT COUNT(*) FROM w WHERE won = 6", -1.3333184577160002], [" SELECT COUNT(*) FROM w WHERE won = 6", -1.3333184577160002], [" SELECT COUNT(*) FROM w WHERE won = 6", -1.3333184577160002], [" SELECT COUNT(*) FROM w WHERE won = 6", -1.3333184577160002], [" SELECT COUNT(*) FROM w WHERE won = 6", -1.3333184577160002], [" SELECT COUNT(*) FROM w WHERE won = 6", -1.334761479016], [" SELECT COUNT(*) FROM w WHERE won = 6", -2.336316553716], [" SELECT COUNT(*) FROM w WHERE won = 6", -2.339411801831]]}, "176": {"question": "how many athletes had a better result than tatyana bocharova?", "gold_answer": ["4"], "pred_answer": {"0": [[5], [5], [4], [5], [5], [5], [5], [5], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result > (SELECT result FROM w WHERE name = 'tatyana bocharova')", -5.84572000294], [" SELECT COUNT(*) FROM w WHERE result > (SELECT result FROM w WHERE name = 'tatyana bocharova')", -5.84572000294], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(result, 'm', '') AS FLOAT) > (SELECT CAST(REPLACE(result, 'm', '') AS FLOAT) FROM w WHERE name = 'tatyana bocharova')", -7.1605835117220025], [" SELECT COUNT(*) FROM w WHERE result > (SELECT result FROM w WHERE name = 'tatyana bocharova')", -8.46140704994], [" SELECT COUNT(*) FROM w WHERE result > (SELECT result FROM w WHERE name = 'tatyana bocharova')", -8.77933854494], [" SELECT COUNT(*) FROM w WHERE result > (SELECT result FROM w WHERE name = 'tatyana bocharova')", -9.04174518494], [" SELECT COUNT(*) FROM w WHERE result > (SELECT result FROM w WHERE name = 'tatyana bocharova')", -9.60729115494], [" SELECT COUNT(*) FROM w WHERE result > (SELECT result FROM w WHERE name = 'tatyana bocharova')", -10.25662173494], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(result, 'm', '') AS REAL) > CAST(REPLACE('13.5', 'm', '') AS REAL)", -10.260833216503], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(result, 'm', '') AS REAL) > CAST(REPLACE('13.5', 'm', '') AS REAL)", -10.641004816503]]}, "217": {"question": "how many singles from \"dosage\" appeared on the modern rock tracks charts?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], "<error>", "<error>", "<error>", "<error>", [3], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE single LIKE '%dosage%' AND chart = 'modern rock tracks'", -3.5799959753599997], [" SELECT COUNT(*) FROM w WHERE single LIKE '%dosage%' AND chart = 'modern rock tracks'", -3.5799959753599997], [" SELECT COUNT(*) FROM w WHERE single LIKE '%dosage%' AND chart = 'modern rock tracks'", -3.5799959753599997], [" SELECT COUNT(*) FROM w WHERE single LIKE '%dosage%' AND chart = 'modern rock tracks'", -5.5388255719899995], [" SELECT COUNT(*) FROM w WHERE album = 'dosage' AND chart = 'modern rock tracks'", -6.198130651342], [" SELECT COUNT(*) FROM w WHERE album = 'dosage' AND chart = 'modern rock tracks'", -6.198130651342], [" SELECT COUNT(*) FROM w WHERE album = 'dosage' AND chart = 'modern rock tracks'", -6.937056512492], [" SELECT COUNT(*) FROM w WHERE album = 'dosage' AND chart = 'modern rock tracks'", -7.162614151342], [" SELECT COUNT(DISTINCT(single)) FROM w WHERE chart = 'modern rock tracks'", -8.80541438637], [" SELECT COUNT(*) FROM w WHERE single LIKE '%dosage%' AND chart = 'modern rock tracks'\n```", -15.146271932409999]]}, "220": {"question": "what was the total number of districts within the state of godara?", "gold_answer": ["7"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[150]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara'", -2.9366866610499995], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara'", -2.9376103770499995], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara'", -2.9376103770499995], [" SELECT COUNT(DISTINCT `names of districts`) FROM w WHERE `name of kingdom` = 'godara'", -4.351744747485], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara' AND names of districts IS NOT NULL", -5.73866884122], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara' AND names of districts IS NOT NULL", -5.7497383502199995], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara' AND names of districts != 'none'", -6.657217617550001], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara' AND names of districts IS NOT NULL", -7.217166520150001], [" SELECT COUNT(*) FROM w WHERE `name of kingdom` = 'godara' AND `names of districts` != 'none'", -10.16207286885], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara' AND names of districts IS NOT NULL\nQ2: {how many = a2} kings have a capital of shekhsar.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE capital = 'shekhsar'\nQ3: the number of villages in the state of beniwal is {how many = a3}.\nNeuralSQL3: SELECT `no. of villages` FROM w WHERE name of kingdom = 'beniwal'\nQ4: {how many = a4} kings have a capital of shekhsar.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE capital = 'shekhsar'\nQ5: {how many = a5} districts within the state of godara.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE name of kingdom = 'godara' AND names of districts IS NOT NULL\nQ6: the number of villages in the state of beniwal is {how many = a6}.\nNeuralSQL6: SELECT `no. of villages` FROM w WHERE name of kingdom = '", -44.324180678354004]]}, "241": {"question": "what is the number of years with a quantity of 10?", "gold_answer": ["5"], "pred_answer": {"0": [[8], [8], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE quantity = 10", -2.2881035975400006], [" SELECT COUNT(*) FROM w WHERE quantity = 10", -2.2881035975400006], [" SELECT COUNT(DISTINCT year) FROM w WHERE quantity = 10", -5.18769972523], [" SELECT COUNT(DISTINCT year) FROM w WHERE quantity = 10", -5.18769972523], [" SELECT COUNT(DISTINCT year) FROM w WHERE quantity = 10", -5.18769972523], [" SELECT COUNT(DISTINCT year) FROM w WHERE quantity = 10", -5.18769972523], [" SELECT COUNT(DISTINCT year) FROM w WHERE quantity = 10", -5.18769972523], [" SELECT COUNT(DISTINCT year) FROM w WHERE quantity = 10", -5.18769972523], [" SELECT COUNT(DISTINCT year) FROM w WHERE quantity = 10", -6.952625425020001], [" SELECT COUNT(DISTINCT(year)) FROM w WHERE quantity = 10", -7.692606013990001]]}, "258": {"question": "what is the difference in total number of medals between india and nepal?", "gold_answer": ["132"], "pred_answer": {"0": [[197], [197], [197], [197], [197], [197], [197], [197], [197], [197]], "1": [[65], [66], [66], [66], [66], [66], [66], [66], [66], [66]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'nepal'", -2.3429708545850003], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'nepal'", -2.431376463565], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'nepal'", -2.431376463565], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'nepal'", -2.431376463565], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'nepal'", -2.431740014168], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'nepal'", -2.431740014168], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'nepal'", -2.431740014168], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'nepal'", -2.9861199235000004], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'nepal'", -6.296609251895], [" SELECT gold + silver + bronze FROM w WHERE nation = 'india'\nNeuralSQL2: SELECT gold + silver + bronze FROM w WHERE nation = 'nepal'", -12.19209662897]]}, "262": {"question": "how many games had an attendance of 10,000 at most?", "gold_answer": ["11"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance <= 10000", -0.9225974094999999], [" SELECT COUNT(*) FROM w WHERE attendance <= 10000", -0.9225974094999999], [" SELECT COUNT(*) FROM w WHERE attendance <= 10000", -0.9225974094999999], [" SELECT COUNT(*) FROM w WHERE attendance <= 10000", -0.9225974094999999], [" SELECT COUNT(*) FROM w WHERE attendance <= 10000", -0.9225974094999999], [" SELECT COUNT(*) FROM w WHERE attendance <= 10000", -0.9225974094999999], [" SELECT COUNT(*) FROM w WHERE attendance <= 10000", -0.9245256145], [" SELECT COUNT(*) FROM w WHERE attendance <= 10000", -0.9245256145], [" SELECT COUNT(*) FROM w WHERE attendance < 10000", -2.6275851994999995], [" SELECT COUNT(*) FROM w WHERE attendance < 10000", -3.8017362384999998]]}, "299": {"question": "how many networks have more affiliates than canal de las estrellas?", "gold_answer": ["1"], "pred_answer": {"0": [[1], "<error>", [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE affiliates > (SELECT affiliates FROM w WHERE network name = 'canal de las estrellas')", -5.6604044910499995], [" SELECT COUNT(*) FROM w WHERE affiliates > (SELECT affiliates FROM w WHERE network = 'canal de las estrellas')", -5.80548610289], [" SELECT COUNT(*) FROM w WHERE `affiliates` > (SELECT `affiliates` FROM w WHERE `network name` = 'canal de las estrellas')", -6.21881554032], [" SELECT COUNT(*) FROM w WHERE `affiliates` > (SELECT `affiliates` FROM w WHERE `network name` = 'canal de las estrellas')", -6.21881554032], [" SELECT COUNT(*) FROM w WHERE `affiliates` > (SELECT `affiliates` FROM w WHERE `network name` = 'canal de las estrellas')", -6.21881554032], [" SELECT COUNT(*) FROM w WHERE `affiliates` > (SELECT `affiliates` FROM w WHERE `network name` = 'canal de las estrellas')", -7.13985314032], [" SELECT COUNT(*) FROM w WHERE affiliates > (SELECT affiliates FROM w WHERE network name = 'canal de las estrellas')", -10.015790941656], [" SELECT COUNT(*) FROM w WHERE affiliates > (SELECT affiliates FROM w WHERE network name = 'canal de las estrellas')", -10.174230941655999], [" SELECT COUNT(*) FROM w WHERE affiliates > (SELECT affiliates FROM w WHERE network name = 'canal de las estrellas')", -10.412624629812], [" SELECT COUNT(*) FROM w WHERE affiliates > (SELECT affiliates FROM w WHERE network name = 'canal de las estrellas')", -13.449946115812]]}, "303": {"question": "how many caps did jean-pierre rives and michel crauste accrue?", "gold_answer": ["122"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [34], [34], [34], [34], [34]], "1": [[1], [1], [1], [1], [1], [11], [11], [11], [11], [11]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE player = 'jean-pierre rives'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'michel crauste'", -3.4883741492630005], [" SELECT COUNT(*) FROM w WHERE player = 'jean-pierre rives'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'michel crauste'", -3.4885547197830005], [" SELECT COUNT(*) FROM w WHERE player = 'jean-pierre rives'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'michel crauste'", -3.4903636148830004], [" SELECT COUNT(*) FROM w WHERE player = 'jean - pierre rives'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'michel crauste'", -4.29387590935], [" SELECT COUNT(*) FROM w WHERE player = 'jean - pierre rives'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'michel crauste'", -4.320445412140001], [" SELECT caps FROM w WHERE player = 'jean-pierre rives'\nNeuralSQL2: SELECT caps FROM w WHERE player = 'michel crauste'", -6.831512956119999], [" SELECT caps FROM w WHERE player = 'jean-pierre rives'\nNeuralSQL2: SELECT caps FROM w WHERE player = 'michel crauste'", -6.831512956119999], [" SELECT caps FROM w WHERE player = 'jean-pierre rives'\nNeuralSQL2: SELECT caps FROM w WHERE player = 'michel crauste'", -6.83964298312], [" SELECT `caps` FROM w WHERE player = 'jean-pierre rives'\nNeuralSQL2: SELECT `caps` FROM w WHERE player = 'michel crauste'", -7.5632274166350015], [" SELECT caps FROM w WHERE player = 'jean-pierre rives'\nNeuralSQL2: SELECT caps FROM w WHERE player = 'michel crauste'\n```", -9.133254901950002]]}, "344": {"question": "how many times was laos the opponent?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -3.0391615313400004], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -3.0391615313400004], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -3.04381412814], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -4.75014286589], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -4.75314400446], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -4.75314400446], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -5.61721820446], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -5.65265200446], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -6.04138800269], [" SELECT COUNT(*) FROM w WHERE opponent = 'laos'", -7.09635401215]]}, "385": {"question": "how many municipalities have areas that are below 50 square kilometers?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE area km2 < 50", -1.60984971998], [" SELECT COUNT(*) FROM w WHERE area km2 < 50", -1.6129458380800001], [" SELECT COUNT(*) FROM w WHERE area km2 < 50", -1.6129458380800001], [" SELECT COUNT(*) FROM w WHERE area km2 < 50", -4.0835217335800005], [" SELECT COUNT(*) FROM w WHERE `area km2` < 50", -4.55162361288], [" SELECT COUNT(*) FROM w WHERE `area km2` < 50", -5.539159962924], [" SELECT COUNT(*) FROM w WHERE `area km2` < 50", -8.10555640098], [" SELECT COUNT(*) FROM w WHERE `area km2` < 50", -10.226498089924], [" SELECT COUNT(*) FROM w WHERE `area km2` < 50", -11.960567789924], [" SELECT COUNT(*) FROM w WHERE area_km2 < 50", -12.278910926730001]]}, "426": {"question": "what is the difference in wins between wimbledon and the us open for this player?", "gold_answer": ["7"], "pred_answer": {"0": [[9], [9], "<error>", "<error>", "<error>", [94], [94], [0], "<error>", [9]], "1": [[2], [2], "<error>", "<error>", "<error>", [24], [24], [0], "<error>", [2]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(w\u2013l, 1, INSTR(w\u2013l, '\u2013') - 1) AS INT)) FROM w WHERE tournament = 'wimbledon'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(w\u2013l, 1, INSTR(w\u2013l, '\u2013') - 1) AS INT)) FROM w WHERE tournament = 'us open'", -5.972497694887001], [" SELECT SUM(CAST(SUBSTR(w\u2013l, 1, INSTR(w\u2013l, '\u2013') - 1) AS INT)) FROM w WHERE tournament = 'wimbledon'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(w\u2013l, 1, INSTR(w\u2013l, '\u2013') - 1) AS INT)) FROM w WHERE tournament = 'us open'", -5.972497694887001], [" SELECT SUM(CAST(SUBSTR(w-l, 1, INSTR(w-l, '-') - 1) AS INT)) FROM w WHERE tournament = 'wimbledon'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(w-l, 1, INSTR(w-l, '-') - 1) AS INT)) FROM w WHERE tournament = 'us open'", -6.422393839284996], [" SELECT SUM(CAST(SUBSTR(w-l, 1, INSTR(w-l, '-') - 1) AS INT)) FROM w WHERE tournament = 'wimbledon'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(w-l, 1, INSTR(w-l, '-') - 1) AS INT)) FROM w WHERE tournament = 'us open'", -6.422393839284996], [" SELECT CAST(SUBSTR(wimbledon, INSTR(wimbledon, '-') + 1, LENGTH(wimbledon) - (INSTR(wimbledon, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT CAST(SUBSTR(us open, INSTR(us open, '-') + 1, LENGTH(us open) - (INSTR(us open, ' - ') + 1)) AS INT)", -10.064455699025], [" SELECT SUM(CAST(REPLACE(`w\u2013l`,'\u2013','') AS INT)) FROM w WHERE tournament = 'wimbledon'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`w\u2013l`,'\u2013','') AS INT)) FROM w WHERE tournament = 'us open'", -10.385559200829999], [" SELECT SUM(CAST(REPLACE(`w\u2013l`,'\u2013','') AS INT)) FROM w WHERE tournament = 'wimbledon'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`w\u2013l`,'\u2013','') AS INT)) FROM w WHERE tournament = 'us open'", -13.43478476204], [" SELECT SUM(CAST(SUBSTR(`w\u2013l`, 1, INSTR(`w\u2013l`, '-') - 1) AS INT)) FROM w WHERE tournament = 'wimbledon'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`w\u2013l`, 1, INSTR(`w\u2013l`, '-') - 1) AS INT)) FROM w WHERE tournament = 'us open'", -14.775750602974998], [" SELECT CAST(SUBSTR(wimbledon, INSTR(wimbledon, '\u2013') + 1, LENGTH(wimbledon) - (INSTR(wimbledon, '\u2013') + 1)) AS INT) FROM w WHERE row_id = 2\nNeuralSQL2: SELECT CAST(SUBSTR(us open, INSTR(us open, '\u2013') + 1, LENGTH(us open) - (INSTR(us open, '\u2013') + 1)) AS INT) FROM w WHERE row_id = 3", -14.901618397087995], [" SELECT CAST(SUBSTR(w\u2013l, 1, INSTR(w\u2013l, '\u2013') - 1) AS INT) FROM w WHERE tournament = 'wimbledon'\nNeuralSQL2: SELECT CAST(SUBSTR(w\u2013l, 1, INSTR(w\u2013l, '\u2013') - 1) AS INT) FROM w WHERE tournament = 'us open'", -16.312655409488997]]}, "467": {"question": "how many total representatives have there been?", "gold_answer": ["50"], "pred_answer": {"0": [[52], [52], [52], [52], [52], [52], [52], [52], [52], [52]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.57221891827], [" SELECT COUNT(*) FROM w", -1.57221891827], [" SELECT COUNT(*) FROM w", -1.57221891827], [" SELECT COUNT(*) FROM w", -1.57221891827], [" SELECT COUNT(*) FROM w", -1.57221891827], [" SELECT COUNT(*) FROM w", -1.57221891827], [" SELECT COUNT(*) FROM w", -1.57221891827], [" SELECT COUNT(*) FROM w", -1.57834355589], [" SELECT COUNT(*) FROM w", -2.64354485733], [" SELECT COUNT(*) FROM w", -2.64354485733]]}, "508": {"question": "how many racers had cooper-climax as their constructor?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -1.33609671867], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -1.33609671867], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -1.33609671867], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -1.33609671867], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -1.33609671867], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -1.33609671867], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -1.33609671867], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -2.76489784816], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'", -2.76489784816], [" SELECT COUNT(*) FROM w WHERE constructor = 'cooper-climax'\n```", -4.15756885236]]}, "549": {"question": "was the quantity higher in 1894 or 1893?", "gold_answer": ["1894"], "pred_answer": {"0": [[10, 10], [10, 10], [10, 10], [20], [20], [20], [10, 10], [20], [10, 10], [10]], "1": [[1, 10], [1, 10], [1, 10], [11], [11], [11], [1, 10], [11], [1, 10], [1, 10]]}, "nsql": [[" SELECT quantity FROM w WHERE year = 1894\nNeuralSQL2: SELECT quantity FROM w WHERE year = 1893", -4.600134743320001], [" SELECT quantity FROM w WHERE year = 1894\nNeuralSQL2: SELECT quantity FROM w WHERE year = 1893", -4.600134743320001], [" SELECT quantity FROM w WHERE year = 1894\nNeuralSQL2: SELECT quantity FROM w WHERE year = 1893", -4.600134743320001], [" SELECT SUM(quantity) FROM w WHERE year = 1894\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE year = 1893", -5.41013131584], [" SELECT SUM(quantity) FROM w WHERE year = 1894\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE year = 1893", -5.4146064028200005], [" SELECT SUM(quantity) FROM w WHERE year = 1894\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE year = 1893", -5.4146064028200005], [" SELECT quantity FROM w WHERE year = 1894\nNeuralSQL2: SELECT quantity FROM w WHERE year = 1893", -5.57563875332], [" SELECT SUM(quantity) FROM w WHERE year = 1894\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE year = 1893", -6.065798435020001], [" SELECT quantity FROM w WHERE year = 1894\nNeuralSQL2: SELECT quantity FROM w WHERE year = 1893", -6.220942422770001], [" SELECT DISTINCT quantity FROM w WHERE year = 1894\nNeuralSQL2: SELECT DISTINCT quantity FROM w WHERE year = 1893", -8.0903959940043]]}, "590": {"question": "which country was awarded more than 5 silver medals?", "gold_answer": ["Cuba"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE silver > 5", -0.9633761503599999], [" SELECT COUNT(*) FROM w WHERE silver > 5", -0.9633761503599999], [" SELECT COUNT(*) FROM w WHERE silver > 5", -0.9633761503599999], [" SELECT COUNT(*) FROM w WHERE silver > 5", -0.9633761503599999], [" SELECT COUNT(*) FROM w WHERE silver > 5", -0.96651381896], [" SELECT COUNT(*) FROM w WHERE silver > 5", -0.96651381896], [" SELECT COUNT(*) FROM w WHERE silver > 5", -0.96670213976], [" SELECT COUNT(*) FROM w WHERE silver > 5", -0.96670213976], [" SELECT COUNT(*) FROM w WHERE silver > 5", -2.32566194276], [" SELECT COUNT(*) FROM w WHERE silver > 5\n```", -11.44055118616]]}, "631": {"question": "how many cyclist do not have -1 laps down?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `laps\\ndown` != -1", -2.738190682854], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` != -1", -2.7402068246240003], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` != -1", -3.724321337854], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` != -1", -3.7319296006240004], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` != -1", -3.7319296006240004], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` <> -1", -3.7946502366240003], [" SELECT COUNT(*) FROM w WHERE `laps down` != -1", -4.611043789963999], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` != -1.0", -7.0611425569340005], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` <> -1.0", -9.625856498804], [" SELECT COUNT(*) FROM w WHERE `laps\\ndown` IS NOT -1.0", -10.938168371903998]]}, "672": {"question": "what were the total number of air dates in february?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [4], [0], [7], [7], [0], [7], [7], [7], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'", -3.75016536461], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `air date` LIKE '2011-02-%'", -4.331215894124001], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%-%'", -4.66597045361], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'", -5.848854223609999], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'", -5.934862423609999], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `air date` LIKE '2011-02-%-%'", -6.092269855124], [" SELECT COUNT(*) FROM w WHERE air date LIKE '2011-02-%'\n```", -6.38588209679], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'", -6.474637523609999], [" SELECT COUNT(*) FROM w WHERE air date LIKE '2011-02-%'", -7.525928399140001], [" SELECT COUNT(DISTINCT air date) FROM w WHERE air date LIKE '2011-02-%'", -7.886648759274001]]}, "713": {"question": "how many games did this team play in 1982?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.3120367161600002], [" SELECT COUNT(*) FROM w", -1.3160189144540002], [" SELECT COUNT(*) FROM w", -1.3160189144540002], [" SELECT COUNT(*) FROM w", -1.3160189144540002], [" SELECT COUNT(*) FROM w", -1.3160189144540002], [" SELECT COUNT(*) FROM w", -1.3160189144540002], [" SELECT COUNT(*) FROM w", -1.3160189144540002], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1982-%-%'", -3.5664925458199996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1982-%-%'", -3.5664925458199996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1982-%-%'", -3.5664925458199996]]}, "754": {"question": "was there a larger total population before expulsion in poland or sudetendeutsch?", "gold_answer": ["Poland"], "pred_answer": {"0": [[1905991], [1905991], [1905991], [1905991], [null], "<error>", [18578090], [1905991], [19050537], [1905991]], "1": [[1905991], [1905991], [1905991], [], [null], [3485163], [18578090], [1905991], [19051103], [1905991]]}, "nsql": [[" SELECT total FROM w WHERE description = 'total unsolved cases' AND poland IS NOT NULL\nNeuralSQL2: SELECT total FROM w WHERE description = 'total unsolved cases' AND sudetendeutsch IS NOT NULL", -5.239319627489999], [" SELECT SUM(total) FROM w WHERE description = 'total unsolved cases'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'total unsolved cases'", -6.244576791470002], [" SELECT SUM(total) FROM w WHERE description = 'total unsolved cases'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'total unsolved cases'", -6.244576791470002], [" SELECT `total` FROM w WHERE description = 'total unsolved cases' AND poland = '1404993'\nNeuralSQL2: SELECT `total` FROM w WHERE description = 'total unsolved cases' AND sudetendeutsch = '120661'", -7.19938001581], [" SELECT SUM(total) FROM w WHERE description LIKE '%poland%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description LIKE '%sudetendeutsch%'", -7.379512857184999], [" SELECT SUM(total) - SUM(`baltic states(resettled in poland during war)`) - SUM(`resettled in poland during war(from ussr and romania)`) - SUM(`sudetendeutsch`) - SUM(`se europe\\n(hungary, romania, yugoslavia & slovakia)`) FROM w\nNeuralSQL2: SELECT SUM(`sudetendeutsch`) FROM w", -11.481009027149007], [" SELECT SUM(total) FROM w WHERE description LIKE '%total%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description LIKE '%total%'", -11.740200398460006], [" SELECT SUM(total) FROM w WHERE description = 'total unsolved cases'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'total unsolved cases' AND sudetendeutsch != 'none'", -14.089738014320002], [" SELECT SUM(total) FROM w WHERE poland <> 'none'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE sudetendeutsch <> 'none'", -14.84966964666], [" SELECT `total` FROM w WHERE description = 'total unsolved cases' AND poland = 'poland'\nNeuralSQL2: SELECT `total` FROM w WHERE description = 'total unsolved cases' AND sudetendeutsch = 'sudetendeutsch'", -15.49731613175]]}, "795": {"question": "how many players are middle blockers?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -3.48642837986], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -4.740299420936], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -4.743677281036], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -4.743677281036], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -4.743677281036], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -4.743677281036], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -5.408079524035999], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -6.5817957660360005], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -8.331919796036], [" SELECT COUNT(*) FROM w WHERE position = 'middle blocker'", -8.555701479836]]}, "836": {"question": "how many games were played at the ben hill griffin stadium during the 2010-2011 season?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>", "<error>"], "2": [[1], [12]], "3": ["<error>", "<error>"], "4": [[1], [1]], "5": ["<error>", "<error>"], "6": [[7], [8]], "7": ["<error>", "<error>"], "8": [[1], [2]], "9": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'", -2.371238077334], [" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'", -2.371238077334], [" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'", -2.371238077334], [" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'", -2.371238077334], [" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'", -2.371238077334], [" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'", -2.371238077334], [" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'", -2.3732626434300004], [" SELECT COUNT(*) FROM w WHERE site LIKE 'ben hill griffin stadium \u2022 %'", -5.32434268883], [" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'\nQ2: {how many = a2} games were played at the neyland stadium during the 2010-2011 season.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE site LIKE '%neyland stadium%'\nQ3: {how many = a3} games were played at the doak campbell stadium during the 2010-2011 season.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE site LIKE '%doak campbell stadium%'\nQ4: {how many = a4} games were played at the ben hill griffin stadium during the 2010-2011 season.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'\nQ5: {how many = a5} games were played at the neyland stadium during the 2010-2011 season.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE site LIKE '%neyland stadium%'\nQ6: {how many = a6} games were played at the doak campbell stadium during the 2010", -21.020883203247504], [" SELECT COUNT(*) FROM w WHERE site LIKE '%ben hill griffin stadium%'\nQ2: {how many = a2} games were played on a saturday during the 2010-2011 season.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '%\u2013%\u20132010'\nQ3: {how many = a3} games were played against the florida state seminoles during the 2010-2011 season.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE opponent# LIKE '%florida state%'\nQ4: {how many = a4} games were played against an opponent ranked in the top 25 during the 2010-2011 season.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE rank# LIKE '#%'\nQ5: {how many = a5} games were played against a team from the state of florida during the 2010-2011 season.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE opponent# LIKE '%florida%'\nQ6: {how many = a6} games were played on the road during the 2010-2011 season", -50.20656183871203]]}, "877": {"question": "tell me the number of juniors on the team.", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `class` = 'jr.'", -2.107450821349], [" SELECT COUNT(*) FROM w WHERE `class` = 'jr.'", -2.107450821349], [" SELECT COUNT(*) FROM w WHERE `class` = 'jr.'", -3.203873219364], [" SELECT COUNT(*) FROM w WHERE class = 'jr.'", -3.7633644210499995], [" SELECT COUNT(*) FROM w WHERE class = 'jr.'", -3.7663559235640007], [" SELECT COUNT(*) FROM w WHERE class = 'jr.'", -4.325213288351], [" SELECT COUNT(*) FROM w WHERE class = 'jr.'", -4.325213288351], [" SELECT COUNT(*) FROM w WHERE class = 'jr.'", -4.723491988351], [" SELECT COUNT(*) FROM w WHERE class = 'jr.'", -5.260521100037], [" SELECT COUNT(*) FROM w WHERE `class` = 'jr.'\nQ2: there are {how many = a2} players from the state of texas.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `hometown` LIKE '% tx %'\nQ3: there are {how many = a3} players from the state of texas or the state of florida.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `hometown` LIKE '% tx %' OR `hometown` LIKE '% fl %'\nQ4: there are {how many = a4} players from the state of texas or the state of florida and are juniors.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `class` = 'jr.' AND (`hometown` LIKE '% tx %' OR `hometown` LIKE '% fl %')\nQ5: there are {how many = a5} players from the state of texas or the state of florida and are juniors or seniors.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE", -42.76358710178197]]}, "880": {"question": "how many total goals were scored?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": ["<error>"]}, "nsql": [[" SELECT SUM(goals) FROM w", -1.10330402419], [" SELECT SUM(goals) FROM w", -1.10330402419], [" SELECT SUM(goals) FROM w", -1.10330402419], [" SELECT SUM(goals) FROM w", -1.10330402419], [" SELECT SUM(goals) FROM w", -1.10330402419], [" SELECT SUM(goals) FROM w", -1.10330402419], [" SELECT SUM(goals) FROM w", -1.10330402419], [" SELECT SUM(goals) FROM w", -3.01373791971], [" SELECT SUM(goals) FROM w", -3.01373791971], [" SELECT SUM(goals) FROM w\n```", -12.040272587910001]]}, "901": {"question": "how many times was roger federer a runner-up?", "gold_answer": ["2"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [2], [4], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.65389046126], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.65389046126], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.65452267818], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.65452267818], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.65452267818], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.65569865531], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.30593363946], [" SELECT COUNT(*) FROM w WHERE opponent = 'roger federer' AND outcome = 'runner-up'", -3.4231941165600004], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.7764580077600005], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up' AND opponent = 'roger federer'", -6.04724281708]]}, "918": {"question": "what label was the only label to be used by france?", "gold_answer": ["Independence Records"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'france'", -3.3891735223699997], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'label' AND region = 'france'", -10.34303513828], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'label' AND region = 'france'", -10.620124689079999], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'label' AND region = 'france'", -10.94389351913], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'label' AND region = 'france'", -11.04737951913], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'label' AND region = 'france'", -11.40379151913], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'france' AND label = 'label'", -11.452883224199999], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'france' AND label = 'label'", -11.86165593785], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'label' AND region = 'france'", -12.941130461930001], [" SELECT COUNT(DISTINCT label) FROM w WHERE region = 'france'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'label' AND region = 'france'\n```", -15.48028164183]]}, "922": {"question": "how many times is the frequency greater than 95?", "gold_answer": ["5"], "pred_answer": {"0": [[3], [5], [3], [4], [4], [4], [4], [4], [3], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE frequency > 95", -2.89089410255], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, '\u00a0mhz', '') AS FLOAT) > 95", -5.843056470260001], [" SELECT COUNT(*) FROM w WHERE frequency > 95", -6.29230924945], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, '\u00a0mhz', '') AS INT) > 95", -8.94168094271], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 95", -12.629734863149999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, '\u00a0mhz', '') AS INT) > 95", -12.92220902296], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 95", -13.58093477315], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 95", -16.228217151539997], [" SELECT COUNT(*) FROM w WHERE frequency > 95", -16.710844847350003], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency,'\u00a0mhz','') AS INT) > 95\n```", -17.40838272792]]}, "959": {"question": "how many times did they finish above 5th place in division 2 tier 3?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE level = 'tier 3' AND division = 'division 2' AND position < 5", -5.07136979341], [" SELECT COUNT(*) FROM w WHERE division = 'division 2' AND level = 'tier 3' AND position < 5", -5.612877944409999], [" SELECT COUNT(*) FROM w WHERE `level` = 'tier 3' AND `division` = 'division 2' AND `position` < '5th'", -5.784981770510001], [" SELECT COUNT(*) FROM w WHERE position < 5 AND level = 'tier 3' AND division = 'division 2'", -6.070411829609999], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3' AND division = 'division 2' AND position < '5th'", -6.835813857579999], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3' AND division = 'division 2' AND position < '5th'", -9.168549955810002], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3' AND division = 'division 2' AND position < '5th'", -9.172221356229999], [" SELECT COUNT(*) FROM w WHERE division = 'division 2' AND level = 'tier 3' AND position < '5th'", -9.791362580009999], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3' AND division = 'division 2' AND position < '5th'", -13.469931366229998], [" SELECT COUNT(*) FROM w WHERE division = 'division 2' AND level = 'tier 3' AND position < '5th'", -16.711512456939996]]}, "963": {"question": "how many cities are in wisconsin?", "gold_answer": ["190"], "pred_answer": {"0": [[190], [190], [190], [190], [190], [190], [190], [190], [190], [190]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.4246257767900001], [" SELECT COUNT(*) FROM w", -1.4246257767900001], [" SELECT COUNT(*) FROM w", -1.4246257767900001], [" SELECT COUNT(*) FROM w", -1.4246257767900001], [" SELECT COUNT(*) FROM w", -1.4246257767900001], [" SELECT COUNT(*) FROM w", -1.4246257767900001], [" SELECT COUNT(*) FROM w", -1.4246257767900001], [" SELECT COUNT(*) FROM w", -2.49451842704], [" SELECT COUNT(*) FROM w", -2.49576770404], [" SELECT COUNT(*) FROM w", -5.3917105664600005]]}, "1004": {"question": "how many total did mitsuo kamata have?", "gold_answer": ["40(2)"], "pred_answer": {"0": [["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT total FROM w WHERE player = 'mitsuo kamata'", -1.9845868927800001], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -1.9845868927800001], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -1.9845868927800001], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -1.9845868927800001], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -1.9845868927800001], [" SELECT total FROM w WHERE player = 'mitsuo kamata'", -1.9881607660099998], [" SELECT `total` FROM w WHERE player = 'mitsuo kamata'", -2.40400397203], [" SELECT `total` FROM w WHERE player = 'mitsuo kamata'", -2.40400397203], [" SELECT total FROM w WHERE player = 'mitsuo kamata'\n```", -4.193316019279999], [" SELECT `total` FROM w WHERE player = 'mitsuo kamata'\n```", -14.957281182129996]]}, "1045": {"question": "how many players are not a junior?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year != 'junior'", -3.6577285693199997], [" SELECT COUNT(*) FROM w WHERE year != 'junior'", -4.090486546644], [" SELECT COUNT(*) FROM w WHERE year != 'junior'", -4.090486546644], [" SELECT COUNT(*) FROM w WHERE year != 'junior'", -4.090486546644], [" SELECT COUNT(*) FROM w WHERE year <> 'junior'", -4.427717256539999], [" SELECT COUNT(*) FROM w WHERE `year` != 'junior'", -4.573037590679999], [" SELECT COUNT(*) FROM w WHERE year != 'junior'", -4.58313059417], [" SELECT COUNT(*) FROM w WHERE year != 'junior'", -4.58313059417], [" SELECT COUNT(*) FROM w WHERE year != 'junior'", -5.29646519417], [" SELECT COUNT(*) FROM w WHERE year != 'junior'", -5.98354059417]]}, "1086": {"question": "what is the difference between suicides in poland and sudetendeutsch?", "gold_answer": ["6919"], "pred_answer": {"0": ["<error>", ["10330"], "<error>", "<error>", "<error>", [14356], "<error>", "<error>", [14356], [14356]], "1": ["<error>", [3411], "<error>", "<error>", "<error>", [3411], "<error>", "<error>", [14356], [14356]]}, "nsql": [[" SELECT `violent deaths` FROM w WHERE description = 'suicides in poland'\nNeuralSQL2: SELECT `violent deaths` FROM w WHERE description = 'suicides in sudetendeutsch'", -5.0019110243499965], [" SELECT `poland` FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT `sudetendeutsch` FROM w WHERE description = 'suicides'", -7.778922778049999], [" SELECT `violent deaths` FROM w WHERE description = 'during the wartime flight' AND poland = 'poland'\nNeuralSQL2: SELECT `violent deaths` FROM w WHERE description = 'during the wartime flight' AND sudetendeutsch = 'sudetendeutsch'", -8.387523355030002], [" SELECT `violent deaths` FROM w WHERE description = 'suicides' AND `description` = 'poland'\nNeuralSQL2: SELECT `violent deaths` FROM w WHERE description = 'suicides' AND `description` = 'sudetendeutsch'", -9.107661480120003], [" SELECT `total confirmed deaths` - `violent deaths` FROM w WHERE description = 'total confirmed deaths'\nNeuralSQL2: SELECT `total confirmed deaths` - `violent deaths` FROM w WHERE description = 'total confirmed deaths'", -9.911692072830002], [" SELECT `total` FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT `sudetendeutsch` FROM w WHERE description = 'suicides'", -12.017372963360001], [" SELECT `violent deaths` FROM w WHERE description = 'total confirmed deaths'\nNeuralSQL2: SELECT `violent deaths` FROM w WHERE description = 'total unsolved cases'", -13.957486726050002], [" SELECT `total confirmed deaths` FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT `total confirmed deaths` FROM w WHERE description = 'suicides'", -14.76175009993], [" SELECT `total` FROM w WHERE description = 'suicides' AND poland IS NOT NULL\nNeuralSQL2: SELECT `total` FROM w WHERE description = 'suicides' AND sudetendeutsch IS NOT NULL", -15.119890486830004], [" SELECT `total` FROM w WHERE description = 'suicides' AND poland = 'poland'\nNeuralSQL2: SELECT `total` FROM w WHERE description = 'suicides' AND sudetendeutsch = 'sudetendeutsch'", -18.237383687079998]]}, "1127": {"question": "how many stages were round robins?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [1], [17]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE stage = 'round robin'", -2.579291313876], [" SELECT COUNT(*) FROM w WHERE stage = 'round robin'", -2.579291313876], [" SELECT COUNT(*) FROM w WHERE stage = 'round robin'", -2.582075025245], [" SELECT COUNT(*) FROM w WHERE stage = 'round robin'", -2.5883144362759998], [" SELECT COUNT(*) FROM w WHERE stage = 'round robins'", -3.031973465209999], [" SELECT COUNT(*) FROM w WHERE stage = 'round robins'", -3.0324775076099995], [" SELECT COUNT(*) FROM w WHERE stage = 'round robin'", -4.1126635371199995], [" SELECT COUNT(*) FROM w WHERE stage = 'round robin'\n```", -5.94831506298], [" SELECT COUNT(DISTINCT stage) FROM w WHERE stage LIKE '%round robin%'", -7.05518702459], [" SELECT COUNT(*) FROM w WHERE stage = 'first stage'", -7.07101215658]]}, "1168": {"question": "name two events in which mayer competed before he won the bangkok universiade.", "gold_answer": ["European Championships", "Universiade"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year < 2007", -2.53233095814], [" SELECT COUNT(*) FROM w WHERE year < 2007", -2.53233095814], [" SELECT COUNT(*) FROM w WHERE year < 2007", -2.53233095814], [" SELECT COUNT(*) FROM w WHERE year < 2007", -2.53233095814], [" SELECT COUNT(*) FROM w WHERE year < 2007", -2.53233095814], [" SELECT COUNT(*) FROM w WHERE year < 2007", -2.53233095814], [" SELECT COUNT(*) FROM w WHERE `year` < 2007", -4.44396869628], [" SELECT COUNT(*) FROM w WHERE year < 2007", -4.52137583328], [" SELECT COUNT(*) FROM w WHERE year < 2007", -4.52137583328], [" SELECT COUNT(*) FROM w WHERE `year` < (SELECT `year` FROM w WHERE competition = 'universiade' AND venue = 'bangkok, thailand')", -7.10637406962]]}, "1209": {"question": "which nation has more gold medals, kuwait or india?", "gold_answer": ["India (IND)"], "pred_answer": {"0": [[], [], [], [], [], [], [], [], [], []], "1": [[], [], [], [], [], [], [], [], [], []], "2": ["<error>"]}, "nsql": [[" SELECT `gold` FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT `gold` FROM w WHERE nation = 'india'", -3.4182622718300006], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'", -7.195140645025999], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'", -7.201994865026], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'", -8.410495139126], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'", -9.524421715026], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'", -10.231272695666], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'", -10.240207345026], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'", -11.163630395026], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'", -11.695636435026], [" SELECT gold FROM w WHERE nation = 'kuwait'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'india'\n```", -14.719560599625998]]}, "1250": {"question": "how many shows had more than 10 million viewers?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -3.5459351669599997], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -4.39697194877], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -4.39697194877], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -4.41011558631], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -4.41011558631], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -4.41225285918], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -4.41225285918], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -4.41225285918], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -5.81668051868], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -9.41302894877]]}, "32": {"question": "how many total row entries are there?", "gold_answer": ["21"], "pred_answer": {"0": [[21], [21], [21], [21], [21], [21], [21], [21], [21], [21]]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.9089265665700004], [" SELECT COUNT(*) FROM w", -2.9089265665700004], [" SELECT COUNT(*) FROM w", -2.91550550464], [" SELECT COUNT(*) FROM w", -3.17369039219], [" SELECT COUNT(*) FROM w", -3.17369039219], [" SELECT COUNT(*) FROM w", -3.184564874504], [" SELECT COUNT(*) FROM w", -3.184564874504], [" SELECT COUNT(*) FROM w", -3.184564874504], [" SELECT COUNT(*) FROM w", -3.18855879304], [" SELECT COUNT(*) FROM w", -3.18855879304]]}, "73": {"question": "how many times was the location in the united states?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'united states'", -2.0348448425], [" SELECT COUNT(*) FROM w WHERE location = 'united states'", -2.0348448425], [" SELECT COUNT(*) FROM w WHERE location = 'united states'", -4.5818725236999995], [" SELECT COUNT(*) FROM w WHERE location = 'united states'", -4.5818725236999995], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -4.990415016499999], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -4.990415016499999], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -5.650315493700001], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -5.650315493700001], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -5.650315493700001], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -10.8768424887]]}, "114": {"question": "how many counties had at least 75% of the votes for obama?", "gold_answer": ["3"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [0], [0], "<error>", [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE obama LIKE '75%'", -4.029297082949999], [" SELECT COUNT(*) FROM w WHERE obama LIKE '75%'", -4.029297082949999], [" SELECT COUNT(*) FROM w WHERE obama LIKE '75%'", -4.029297082949999], [" SELECT COUNT(*) FROM w WHERE obama LIKE '%75%'", -4.1797077282199995], [" SELECT COUNT(*) FROM w WHERE obama LIKE '%75%'", -4.1797077282199995], [" SELECT COUNT(*) FROM w WHERE obama LIKE '75%'", -5.815030289989999], [" SELECT COUNT(*) FROM w WHERE (CAST(REPLACE(obama, '%', '') AS INT) / 100) >= 0.75", -7.757907187680001], [" SELECT COUNT(*) FROM w WHERE (CAST(REPLACE(obama, '%', '') AS INT) / 100) > 0.75", -7.88792490188], [" SELECT COUNT(*) FROM w WHERE obama > 75%", -10.45422323635], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(obama, '%', '') AS INT) >= 75", -14.867851801430001]]}, "155": {"question": "how many schools have at least 5 outright titles?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[7]], "5": ["<error>"], "6": [[12]], "7": ["<error>"], "8": [[7]], "9": ["<error>"], "10": [[24]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT school) FROM w WHERE `outright titles` >= 5", -3.343991195677], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5", -3.3843810196699997], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5", -4.68440075988], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5", -4.68442081088], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5", -4.68442081088], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5", -4.68442081088], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5", -4.68754978965], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5", -9.22121731488], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5", -10.14961601488], [" SELECT COUNT(*) FROM w WHERE `outright titles` >= 5\nQ2: {how many = a2} schools have at least 5 shared titles.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `shared titles` >= 5\nQ3: {how many = a3} schools have at least 5 runners-up.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `runners-up` >= 5\nQ4: {how many = a4} schools have at least 5 total finals.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `total finals` >= 5\nQ5: {how many = a5} schools have at least 5 last title.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `last title` >= 5\nQ6: {how many = a6} schools have at least 5 last final.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `last final` >= 5\nQ7: {how many = a7} schools have at least 5 outright titles and at least 5 shared titles.\nNeuralSQL7: SELECT COUNT(*) FROM", -20.25452950212598]]}, "196": {"question": "how much farther (in ly) is epsilon canis majoris than zeta sagittarii?", "gold_answer": ["26"], "pred_answer": {"0": [[430.0], [430.0], [430.0], [430.0], [430.0], [430.0], [430.0], [430.0], [430.0], [430.0]], "1": [[89.1], [89.1], [89.1], [89.1], [89.1], [89.1], [89.1], [89.1], [89.1], [89.1]]}, "nsql": [[" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -2.4797312479780005], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -2.4820457002680003], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -2.4830901795680007], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -2.4830901795680007], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -2.4889248978380003], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -2.4889248978380003], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -5.417698436138002], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -5.844788363588001], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -5.844788363588001], [" SELECT `current\\ndistance` FROM w WHERE star = 'epsilon canis majoris'\nNeuralSQL2: SELECT `current\\ndistance` FROM w WHERE star = 'zeta sagittarii'", -5.938503836138001]]}, "237": {"question": "what is the number of laps dan clarke completed?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT laps FROM w WHERE driver = 'dan clarke'", -1.200880458197], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -1.200880458197], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -1.200880458197], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -1.2026515858649998], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -1.204541812449], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -1.204541812449], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -1.204541812449], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -2.581362673449], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -2.588062917197], [" SELECT laps FROM w WHERE driver = 'dan clarke'", -2.588062917197]]}, "240": {"question": "how many times did brazil play west germany during the 1982 season?", "gold_answer": ["1"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": ["<error>", "<error>"], "2": [[11], [1]], "3": ["<error>", "<error>"], "4": [[11], [1]], "5": ["<error>", "<error>"], "6": [[11], [1]], "7": ["<error>", "<error>"], "8": [[11], [1]], "9": ["<error>", "<error>"], "10": [[11], [1]], "11": ["<error>", "<error>"], "12": [[11], "<error>"], "13": ["<error>"], "14": [[11]], "15": ["<error>"], "16": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.19487404694], [" SELECT COUNT(*) FROM w", -1.19487404694], [" SELECT COUNT(*) FROM w", -1.19487404694], [" SELECT COUNT(*) FROM w", -1.19487404694], [" SELECT COUNT(*) FROM w", -1.19487404694], [" SELECT COUNT(*) FROM w", -2.13851039138], [" SELECT COUNT(*) FROM w", -2.14447522264], [" SELECT COUNT(*) FROM w", -2.14447522264], [" SELECT COUNT(*) FROM w\nQ2: brazil played {how many = a2} matches in 1982.\nNeuralSQL2: SELECT COUNT(*) FROM w\nQ3: brazil played {how many = a3} matches in 1982.\nNeuralSQL3: SELECT COUNT(*) FROM w\nQ4: brazil played {how many = a4} matches in 1982.\nNeuralSQL4: SELECT COUNT(*) FROM w\nQ5: brazil played {how many = a5} matches in 1982.\nNeuralSQL5: SELECT COUNT(*) FROM w\nQ6: brazil played {how many = a6} matches in 1982.\nNeuralSQL6: SELECT COUNT(*) FROM w\nQ7: brazil played {how many = a7} matches in 1982.\nNeuralSQL7: SELECT COUNT(*) FROM w\nQ8: brazil played {how many = a8} matches in 1982.\nNeuralSQL8: SELECT COUNT(*) FROM w\nQ9: brazil played {how many = a9} matches in 1982.\nNeuralSQL9: SELECT", -18.999703632911], [" SELECT COUNT(*) FROM w\nQ2: brazil played {how many = a2} times against italy during the 1982 season.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opposition = 'italy'\nQ3: brazil played {how many = a3} times against italy during the 1982 season.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE opposition = 'italy'\nQ4: brazil played {how many = a4} times against italy during the 1982 season.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE opposition = 'italy'\nQ5: brazil played {how many = a5} times against italy during the 1982 season.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE opposition = 'italy'\nQ6: brazil played {how many = a6} times against italy during the 1982 season.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE opposition = 'italy'\nQ7: brazil played {how many = a7} times against italy during the 1982 season.\nNeuralSQL", -20.610870121763995]]}, "261": {"question": "how many shows were there in 2005?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[4]], "5": ["<error>"], "6": [[5]], "7": ["<error>"], "8": [[4]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT show) FROM w WHERE year = '2005'", -2.48103362757], [" SELECT COUNT(DISTINCT show) FROM w WHERE year = '2005'", -2.48103362757], [" SELECT COUNT(DISTINCT show) FROM w WHERE year = '2005'", -2.48103362757], [" SELECT COUNT(DISTINCT show) FROM w WHERE year LIKE '2005%'", -3.9166081719120003], [" SELECT COUNT(*) FROM w WHERE year = '2005'", -6.59636796729], [" SELECT COUNT(*) FROM w WHERE year = '2005'", -6.59636796729], [" SELECT COUNT(*) FROM w WHERE year = '2005'", -6.59636796729], [" SELECT COUNT(DISTINCT(show)) FROM w WHERE year = '2005'", -6.648644647812], [" SELECT COUNT(DISTINCT(show)) FROM w WHERE year = '2005'", -6.648644647812], [" SELECT COUNT(DISTINCT show) FROM w WHERE year LIKE '2005%'\nQ2: {how many = a2} shows were there in 2001.\nNeuralSQL2: SELECT COUNT(DISTINCT show) FROM w WHERE year LIKE '2001%'\nQ3: {how many = a3} shows were there in 2005 and 2001.\nNeuralSQL3: SELECT COUNT(DISTINCT show) FROM w WHERE year LIKE '2005%' OR year LIKE '2001%'\nQ4: {how many = a4} shows were there in 2005 and 2001 and 2009.\nNeuralSQL4: SELECT COUNT(DISTINCT show) FROM w WHERE year LIKE '2005%' OR year LIKE '2001%' OR year LIKE '2009%'\nQ5: {how many = a5} shows were there in 2005 and 2001 and not 2009.\nNeuralSQL5: SELECT COUNT(DISTINCT show) FROM w WHERE (year LIKE '2005%' OR year LIKE '2001%') AND year NOT LIKE '2009%'\nQ6: {how many = a6} shows were there", -33.86996038990401]]}, "278": {"question": "what is the total amount of ties in this competition?", "gold_answer": ["2"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place LIKE '%th (tie)%'", -2.8738157005200002], [" SELECT COUNT(*) FROM w WHERE place LIKE '%th (tie)%'", -2.8738157005200002], [" SELECT COUNT(*) FROM w WHERE place LIKE '%th (tie)%'", -2.8738157005200002], [" SELECT COUNT(*) FROM w WHERE place LIKE '%th (tie)%'", -2.8738157005200002], [" SELECT COUNT(*) FROM w WHERE place LIKE '%th (tie)%'", -2.8738157005200002], [" SELECT COUNT(*) FROM w WHERE place LIKE '%th (tie)%'", -2.90125420778], [" SELECT COUNT(*) FROM w WHERE place LIKE '%th (tie)'", -3.20760144558], [" SELECT COUNT(*) FROM w WHERE place LIKE '%(tie)%'", -3.56485676352], [" SELECT COUNT(*) FROM w WHERE place LIKE '%th (tie)%'", -4.208601686520001], [" SELECT COUNT(DISTINCT place) FROM w WHERE place LIKE '%th (tie)%'", -5.970928563189999]]}, "282": {"question": "in what year did the runner participate in the most marathons?", "gold_answer": ["1984"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1993 AND event = 'marathon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1992 AND event = 'marathon'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1984 AND event = 'marathon'", -2.54977376259], [" SELECT COUNT(*) FROM w WHERE year = 1993 AND event = 'marathon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1992 AND event = 'marathon'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1984 AND event = 'marathon'", -2.5663729754799998], [" SELECT COUNT(*) FROM w WHERE year = 1993 AND event = 'marathon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1992 AND event = 'marathon'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1984 AND event = 'marathon'", -2.57463506232], [" SELECT COUNT(*) FROM w WHERE year = 1993 AND event = 'marathon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1992 AND event = 'marathon'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1984 AND event = 'marathon'", -2.57770563472], [" SELECT COUNT(*) FROM w WHERE year = 1993 AND event = 'marathon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1992 AND event = 'marathon'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1984 AND event = 'marathon'", -2.57770563472], [" SELECT COUNT(*) FROM w WHERE event = 'marathon' AND year = 1993\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = 'marathon' AND year = 1992\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE event = 'marathon' AND year = 1984", -3.0391486007460005], [" SELECT COUNT(*) FROM w WHERE event = 'marathon' AND year = 1993\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = 'marathon' AND year = 1992\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE event = 'marathon' AND year = 1984", -3.0468324537240004], [" SELECT COUNT(*) FROM w WHERE year = 1993 AND event = 'marathon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1992 AND event = 'marathon'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1984 AND event = 'marathon'", -5.1675963466], [" SELECT COUNT(*) FROM w WHERE year = 1993 AND event = 'marathon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1992 AND event = 'marathon'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1984 AND event = 'marathon'", -5.7759765054], [" SELECT COUNT(*) FROM w WHERE year = 1993 AND event = \"marathon\"\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1992 AND event = \"marathon\"\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1984 AND event = \"marathon\"", -5.906594720719999]]}, "319": {"question": "what is the total number of locations?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": ["<error>"], "2": [[9]], "3": ["<error>"], "4": [[9]], "5": ["<error>"], "6": [[9]], "7": ["<error>"], "8": [[9]], "9": ["<error>"], "10": [[9]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT location) FROM w", -1.32590070063], [" SELECT COUNT(DISTINCT location) FROM w", -1.32590070063], [" SELECT COUNT(DISTINCT location) FROM w", -1.32590070063], [" SELECT COUNT(DISTINCT location) FROM w", -1.32590070063], [" SELECT COUNT(DISTINCT location) FROM w", -1.32590070063], [" SELECT COUNT(DISTINCT location) FROM w", -1.32590070063], [" SELECT COUNT(DISTINCT location) FROM w", -2.67479205563], [" SELECT COUNT(DISTINCT location) FROM w", -2.67479205563], [" SELECT COUNT(DISTINCT location) FROM w", -2.67479205563], [" SELECT COUNT(DISTINCT location) FROM w\nQ2: {how many = a2} locations have a coordinates.\nNeuralSQL2: SELECT COUNT(DISTINCT location) FROM w WHERE coordinates IS NOT NULL\nQ3: {how many = a3} locations have a details.\nNeuralSQL3: SELECT COUNT(DISTINCT location) FROM w WHERE details IS NOT NULL\nQ4: {how many = a4} locations have a built.\nNeuralSQL4: SELECT COUNT(DISTINCT location) FROM w WHERE built IS NOT NULL\nQ5: {how many = a5} locations have a type.\nNeuralSQL5: SELECT COUNT(DISTINCT location) FROM w WHERE type IS NOT NULL\nQ6: {how many = a6} locations have a coordinates and a details.\nNeuralSQL6: SELECT COUNT(DISTINCT location) FROM w WHERE coordinates IS NOT NULL AND details IS NOT NULL\nQ7: {how many = a7} locations have a coordinates and a built.\nNeuralSQL7: SELECT COUNT(DISTINCT location", -29.090042771217476]]}, "323": {"question": "how many ethnicity is there?", "gold_answer": ["6"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT ethnicity) FROM w", -4.15269295298], [" SELECT COUNT(DISTINCT(ethnicity)) FROM w", -6.18017077048], [" SELECT COUNT(DISTINCT ethnicity) FROM w", -8.723642146460001], [" SELECT COUNT(DISTINCT ethnicity) FROM w", -9.378535236460001], [" SELECT COUNT(DISTINCT ethnicity) FROM w", -9.585572204910001], [" SELECT COUNT(DISTINCT ethnicity) FROM w", -10.05459282491], [" SELECT COUNT(DISTINCT ethnicity) FROM w", -10.293093436460001], [" SELECT COUNT(DISTINCT ethnicity) FROM w", -10.447697474910001], [" SELECT COUNT(DISTINCT ethnicity) FROM w", -11.30677048991], [" SELECT COUNT(DISTINCT ethnicity) FROM w", -12.632624436459999]]}, "364": {"question": "how many nations won no silver medals at all?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE silver = 0", -3.8370719260399997], [" SELECT COUNT(*) FROM w WHERE silver = 0", -3.8370719260399997], [" SELECT COUNT(*) FROM w WHERE silver = 0", -3.8370719260399997], [" SELECT COUNT(*) FROM w WHERE silver = 0", -6.67080463822], [" SELECT COUNT(*) FROM w WHERE silver = 0", -7.177861138220001], [" SELECT COUNT(*) FROM w WHERE silver = 0", -7.95978883822], [" SELECT COUNT(*) FROM w WHERE silver = 0", -8.19885513822], [" SELECT COUNT(*) FROM w WHERE silver = 0", -8.52759903822], [" SELECT COUNT(*) FROM w WHERE silver = 0", -8.857102038219999], [" SELECT COUNT(*) FROM w WHERE silver = 0", -9.54489293822]]}, "405": {"question": "give the number of players covered by the table.", "gold_answer": ["16"], "pred_answer": {"0": [[16], [16], [16], [16], [16], [16], [16], [16], [16], [16]]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.205322001840001], [" SELECT COUNT(*) FROM w", -2.205322001840001], [" SELECT COUNT(*) FROM w", -2.2081248852199997], [" SELECT COUNT(DISTINCT player) FROM w", -6.107971332788], [" SELECT COUNT(DISTINCT player) FROM w", -6.7755054563], [" SELECT COUNT(DISTINCT(player)) FROM w", -6.923108798784999], [" SELECT COUNT(DISTINCT player) FROM w", -6.961574081575], [" SELECT COUNT(DISTINCT player) FROM w", -7.439550129734999], [" SELECT COUNT(DISTINCT(player)) FROM w", -7.727614449870001], [" SELECT COUNT(DISTINCT player) FROM w", -9.833865437]]}, "446": {"question": "which country had the most medals in the competition?", "gold_answer": ["United States"], "pred_answer": {"0": [[7], [7], ["united states", 2], ["united states", 2], [0], [7], [7], [0], [7], [5]]}, "nsql": [[" SELECT COUNT(DISTINCT nationality) FROM w", -5.287884393050001], [" SELECT COUNT(DISTINCT nationality) FROM w", -5.287884393050001], [" SELECT nationality, COUNT(*) FROM w GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1", -5.430059400814001], [" SELECT nationality, COUNT(*) FROM w GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1", -5.4301959796869985], [" SELECT COUNT(*) FROM w WHERE rank = 1", -6.36849980985], [" SELECT COUNT(DISTINCT nationality) FROM w", -6.982723427069998], [" SELECT COUNT(DISTINCT nationality) FROM w", -8.51457423265], [" SELECT COUNT(*) FROM w WHERE rank < 2", -9.58079724985], [" SELECT COUNT(DISTINCT nationality) FROM w", -10.381922479650001], [" SELECT COUNT(DISTINCT(nationality)) FROM w WHERE rank <> 'nan'", -11.248412299529999]]}, "487": {"question": "which country has the most pga championships.", "gold_answer": ["United States"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[79], [79], [79], [79], [79], [79], [79], [79], [79], [79]], "2": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT pga FROM w WHERE country = 'england'\nNeuralSQL2: SELECT pga FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT pga FROM w WHERE country = 'spain'", -2.1858346151180004], [" SELECT pga FROM w WHERE country = 'england'\nNeuralSQL2: SELECT pga FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT pga FROM w WHERE country = 'spain'", -2.1858346151180004], [" SELECT pga FROM w WHERE country = 'england'\nNeuralSQL2: SELECT pga FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT pga FROM w WHERE country = 'spain'", -2.1858346151180004], [" SELECT pga FROM w WHERE country = 'england'\nNeuralSQL2: SELECT pga FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT pga FROM w WHERE country = 'spain'", -2.1865779808340013], [" SELECT `pga` FROM w WHERE country = 'england'\nNeuralSQL2: SELECT `pga` FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT `pga` FROM w WHERE country = 'spain'", -3.647839511051999], [" SELECT `pga` FROM w WHERE country = 'england'\nNeuralSQL2: SELECT `pga` FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT `pga` FROM w WHERE country = 'spain'", -3.647839511051999], [" SELECT `pga` FROM w WHERE country = 'england'\nNeuralSQL2: SELECT `pga` FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT `pga` FROM w WHERE country = 'spain'", -3.647839511051999], [" SELECT `pga` FROM w WHERE country = 'england'\nNeuralSQL2: SELECT `pga` FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT `pga` FROM w WHERE country = 'spain'", -3.647839511051999], [" SELECT `pga` FROM w WHERE country = 'england'\nNeuralSQL2: SELECT `pga` FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT `pga` FROM w WHERE country = 'spain'", -3.647839511051999], [" SELECT `pga` FROM w WHERE country = 'england'\nNeuralSQL2: SELECT `pga` FROM w WHERE country = 'united states'\nNeuralSQL3: SELECT `pga` FROM w WHERE country = 'spain'", -3.6604388387739992]]}, "528": {"question": "how many players have spans above three years?", "gold_answer": ["6"], "pred_answer": {"0": [[10], [0], [10], [10], [6], [8], [6], [6], [0], [0]], "1": ["<error>"], "2": ["<error>"], "3": ["<error>"], "4": [[5]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE LENGTH(span) > 3", -5.036050814829999], [" SELECT COUNT(*) FROM w WHERE span LIKE '% - % - %'", -5.81331648728], [" SELECT COUNT(*) FROM w WHERE span LIKE '%-%'", -5.914191420679999], [" SELECT COUNT(*) FROM w WHERE span LIKE '%-%'", -5.914191420679999], [" SELECT COUNT(*) FROM w WHERE span LIKE '%-%' AND (CAST(SUBSTR(span, LENGTH(span) - 3, 4) AS INT) - CAST(SUBSTR(span, 1, 4) AS INT)) > 3", -9.258959252786], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(span, INSTR(span, '-') + 1, LENGTH(span) - (INSTR(span, ' - ') + 1)) AS INT) - CAST(SUBSTR(span, 1, INSTR(span, '-') - 1) AS INT)) >= 3", -10.333582526052998], [" SELECT COUNT(*) FROM w WHERE span LIKE '%-%' AND (CAST(SUBSTR(span, INSTR(span, '-') + 1, LENGTH(span) - (INSTR(span, ' - ') + 1)) AS INT) - CAST(SUBSTR(span, 1, INSTR(span, '-') - 1) AS INT)) > 3", -10.433453393369994], [" SELECT COUNT(*) FROM w WHERE span LIKE '%-%' AND (CAST(SUBSTR(span, INSTR(span, '-') + 1, LENGTH(span) - (INSTR(span, ' - ') + 1)) AS INT) - CAST(SUBSTR(span, 1, INSTR(span, '-') - 1) AS INT)) > 3", -10.436519006534997], [" SELECT COUNT(*) FROM w WHERE span LIKE '%-%' AND (CAST(SUBSTR(span, INSTR(span, '-') + 1, LENGTH(span) - (INSTR(span, '-') + 1)) AS INT) - CAST(SUBSTR(span, 1, INSTR(span, '-') - 1) AS INT)) > 3", -13.832881440666998], [" SELECT COUNT(*) FROM w WHERE span LIKE '%-%' AND (CAST(SUBSTR(span, INSTR(span, '-') + 1, LENGTH(span) - (INSTR(span, '-') + 1)) AS INT) - CAST(SUBSTR(span, 1, INSTR(span, '-') - 1) AS INT)) > 3\nQ2: {how many = a2} players have win rates above 50%.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `win %` LIKE '%%' AND CAST(REPLACE(`win %`,'%','') AS INT) > 50\nQ3: {how many = a3} players have caps above 30.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE caps > 30\nQ4: {how many = a4} players have total caps above 80.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE total caps > 80\nQ5: {how many = a5} players have win rates above 50% and caps above 30.\nNeuralSQL5: SELECT COUNT", -42.82625404412202]]}, "569": {"question": "how many occur in the last six months of the year?", "gold_answer": ["7"], "pred_answer": {"0": [[13], [13], "<error>", "<error>", [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date\\nfinish` >= '2013-06-01'", -8.81176182079], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` >= '2013-07-01'", -9.2725098671], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT) >= 7 AND CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT) <= 12) OR (CAST(SUBSTR(`date\\nfinish`, INSTR(`date\\nfinish`, ' ') + 1, LENGTH(`date\\nfinish`) - (INSTR(`date\\nfinish`, ' ') + 1)) AS INT) >= 7 AND CAST(SUBSTR(`date\\nfinish`, INSTR(`date\\nfinish`, ' ') + 1, LENGTH(`date\\nfinish`) - (INSTR(`date\\nfinish`,", -9.538161308455996], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT) >= 7 AND CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT) <= 12) OR (CAST(SUBSTR(`date\\nfinish`, INSTR(`date\\nfinish`, ' ') + 1, LENGTH(`date\\nfinish`) - (INSTR(`date\\nfinish`, ' ') + 1)) AS INT) >= 7 AND CAST(SUBSTR(`date\\nfinish`, INSTR(`date\\nfinish`, ' ') + 1, LENGTH(`date\\nfinish`) - (INSTR(`date\\nfinish`,", -9.538161308455996], [" SELECT COUNT(*) FROM w WHERE date\\nfinish LIKE '% - 12' OR date\\nfinish LIKE '% - 11' OR date\\nfinish LIKE '% - 10'", -10.663295615429], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, ' ') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' ') + 1)) AS INT) > 6", -10.966415603373997], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%-%' AND CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, '-') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, '-') + 1)) AS INT) > 6", -11.765891927377002], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%-%-%' AND CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, '-') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, ' - ') + 1)) AS INT) >= 7", -12.323241678219999], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '% - %' AND CAST(SUBSTR(`date\\nstart`, INSTR(`date\\nstart`, '-') + 1, LENGTH(`date\\nstart`) - (INSTR(`date\\nstart`, '-') + 1)) AS INT) > 6", -13.792945068779991], [" SELECT COUNT(*) FROM w WHERE (`date\\nstart` LIKE '% - %' AND CAST(SUBSTR(`date\\nstart`, 1, INSTR(`date\\nstart`, '-') - 1) AS INT) >= 7) OR (`date\\nfinish` LIKE '% - %' AND CAST(SUBSTR(`date\\nfinish`, 1, INSTR(`date\\nfinish`, '-') - 1) AS INT) >= 7)", -16.737085780079703]]}, "610": {"question": "how many of the candidates were females?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>"], "2": [[6]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gender = 'f'", -2.2481036734599997], [" SELECT COUNT(*) FROM w WHERE gender = 'f'", -2.24814629901], [" SELECT COUNT(*) FROM w WHERE gender = 'f'", -2.2560367368599996], [" SELECT COUNT(*) FROM w WHERE gender = 'f'", -2.2560367368599996], [" SELECT COUNT(*) FROM w WHERE gender = 'f'", -2.2560367368599996], [" SELECT COUNT(*) FROM w WHERE gender = 'f'", -8.14693809439], [" SELECT COUNT(*) FROM w WHERE gender = 'f'", -8.45614032439], [" SELECT COUNT(*) FROM w WHERE gender = 'f'", -8.634431435045999], [" SELECT COUNT(*) FROM w WHERE gender = 'f'", -10.754705963046], [" SELECT COUNT(*) FROM w WHERE gender = 'f'\nQ2: {how many = a2} of the candidates were males.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gender = 'm'\nQ3: {how many = a3} candidates were from dartmouth\u2014cole harbour.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE riding = 'dartmouth\u2014cole harbour'\nQ4: {how many = a4} candidates were from dartmouth\u2014cole harbour.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE riding = 'dartmouth\u2014cole harbour'\nQ5: {how many = a5} candidates were from dartmouth\u2014cole harbour.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE riding = 'dartmouth\u2014cole harbour'\nQ6: {how many = a6} candidates were from dartmouth\u2014cole harbour.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE riding = 'dartmouth\u2014cole harbour'\nQ7: {how many = a7} candidates were from dartmouth", -22.514233739270505]]}, "651": {"question": "how many teams had above 20 matches in the season?", "gold_answer": ["6"], "pred_answer": {"0": [[7], [7], [7], [7], [4], [4], [7], [7], [4], [4]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE matches > 20", -1.9924804205900004], [" SELECT COUNT(*) FROM w WHERE matches > 20", -1.9924804205900004], [" SELECT COUNT(*) FROM w WHERE matches > 20", -1.9924804205900004], [" SELECT COUNT(*) FROM w WHERE matches > 20", -1.9924804205900004], [" SELECT COUNT(DISTINCT team) FROM w WHERE matches > 20", -2.2409125970600003], [" SELECT COUNT(DISTINCT(team)) FROM w WHERE matches > 20", -3.690540866170001], [" SELECT COUNT(*) FROM w WHERE matches > 20", -4.419864097790001], [" SELECT COUNT(*) FROM w WHERE matches > 20", -4.419864097790001], [" SELECT COUNT(DISTINCT team) FROM w WHERE matches > 20\n```", -5.92233281177], [" SELECT COUNT(DISTINCT team) FROM w WHERE matches > 20\n```", -12.320361629769998]]}, "692": {"question": "other than the 10th episode, which other episode has a 14% rating?", "gold_answer": ["Ep. 8"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [2], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE ratings = '14%' AND episode title != 'ep. 10'", -3.98804442814], [" SELECT COUNT(*) FROM w WHERE ratings = '14%' AND episode title != 'ep. 10'", -4.00675749383], [" SELECT COUNT(*) FROM w WHERE ratings = '14%' AND episode title != 'ep. 10'", -4.00675749383], [" SELECT COUNT(*) FROM w WHERE ratings = '14%' AND episode title != 'ep. 10'", -4.00675749383], [" SELECT COUNT(*) FROM w WHERE ratings = '14%' AND episode title != 'ep. 10'", -4.00675749383], [" SELECT COUNT(*) FROM w WHERE ratings = '14%' AND episode title != 'ep. 10'", -4.01176047067], [" SELECT COUNT(*) FROM w WHERE ratings = '14%' AND episode title != 'ep. 10'", -5.61021534303], [" SELECT COUNT(*) FROM w WHERE ratings = '14%' AND episode title != '\u3072\u3068\u76ee\u4f1a\u3044\u305f\u3044'", -7.273958669323401], [" SELECT COUNT(*) FROM w WHERE ratings LIKE '%14%' AND episode title != 'ep. 10'", -7.97044933303], [" SELECT COUNT(*) FROM w WHERE ratings LIKE '14%' AND episode title != '\u3072\u3068\u76ee\u4f1a\u3044\u305f\u3044'", -10.3985149840375]]}, "733": {"question": "how many consecutive years did parnelli place in the top 5?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [0], [5], [0], [4], [3], [0], [0], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `rank` < 6 AND `rank` > 0", -9.037245582729998], [" SELECT COUNT(*) FROM w WHERE `year` NOT LIKE '%totals%' AND `year` NOT LIKE '%totals%' AND `rank` < 6", -17.451244341464005], [" SELECT COUNT(*) FROM w WHERE (year = '1967' AND (finish = '1' OR finish = '2' OR finish = '3' OR finish = '4' OR finish = '5')) AND (year = '1966' AND (finish = '1' OR finish = '2' OR finish = '3' OR finish = '4' OR finish = '5')) AND (year = '1965' AND (finish = '1' OR finish = '2' OR finish = '3' OR finish = '4' OR finish = '5')) AND (year = '1964' AND (finish = '1' OR finish = '2' OR finish = '3' OR finish = '4' OR finish = '5')) AND (year = '1963' AND (finish = '1' OR finish = '2' OR finish = '3' OR finish = '4' OR finish = '5'))", -18.735336360008503], [" SELECT COUNT(*) FROM w WHERE year NOT LIKE '%totals%' AND `rank` < 6 AND `rank` > 0", -18.939735473029998], [" SELECT COUNT(*) FROM w WHERE `year` != 'totals' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year' AND `year` != 'year'", -22.201390480709016], [" SELECT COUNT(*) FROM w WHERE year != 'totals' AND (year = '1963' OR year = '1964' OR year = '1965' OR year = '1966' OR year = '1967') AND (`rank` = '1' OR `rank` = '2' OR `rank` = '3' OR `rank` = '4' OR `rank` = '5')", -22.20228121702001], [" SELECT COUNT(*) FROM w WHERE (year = '1963' AND `finish` <= 5) OR (year = '1964' AND `finish` <= 5) OR (year = '1965' AND `finish` <= 5) OR (year = '1967' AND `finish` <= 5)", -26.573696166423996], [" SELECT COUNT(*) FROM w WHERE year <> 'totals' AND qual <> 'totals' AND CAST(qual AS INT) <= 5 AND CAST(qual AS INT) > 0", -27.929187466802], [" SELECT COUNT(*) FROM w WHERE `year` NOT LIKE 'totals' AND `year` NOT LIKE '% - %' AND (CAST(`year` AS INT) - CAST(SUBSTR(`year`, 1, INSTR(`year`, ' - ') - 1) AS INT)) = 1 AND (CAST(`rank` AS INT) - CAST(SUBSTR(`rank`, 1, INSTR(`rank`, ' - ') - 1) AS INT)) = 1 AND (CAST(`rank` AS INT) - CAST(SUBSTR(`rank`, 1, INSTR(`rank`, ' - ') - 1) AS INT)) <= 5", -33.003716021902015], [" SELECT COUNT(*) FROM w WHERE `year` NOT LIKE 'totals' AND `year` NOT LIKE '% - %' AND `year` NOT LIKE '% - % - %' AND (CAST(`year` AS INT) < (SELECT CAST(`year` AS INT) FROM w WHERE `year` NOT LIKE 'totals' AND `year` NOT LIKE '% - %' AND `year` NOT LIKE '% - % - %' ORDER BY CAST(`year` AS INT) DESC LIMIT 1) - 1) AND `rank` < 6", -33.75061980808499]]}, "774": {"question": "how many roles has this actor had?", "gold_answer": ["36"], "pred_answer": {"0": [[38], [38], [38], [38], [38], [57], [38], [38], [38], [38]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT role) FROM w", -4.666664972345001], [" SELECT COUNT(DISTINCT role) FROM w\n```", -8.71096522577], [" SELECT COUNT(DISTINCT role) FROM w", -10.238284102705], [" SELECT COUNT(DISTINCT role) FROM w", -10.549084558863001], [" SELECT COUNT(DISTINCT role) FROM w", -11.361279302705], [" SELECT COUNT(*) FROM w WHERE role IS NOT NULL", -12.278039987136001], [" SELECT COUNT(DISTINCT(role)) FROM w", -14.341994629251], [" SELECT COUNT(DISTINCT role) FROM w", -14.514844202705], [" SELECT COUNT(DISTINCT role) FROM w", -15.357588405667999], [" SELECT COUNT(DISTINCT role) FROM w", -16.119489170863]]}, "815": {"question": "what was the total number of games played in august 2007?", "gold_answer": ["28"], "pred_answer": {"0": [[28], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'august %'", -4.411753253060001], [" SELECT COUNT(*) FROM w WHERE date LIKE 'august % 2007'", -4.57592759685], [" SELECT COUNT(*) FROM w WHERE date LIKE 'august % 2007'", -4.57592759685], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2007-08-%'", -4.90305435216], [" SELECT COUNT(*) FROM w WHERE date LIKE '%august%2007%'", -4.948667652359999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%august%2007'", -5.07178999216], [" SELECT COUNT(*) FROM w WHERE date LIKE '%august%2007%'", -5.771827034359999], [" SELECT COUNT(*) FROM w WHERE date LIKE '%august%2007'", -6.00995787136], [" SELECT COUNT(*) FROM w WHERE date LIKE '%2007%'", -6.37670174056], [" SELECT COUNT(*) FROM w WHERE date LIKE 'august % 2007'\nQ2: {how many = a2} games were played in seattle.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent LIKE '% seattle %'\nQ3: {how many = a3} games were played in seattle in august 2007.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE 'august % 2007' AND opponent LIKE '% seattle %'\nQ4: {how many = a4} games were played in seattle in august 2007 and the attendance is greater than 40000.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE date LIKE 'august % 2007' AND opponent LIKE '% seattle %' AND attendance > 40000\nQ5: {how many = a5} games were played in seattle in august 2007 and the attendance is greater than 40000 and the score is greater than 5.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE date LIKE 'august % 2007' AND opponent LIKE '% seattle %' AND attendance > 40000 AND", -41.697079341506004]]}, "856": {"question": "what is the difference in medals between cuba and mexico?", "gold_answer": ["22"], "pred_answer": {"0": [[32], [32], [32], [32], [32], [32], [32], [32], [32], [32]], "1": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "2": ["<error>"]}, "nsql": [[" SELECT SUM(total) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'mexico'", -2.10475361174], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'mexico'", -2.559081053373], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'mexico'", -2.559081053373], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'mexico'", -2.560415370104], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'mexico'", -2.560415370104], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'mexico'", -2.560415370104], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'mexico'", -3.136962053649999], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'mexico'", -5.543941631104], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'mexico'", -5.591503528554], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'cuba'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'mexico'\n```", -14.017934336464]]}, "897": {"question": "how many players were from the united states?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.5337188830599993], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.277662402894], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.299892095750001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.378815102894], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.431870902894], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.431870902894], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.664691102894], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -5.629652002894], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -7.53609010091], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nQ2: {how many = a2} players from the united states were drafted in round 7.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round = 7\nQ3: {how many = a3} players were drafted in round 5.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE round = 5\nQ4: {how many = a4} players were drafted in round 5 and from the united states.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE round = 5 AND nationality = 'united states'\nQ5: {how many = a5} players were drafted in round 5 and from the united states.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE round = 5 AND nationality = 'united states'\nQ6: {how many = a6} players were drafted in round 5 and from the united states.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE round = 5 AND nationality = 'united states'\nQ7: {how many = a7} players were", -38.86751700248699]]}, "900": {"question": "how many total gold medal have been given?", "gold_answer": ["49"], "pred_answer": {"0": [[98], [98], [98], [98], [98], [98], [98], [98], [98], [98]]}, "nsql": [[" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -1.07196360317], [" SELECT SUM(gold) FROM w", -4.576694664730001]]}, "921": {"question": "which competition is listed the most in this chart?", "gold_answer": ["World Championships"], "pred_answer": {"0": [["world championships", 4], ["world championships", 4], ["world championships", 4], ["world championships", 4], ["world championships"], ["world championships"], ["world championships", 4], [3], ["world championships", 4], ["world championships", 4]]}, "nsql": [[" SELECT competition, COUNT(*) FROM w GROUP BY competition ORDER BY COUNT(*) DESC LIMIT 1", -3.9317591832350005], [" SELECT competition, COUNT(*) FROM w GROUP BY competition ORDER BY COUNT(*) DESC LIMIT 1", -3.9317591832350005], [" SELECT competition, COUNT(*) FROM w GROUP BY competition ORDER BY COUNT(*) DESC LIMIT 1", -3.9317591832350005], [" SELECT competition, COUNT(*) FROM w GROUP BY competition ORDER BY COUNT(*) DESC LIMIT 1", -3.93301527188], [" SELECT competition FROM w GROUP BY competition ORDER BY COUNT(*) DESC LIMIT 1", -4.0145006379], [" SELECT competition FROM w GROUP BY competition ORDER BY COUNT(*) DESC LIMIT 1", -4.9278888409], [" SELECT competition, COUNT(*) FROM w GROUP BY competition ORDER BY COUNT(*) DESC LIMIT 1", -5.903184628959999], [" SELECT COUNT(*) FROM w WHERE competition = 'boston marathon'", -6.053627239760001], [" SELECT competition, COUNT(*) AS cnt FROM w GROUP BY competition ORDER BY cnt DESC LIMIT 1", -8.188645284010002], [" SELECT competition, COUNT(*) AS c FROM w GROUP BY competition ORDER BY c DESC LIMIT 1", -13.43253380469]]}, "938": {"question": "which is the only lake with a max depth of 372m?", "gold_answer": ["Lake Maggiore"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372", -2.0245010417100002], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372", -3.18974255931], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372.0", -5.981869446769999], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372.0", -5.982517624550001], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372.0", -5.982517624550001], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372.0", -5.98927307161], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372.0", -5.98927307161], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372.0", -8.208309963009999], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372.0", -8.208309963009999], [" SELECT COUNT(*) FROM w WHERE `max. depth\\nin meter` = 372.0", -8.208686392739999]]}, "942": {"question": "what is the number of players who weight over 200 pounds?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `weight (lbs.)` > 200", -3.571042023525], [" SELECT COUNT(*) FROM w WHERE `weight (lbs.)` > 200", -3.571042023525], [" SELECT COUNT(*) FROM w WHERE `weight (lbs.)` > 200", -3.571042023525], [" SELECT COUNT(*) FROM w WHERE `weight (lbs.)` > 200", -3.6331188235250003], [" SELECT COUNT(*) FROM w WHERE `weight (lbs.)` > 200", -3.6331188235250003], [" SELECT COUNT(*) FROM w WHERE `weight (lbs.)` > 200", -3.6331188235250003], [" SELECT COUNT(*) FROM w WHERE `weight (lbs.)` > 200", -3.6419127870949994], [" SELECT COUNT(*) FROM w WHERE weight (lbs.) > 200", -6.026848048739001], [" SELECT COUNT(*) FROM w WHERE weight (lbs.) > 200", -6.0346958286109995], [" SELECT COUNT(*) FROM w WHERE weight (lbs.) > 200", -8.892276794265001]]}, "979": {"question": "how many players were from notre dame?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -4.53727621488], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -4.53727621488], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -4.53727621488], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -6.302036746229999], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -7.21778215588], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -7.89172624759], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'\n```", -8.169501618229999], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -8.64524035588], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -8.80256715588], [" SELECT COUNT(*) FROM w WHERE school = 'notre dame'", -11.17088045588]]}, "983": {"question": "how many players and both guard (g) and forward (f)?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position LIKE '%g%f%'", -3.4876356167200004], [" SELECT COUNT(*) FROM w WHERE position LIKE '%g%' AND position LIKE '%f%'", -5.266261178884999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%g%' AND position LIKE '%f%'", -5.266261178884999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%g%' AND position LIKE '%f%'", -5.325237378884999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%g%' AND position LIKE '%f%'", -5.325237378884999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%g%' AND position LIKE '%f%'", -5.326510355799999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%g%' AND position LIKE '%f%'", -5.326510355799999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%g%' AND position LIKE '%f%'", -6.2321081788849995], [" SELECT COUNT(*) FROM w WHERE position LIKE 'g; f'", -6.827413292305], [" SELECT COUNT(*) FROM w WHERE position LIKE '%g%' AND position LIKE '%f%'\n\"\"\"", -12.49110611595]]}, "1024": {"question": "how many class s (scholarship) teams are on the chart?", "gold_answer": ["19"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [24], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -1.726453756304], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -1.726453756304], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -1.726453756304], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -1.726453756304], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -1.726453756304], [" SELECT COUNT(*) FROM w WHERE class = 's'", -2.396705593404], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -3.751526538904], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -3.751526538904], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -3.966594381734], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 's'", -5.182180527434]]}, "1065": {"question": "what is the total number of games played at bronco stadium?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -2.224039552915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -2.224039552915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -2.224039552915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -2.224039552915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -2.224039552915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -3.434724315915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -3.434724315915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -3.434724315915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -3.434724315915], [" SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'", -3.434724315915]]}, "1106": {"question": "how many sites are in coldwater?", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.8971116296200001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.8971116296200001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.8971116296200001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.8971116296200001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.8971116296200001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.9017002168800001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.9017002168800001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.9017002168800001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.9017002168800001], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.9017002168800001]]}, "1147": {"question": "how many times was charlie lubega a driver?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -0.983311974884], [" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -0.983311974884], [" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -0.983311974884], [" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -0.983311974884], [" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -0.983311974884], [" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -0.983311974884], [" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -0.983311974884], [" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -0.983311974884], [" SELECT COUNT(*) FROM w WHERE driver = 'charlie lubega'", -2.3126132418839997], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver = 'charlie lubega'", -4.552439191064001]]}, "1188": {"question": "how many events were won in malaysia?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position LIKE '%1st%'", -5.19393036518], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%'", -6.811051689516999], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position LIKE '1st%'", -8.42019997292], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position LIKE '%st%'", -9.12743243529], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position = '1st'", -9.983623968429999], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position LIKE '1st%'", -10.29522966803], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position = '1st'", -10.78098046637], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position LIKE '1st%'", -11.119031444810002], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position = '1st'", -13.13999198542], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%malaysia%' AND position LIKE '1%'", -14.392788576810002]]}, "1229": {"question": "how many mexican swimmers ranked in the top 10?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'mexico' AND rank <= 10", -2.04569194408], [" SELECT COUNT(*) FROM w WHERE country = 'mexico' AND rank <= 10", -2.04569194408], [" SELECT COUNT(*) FROM w WHERE country = 'mexico' AND rank <= 10", -2.04569194408], [" SELECT COUNT(*) FROM w WHERE country = 'mexico' AND rank <= 10", -2.04569194408], [" SELECT COUNT(*) FROM w WHERE country = 'mexico' AND rank <= 10", -2.04569194408], [" SELECT COUNT(*) FROM w WHERE country = 'mexico' AND rank <= 10", -2.04569194408], [" SELECT COUNT(*) FROM w WHERE country = 'mexico' AND rank <= 10", -2.04569194408], [" SELECT COUNT(*) FROM w WHERE rank <= 10 AND country = 'mexico'", -2.41625504728], [" SELECT COUNT(*) FROM w WHERE country = 'mexico' AND rank <= 10", -6.308718450829999], [" SELECT COUNT(*) FROM w WHERE rank <= 10 AND country = \"mexico\"", -9.215280433279998]]}, "1270": {"question": "how many games did they win by more than 7?", "gold_answer": ["10"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [10], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(REPLACE(result, 'w', '') AS INT) > 7", -7.877619640099999], [" SELECT COUNT(*) FROM w WHERE result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 7", -7.900461541908799], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) AS INT) > 7", -8.249543549344999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (CAST(SUBSTR(result, INSTR(result, ' ') + 1, INSTR(result, '-') - (INSTR(result, ' ') + 1)) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) AS INT)) > 7", -10.9095593236637], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (CAST(SUBSTR(result, 2, INSTR(result, '-') - 2) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 7", -11.664469418978499], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (CAST(SUBSTR(result, INSTR(result, ' ') + 1, INSTR(result, '-') - (INSTR(result, ' ') + 1)) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) AS INT)) > 7", -13.271611459159], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 7", -15.336476353764306], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (CAST(SUBSTR(result, 3, INSTR(result, '-') - 3) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 7", -15.832249541975294], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(SUBSTR(result, INSTR(result, ' ') + 1, LENGTH(result) - (INSTR(result, ' ') + 1)) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) AS INT) > 7", -16.336775352726004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(SUBSTR(result, 2, INSTR(result, '-') - 2) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) AS INT) > 7", -16.821833139879]]}, "11": {"question": "how many airlines have a steady ranking?", "gold_answer": ["4"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [3]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT airline) FROM w WHERE ranking = 1.0", -2.97349989421], [" SELECT COUNT(DISTINCT airline) FROM w WHERE ranking = 1.0", -2.97349989421], [" SELECT COUNT(DISTINCT airline) FROM w WHERE ranking = 1.0", -2.97349989421], [" SELECT COUNT(DISTINCT airline) FROM w WHERE ranking = 1.0", -2.97349989421], [" SELECT COUNT(*) FROM w WHERE ranking = 1.0", -5.71257345223], [" SELECT COUNT(*) FROM w WHERE ranking = 1.0\n```", -10.41153500443], [" SELECT COUNT(*) FROM w WHERE ranking = 1.0", -10.614618792382], [" SELECT COUNT(*) FROM w WHERE ranking = 1.0", -11.308503892382], [" SELECT COUNT(*) FROM w WHERE ranking = 1.0\n```", -12.054782204430001], [" SELECT COUNT(*) FROM w WHERE ranking IS NOT NULL", -13.7910574838]]}, "52": {"question": "what is the average number of times johan museeuw starred?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8547923393260004], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8547923393260004], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8547923393260004], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8547923393260004], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8547923393260004], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8547923393260004], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8547923393260004], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8568040402100001], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -1.8568040402100001], [" SELECT COUNT(*) FROM w WHERE `crystal bicycle\\n(best professional cyclist)` = 'johan museeuw'", -5.1997423576260005]]}, "93": {"question": "how many did alain prost have the fastest lap?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [1], [5]], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[8]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": [[6]], "9": ["<error>"], "10": [[6]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE fastest lap = 'alain prost'", -1.66171214755], [" SELECT COUNT(*) FROM w WHERE fastest lap = 'alain prost'", -1.66171214755], [" SELECT COUNT(*) FROM w WHERE fastest lap = 'alain prost'", -1.66171214755], [" SELECT COUNT(*) FROM w WHERE fastest lap = 'alain prost'", -1.66171214755], [" SELECT COUNT(*) FROM w WHERE fastest lap = 'alain prost'", -1.66171214755], [" SELECT COUNT(*) FROM w WHERE `fastest lap` = 'alain prost'", -2.6819741846199996], [" SELECT COUNT(*) FROM w WHERE `fastest lap` = 'alain prost'", -2.6819741846199996], [" SELECT COUNT(*) FROM w WHERE fastest lap = 'alain prost'", -2.8379924709699997], [" SELECT COUNT(DISTINCT fastest lap) FROM w WHERE fastest lap = 'alain prost'", -6.3147036224569995], [" SELECT COUNT(*) FROM w WHERE fastest lap = 'alain prost'\nQ2: alain prost had the fastest lap {how many = a2} times.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE fastest lap = 'alain prost'\nQ3: {how many = a3} drivers had the fastest lap.\nNeuralSQL3: SELECT COUNT(DISTINCT(fastest lap)) FROM w\nQ4: there are {how many = a4} records with ayrton senna as the winning driver.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE winning driver = 'ayrton senna'\nQ5: there are {how many = a5} records with ayrton senna as the winning driver.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE winning driver = 'ayrton senna'\nQ6: there are {how many = a6} records with ayrton senna as the winning driver.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE winning driver = 'ayrton senna'\nQ7: there are", -35.29462253971399]]}, "134": {"question": "how many years was the team in the 3 a division?", "gold_answer": ["4"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'", -1.9192238808430002], [" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'", -1.9192238808430002], [" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'", -1.9192238808430002], [" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'", -1.9192238808430002], [" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'", -1.9192238808430002], [" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'", -1.9192238808430002], [" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'", -1.9192238808430002], [" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'", -3.5089523284329998], [" SELECT COUNT(*) FROM w WHERE division = '3\u00aa'\n```", -12.125114317573], [" SELECT COUNT(DISTINCT(season)) FROM w WHERE division = '3\u00aa'", -12.213755548485]]}, "175": {"question": "what is the number of japanese in the top 10?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank <= 10 AND nationality = 'japan'", -3.1928185509060003], [" SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 10", -3.31559591987], [" SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 10", -3.3692934046949996], [" SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 10", -3.3692934046949996], [" SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 10", -3.369692515482], [" SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 10", -3.369692515482], [" SELECT COUNT(*) FROM w WHERE rank < 10 AND nationality = 'japan'", -4.361917833985], [" SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 10.0", -4.77564102971], [" SELECT COUNT(*) FROM w WHERE nationality = 'japanese' AND rank <= 10", -6.582771268509999], [" SELECT COUNT(*) FROM w WHERE rank <= 10 and nationality = 'japan'", -6.799265129817001]]}, "216": {"question": "how many wins did confey have?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[3]], "7": ["<error>"], "8": [[3]], "9": ["<error>"], "10": [[3]], "11": ["<error>"]}, "nsql": [[" SELECT wins FROM w WHERE team = 'confey'", -1.35966047672], [" SELECT wins FROM w WHERE team = 'confey'", -1.35966047672], [" SELECT wins FROM w WHERE team = 'confey'", -1.35966047672], [" SELECT wins FROM w WHERE team = 'confey'", -1.35966047672], [" SELECT wins FROM w WHERE team = 'confey'", -1.35966047672], [" SELECT wins FROM w WHERE team = 'confey'", -1.35966047672], [" SELECT wins FROM w WHERE team = 'confey'", -2.8201599767200003], [" SELECT wins FROM w WHERE team = 'confey'", -2.8201599767200003], [" SELECT wins FROM w WHERE team = 'confey'", -4.7026089767200006], [" SELECT wins FROM w WHERE team = 'confey'\nQ2: there are {how many = a2} teams from kildare.\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE county = 'kildare'\nQ3: there are {how many = a3} teams from kildare.\nNeuralSQL3: SELECT COUNT(DISTINCT team) FROM w WHERE county = 'kildare'\nQ4: there are {how many = a4} teams from kildare.\nNeuralSQL4: SELECT COUNT(DISTINCT team) FROM w WHERE county = 'kildare'\nQ5: there are {how many = a5} teams from kildare.\nNeuralSQL5: SELECT COUNT(DISTINCT team) FROM w WHERE county = 'kildare'\nQ6: there are {how many = a6} teams from kildare.\nNeuralSQL6: SELECT COUNT(DISTINCT team) FROM w WHERE county = 'kildare'\nQ7: there are {how many = a7}", -21.847495968863004]]}, "257": {"question": "which country won the same amount of silver medals as the french and the russians?", "gold_answer": ["Belarus"], "pred_answer": {"0": [[0], [0], [3], [3], [3], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT(nation)) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'france') AND silver = (SELECT silver FROM w WHERE nation = 'russia')", -7.370883247310001], [" SELECT COUNT(*) FROM w WHERE nation != 'total' AND silver = (SELECT silver FROM w WHERE nation = 'france') AND silver = (SELECT silver FROM w WHERE nation = 'russia')", -7.72814640485], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'france\u00a0(fra)') AND silver = (SELECT silver FROM w WHERE nation = 'russia\u00a0(rus)')", -8.97932444098], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'france (fra)') AND silver = (SELECT silver FROM w WHERE nation = 'russia (rus)')", -9.630129017999998], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'france\u00a0(fra)' OR nation = 'russia\u00a0(rus)')", -10.42110741656], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'france' OR nation = 'russia')", -10.94511931986], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'france') AND silver = (SELECT silver FROM w WHERE nation = 'russia')", -12.642181603649998], [" SELECT COUNT(*) FROM w WHERE nation NOT IN ('total') AND silver = (SELECT silver FROM w WHERE nation = 'france') AND silver = (SELECT silver FROM w WHERE nation = 'russia')", -13.566268620000002], [" SELECT COUNT(*) FROM w WHERE nation != 'total' AND silver = (SELECT silver FROM w WHERE nation = 'france')", -15.774152046049998], [" SELECT COUNT(*) FROM w WHERE nation NOT IN ('total', 'france', 'russia') AND silver = (SELECT silver FROM w WHERE nation = 'france') AND silver = (SELECT silver FROM w WHERE nation = 'russia')", -19.047120863409997]]}, "260": {"question": "at most 26 apps, how many goals were scored in 2004-2005", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [null], [null], [null], [null], [null], [3]]}, "nsql": [[" SELECT SUM(goals) FROM w WHERE season = '2004\u20135'", -2.3182959273600003], [" SELECT SUM(goals) FROM w WHERE season = '2004\u20135'", -2.3182959273600003], [" SELECT SUM(goals) FROM w WHERE season = '2004\u20135'", -2.3182959273600003], [" SELECT SUM(goals) FROM w WHERE season = '2004\u20135'", -2.3182959273600003], [" SELECT SUM(goals) FROM w WHERE season = '2004-2005'", -2.5227741052700003], [" SELECT SUM(goals) FROM w WHERE season = '2004-2005'", -2.5227741052700003], [" SELECT SUM(goals) FROM w WHERE season = '2004-2005'", -2.5227741052700003], [" SELECT SUM(goals) FROM w WHERE season = '2004-2005'", -2.5227741052700003], [" SELECT SUM(goals) FROM w WHERE season = '2004-2005'", -2.5227741052700003], [" SELECT SUM(goals) FROM w WHERE season = '2004 - 5'", -3.72004248078]]}, "281": {"question": "according to this list, how many countries sold weapons to iraq?", "gold_answer": ["21"], "pred_answer": {"0": [[21], [21], [21], [21], [21], [21], [21], [21], [21], ["austria", "brazil", "canada", "china", "czechoslovakia", "denmark", "east germany", "egypt", "france", "west germany", "hungary", "italy", "jordan", "poland", "romania", "yugoslavia", "south africa", "switzerland", "united kingdom", "united states", "soviet union"]]}, "nsql": [[" SELECT COUNT(DISTINCT country) FROM w WHERE country != 'iraq'", -3.455898589484], [" SELECT COUNT(DISTINCT country) FROM w WHERE country != 'iraq'", -3.455898589484], [" SELECT COUNT(DISTINCT country) FROM w WHERE country != 'iraq'", -3.455898589484], [" SELECT COUNT(DISTINCT country) FROM w", -4.4975129405739995], [" SELECT COUNT(DISTINCT country) FROM w", -4.4975129405739995], [" SELECT COUNT(DISTINCT country) FROM w", -4.4975129405739995], [" SELECT COUNT(DISTINCT country) FROM w", -4.4975129405739995], [" SELECT COUNT(DISTINCT country) FROM w", -4.4975129405739995], [" SELECT COUNT(DISTINCT(country)) FROM w", -5.550632700334], [" SELECT DISTINCT country FROM w", -5.895788752594001]]}, "298": {"question": "what is the difference between the number of wins and the number of losses?", "gold_answer": ["6"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -2.0316934227240004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -2.0316934227240004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -2.0316934227240004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -2.0316934227240004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -2.0316934227240004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -2.0338798734540005], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -2.881336693064], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -2.881336693064], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -4.611713114724001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -4.946917214724]]}, "302": {"question": "how many years was jaafar mohamed in office?", "gold_answer": ["4"], "pred_answer": {"0": ["<error>", [4], [4], [4], [4], "<error>", [4], [1], "<error>", [1]]}, "nsql": [[" SELECT SUM(DATEDIFF(`left office`, `took office`)) FROM w WHERE menteri besar = 'jaafar mohamed'", -6.57172574112], [" SELECT SUM(CAST(SUBSTR(`left office`, 1, 4) AS INT) - CAST(SUBSTR(`took office`, 1, 4) AS INT)) FROM w WHERE menteri besar = 'jaafar mohamed'", -7.272486683258995], [" SELECT SUM(CAST(SUBSTR(`left office`, 1, 4) AS INT) - CAST(SUBSTR(`took office`, 1, 4) AS INT)) FROM w WHERE menteri besar = 'jaafar mohamed'", -7.272800819278999], [" SELECT SUM(CAST(SUBSTR(`left office`, 1, 4) AS INT) - CAST(SUBSTR(`took office`, 1, 4) AS INT)) FROM w WHERE menteri besar = 'jaafar mohamed'", -7.272800819278999], [" SELECT SUM(CAST(SUBSTR(`left office`, 1, 4) AS INT) - CAST(SUBSTR(`took office`, 1, 4) AS INT)) FROM w WHERE menteri besar = 'jaafar mohamed'", -7.272800819278999], [" SELECT SUM(DATEDIFF(`left office`, `took office`)) FROM w WHERE menteri besar LIKE '%jaafar mohamed%'", -8.16649453551], [" SELECT SUM(CAST(SUBSTR(left office, 1, 4) AS INT) - CAST(SUBSTR(took office, 1, 4) AS INT)) FROM w WHERE menteri besar = 'jaafar mohamed'", -11.26407765627], [" SELECT COUNT(*) FROM w WHERE menteri besar = 'jaafar mohamed'", -11.93116677512], [" SELECT SUM(DATEDIFF(`left office`, `took office`)) FROM w WHERE `menteri besar` LIKE '%jaafar mohamed%'", -12.589559179570001], [" SELECT COUNT(*) FROM w WHERE menteri besar = 'jaafar mohamed' AND `left office` IS NOT NULL", -13.20752452081]]}, "339": {"question": "which are the only trains still in service?", "gold_answer": ["J515", "J549"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE status = 'operational'", -3.97912181514], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -4.55079755264], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -4.55079755264], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -4.55079755264], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -4.55094305645], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -4.55278891447], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -5.72003805645], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -6.18907075645], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -6.325197114470001], [" SELECT COUNT(*) FROM w WHERE status = 'operational'", -7.02814711447]]}, "343": {"question": "how many total forwards are on the team?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'f'", -3.79191897046], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -3.79191897046], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -3.79191897046], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -3.79191897046], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -4.449419526843999], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -4.449419526843999], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -4.449419526843999], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -5.344236126844001], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -5.344236126844001], [" SELECT COUNT(*) FROM w WHERE position = 'f'", -6.595041170969999]]}, "384": {"question": "which year held the most competitions?", "gold_answer": ["2012"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -4.223433456993001], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -4.223433456993001], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -4.357646073744], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -5.684839705067], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -5.684839705067], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -5.684839705067], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -5.826225377664], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -8.35980201224], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -9.36929961224], [" SELECT COUNT(*) FROM w WHERE year = 2006\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012", -10.470032525067]]}, "425": {"question": "does ghor or farah have more districts?", "gold_answer": ["Farah"], "pred_answer": {"0": [[1], [1], [1], [1], [1], ["10 districts"], [1], ["10 districts"], "<error>", [1]], "1": [[1], [1], [1], [1], [1], ["11 districts"], [1], ["11 districts"], "<error>", [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE province = 'farah'", -2.9371636023149996], [" SELECT COUNT(*) FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE province = 'farah'", -2.9371636023149996], [" SELECT COUNT(*) FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE province = 'farah'", -2.9382767770699996], [" SELECT COUNT(*) FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE province = 'farah'", -2.9382767770699996], [" SELECT COUNT(*) FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE province = 'farah'", -2.9413519931399996], [" SELECT `notes` FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT `notes` FROM w WHERE province = 'farah'", -4.002070415755], [" SELECT COUNT(*) FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE province = 'farah'", -4.448638990315], [" SELECT notes FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT notes FROM w WHERE province = 'farah'", -9.007189987804999], [" SELECT districts FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT districts FROM w WHERE province = 'farah'", -9.97828101313], [" SELECT COUNT(*) FROM w WHERE province = 'ghor'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE province = 'farah'\n```", -17.012848891499996]]}, "466": {"question": "which year has the most singles?", "gold_answer": ["1997"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -1.181347642564], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -1.181347642564], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -1.181347642564], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -1.181347642564], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -1.181347642564], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -1.1824775435739998], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -1.1824775435739998], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -4.046373085563999], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -4.046373085563999], [" SELECT COUNT(*) FROM w WHERE year = 1997\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008", -4.170931873574]]}, "507": {"question": "how many athletes had the same rank for both run 1 and run 2?", "gold_answer": ["1"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [2], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank_2 = rank_3", -3.50029592152], [" SELECT COUNT(*) FROM w WHERE `rank_2` = `rank_3`", -4.869212715500001], [" SELECT COUNT(*) FROM w WHERE rank = rank_2", -5.52222875817], [" SELECT COUNT(*) FROM w WHERE rank = rank_2", -5.52222875817], [" SELECT COUNT(*) FROM w WHERE rank_2 = rank_3", -6.1879135793], [" SELECT COUNT(*) FROM w WHERE rank_2 = rank_3", -7.1265253676], [" SELECT COUNT(*) FROM w WHERE `rank` = `rank_2`", -7.2147211978999986], [" SELECT COUNT(*) FROM w WHERE rank = rank_2", -7.722951091150001], [" SELECT COUNT(*) FROM w WHERE rank_2 = rank AND rank_2 IS NOT NULL AND rank IS NOT NULL", -8.494953635], [" SELECT COUNT(*) FROM w WHERE rank_2 = rank_3 AND rank_2 IS NOT NULL", -9.917407884300001]]}, "548": {"question": "who drank more beer, quebec or northwest territories?", "gold_answer": ["Quebec"], "pred_answer": {"0": [["93.9"], ["93.9"], ["93.9"], ["93.9"], ["93.9"], ["93.9"], ["93.9"], ["93.9"], ["93.9"], ["93.9"]], "1": [["55.2"], ["55.2"], ["55.2"], ["55.2"], ["55.2"], ["55.2"], ["55.2"], ["55.2"], ["55.2"], ["55.2"]]}, "nsql": [[" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -1.2764693072739999], [" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -1.2764693072739999], [" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -1.2764693072739999], [" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -1.2766429530340002], [" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -1.2766429530340002], [" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -1.2766429530340002], [" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -2.8279720025340005], [" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -2.8279720025340005], [" SELECT beer FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT beer FROM w WHERE filledcolumnname = 'northwest territories'", -2.82814449615], [" SELECT `beer` FROM w WHERE filledcolumnname = 'quebec'\nNeuralSQL2: SELECT `beer` FROM w WHERE filledcolumnname = 'northwest territories'", -7.981079445910002]]}, "589": {"question": "true or false? in comparison, the ethiopian national team has more draws than wins.", "gold_answer": ["false"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -1.2285858874940003], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -1.2290639777969998], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -1.2290639777969998], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -1.2296871803840002], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -1.229971383384], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -1.230741767357], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -3.5547214007840005], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -3.556722029164], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -3.557666603404], [" SELECT COUNT(*) FROM w WHERE result = 'draw'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'win'", -4.761268452944]]}, "630": {"question": "how many events occurred in minneapolis, mn?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND state/province = 'mn'", -2.279347546055], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND state/province = 'mn'", -2.279347546055], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND state/province = 'mn'", -2.279347546055], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND state/province = 'mn'", -2.279347546055], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND state/province = 'mn'", -2.279347546055], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND state/province = 'mn'", -2.2795875258350002], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND state/province = 'mn'", -3.303839932415], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND `state/province` = 'mn'", -3.6060223551150004], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND `state/province` = 'mn'", -3.6060223551150004], [" SELECT COUNT(*) FROM w WHERE city = 'minneapolis' AND `state/province` = 'mn'", -3.607049710015]]}, "671": {"question": "how many different charts did \"run\" make?", "gold_answer": ["3"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT chart) FROM w WHERE single = 'run'", -1.6628927984099997], [" SELECT COUNT(DISTINCT chart) FROM w WHERE single = 'run'", -1.6628927984099997], [" SELECT COUNT(DISTINCT chart) FROM w WHERE single = 'run'", -1.6628927984099997], [" SELECT COUNT(DISTINCT chart) FROM w WHERE single = 'run'", -2.6168031144099997], [" SELECT COUNT(DISTINCT chart) FROM w WHERE single = 'run'", -2.6168031144099997], [" SELECT COUNT(DISTINCT chart) FROM w WHERE single = 'run'", -2.6168031144099997], [" SELECT COUNT(DISTINCT chart) FROM w WHERE single = 'run'", -2.6168031144099997], [" SELECT COUNT(DISTINCT chart) FROM w WHERE single = 'run'", -2.6168031144099997], [" SELECT COUNT(DISTINCT chart) FROM w WHERE single = \"run\"", -4.01249700041], [" SELECT COUNT(DISTINCT(chart)) FROM w WHERE single = 'run'\n```", -12.406931988710001]]}, "712": {"question": "who had a larger total medal count, france or canada?", "gold_answer": ["France"], "pred_answer": {"0": [[3], [], [], [], [], [], [], [], [], []], "1": [[2], [], [], [], [], [], [], [], [], []]}, "nsql": [[" SELECT total FROM w WHERE nation = 'france\u00a0(fra)'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada\u00a0(can)'", -3.267626439880001], [" SELECT `total` FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT `total` FROM w WHERE nation = 'canada'", -3.7372233532800014], [" SELECT total FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada'", -5.74106501795], [" SELECT total FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada'", -8.64117422825], [" SELECT total FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada'", -9.21052515295], [" SELECT total FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada'", -9.21052515295], [" SELECT total FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada'", -9.2857163655], [" SELECT total FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada'", -10.095700952949999], [" SELECT total FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada'", -12.74218765254], [" SELECT total FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'canada'", -12.810167022329999]]}, "753": {"question": "how much larger (in number of beds) was the largest hospital in california than the 50th largest?", "gold_answer": ["1071"], "pred_answer": {"0": [[1500], [1500], [1500], [1500], [1500], [1500], [1500], [1500], [1500], [1500]], "1": [[430, 429], [430, 429], [430, 429], [430, 429], [430, 429], [430, 429], [1500, 1395, 1385, 1300, 1286, 1218, 1210, 1200, 1200, 1100, 1096, 967, 952, 822, 668, 629, 620, 594, 579, 577, 572, 568, 553, 552, 551, 550, 536, 534, 524, 523, 522, 508, 481, 465, 463, 462, 460, 457, 455, 455, 450, 450, 450, 448, 441, 440, 439, 436, 432, 430], [430, 429], [429], [430, 429]]}, "nsql": [[" SELECT MAX(`# beds`) FROM w\nNeuralSQL2: SELECT `# beds` FROM w WHERE rank = 50", -2.6868184023099997], [" SELECT MAX(`# beds`) FROM w\nNeuralSQL2: SELECT `# beds` FROM w WHERE rank = 50", -2.6868184023099997], [" SELECT MAX(`# beds`) FROM w\nNeuralSQL2: SELECT `# beds` FROM w WHERE rank = 50", -2.6868184023099997], [" SELECT MAX(`# beds`) FROM w\nNeuralSQL2: SELECT `# beds` FROM w WHERE rank = 50", -2.6868184023099997], [" SELECT MAX(# beds) FROM w\nNeuralSQL2: SELECT # beds FROM w WHERE rank = 50", -4.397970916059999], [" SELECT MAX(# beds) FROM w\nNeuralSQL2: SELECT # beds FROM w WHERE rank = 50", -4.397970916059999], [" SELECT MAX(`# beds`) FROM w\nNeuralSQL2: SELECT `# beds` FROM w ORDER BY `# beds` DESC LIMIT 50", -7.95354361161], [" SELECT MAX(`# beds`) FROM w\nNeuralSQL2: SELECT `# beds` FROM w WHERE rank = 50", -8.701383384589999], [" SELECT `# beds` FROM w ORDER BY `# beds` DESC LIMIT 1\nNeuralSQL2: SELECT `# beds` FROM w ORDER BY `# beds` DESC LIMIT 50, 1", -8.776649244440001], [" SELECT MAX(`# beds`) FROM w\nNeuralSQL2: SELECT `# beds` FROM w WHERE rank = 50", -10.896738758309999]]}, "794": {"question": "how many players tied for 4th place?", "gold_answer": ["4"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [6], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE # = '4'", -3.8872106316999995], [" SELECT COUNT(DISTINCT player) FROM w WHERE `#` = '4'", -4.935637615734], [" SELECT COUNT(DISTINCT(player)) FROM w WHERE `#` = '4'", -5.539389032512999], [" SELECT COUNT(*) FROM w WHERE `#` = '4'", -6.730094886000001], [" SELECT COUNT(*) FROM w WHERE `#` = '4'", -6.730094886000001], [" SELECT COUNT(*) FROM w WHERE `#` = '4'", -6.98065769536], [" SELECT COUNT(*) FROM w WHERE `#` = '4'", -7.003256456], [" SELECT COUNT(*) FROM w WHERE `\u03c3 points` = '7.5'", -7.379823535780001], [" SELECT COUNT(*) FROM w WHERE `#` = '4'", -10.726077556], [" SELECT COUNT(*) FROM w WHERE `#` LIKE '% - %' AND (CAST(SUBSTR(`#`, 1, INSTR(`#`, '-') - 1) AS INT) - CAST(SUBSTR(`#`, INSTR(`#`, '-') + 1, LENGTH(`#`) - (INSTR(`#`, ' - ') + 1)) AS INT)) > 0", -15.213335291789804]]}, "835": {"question": "how many players are from the united states?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.3578591412399996], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.26496448238], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.26496448238], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.65942348238], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.65942348238], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.67558088238], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.7388473823799995], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.7388473823799995], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -4.7388473823799995], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -5.26064568238]]}, "876": {"question": "how many months how a record low below 25 degrees?", "gold_answer": ["6"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%25%'", -5.65620075716], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%25;%'", -6.267306072], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%25%'", -7.077286537], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '%25%'", -7.850757767000001], [" SELECT COUNT(*) FROM w WHERE `record low  \u00b0f (\u00b0c)` LIKE '%25%'", -8.548282097299998], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` < '25'", -9.48874527996], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` LIKE '% \u221225%'", -9.536341667999999], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` < 25", -10.797885412239998], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` < 25", -11.69908534454], [" SELECT COUNT(*) FROM w WHERE `record low \u00b0f (\u00b0c)` < 25", -12.110480041539999]]}, "917": {"question": "which two venue has no nations from 2007-2012", "gold_answer": ["5th Venue", "6th Venue"], "pred_answer": {"0": [[6], [6], [6], [0], [0], [4], [8], [6], [8], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year BETWEEN 2007 AND 2012", -5.10096759005], [" SELECT COUNT(*) FROM w WHERE year >= 2007 AND year <= 2012", -5.58812849829], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 2007 AND 2012 AND (1st venue = 'na' OR 2nd venue = 'na' OR 3rd venue = 'na' OR 4th venue = 'na' OR 5th venue = 'na' OR 6th venue = 'na')", -8.703569213960002], [" SELECT COUNT(*) FROM w WHERE year >= 2007 AND year <= 2012 AND `1st venue` = 'na' AND `2nd venue` = 'na' AND `3rd venue` = 'na' AND `4th venue` = 'na' AND `5th venue` = 'na' AND `6th venue` = 'na'", -9.539521304190004], [" SELECT COUNT(*) FROM w WHERE year >= 2007 AND year <= 2012 AND `1st venue` = 'na' AND `2nd venue` = 'na' AND `3rd venue` = 'na' AND `4th venue` = 'na' AND `5th venue` = 'na' AND `6th venue` = 'na'", -9.539521304190004], [" SELECT COUNT(DISTINCT(`1st venue`)) FROM w WHERE year > 2007 AND year < 2012", -9.76510618311], [" SELECT COUNT(*) FROM w WHERE `1st venue` NOT IN (SELECT DISTINCT `1st venue` FROM w WHERE year BETWEEN 2007 AND 2012) OR `2nd venue` NOT IN (SELECT DISTINCT `1st venue` FROM w WHERE year BETWEEN 2007 AND 2012) OR `3rd venue` NOT IN (SELECT DISTINCT `1st venue` FROM w WHERE year BETWEEN 2007 AND 2012) OR `4th venue` NOT IN (SELECT DISTINCT `1st venue` FROM w WHERE year BETWEEN 2007 AND 2012) OR `5th venue` NOT IN (SELECT DISTINCT `1st venue` FROM w WHERE year BETWEEN 2007 AND 2012) OR `6th venue` NOT IN (SELECT DISTINCT `1st venue` FROM w WHERE year BETWEEN 2007 AND 2012)", -11.9537579645108], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 2007 AND 2012 AND (1st venue = 'na' OR 2nd venue = 'na' OR 3rd venue = 'na' OR 4th venue = 'na' OR 5th venue = 'na' OR 6th venue = 'na')", -11.969850965129998], [" SELECT COUNT(*) FROM w WHERE `1st venue` NOT LIKE '%2007%' AND `1st venue` NOT LIKE '%2008%' AND `1st venue` NOT LIKE '%2009%' AND `1st venue` NOT LIKE '%2010%' AND `1st venue` NOT LIKE '%2011%' AND `1st venue` NOT LIKE '%2012%'", -12.572269148587997], [" SELECT COUNT(*) FROM w WHERE (year < 2007 OR year > 2012) AND `1st venue` = 'na' AND `2nd venue` = 'na' AND `3rd venue` = 'na' AND `4th venue` = 'na' AND `5th venue` = 'na' AND `6th venue` = 'na'", -16.467928789059997]]}, "920": {"question": "name at least two labels that released the group's albums.", "gold_answer": ["I.R.S.", "Illegal"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT label) FROM w", -4.0875010136], [" SELECT COUNT(DISTINCT label) FROM w", -4.0875010136], [" SELECT COUNT(DISTINCT label) FROM w", -4.0875010136], [" SELECT COUNT(DISTINCT label) FROM w", -5.341210101029999], [" SELECT COUNT(DISTINCT label) FROM w", -8.5169401515], [" SELECT COUNT(DISTINCT label) FROM w", -8.772687556160001], [" SELECT COUNT(DISTINCT label) FROM w", -8.774504440100001], [" SELECT COUNT(DISTINCT label) FROM w", -8.8124949301], [" SELECT COUNT(DISTINCT label) FROM w", -9.664471120100002], [" SELECT COUNT(DISTINCT label) FROM w", -11.79490321429]]}, "941": {"question": "name a gold mine that was open at least 10 years.", "gold_answer": ["Barton Mine"], "pred_answer": {"0": [[0], [0], [2], [0], [0], [0], [0], [2], [5], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE dates LIKE '% - %' AND (CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT) - CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, ' - ') + 1)) AS INT)) >= 10", -8.160035149377803], [" SELECT COUNT(*) FROM w WHERE dates LIKE '% - %' AND (CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT) - CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, ' - ') + 1)) AS INT)) >= 10", -8.2028636149618], [" SELECT COUNT(*) FROM w WHERE dates LIKE '%-%' AND (CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, '-') + 1)) AS INT) - CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT)) >= 10", -8.617480180496997], [" SELECT COUNT(*) FROM w WHERE dates LIKE '% - %' AND (CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT) - CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, ' - ') + 1)) AS INT)) > 10", -8.649611935566504], [" SELECT COUNT(*) FROM w WHERE dates LIKE '% - %' AND (CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT) - CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, ' - ') + 1)) AS INT)) >= 10", -8.781873666694501], [" SELECT COUNT(*) FROM w WHERE dates LIKE '% - %' AND (CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, ' - ') + 1)) AS INT) - CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT)) >= 10", -9.837393905849], [" SELECT COUNT(*) FROM w WHERE dates LIKE '%-%' AND (CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT) - CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, ' - ') + 1)) AS INT)) > 10", -11.076255610218], [" SELECT COUNT(*) FROM w WHERE dates LIKE '%-%' AND (CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, '-') + 1)) AS INT) - CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT)) >= 10", -11.418226222796998], [" SELECT COUNT(*) FROM w WHERE dates LIKE '%-%' AND (CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, ' - ') + 1)) AS INT) - CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT)) >= 10", -12.194779836194002], [" SELECT COUNT(*) FROM w WHERE dates LIKE '% - %' AND (CAST(SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, '-') + 1)) AS INT) - CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT)) > 10", -14.326158679210003]]}, "958": {"question": "how many took at least 35:00 to finish?", "gold_answer": ["30"], "pred_answer": {"0": [[33], [33], [33], [33], [33], [33], [33], [33], [33], [30]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `time` >= '35:00'", -3.42389261959], [" SELECT COUNT(*) FROM w WHERE `time` >= '35:00'", -3.42389261959], [" SELECT COUNT(*) FROM w WHERE `time` >= '35:00'", -5.134294613180001], [" SELECT COUNT(*) FROM w WHERE time >= '35:00'", -5.44977363632], [" SELECT COUNT(*) FROM w WHERE time >= '35:00'", -5.44977363632], [" SELECT COUNT(*) FROM w WHERE `time` >= '35:00'", -5.96395528208], [" SELECT COUNT(*) FROM w WHERE time >= '35:00'", -6.091765098020001], [" SELECT COUNT(*) FROM w WHERE time >= '35:00'", -6.091765098020001], [" SELECT COUNT(*) FROM w WHERE time >= '35:00'", -7.493102637680001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(time, ':', '.') AS FLOAT) >= 35.0", -11.180384705090002]]}, "962": {"question": "los angeles and what other city had about 19,000 passenger combined", "gold_answer": ["Canada, Calgary"], "pred_answer": {"0": [[14749], [], [], [], [], [], [], [], [], []], "1": ["<error>"], "2": [[2.0]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]], "11": ["<error>"], "12": [[1]], "13": ["<error>"]}, "nsql": [[" SELECT SUM(passengers) FROM w WHERE city LIKE '%los angeles%'", -4.044985000729999], [" SELECT passengers FROM w WHERE city = 'los angeles'", -5.38517286076], [" SELECT passengers FROM w WHERE city = 'los angeles'", -8.22648603326], [" SELECT passengers FROM w WHERE city = 'los angeles'", -10.20058808464], [" SELECT passengers FROM w WHERE city = 'los angeles'", -10.337090960840001], [" SELECT passengers FROM w WHERE city = 'los angeles'", -10.838073226839999], [" SELECT passengers FROM w WHERE city = 'los angeles'", -11.01084785084], [" SELECT passengers FROM w WHERE city = 'los angeles'", -11.277568017339998], [" SELECT passengers FROM w WHERE city = 'los angeles'", -11.508416190839998], [" SELECT passengers FROM w WHERE city = 'los angeles'\nQ2: the average ranking of all cities is {how many = a2}.\nNeuralSQL2: SELECT AVG(ranking) FROM w\nQ3: there are {how many = a3} records with a ranking larger than 3.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE ranking > 3\nQ4: the number of records with a ranking larger than 3 is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE ranking > 3\nQ5: there are {how many = a5} records with a ranking larger than 3.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE ranking > 3\nQ6: there are {how many = a6} records with a ranking larger than 3.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE ranking > 3\nQ7: there are {how many = a7} records with a ranking larger than 3.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE ranking > 3\nQ8: there are {how many = a8} records with", -43.389894366971944]]}, "999": {"question": "which team played the same amount of seasons as the canadiens?", "gold_answer": ["Toronto Maple Leafs"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -2.3437288033950003], [" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -2.3437288033950003], [" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -2.3437288033950003], [" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -2.3437288033950003], [" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -2.3437288033950003], [" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -2.3437288033950003], [" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -3.442697495025], [" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -3.442697495025], [" SELECT COUNT(*) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -3.442697495025], [" SELECT COUNT(DISTINCT team) FROM w WHERE seasons = (SELECT seasons FROM w WHERE team = 'montreal canadiens')", -6.9324887387350005]]}, "1003": {"question": "how many drivers were retired before the race could end?", "gold_answer": ["7"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `time/retired` = 'retired'", -2.9130073137659993], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -4.7770010827660006], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -4.7770010827660006], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -4.794537640480001], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -4.794537640480001], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -8.307885615366], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -8.307885615366], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -9.61221356683], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -9.73816886683], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%retired%'", -9.787376215366]]}, "1044": {"question": "how many times in total did ikangaa run the marathon in the olympic games?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition = 'olympic games' AND event = 'marathon'", -2.7330010418799997], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games' AND event = 'marathon'", -2.7330010418799997], [" SELECT COUNT(*) FROM w WHERE event = 'marathon' AND competition = 'olympic games'", -4.423420192764], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games' AND event = 'marathon'", -4.453664893839999], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games' AND event = 'marathon'", -5.04854659869], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games' AND event = 'marathon'", -5.0495289432699995], [" SELECT COUNT(*) FROM w WHERE event = 'marathon' AND competition LIKE '%olympic games%'", -5.606897482340001], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%olympic%'", -6.502631863440001], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%olympic%' AND event = 'marathon'", -6.643290919440001], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%olympic games%' AND event = 'marathon'", -6.70582050524]]}, "1085": {"question": "how many companies had over $1,000,000 profit?", "gold_answer": ["6"], "pred_answer": {"0": ["<error>", "<error>", [10], "<error>", "<error>", "<error>", [6], [6], [10], "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE profit > 1000000", -2.53721564151], [" SELECT COUNT(*) FROM w WHERE profit > 1000000", -2.53860103751], [" SELECT COUNT(*) FROM w WHERE `profit\\n(thou.\\n\u00a0pln)` > 1000000", -3.8436119412899994], [" SELECT COUNT(*) FROM w WHERE profit > 1000000", -4.735171321859999], [" SELECT COUNT(*) FROM w WHERE profit > 1000000", -4.735171321859999], [" SELECT COUNT(*) FROM w WHERE profit > 1000000", -4.735171321859999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`profit\\n(thou.\\n\u00a0pln)`,'n/a','') AS INT) > 1000000", -5.148166113420001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`profit\\n(thou.\\n\u00a0pln)`,'n/a','') AS INT) > 1000000", -5.148166113420001], [" SELECT COUNT(*) FROM w WHERE `profit\\n(thou.\\n\u00a0pln)` > 1000000", -6.98934509329], [" SELECT COUNT(*) FROM w WHERE profit > 1000000\n```", -10.63749520331]]}, "1126": {"question": "what is the total number of times that the winning driver was driving a toyota supra?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -1.7772580682359997], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -1.7772580682359997], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -1.7792291112660004], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -1.7792291112660004], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -1.7792291112660004], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -1.7792291112660004], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -1.7792291112660004], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -1.7792291112660004], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -3.284387883716], [" SELECT COUNT(*) FROM w WHERE car = 'toyota supra'", -3.284387883716]]}, "1167": {"question": "during the 1951 world ice hockey championships, what was the difference between the first and last place teams for number of games won ?", "gold_answer": ["5"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 7", -6.358707499205], [" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 7", -6.578969899205], [" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 7", -6.578969899205], [" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 7", -6.672923499205], [" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 7", -6.672923499205], [" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 7", -6.714815099205], [" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 7", -6.986073899205], [" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 7", -7.292704999205], [" SELECT won FROM w WHERE place = 1\nNeuralSQL2: SELECT won FROM w WHERE place = 6", -7.62134076449], [" SELECT SUM(won) FROM w WHERE place = 1\nNeuralSQL2: SELECT SUM(won) FROM w WHERE place = 7", -13.848997447239999]]}, "1208": {"question": "how many runners finished with their time below 2:01?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE time < '2:01'", -2.3896275584980002], [" SELECT COUNT(*) FROM w WHERE time < '2:01'", -2.3896275584980002], [" SELECT COUNT(*) FROM w WHERE time < '2:01'", -2.389829140098], [" SELECT COUNT(*) FROM w WHERE time < '2:01'", -2.389829140098], [" SELECT COUNT(*) FROM w WHERE time < '2:01'", -2.389829140098], [" SELECT COUNT(*) FROM w WHERE time < '2:01'", -4.00624047488], [" SELECT COUNT(*) FROM w WHERE time < '2:01'", -4.00624047488], [" SELECT COUNT(*) FROM w WHERE time < '2:01'", -4.011222470680001], [" SELECT COUNT(*) FROM w WHERE time < '2:1'", -4.12925002046], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(time, ':', '.') AS FLOAT) < 2.01", -5.748928589192]]}, "1249": {"question": "what number of acts does il giustino have?", "gold_answer": ["5"], "pred_answer": {"0": [["5 acts"], ["5 acts"], ["5 acts"], ["5 acts"], ["5 acts"], ["5 acts"], [1], ["5 acts"], [1], [1]]}, "nsql": [[" SELECT `sub\u00addivisions` FROM w WHERE title = 'il giustino'", -2.82066341263], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'il giustino'", -2.82066341263], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'il giustino'", -2.82066341263], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'il giustino'", -2.82066341263], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'il giustino'", -4.178906640349999], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'il giustino'", -4.178906640349999], [" SELECT COUNT(*) FROM w WHERE title = 'il giustino'", -4.375586427777], [" SELECT `sub-divisions` FROM w WHERE title = 'il giustino'", -5.93799735972], [" SELECT COUNT(*) FROM w WHERE title = 'il giustino' AND `sub\u00addivisions` LIKE '% acts'", -7.881875208209999], [" SELECT COUNT(*) FROM w WHERE title = 'il giustino'", -8.039328459359998]]}, "31": {"question": "which winner won more tournaments, jeff maggert or tiger woods?", "gold_answer": ["Tiger Woods"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -4.920761907866], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.0907004078660005], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.091640345906001], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.311930480938], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.380359407866], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.39778536448], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.39780577678], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.435551407866], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.435551407866], [" SELECT COUNT(*) FROM w WHERE winner = 'jeff maggert'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'tiger woods'", -5.875438820484]]}, "72": {"question": "only player to serve as captain from 1998-2007", "gold_answer": ["Rapha\u00ebl Iba\u00f1ez"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [0], [1], [1], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE span LIKE '1998%-2007%'", -6.169032038593999], [" SELECT COUNT(*) FROM w WHERE span = '1998-2007'", -6.2695007548040005], [" SELECT COUNT(*) FROM w WHERE span LIKE '1998%' AND span LIKE '%2007'", -6.328010727133998], [" SELECT COUNT(DISTINCT player) FROM w WHERE span LIKE '1998%' OR span LIKE '%2007'", -7.140574001205999], [" SELECT COUNT(*) FROM w WHERE span LIKE '1998%-2007%'", -8.266730570384], [" SELECT COUNT(*) FROM w WHERE span LIKE '1998-2007%'", -8.981364430134002], [" SELECT COUNT(*) FROM w WHERE span LIKE '1998% - 2007%'", -9.358432048033999], [" SELECT COUNT(*) FROM w WHERE span LIKE '1998-%' AND span LIKE '%-2007'", -9.868368851934001], [" SELECT COUNT(*) FROM w WHERE span LIKE '1998-%' OR span LIKE '%-2007'", -10.300537901923999], [" SELECT COUNT(*) FROM w WHERE span LIKE '% - %' AND (CAST(SUBSTR(span, 1, INSTR(span, '-') - 1) AS INT) >= 1998 AND CAST(SUBSTR(span, 1, INSTR(span, '-') - 1) AS INT) <= 2007)\n```", -18.616375693757]]}, "113": {"question": "yoichiro kakitani scored above 2 goals in how many major competitions?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [5], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE goals > 2", -8.44448806206], [" SELECT COUNT(*) FROM w WHERE goals > 2\n```", -8.475550941829999], [" SELECT COUNT(*) FROM w WHERE goals > 2", -8.541818282999998], [" SELECT COUNT(*) FROM w WHERE goals > 2", -8.541818282999998], [" SELECT COUNT(*) FROM w WHERE goals > 2", -9.51525933206], [" SELECT COUNT(*) FROM w WHERE goals > 2", -9.70675564706], [" SELECT COUNT(*) FROM w WHERE goals > 2", -10.22087364573], [" SELECT COUNT(*) FROM w WHERE goals > 2 AND competition LIKE '%fifa%' OR competition LIKE '%afc%' OR competition LIKE '%eaff%'", -11.05713860726], [" SELECT COUNT(*) FROM w WHERE goals > 2", -11.774343887059999], [" SELECT COUNT(*) FROM w WHERE goals > 2", -12.96038988206]]}, "154": {"question": "what number of counties are named for us presidents?", "gold_answer": ["3"], "pred_answer": {"0": [[100], [0], [0], [0], [0], [0], [100], [100], [100], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE county LIKE '%county'", -6.416776531276], [" SELECT COUNT(*) FROM w WHERE county LIKE '% president%'", -6.91572536396], [" SELECT COUNT(*) FROM w WHERE county LIKE '% county' AND county LIKE '%president%'", -7.566390284352], [" SELECT COUNT(*) FROM w WHERE county LIKE '% county' AND county LIKE '% president%'", -7.911269742043], [" SELECT COUNT(*) FROM w WHERE county LIKE '% county' AND county LIKE '% president%'", -7.911269742043], [" SELECT COUNT(*) FROM w WHERE county LIKE '% county' AND county LIKE '% president%'", -8.00329540133], [" SELECT COUNT(*) FROM w WHERE county LIKE '% county' AND county LIKE '% county'", -9.18573684516], [" SELECT COUNT(*) FROM w WHERE county LIKE '% county' AND county LIKE '% county'", -11.894065646662002], [" SELECT COUNT(*) FROM w WHERE county LIKE '% county' AND county LIKE '% county'", -12.7633700871], [" SELECT COUNT(*) FROM w WHERE county LIKE '% county' AND county IN (SELECT county FROM w WHERE county LIKE '% county' AND county LIKE '% president%')", -15.499961905500001]]}, "195": {"question": "how many times did his jump surpass 7.70 m?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [1], [3], [5], [5], [5], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notes > 7.70", -4.16322832747], [" SELECT COUNT(*) FROM w WHERE `notes` > '7.70 m'", -4.70118920301], [" SELECT COUNT(*) FROM w WHERE `notes` > '7.70 m'", -4.702398491724], [" SELECT COUNT(*) FROM w WHERE notes LIKE '% m' AND CAST(REPLACE(notes, ' m', '') AS INT) > 7.70", -7.98803392713], [" SELECT COUNT(*) FROM w WHERE `notes` LIKE '%7.7%'", -8.14866926787], [" SELECT COUNT(*) FROM w WHERE notes > '7.70 m'", -9.436676713899999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(notes,' m','') AS FLOAT) > 7.70", -14.10238445247], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(notes,' m','') AS FLOAT) > 7.70", -15.250535939719999], [" SELECT COUNT(*) FROM w WHERE notes LIKE '% m' AND CAST(SUBSTR(notes, 1, INSTR(notes, 'm') - 1) AS FLOAT) > 7.70", -16.443758682835004], [" SELECT COUNT(*) FROM w WHERE notes LIKE '% m' AND CAST(REPLACE(notes, ' m', '') AS FLOAT) > 7.70", -17.883052911198003]]}, "236": {"question": "how many players did not score a goal in cup play?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": ["<error>", "<error>"], "2": [[4]], "3": ["<error>"], "4": [[8]], "5": ["<error>"], "6": [[14]], "7": ["<error>"], "8": [[14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9797283857999999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9797283857999999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9797283857999999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9797283857999999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9797283857999999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9797283857999999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -4.6934371454], [" SELECT COUNT(*) FROM w WHERE cup = 0", -8.10183150248], [" SELECT COUNT(*) FROM w WHERE cup = 0\n```", -8.335471400900001], [" SELECT COUNT(*) FROM w WHERE cup = 0\nQ2: {how many = a2} players scored a goal in cup play.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE cup > 0\nQ3: {how many = a3} players scored a goal in europa league play.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `europa league` > 0\nQ4: {how many = a4} players scored a goal in league play.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE league > 0\nQ5: {how many = a5} players scored a goal in total.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE total > 0", -22.27175777286401]]}, "277": {"question": "how many sections intersect highway 2?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `intersecting routes` = 'highway 2'", -4.667313688066], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` = 'highway 2'", -4.667313688066], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` = 'highway 2'", -4.667313688066], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` LIKE '%highway 2%'", -5.063089352226], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` LIKE '%highway 2%'", -5.063761024466], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` LIKE '%highway 2%'", -5.9437879809159995], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` LIKE '%highway 2%'", -6.713185880916], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` LIKE '%highway 2%'", -7.3409902809159995], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` = 'highway 2'", -9.480502340996], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` = 'highway 2'", -9.510011640996]]}, "280": {"question": "which engine was used the most by teams this season?", "gold_answer": ["Mugen-Honda"], "pred_answer": {"0": [["mugen-honda", 29], ["mugen-honda", 29], ["mugen-honda", 29], ["mugen-honda", 29], [5], ["mugen-honda", 29], [29], ["mugen-honda", 29], ["mugen-honda", 29], [29]]}, "nsql": [[" SELECT engine, COUNT(*) FROM w GROUP BY engine ORDER BY COUNT(*) DESC LIMIT 1", -4.08007219483], [" SELECT engine, COUNT(*) FROM w GROUP BY engine ORDER BY COUNT(*) DESC LIMIT 1", -5.8236721169], [" SELECT engine, COUNT(*) FROM w GROUP BY engine ORDER BY COUNT(*) DESC LIMIT 1", -5.84223016015], [" SELECT engine, COUNT(engine) AS count FROM w GROUP BY engine ORDER BY count DESC LIMIT 1", -6.842010065780001], [" SELECT COUNT(DISTINCT engine) FROM w", -6.912353260870001], [" SELECT engine, COUNT(*) AS cnt FROM w GROUP BY engine ORDER BY cnt DESC LIMIT 1", -7.914165554580003], [" SELECT COUNT(*) FROM w GROUP BY engine ORDER BY COUNT(*) DESC LIMIT 1", -8.041064834599998], [" SELECT engine, COUNT(*) AS count FROM w GROUP BY engine ORDER BY count DESC LIMIT 1", -9.473847357773], [" SELECT engine, COUNT(*) AS c FROM w GROUP BY engine ORDER BY c DESC LIMIT 1", -9.954639206644002], [" SELECT COUNT(*) FROM w GROUP BY engine ORDER BY COUNT(*) DESC LIMIT 1", -12.421245407641997]]}, "301": {"question": "how many events were at least 50 km?", "gold_answer": ["17"], "pred_answer": {"0": [[0], [0], [0], [17], [17], [16], [0], [15], [16], [16]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE event LIKE '%50 km%'", -4.425805796284], [" SELECT COUNT(*) FROM w WHERE event LIKE '%50 km%'", -4.425805796284], [" SELECT COUNT(*) FROM w WHERE event LIKE '%50 km%'", -4.425805796284], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(event, 1, INSTR(event, ' ') - 1) AS INT) >= 50", -4.674694247260001], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(event, 1, INSTR(event, ' ') - 1) AS INT) >= 50", -4.674694247260001], [" SELECT COUNT(*) FROM w WHERE event LIKE '%50%'", -4.903534220829999], [" SELECT COUNT(*) FROM w WHERE event LIKE '%50 km%'", -6.105352175089999], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(event, 1, INSTR(event, '\u00a0') - 1) AS INT) >= 50", -6.26171430826], [" SELECT COUNT(*) FROM w WHERE event LIKE '50%'", -6.36656036709], [" SELECT COUNT(*) FROM w WHERE event LIKE '%50%'", -6.671308209090001]]}, "318": {"question": "how many civil parishes have population counts of at least 10,000?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population >= 10000", -2.22152497688], [" SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population >= 10000", -2.23236869712], [" SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population >= 10000", -2.23236869712], [" SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population >= 10000", -2.2328524300500003], [" SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population > 10000", -3.553081001965], [" SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population >= 10000", -3.9106207318100004], [" SELECT COUNT(*) FROM w WHERE population >= 10000 AND status = 'civil parish'", -4.19747240789], [" SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population >= 10000", -4.972105636430001], [" SELECT COUNT(*) FROM w WHERE status = \"civil parish\" AND population >= 10000", -5.181025630530001], [" SELECT COUNT(*) FROM w WHERE `population` >= 10000 AND `status` = 'civil parish'", -6.2345548829099995]]}, "322": {"question": "are any of the lanes in consecutive order?", "gold_answer": ["No"], "pred_answer": {"0": [[0], "<error>", [0], [0], [0], [1], [5], [1], [5], [5]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE lane LIKE '% - %'", -7.242051528849999], [" SELECT COUNT(*) FROM w WHERE lane - LAG(lane, 1) OVER (ORDER BY lane) = 1", -9.304165097648], [" SELECT COUNT(*) FROM w WHERE `lane` = `lane` + 1", -9.427186856779999], [" SELECT COUNT(*) FROM w WHERE lane = '4.0' AND lane = '5.0' AND lane = '6.0'", -10.786443853064997], [" SELECT COUNT(*) FROM w WHERE rank = 1.0 + lane\n```", -13.19654886368], [" SELECT COUNT(*) FROM w WHERE lane - (SELECT MIN(lane) FROM w) = row_id\n```", -13.866103262329998], [" SELECT COUNT(*) FROM w WHERE lane > 0 AND lane < 7 AND lane NOT IN (1, 7)", -14.6592357859], [" SELECT COUNT(*) FROM w WHERE lane = (SELECT MIN(lane) FROM w) + 1", -16.719149031915002], [" SELECT COUNT(*) FROM w WHERE lane = 2.0 OR lane = 3.0 OR lane = 4.0 OR lane = 5.0 OR lane = 6.0", -17.241439042044], [" SELECT COUNT(*) FROM w WHERE CAST(lane AS INT) IN (SELECT lane FROM w WHERE lane != 'nan') AND CAST(lane AS INT) + 1 IN (SELECT lane FROM w WHERE lane != 'nan')", -20.85791654978]]}, "359": {"question": "how many total wins has he had?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>", "<error>"], "2": [[5], [5]], "3": ["<error>", "<error>"], "4": [[1], [2]], "5": ["<error>", "<error>"], "6": [[1], [1]], "7": ["<error>", "<error>"], "8": [[4], [0]], "9": ["<error>", "<error>"], "10": [[4], "<error>"], "11": ["<error>"], "12": [[9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -2.24917039766], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -2.24917039766], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -2.24917039766], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -2.24917039766], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -2.24917039766], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -5.6560188049399995], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -5.99414180494], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -6.42529180494], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'\nQ2: {how many = a2} wins on hard surface.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard'\nQ3: {how many = a3} wins in 2006.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND year = '2006'\nQ4: {how many = a4} wins in 2006 on hard surface.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND year = '2006' AND surface = 'hard'\nQ5: {how many = a5} total losses.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nQ6: {how many = a6} losses on hard surface.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE outcome = 'runner-up' AND surface = 'hard'\nQ7: {how many = a7} losses in 2006.\nNeuralSQL7: SELECT COUNT(*) FROM w", -24.32741973460801], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'\nQ2: {how many = a2} wins on hard surface.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard'\nQ3: {how many = a3} wins on hard surface in 2003.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard' AND year = 2003\nQ4: {how many = a4} wins on hard surface in 2003 against david nalbandian.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard' AND year = 2003 AND opponent = 'david nalbandian'\nQ5: {how many = a5} wins against roger federer.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent = 'roger federer'\nQ6: {how many = a6} wins against roger federer on hard surface.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE outcome = '", -28.054632391813]]}, "363": {"question": "does arasay thondike have more/less than 4 1st place tournament finishes?", "gold_answer": ["less"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position LIKE '1st%'", -3.0018399607869997], [" SELECT COUNT(*) FROM w WHERE position LIKE '1st%'", -3.0018399607869997], [" SELECT COUNT(*) FROM w WHERE position LIKE '1st%'", -3.0018399607869997], [" SELECT COUNT(*) FROM w WHERE position LIKE '1st'", -6.2043918495599995], [" SELECT COUNT(*) FROM w WHERE position LIKE '1st%'", -6.5535812787199985], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -7.074617742966], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -7.533649842966], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -7.996175342966], [" SELECT COUNT(*) FROM w WHERE position LIKE '1st'", -8.486259944734], [" SELECT COUNT(*) FROM w WHERE position LIKE '1st'", -8.770443044734]]}, "404": {"question": "how many players were taller than van hatchell?", "gold_answer": ["7"], "pred_answer": {"0": [[14], [6], [6], [2], [6], [14], [4], [1], [10], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(height, 1, INSTR(height, '\u2013') - 1) AS INT) > 5", -5.894531285600001], [" SELECT COUNT(*) FROM w WHERE height > (SELECT height FROM w WHERE name = 'van hatchell')", -6.4842926930199996], [" SELECT COUNT(*) FROM w WHERE height > (SELECT height FROM w WHERE name = 'van hatchell')", -8.71232496302], [" SELECT COUNT(*) FROM w WHERE height > '6\u20138'", -8.793584293359999], [" SELECT COUNT(*) FROM w WHERE height > '6\u20134'", -9.203514838064999], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(height, 1, INSTR(height, '\u2013') - 1) AS INT) > 5)", -9.52796270156], [" SELECT COUNT(*) FROM w WHERE height > '6\u20135'", -9.636881706774998], [" SELECT COUNT(*) FROM w WHERE height > '6\u20139'", -10.2073486407], [" SELECT COUNT(*) FROM w WHERE height > '6\u20133'", -10.458272146785001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height,'\u2013','') AS INT) > CAST(REPLACE('6\u20135','\u2013','') AS INT)", -10.653495419]]}, "445": {"question": "what is the number of menteri besars that there have been during the pre-independence period?", "gold_answer": ["9"], "pred_answer": {"0": [[5], [6], [6], [9], [7], [6], [9], [9], [9], [6]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `left office` < '1947-06-01 00:00:00'", -5.615648315475999], [" SELECT COUNT(*) FROM w WHERE took office < '1947-06-01 00:00:00'", -5.730826083876002], [" SELECT COUNT(*) FROM w WHERE took office < '1947-06-01'", -6.6682371221759995], [" SELECT COUNT(*) FROM w WHERE `took office` < '1957-08-31'", -8.248749791636], [" SELECT COUNT(*) FROM w WHERE `took office` < '1947-08-31'", -9.522786028046001], [" SELECT COUNT(*) FROM w WHERE (took office < '1947-06-01 00:00:00' OR left office < '1947-06-01 00:00:00')", -9.652793745866001], [" SELECT COUNT(*) FROM w WHERE `took office` < '1957-08-31'", -9.913012484496], [" SELECT COUNT(*) FROM w WHERE `took office` < '1957-08-31'", -11.080163191636], [" SELECT COUNT(*) FROM w WHERE `took office` < '1956-01-01'", -12.604217929275999], [" SELECT COUNT(*) FROM w WHERE `took office` < '1947-06-01 00:00:00'\nQ2: there have been {how many = a2} menteri besars from the united malays national organisation.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'united malays national organisation'\nQ3: {how many = a3} menteri besars have been from the malaysian chinese association.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE party = 'malaysian chinese association'\nQ4: {how many = a4} menteri besars have been from the malaysian indian congress.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE party = 'malaysian indian congress'\nQ5: {how many = a5} menteri besars have been from the malaysian people 's movement party.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE party = 'malaysian people 's movement party'\nQ6: {how many = a6} menteri besars have been from the", -36.989615621029536]]}, "486": {"question": "which city is home to the greatest number of historic sites, existing or demolished?", "gold_answer": ["Port Huron"], "pred_answer": {"0": [[20], [20], [20], [20], [20], [20], [20], [20], ["port huron", 20], [20]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city = 'port huron'", -3.972023466655], [" SELECT COUNT(*) FROM w WHERE city = 'port huron'", -3.972023466655], [" SELECT COUNT(*) FROM w WHERE city = 'port huron'", -4.016946210014001], [" SELECT COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -5.5827498566], [" SELECT COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -5.6160877003600005], [" SELECT COUNT(*) FROM w GROUP BY city ORDER BY COUNT(*) DESC LIMIT 1", -5.6160877003600005], [" SELECT COUNT(*) FROM w WHERE city = 'port huron'", -6.399104560235], [" SELECT COUNT(*) FROM w WHERE city = 'port huron'", -7.342154094984], [" SELECT city, COUNT(*) AS c FROM w GROUP BY city ORDER BY c DESC LIMIT 1", -9.185798260570001], [" SELECT MAX(c) FROM (SELECT COUNT(*) AS c FROM w GROUP BY city)", -11.37470057907]]}, "527": {"question": "what is the total number of players listed?", "gold_answer": ["12"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w", -4.697260841354], [" SELECT COUNT(*) FROM w", -4.697260841354], [" SELECT COUNT(*) FROM w", -4.697260841354], [" SELECT COUNT(*) FROM w", -4.697260841354], [" SELECT COUNT(*) FROM w", -5.410225766454], [" SELECT COUNT(*) FROM w", -5.410225766454], [" SELECT COUNT(*) FROM w", -5.410225766454], [" SELECT COUNT(*) FROM w", -5.649165278853999], [" SELECT COUNT(*) FROM w", -6.022746231854001], [" SELECT COUNT(*) FROM w", -7.0463088538540015]]}, "568": {"question": "how many times were they in tier 3?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -3.33237690849], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -3.33237690849], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -3.33237690849], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -5.2221906985299995], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -5.46806329853], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -5.46806329853], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -5.46806329853], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -5.70779699853], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -5.96327769853], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3'", -6.42112629853]]}, "609": {"question": "what was the total number of winners before the tour was canceled?", "gold_answer": ["17"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [15]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year < '1999'", -6.798494375214001], [" SELECT COUNT(*) FROM w WHERE year < '1999'", -6.798494375214001], [" SELECT COUNT(*) FROM w WHERE year < '1999-2001'\n```", -7.777709027813999], [" SELECT COUNT(*) FROM w WHERE year < '1999'", -7.877009323034], [" SELECT COUNT(*) FROM w WHERE year < '1999'", -7.877009323034], [" SELECT COUNT(*) FROM w WHERE year < '1999'", -7.877009323034], [" SELECT COUNT(*) FROM w WHERE year < '1999'", -9.423707954034], [" SELECT COUNT(*) FROM w WHERE year < '1999'", -9.423707954034], [" SELECT COUNT(*) FROM w WHERE year < '1999'", -13.641417610974], [" SELECT COUNT(DISTINCT winner) FROM w WHERE `year` < '1999'", -15.281133488877204]]}, "650": {"question": "what is the number of menteri besar that served 4 or more years?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], "<error>", [3], "<error>", [9], "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`left office`, 1, 4) AS INT) - CAST(SUBSTR(`took office`, 1, 4) AS INT)) >= 4", -5.858285835639501], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`left office`, 1, 4) AS INT) - CAST(SUBSTR(`took office`, 1, 4) AS INT)) >= 4", -5.8588854740345], [" SELECT COUNT(*) FROM w WHERE DATEDIFF(`left office`, `took office`) > 4 * 365", -7.79850537595], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`left office`, 1, 4) AS INT) - CAST(SUBSTR(`took office`, 1, 4) AS INT)) >= 4", -8.2505978878395], [" SELECT COUNT(*) FROM w WHERE (DATEDIFF(left office, took office) >= 4 * 365)", -10.38409526526], [" SELECT COUNT(*) FROM w WHERE (SELECT COUNT(*) FROM w WHERE menteri besar = `menteri besar`) >= 4", -13.485630427050005], [" SELECT COUNT(*) FROM w WHERE (DATEDIFF(`left office`, `took office`) / 365) >= 4", -14.451354069779999], [" SELECT COUNT(*) FROM w WHERE (DATEDIFF(`left office`, `took office`) / 365) >= 4", -14.666027069779997], [" SELECT COUNT(*) FROM w WHERE (DATEDIFF(`left office`, `took office`) / 365) >= 4", -17.006698821039997], [" SELECT COUNT(*) FROM w WHERE DATEDIFF(left office, took office) >= 1460", -17.70788102838]]}, "691": {"question": "as of 2013, what is the total number of floor exercise gold medals won by american women at the world championships?", "gold_answer": ["5"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%american%'", -2.161185262202]]}, "732": {"question": "how many more games did allan houston play than mark jackson?", "gold_answer": ["49"], "pred_answer": {"0": [[78], [78], [78], [78], [78], [78], [78], [78], [78], [78]], "1": [[29], [29], [29], [29], [29], [29], [29], [29], [29], [29]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT games played FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT games played FROM w WHERE player = 'mark jackson'", -2.82427549573], [" SELECT games played FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT games played FROM w WHERE player = 'mark jackson'", -2.82427549573], [" SELECT `games played` FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT `games played` FROM w WHERE player = 'mark jackson'", -5.888542251670001], [" SELECT `games played` FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT `games played` FROM w WHERE player = 'mark jackson'", -7.39867825984], [" SELECT `games played` FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT `games played` FROM w WHERE player = 'mark jackson'", -7.39867825984], [" SELECT `games played` FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT `games played` FROM w WHERE player = 'mark jackson'", -7.40345878754], [" SELECT `games played` FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT `games played` FROM w WHERE player = 'mark jackson'", -7.5490590481], [" SELECT `games played` FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT `games played` FROM w WHERE player = 'mark jackson'", -7.55746056521], [" SELECT `games played` FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT `games played` FROM w WHERE player = 'mark jackson'\n```", -8.87666677065], [" SELECT games played FROM w WHERE player = 'allan houston'\nNeuralSQL2: SELECT games played FROM w WHERE player = 'mark jackson'\n```", -10.750288246590001]]}, "773": {"question": "how many titles are listed in the table?", "gold_answer": ["12"], "pred_answer": {"0": [[12], "<error>", [12], [12], [12], [12], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(DISTINCT `title (latin)`) FROM w", -3.386783630454], [" SELECT COUNT(DISTINCT title) FROM w", -3.5165374375100003], [" SELECT COUNT(*) FROM w", -3.71893524565], [" SELECT COUNT(DISTINCT(title (latin))) FROM w", -4.17823196057], [" SELECT COUNT(DISTINCT title (latin)) FROM w", -4.507709433692], [" SELECT COUNT(DISTINCT title (latin)) FROM w", -4.507709433692], [" SELECT COUNT(DISTINCT title (english translation)) FROM w", -4.898262777060001], [" SELECT COUNT(DISTINCT title (english translation)) FROM w", -4.898262777060001], [" SELECT COUNT(DISTINCT title (english translation)) FROM w", -4.898262777060001], [" SELECT COUNT(DISTINCT title (english translation)) FROM w", -6.80702789511]]}, "814": {"question": "how many seasons at the stadio ennio tardini had 11,000 or more season tickets?", "gold_answer": ["5"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -1.7754768455000003], [" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -1.7754768455000003], [" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -1.7754768455000003], [" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -1.7780521218299998], [" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -1.7780521218299998], [" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -1.7780521218299998], [" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -1.7780521218299998], [" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -3.7830520393600002], [" SELECT COUNT(*) FROM w WHERE `season tickets` >= 11000", -3.7830520393600002], [" SELECT COUNT(*) FROM w WHERE season tickets >= 11000", -6.12644945666]]}, "855": {"question": "what was the total number of positions in the 125cc classification?", "gold_answer": ["43"], "pred_answer": {"0": [[34], [34], [34], [34], [0], [0], [43], [0], [34], [43]]}, "nsql": [[" SELECT COUNT(DISTINCT pos) FROM w", -1.885565447355], [" SELECT COUNT(DISTINCT pos) FROM w", -1.885565447355], [" SELECT COUNT(DISTINCT pos) FROM w", -3.6651166843550005], [" SELECT COUNT(DISTINCT pos) FROM w", -4.169926184355], [" SELECT COUNT(DISTINCT pos) FROM w WHERE pos LIKE '%cc'", -6.335248680415002], [" SELECT COUNT(DISTINCT pos) FROM w WHERE pos LIKE '%cc'", -6.335248680415002], [" SELECT COUNT(*) FROM w", -7.910846861754999], [" SELECT COUNT(DISTINCT pos) FROM w WHERE pos LIKE '%cc'", -8.564852678415], [" SELECT COUNT(DISTINCT pos) FROM w WHERE pos IS NOT NULL", -10.333933412482], [" SELECT COUNT(*) FROM w", -10.542045522745001]]}, "896": {"question": "which was the only competition to occur in china?", "gold_answer": ["Beijing Marathon"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue LIKE '%china%'", -2.9180168130600004], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%china%'", -2.9180168130600004], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%china%'", -2.9180168130600004], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%china%'", -2.9197396778600004], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%pr china%'", -3.19964476183], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%china%'", -3.9583658275899998], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%china%'", -3.9583658275899998], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%china%'", -3.9583658275899998], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%china%'", -3.9583658275899998], [" SELECT COUNT(*) FROM w WHERE venue LIKE '% china%'", -4.582119594409999]]}, "937": {"question": "how many album entries are there?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w", -3.3793352210640006], [" SELECT COUNT(*) FROM w", -3.3793352210640006], [" SELECT COUNT(*) FROM w", -3.3793352210640006], [" SELECT COUNT(*) FROM w", -3.3793352210640006], [" SELECT COUNT(*) FROM w", -4.7736559370939995], [" SELECT COUNT(*) FROM w", -4.7736559370939995], [" SELECT COUNT(*) FROM w", -4.7736559370939995], [" SELECT COUNT(*) FROM w", -5.306061384094], [" SELECT COUNT(*) FROM w", -8.165851107094], [" SELECT COUNT(*) FROM w", -9.064863507094]]}, "940": {"question": "this song released by celine dion spent 17 weeks on the uk singles chart in 1994, which one was it?", "gold_answer": ["\"Think Twice\""], "pred_answer": {"0": [[1], [1], [17], [17], [17], [17], [17], [17], [7.0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE artist = 'celine dion'", -3.0544590257900004], [" SELECT COUNT(*) FROM w WHERE artist = 'celine dion'", -3.0548760948200004], [" SELECT SUM(`weeks in\\ntop 10`) FROM w WHERE artist = 'celine dion'", -3.8169370753400003], [" SELECT SUM(`weeks in\\ntop 10`) FROM w WHERE artist = 'celine dion'", -3.837458956840001], [" SELECT SUM(`weeks in\\ntop 10`) FROM w WHERE artist = 'celine dion'", -3.837458956840001], [" SELECT `weeks in\\ntop 10` FROM w WHERE artist = 'celine dion'", -4.71224557237], [" SELECT `weeks in\\ntop 10` FROM w WHERE artist = 'celine dion'", -4.718684058396], [" SELECT SUM(`weeks in top 10`) FROM w WHERE artist = 'celine dion'", -6.01151665611], [" SELECT SUM(weeks\\nat peak) FROM w WHERE artist = 'celine dion'", -7.823905562519997], [" SELECT COUNT(*) FROM w WHERE artist = 'celine dion' AND `entered` LIKE '1994-%-%-%'", -9.24655238737]]}, "961": {"question": "how many total points were scored by players averaging over 4 assists per game>", "gold_answer": ["848"], "pred_answer": {"0": [[848], [848], [848], [848], [848], "<error>", [848], [848], [848], [848]]}, "nsql": [[" SELECT SUM(points) FROM w WHERE assists per game > 4", -4.74875323462], [" SELECT SUM(points) FROM w WHERE assists per game > 4", -4.74875323462], [" SELECT SUM(points) FROM w WHERE assists per game > 4", -4.74875323462], [" SELECT SUM(points) FROM w WHERE assists per game > 4.0", -6.186129439619999], [" SELECT SUM(points) FROM w WHERE assists per game > 4", -6.881251097419999], [" SELECT SUM(points) FROM w WHERE assists_per_game > 4", -7.24250008702], [" SELECT SUM(points) FROM w WHERE assists per game > 4", -7.49099889742], [" SELECT SUM(points) FROM w WHERE assists per game > 4", -7.49099889742], [" SELECT SUM(points) FROM w WHERE assists per game > 4", -7.49099889742], [" SELECT SUM(points) FROM w WHERE assists per game > 4", -9.28284136742]]}, "978": {"question": "the plain catgut maintains its strength for at least how many number of days?", "gold_answer": ["Strength retention for at least 7 days."], "pred_answer": {"0": ["<error>", "<error>", [], [], [], [], [], [], ["proteolytic"], []], "1": ["<error>"]}, "nsql": [[" SELECT CAST(SUBSTR(`plain catgut`, 1, INSTR(`plain catgut`, ' ') - 1) AS INT)", -7.446845361004001], [" SELECT CAST(SUBSTR(`plain catgut`, 1, INSTR(`plain catgut`, ' ') - 1) AS INT)", -7.446845361004001], [" SELECT `plain catgut` FROM w WHERE filledcolumnname = 'maintains its strength for'", -9.36954962866], [" SELECT `plain catgut` FROM w WHERE filledcolumnname = 'maintains its strength for'", -9.36954962866], [" SELECT `plain catgut` FROM w WHERE filledcolumnname = 'maintains its strength for'", -10.21031793833], [" SELECT `plain catgut` FROM w WHERE filledcolumnname = 'maintains strength for'\n```", -12.95455084773], [" SELECT `plain catgut` FROM w WHERE filledcolumnname = 'maintains its strength for'", -13.08236408266], [" SELECT `plain catgut` FROM w WHERE filledcolumnname = 'maintains strength for'", -14.680889862926001], [" SELECT SUBSTR(`plain catgut`, 1, INSTR(`plain catgut`, ' ') - 1) FROM w WHERE filledcolumnname = 'absorption'", -14.787353304196], [" SELECT `plain catgut` FROM w WHERE filledcolumnname = 'maintains strength'", -15.838481177010001]]}, "982": {"question": "name a state listed at least 4 times.", "gold_answer": ["TX"], "pred_answer": {"0": [[8, 11, 11, 10, 6, 14], [8, 11, 11, 10, 6, 14], ["al", "fl", "ga", "la", "ms", "tx"], [1, 1, 1, 1, 1, 1], [8, 11, 11, 10, 6, 14], [8, 11, 11, 10, 6, 14], [8, 11, 11, 10, 6, 14], [6], "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY state HAVING COUNT(*) >= 4", -3.8145390142949998], [" SELECT COUNT(*) FROM w GROUP BY state HAVING COUNT(*) >= 4", -3.8145390142949998], [" SELECT state FROM w GROUP BY state HAVING COUNT(*) >= 4", -4.275327081248002], [" SELECT COUNT(DISTINCT state) FROM w GROUP BY state HAVING COUNT(*) >= 4", -5.270855388517], [" SELECT COUNT(*) FROM w GROUP BY state HAVING COUNT(*) >= 4", -6.0573983327950005], [" SELECT COUNT(*) FROM w GROUP BY state HAVING COUNT(*) >= 4", -6.0573983327950005], [" SELECT COUNT(*) FROM w GROUP BY state HAVING COUNT(*) >= 4", -6.0573983327950005], [" SELECT COUNT(DISTINCT state) FROM w WHERE state IN (SELECT state FROM w GROUP BY state HAVING COUNT(state) >= 4)", -6.589349593527001], [" SELECT COUNT(*) FROM (SELECT state, COUNT(*) FROM w GROUP BY state) WHERE COUNT(*) >= 4", -7.334419777819999], [" SELECT COUNT(DISTINCT state) FROM w WHERE COUNT(state) >= 4", -13.680471498606998]]}, "1019": {"question": "name the country that had the same number of bronze medals as russia.", "gold_answer": ["Ukraine"], "pred_answer": {"0": [[], [], [], [], [], [], [], [], [], []], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.8471094832949992], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.850149282455], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.8509770504650005], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.8509770504650005], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.8509770504650005], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.8509770504650005], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.8509770504650005], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.8509770504650005], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -2.8509770504650005], [" SELECT bronze FROM w WHERE nation = 'russia'\nNeuralSQL2: SELECT COUNT(DISTINCT bronze) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'russia')", -12.084846647779]]}, "1023": {"question": "what is the total number of pillow pals that were reintroduced as a neon variety?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%neon%'", -4.474427307833], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%neon%'", -4.474427307833], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%neon%'", -4.474427307833], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%neon%'", -4.474427307833], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '% (neon)%'", -5.759045700992999], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%(neon)%'", -9.148755990327], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%(neon)%'", -9.877455690327], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '%neon%'", -11.127657816043001], [" SELECT COUNT(*) FROM w WHERE `reintroduced` LIKE '1999 (neon)'", -12.331173871543001], [" SELECT COUNT(*) FROM w WHERE `reintroduced` = '1999 (neon)'", -12.337249460303]]}, "1064": {"question": "compare \"i can go deep\" with \"don't rush\". which was higher on the us and us r&b charts?", "gold_answer": ["\"I Can Go Deep\""], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'don't rush'", -7.967544216254], [" SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'don't rush'", -7.976597623874001], [" SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'don't rush'", -7.976597623874001], [" SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'don't rush'", -7.9812295482549995], [" SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'don't rush'", -8.007607573900001], [" SELECT CAST(`peak chart positions\\nus` AS INT) + CAST(`peak chart positions\\nus\\nr&b` AS INT) FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT CAST(`peak chart positions\\nus` AS INT) + CAST(`peak chart positions\\nus\\nr&b` AS INT) FROM w WHERE single = 'don't rush'", -8.250413763723996], [" SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'don't rush'", -11.5781421539], [" SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus`, `peak chart positions\\nus\\nr&b` FROM w WHERE single = 'don't rush'", -12.515526169255], [" SELECT `peak chart positions\\nus`,`peak chart positions\\nus\\nr&b` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus`,`peak chart positions\\nus\\nr&b` FROM w WHERE single = 'don't rush'", -14.882886217542], [" SELECT `peak chart positions\\nus` FROM w WHERE single = 'i can go deep'\nNeuralSQL2: SELECT `peak chart positions\\nus` FROM w WHERE single = 'don't rush'", -15.658675869590002]]}, "1105": {"question": "in which years were there only 1 loss?", "gold_answer": ["2006", "2009", "2014"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '%-1'", -4.46511726881], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '%-1'", -4.46511726881], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '% - 1'", -5.597048394369999], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '% - 1'", -5.598221408369999], [" SELECT COUNT(*) FROM w WHERE `w\u2013l` LIKE '% - 1'", -6.076259716069999], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '% \u2013 1'", -6.211611798369999], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '% - 1'", -7.3016023703699995], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '%\u20131'", -8.42902599537], [" SELECT COUNT(*) FROM w WHERE `w\u2013l` LIKE '1 - %'", -10.47691076607], [" SELECT COUNT(*) FROM w WHERE `w\u2013l` LIKE '%\u20131'", -19.563523221769998]]}, "1146": {"question": "what are the total number of players from france?", "gold_answer": ["2"], "pred_answer": {"0": [[12], [0], "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.95939491872], [" SELECT COUNT(*) FROM w WHERE current club = 'france'", -3.3318987135700002], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -6.19265620975], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -6.19548749553], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -6.696741395529999], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -6.6995805097500005], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -6.7436573097500006], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -6.7436573097500006], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -6.7436573097500006], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -6.847353309750001]]}, "1187": {"question": "how many passengers were handled in an airport in spain?", "gold_answer": ["217,548"], "pred_answer": {"0": [[217548], [217548], [217548], [217548], [217548], [217548], [217548], [217548], [217548], [217548]]}, "nsql": [[" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -2.60951295853], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -2.60951295853], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -2.60951295853], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -2.8446969955299997], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -3.56284441653], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -3.56284441653], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain - %'", -3.56284441653], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -4.66898044553], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -5.26044313553], [" SELECT SUM(`passengers handled`) FROM w WHERE airport LIKE 'spain%'", -5.66490683553]]}, "1228": {"question": "out of these drivers: nigel mansell, al unser, jr., michael schumacher, and jeff gordon, all but one has more than one espy award. who only has one espy award?", "gold_answer": ["Al Unser, Jr."], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "3": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "4": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -5.257966749244], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -6.560916482499001], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -6.690918904363], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -6.734693190499001], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -7.023740282499], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -7.07234955791], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -7.661832571243999], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -8.019886546647], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -14.990143790919], [" SELECT COUNT(*) FROM w WHERE driver = 'nigel mansell'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'al unser, jr.'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'michael schumacher'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'\n```", -16.365390025197]]}, "1269": {"question": "what is the number of stars that have a maximum magnitude less than zero?", "gold_answer": ["5"], "pred_answer": {"0": [[19], [19], [19], [19], [19], [19], [19], [19], [19], [19]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -3.6375694532000002], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -3.6379422544799995], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -5.21469664788], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -5.21469664788], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -5.21690228911], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -5.63105774788], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -6.80021434788], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -6.88906118911], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -7.32459074788], [" SELECT COUNT(*) FROM w WHERE `maximum\\nmagnitude` < 0", -8.23980954788]]}, "10": {"question": "how many gold medals did this country win during these olympics?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -3.3589419664999998], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -3.5806263775], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -3.5806263775], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -3.9748537625], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -4.628244704300001], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -5.3343813175], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -5.8339819293], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -8.1340859493], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -8.9004291493], [" SELECT COUNT(*) FROM w WHERE medal = 'gold'", -12.195827249299999]]}, "51": {"question": "which game had a higher total number of goals scored, 1 or 16?", "gold_answer": ["16"], "pred_answer": {"0": [[0], [0], [1], [2, 3, 2, 0, 1, 2], [0], [1], [0], [0], [0], [1]], "1": [[2], [2], [23], [0], [2], [23], [0], [0], [0], [20]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE tie no = '1'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE tie no = '16'", -6.465651409438702], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE row_id = 0\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE row_id = 3", -7.931836309274602], [" SELECT SUM(CAST(REPLACE(score,'\u2013','') AS INT)) FROM w WHERE tie no = '1'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(score,'\u2013','') AS INT)) FROM w WHERE tie no = '16'", -8.069167835096], [" SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) FROM w WHERE tie no = 'replay'\nNeuralSQL2: SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) FROM w WHERE tie no = '14'", -8.902232717225301], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '\u2013') - 1) AS INT)) FROM w WHERE row_id = 0\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '\u2013') - 1) AS INT)) FROM w WHERE row_id = 3", -9.844644458946], [" SELECT SUM(CAST(REPLACE(score, '\u2013', '') AS INT)) FROM w WHERE tie no = '1'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(score, '\u2013', '') AS INT)) FROM w WHERE tie no = '16'", -11.225646415883], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE tie no = '1'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE tie no = '16'", -14.320955685211], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE tie no = '1'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE tie no = '16'", -14.386503073911001], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE tie no = 'replay'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE tie no = '14'", -14.766647713267998], [" SELECT SUM(CAST(REPLACE(score, '\u2013', '') AS INT)) FROM w WHERE row_id = 0\nNeuralSQL2: SELECT SUM(CAST(REPLACE(score, '\u2013', '') AS INT)) FROM w WHERE row_id = 3", -16.86634208192]]}, "92": {"question": "how many of his operettas were 3 acts?", "gold_answer": ["13"], "pred_answer": {"0": [[12], [12], [12], [0], [12], [12], [12], [12], [12], [12]], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[25]], "5": ["<error>"], "6": [[10]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE sub\u00addivisions = '3 acts'", -2.79285067066], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '3 acts'", -4.05342141656], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '3 acts'", -4.06403016391], [" SELECT COUNT(*) FROM w WHERE genre = '3 acts'", -5.39364107446], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '3 acts'", -5.61124243453], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '3 acts'", -5.624792708845], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '3 acts'", -5.625738816445], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '3 acts'", -5.625738816445], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '3 acts'", -5.625738816445], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '3 acts'\nQ2: {how many = a2} of his operettas were performed at the carltheater.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` = 'vienna, carltheater'\nQ3: {how many = a3} of his operettas were performed in vienna.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE 'vienna%'\nQ4: {how many = a4} of his operettas were performed in vienna and were 3 acts.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE 'vienna%' AND `sub\u00addivisions` = '3 acts'\nQ5: {how many = a5} of his operettas were performed in vienna and were 3 acts and were performed at the carltheater.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE 'vienna%' AND `", -35.63675733915002]]}, "133": {"question": "is there a points difference between the 9th position and 19th position on the list?", "gold_answer": ["No"], "pred_answer": {"0": [[null], [null], [null], [null], [null], [null], [null], [null], [null], []], "1": ["<error>", [null]]}, "nsql": [[" SELECT (SELECT points FROM w WHERE pos = 9) - (SELECT points FROM w WHERE pos = 19)", -10.523618488040002], [" SELECT (SELECT points FROM w WHERE pos = 9) - (SELECT points FROM w WHERE pos = 19)", -10.572233816810002], [" SELECT (SELECT points FROM w WHERE pos = 9) - (SELECT points FROM w WHERE pos = 19)", -10.574278595040003], [" SELECT (SELECT points FROM w WHERE pos = 9) - (SELECT points FROM w WHERE pos = 19)\n```", -11.227833009840001], [" SELECT (SELECT points FROM w WHERE pos = 9) - (SELECT points FROM w WHERE pos = 19)", -11.43140318804], [" SELECT (SELECT points FROM w WHERE pos = 9) - (SELECT points FROM w WHERE pos = 19)", -11.58797457951], [" SELECT ABS(SUM(points) - SUM(points)) FROM w WHERE pos IN (9, 19)", -13.11134227826], [" SELECT ABS(SUM(points) - SUM(points)) FROM w WHERE pos IN (9, 19)", -13.237990875419998], [" SELECT points FROM w WHERE pos = 9\nNeuralSQL2: SELECT points FROM w WHERE pos = 19", -18.07009288254], [" SELECT w.points - w2.points FROM w INNER JOIN w AS w2 ON w.row_id = w2.row_id WHERE w.pos = 9 AND w2.pos = 19", -21.241381883590005]]}, "174": {"question": "what is the number of total bronze medals that germany has won?", "gold_answer": ["1"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -2.3676275868493], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -2.3676275868493], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -2.3676275868493], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -2.3703512123493007], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -2.3703512123493007], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -4.05033392922], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -4.053134769720001], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -4.053134769720001], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -4.053134769720001], [" SELECT SUM(CAST(REPLACE(bronze,' medal','') AS INT)) FROM w WHERE bronze LIKE '%germany%'", -10.57790117648]]}, "215": {"question": "which party has the most membership?", "gold_answer": ["Liberal"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], ["liberal", 19], [19], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT party) FROM w", -2.5978608458599997], [" SELECT COUNT(DISTINCT party) FROM w", -2.5978608458599997], [" SELECT COUNT(DISTINCT party) FROM w", -2.5978608458599997], [" SELECT COUNT(DISTINCT party) FROM w", -2.5978608458599997], [" SELECT COUNT(DISTINCT party) FROM w", -3.70455397986], [" SELECT COUNT(DISTINCT party) FROM w", -3.70455397986], [" SELECT COUNT(DISTINCT party) FROM w", -3.70455397986], [" SELECT party, COUNT(*) FROM w GROUP BY party ORDER BY COUNT(*) DESC LIMIT 1", -7.632302300329999], [" SELECT COUNT(*) FROM w GROUP BY party ORDER BY COUNT(*) DESC LIMIT 1", -14.433069001179998], [" SELECT COUNT(DISTINCT(party)) FROM w", -15.767205212859999]]}, "256": {"question": "how many euro 2000 qualifying competitions are listed?", "gold_answer": ["4"], "pred_answer": {"0": [[5], [5], [5], [1], [5], [5], [5], [5], [1], [5]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition = 'euro 2000 qualifying'", -2.9630286638000007], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2000 qualifying'", -2.9643269844400004], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2000 qualifying'", -2.9643269844400004], [" SELECT COUNT(DISTINCT competition) FROM w WHERE competition LIKE '%euro 2000 qualifying%'", -5.3397497151214015], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2000 qualifying'", -5.664209333570001], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2000 qualifying'", -8.38983077357], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2000 qualifying'", -8.38983077357], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2000 qualifying'", -9.45947827357], [" SELECT COUNT(DISTINCT competition) FROM w WHERE competition LIKE '%euro 2000 qualifying%'", -13.133370681404399], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2000 qualifying'\nQ2: {how many = a2} competitions were played in prague.\nNeuralSQL2: SELECT COUNT(DISTINCT competition) FROM w WHERE venue LIKE '%prague%'\nQ3: {how many = a3} competitions were played in prague or ostrava.\nNeuralSQL3: SELECT COUNT(DISTINCT competition) FROM w WHERE venue LIKE '%prague%' OR venue LIKE '%ostrava%'\nQ4: {how many = a4} competitions were played in prague or ostrava and the result is 2\u20133.\nNeuralSQL4: SELECT COUNT(DISTINCT competition) FROM w WHERE venue LIKE '%prague%' OR venue LIKE '%ostrava%' AND result = '2 - 3'\nQ5: {how many = a5} competitions were played in prague or ostrava and the result is 2\u20133 or the score is 2\u20130.\nNeuralSQL5: SELECT COUNT(DISTINCT competition) FROM w WHERE venue", -46.2343546387625]]}, "297": {"question": "what were the total number of laps completed by the 1st position winner?", "gold_answer": ["56"], "pred_answer": {"0": [[56], [56], [56], [56], [56], [56], [56], [56], [56], [56]], "1": ["<error>"], "2": [[20]], "3": ["<error>"], "4": [[4.875]], "5": ["<error>"], "6": [[20]], "7": ["<error>"], "8": [[20]], "9": ["<error>"]}, "nsql": [[" SELECT laps FROM w WHERE pos = '1'", -1.6872588422500001], [" SELECT laps FROM w WHERE pos = '1'", -1.6872588422500001], [" SELECT laps FROM w WHERE pos = '1'", -2.23892955725], [" SELECT laps FROM w WHERE pos = '1'", -2.23892955725], [" SELECT laps FROM w WHERE pos = '1'", -2.23892955725], [" SELECT laps FROM w WHERE pos = '1'", -2.23892955725], [" SELECT laps FROM w WHERE pos = '1'", -2.23892955725], [" SELECT laps FROM w WHERE pos = '1'", -2.23892955725], [" SELECT laps FROM w WHERE pos = '1'", -2.23892955725], [" SELECT laps FROM w WHERE pos = '1'\nQ2: the number of time/retired column is {how many = a2}.\nNeuralSQL2: SELECT COUNT(*) FROM w\nQ3: the average points of all drivers is {how many = a3}.\nNeuralSQL3: SELECT AVG(points) FROM w\nQ4: the number of rows of the table is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w\nQ5: the number of rows of the table is {how many = a5}.\nNeuralSQL5: SELECT COUNT(*) FROM w\n\"\"\"", -52.055136696034026]]}, "300": {"question": "tell me the number of times they competed in guatamala.", "gold_answer": ["5"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.0451396698849997], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.0451396698849997], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.920204846885], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.920204846885], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.920204846885], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.920204846885], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.920204846885], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.921014226425], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%guatamala%'", -2.921014226425], [" SELECT COUNT(*) FROM w WHERE venue LIKE 'guatemala%'", -5.347777662185]]}, "321": {"question": "how many years did he play in less than 16 games?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE games < 16", -2.23369752504], [" SELECT COUNT(*) FROM w WHERE games < 16", -2.23369752504], [" SELECT COUNT(*) FROM w WHERE games < 16", -2.23369752504], [" SELECT COUNT(*) FROM w WHERE games < 16", -2.23369752504], [" SELECT COUNT(*) FROM w WHERE year != 'career' AND games < 16", -3.76198791512], [" SELECT COUNT(*) FROM w WHERE year != 'career' AND games < 16", -3.7619891044], [" SELECT COUNT(*) FROM w WHERE year != 'career' AND games < 16", -3.7619891044], [" SELECT COUNT(*) FROM w WHERE games < 16", -3.8242065640400003], [" SELECT COUNT(DISTINCT year) FROM w WHERE games < 16", -7.5140721720814], [" SELECT COUNT(DISTINCT year) FROM w WHERE games < 16 AND year != 'career'", -14.3162292298314]]}, "338": {"question": "how many times is temagami listedon the list?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.600777029814], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.600777029814], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.600777029814], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.600785984514], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.600785984514], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.600785984514], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.600785984514], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -2.7743464013200003], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -2.7743464013200003], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -2.77435629132]]}, "342": {"question": "how many total medals did argentina win?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"], "2": [[6]], "3": ["<error>"], "4": [[10]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[2]], "9": ["<error>"], "10": [[4]], "11": ["<error>"]}, "nsql": [[" SELECT total FROM w WHERE nation = 'argentina'", -1.7577927338], [" SELECT total FROM w WHERE nation = 'argentina'", -1.7577927338], [" SELECT total FROM w WHERE nation = 'argentina'", -1.7577927338], [" SELECT total FROM w WHERE nation = 'argentina'", -1.7577927338], [" SELECT SUM(total) FROM w WHERE nation = 'argentina'", -5.421217665814001], [" SELECT SUM(total) FROM w WHERE nation = 'argentina'", -5.421217665814001], [" SELECT SUM(total) FROM w WHERE nation = 'argentina'", -5.421217665814001], [" SELECT SUM(total) FROM w WHERE nation = 'argentina'", -8.122057148300001], [" SELECT `total` FROM w WHERE nation = 'argentina'", -12.866566767670001], [" SELECT `total` FROM w WHERE nation = 'argentina'\nQ2: {how many = a2} countries won at least 1 gold medal.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold > 0\nQ3: {how many = a3} countries won at least 1 medal.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE total > 0\nQ4: {how many = a4} countries won at least 1 gold medal but didn't win any silver medal.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0\nQ5: {how many = a5} countries won at least 1 gold medal but didn't win any bronze medal.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE gold > 0 AND bronze = 0\nQ6: {how many = a6} countries won at least 1 gold medal and won at least 1 silver medal.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE gold > 0 AND silver > 0\nQ7: {how many = a7} countries won at least 1 gold medal and won at least 1", -42.69420271247]]}, "379": {"question": "how many episode total are there?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.33676404377], [" SELECT COUNT(*) FROM w", -1.33676404377], [" SELECT COUNT(*) FROM w", -1.33676404377], [" SELECT COUNT(*) FROM w", -1.99292555963], [" SELECT COUNT(*) FROM w", -1.99292555963], [" SELECT COUNT(*) FROM w", -1.99292555963], [" SELECT COUNT(*) FROM w", -1.99292555963], [" SELECT COUNT(*) FROM w", -1.99292555963], [" SELECT COUNT(*) FROM w", -1.99292555963], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} episode title have the word \"mother\".\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `episode title` LIKE '%mother%'\nQ3: {how many = a3} episode title have the word \"mother\" and the word \"goodbye\".\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `episode title` LIKE '%mother%' AND `episode title` LIKE '%goodbye%'\nQ4: {how many = a4} episode title have the word \"mother\" and the word \"goodbye\" and the word \"return\".\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `episode title` LIKE '%mother%' AND `episode title` LIKE '%goodbye%' AND `episode title` LIKE '%return%'\nQ5: {how many = a5} episode title have the word \"mother\" or the word \"goodbye\" or the word \"return\".\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `episode title` LIKE '%mother%' OR `", -32.91957412361098]]}, "383": {"question": "joe hennessy and finbarr delaney both scored how many points?", "gold_answer": ["14"], "pred_answer": {"0": [[14], [14], [14], [3], [3], [3], [3], [3], [3], [35]], "1": [[14], [14], [14], [1], [1], [1], [1], [1], [1], [111]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'finbarr delaney'", -3.5314214455159973], [" SELECT SUM(total) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'finbarr delaney'", -3.5314214455159973], [" SELECT SUM(total) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'finbarr delaney'", -3.5314214455159973], [" SELECT SUM(CAST(SUBSTR(tally, 1, INSTR(tally, '-') - 1) AS INT)) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(tally, 1, INSTR(tally, '-') - 1) AS INT)) FROM w WHERE player = 'finbarr delaney'", -5.4788584784660035], [" SELECT SUM(CAST(SUBSTR(tally, 1, INSTR(tally, '-') - 1) AS INT)) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(tally, 1, INSTR(tally, '-') - 1) AS INT)) FROM w WHERE player = 'finbarr delaney'", -5.4789741202660025], [" SELECT SUM(CAST(SUBSTR(tally, 1, INSTR(tally, '-') - 1) AS INT)) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(tally, 1, INSTR(tally, '-') - 1) AS INT)) FROM w WHERE player = 'finbarr delaney'", -5.4789741202660025], [" SELECT SUM(CAST(REPLACE(tally, '-', ' + ') AS INT)) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(tally, '-', ' + ') AS INT)) FROM w WHERE player = 'finbarr delaney'", -7.2983486991939985], [" SELECT SUM(CAST(REPLACE(SUBSTR(tally, 1, INSTR(tally, '-') - 1), '-', '') AS INT)) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(SUBSTR(tally, 1, INSTR(tally, '-') - 1), '-', '') AS INT)) FROM w WHERE player = 'finbarr delaney'", -9.233714328912], [" SELECT SUM(CAST(REPLACE(`tally`, '-', ' + ') AS INT)) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`tally`, '-', ' + ') AS INT)) FROM w WHERE player = 'finbarr delaney'", -9.47676782793399], [" SELECT SUM(CAST(REPLACE(tally, '-', '') AS INT)) FROM w WHERE player = 'joe hennessy'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(tally, '-', '') AS INT)) FROM w WHERE player = 'finbarr delaney'", -14.901137499468998]]}, "424": {"question": "what are the number of schools with more than 2 cws appearances?", "gold_answer": ["3"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [3], [5], [3], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `cws appearances` > 2", -3.0648455607320004], [" SELECT COUNT(*) FROM w WHERE `cws appearances` > 2", -3.0648455607320004], [" SELECT COUNT(*) FROM w WHERE `cws appearances` > 2", -3.0684430998859993], [" SELECT COUNT(*) FROM w WHERE `cws appearances` > 2", -4.56609079235], [" SELECT COUNT(*) FROM w WHERE `cws appearances` > 2", -4.56974818335], [" SELECT COUNT(*) FROM w WHERE `cws appearances` > 2", -4.56974818335], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(cws appearances, 1, INSTR(cws appearances, ';') - 1) AS INT) > 2", -4.71825659189], [" SELECT COUNT(*) FROM w WHERE cws appearances > 2", -5.47722679235], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`cws appearances`,'; (last: )','') AS INT) > 2", -8.11854161816], [" SELECT COUNT(DISTINCT(school)) FROM w WHERE `cws appearances` > 2", -12.990797653114]]}, "465": {"question": "how many years passed between the historic listing of public libraries in quincy and bronson?", "gold_answer": ["12"], "pred_answer": {"0": ["<error>", "<error>", "<error>", [1988], "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": [[2000], "<error>", "<error>"]}, "nsql": [[" SELECT DATEDIFF(`listing date`, (SELECT `listing date` FROM w WHERE city = 'quincy')) FROM w WHERE city = 'bronson'", -9.28008669297], [" SELECT DATEDIFF(`listing date`, (SELECT `listing date` FROM w WHERE city = 'quincy')) FROM w WHERE city = 'bronson'", -9.28008669297], [" SELECT DATEDIFF(`listing date`, '1980-03-19') FROM w WHERE city = 'bronson'", -10.97510663786], [" SELECT CAST(SUBSTR(listing date, 1, 4) AS INT) FROM w WHERE city = 'quincy'\nNeuralSQL2: SELECT CAST(SUBSTR(listing date, 1, 4) AS INT) FROM w WHERE city = 'bronson'", -11.696221102952396], [" SELECT DATEDIFF(`listing date`, '1980-03-19') FROM w WHERE city = 'quincy' AND city = 'bronson'", -12.059025593489999], [" SELECT DATEDIFF(`listing date`, (SELECT `listing date` FROM w WHERE city = 'quincy')) AS diff FROM w WHERE city = 'bronson'", -12.875370619436], [" SELECT DATEDIFF(MAX(`listing date`), MIN(`listing date`)) FROM w WHERE name LIKE '%library%' AND (city = 'quincy' OR city = 'bronson')", -14.40852736154], [" SELECT DATEDIFF(`listing date`, 'bronson') FROM w WHERE name LIKE '%library%' AND city = 'quincy'", -15.154224120609996], [" SELECT DATEDIFF(`listing date`,'1980-03-19 00:00:00') FROM w WHERE city = 'quincy'\nNeuralSQL2: SELECT DATEDIFF(`listing date`,'1966-03-09 00:00:00') FROM w WHERE city = 'bronson'", -15.929681492875998], [" SELECT DATEDIFF(`listing date`, '1980-03-19 00:00:00') FROM w WHERE city = 'quincy'\nNeuralSQL2: SELECT DATEDIFF(`listing date`, '1980-03-19 00:00:00') FROM w WHERE city = 'bronson'", -16.566558045969998]]}, "506": {"question": "how many children were born in february?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], "<error>", [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '%-02-%'", -3.19200223128], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '%-02-%'", -3.19200223128], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '%-02-%'", -3.19200223128], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '%-02-%'", -3.19200223128], [" SELECT COUNT(*) FROM w WHERE birth date LIKE '%-02-%'", -3.57306475678], [" SELECT COUNT(*) FROM w WHERE birth date LIKE '%-02-%'", -3.57306475678], [" SELECT COUNT(*) FROM w WHERE birth date LIKE '%-02-%'", -3.57306475678], [" SELECT COUNT(*) FROM w WHERE MONTH(birth date) = 2", -4.134432229110001], [" SELECT COUNT(*) FROM w WHERE birth date LIKE '%-02-%'", -4.53783438578], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '%-02-%'", -4.939447259520001]]}, "547": {"question": "how many total gold medals were won by weightlifting?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -1.6370813919899998], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -1.6370813919899998], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -1.6370813919899998], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -1.6370813919899998], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -1.6370813919899998], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -1.6370813919899998], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -1.6370813919899998], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -1.6373751879199996], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -2.5458874399900004], [" SELECT COUNT(*) FROM w WHERE medal = 'gold' AND sport = 'weightlifting'", -2.5458874399900004]]}, "588": {"question": "how many station are located in kita-ku, okayama?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -1.6592011848000001], [" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -1.6592011848000001], [" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -1.6592011848000001], [" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -1.6592011848000001], [" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -1.6592011848000001], [" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -1.6592011848000001], [" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -1.6592011848000001], [" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -4.5710451648], [" SELECT COUNT(*) FROM w WHERE location = 'kita-ku, okayama'", -8.995332786110001], [" SELECT COUNT(*) FROM w WHERE `location` = 'kita-ku, okayama'", -10.44738968332]]}, "629": {"question": "how many models use a usb docking cable?", "gold_answer": ["2"], "pred_answer": {"0": ["<error>", "<error>", [1], "<error>", [1], [1], [1], "<error>", [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `docking cable` LIKE 'usb%'", -5.0068003235], [" SELECT COUNT(*) FROM w WHERE `docking cable` LIKE 'usb%'", -5.9970648582], [" SELECT COUNT(*) FROM w WHERE `model 01` = 'usb 1.1' AND `model 01+` = 'usb 2' AND `model 02` = 'replaced by dongle or dock' AND `model e2` = 'replaced by dongle or dock' AND `model 2+ (pre-production)` = 'replaced by dongle or dock' AND `model 03 (china copy)` = 'replaced by dongle or dock'", -6.679246785717998], [" SELECT COUNT(*) FROM w WHERE `docking cable` = 'usb 1.1'", -7.415014641800001], [" SELECT COUNT(*) FROM w WHERE `model 01` = 'usb 1.1' OR `model 01+` = 'usb 2' OR `model 02` = 'replaced by dongle or dock' OR `model e2` = 'replaced by dongle or dock' OR `model 2+ (pre-production)` = 'replaced by dongle or dock' OR `model 03 (china copy)` = 'replaced by dongle or dock'", -7.528674914072997], [" SELECT COUNT(*) FROM w WHERE `model 01` = 'usb 1.1' OR `model 01+` = 'usb 2'", -10.27831862353], [" SELECT COUNT(*) FROM w WHERE `model 01` = 'usb 1.1' OR `model 01+` = 'usb 2'", -10.48926272353], [" SELECT COUNT(*) FROM w WHERE `docking cable` = 'usb 1.1'", -10.546341605650001], [" SELECT COUNT(*) FROM w WHERE `model 01` LIKE 'usb %' OR `model 01+` LIKE 'usb %' OR `model 02` LIKE 'usb %' OR `model e2` LIKE 'usb %' OR `model 2+ (pre-production)` LIKE 'usb %' OR `model 03 (china copy)` LIKE 'usb %'", -10.667629792520001], [" SELECT COUNT(*) FROM w WHERE component = 'docking cable' AND (model 01 = 'usb 1.1' OR model 01+ = 'usb 1.1' OR model 02 = 'usb 1.1' OR model e2 = 'usb 1.1' OR `model 2+ (pre-production)` = 'usb 1.1' OR `model 03 (china copy)` = 'usb 1.1')", -11.310003052410002]]}, "670": {"question": "how many of the institutions are located in london?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'london'", -2.82208992572], [" SELECT COUNT(*) FROM w WHERE location = 'london'", -3.98735675297], [" SELECT COUNT(*) FROM w WHERE location = 'london'", -3.98735675297], [" SELECT COUNT(*) FROM w WHERE location = 'london'", -3.98735675297], [" SELECT COUNT(*) FROM w WHERE location = 'london'", -3.98735675297], [" SELECT COUNT(*) FROM w WHERE location = 'london'", -3.98735675297], [" SELECT COUNT(*) FROM w WHERE location = 'london'", -4.849607352970001], [" SELECT COUNT(*) FROM w WHERE location = 'london'", -4.90736905297], [" SELECT COUNT(*) FROM w WHERE location = 'london'", -5.3709476916300005], [" SELECT COUNT(*) FROM w WHERE location = 'london'\nQ2: {how many = a2} of the institutions are established before the year of 1900.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE established < 1900\nQ3: {how many = a3} of the institutions are located in london and established before the year of 1900.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'london' AND established < 1900\nQ4: {how many = a4} of the institutions are located in london and established before the year of 1900 and have a vice-chancellor named professor mark smith.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE location = 'london' AND established < 1900 AND vice-chancellor = 'professor mark smith'\nQ5: {how many = a5} of the institutions are located in london and established before the year of 1900 and have a vice-chancellor named professor mark smith and have a total number of students larger than 10000.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE location = 'london'", -43.89252214994498]]}, "711": {"question": "how many winners are there?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": ["<error>"], "2": [[8]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[6]], "9": ["<error>"], "10": [[3]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.9165451836599998], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.9165451836599998], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.9165451836599998], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.9165451836599998], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.9165451836599998], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -6.1494522832700005], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -10.054753781270001], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -10.06462248127], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -12.76879598127], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner'\nQ2: {how many = a2} runner-up.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nQ3: {how many = a3} records have a date in 2010.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE '2010-%-%'\nQ4: {how many = a4} records have a date in 2010 and a surface of clay.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `date` LIKE '2010-%-%' AND surface = 'clay'\nQ5: {how many = a5} records have a no. larger than 6.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `no.` > 6\nQ6: {how many = a6} records have a no. larger than 6 and a surface of clay.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `no.` > 6 AND surface = 'clay'\nQ7: {how many = a7} records", -41.68597595038003]]}, "752": {"question": "on average how many times was w listed as the result?", "gold_answer": ["10"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'w'", -3.698133859781], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -5.132803221391], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -5.132803221391], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -6.098825348390999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -7.492560708391], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.104048248390999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.104048248390999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -8.563122448390999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -9.522371248391], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -9.781538148391]]}, "793": {"question": "how many sheriff's have the last name biggs?", "gold_answer": ["1"], "pred_answer": {"0": [[2], [2], [2], [2], [0], [0], [2], [2], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE sheriff LIKE '%biggs' OR sheriff_2 LIKE '%biggs' OR sheriff_3 LIKE '%biggs'", -3.4150398170600003], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% biggs' OR sheriff_2 LIKE '% biggs' OR sheriff_3 LIKE '% biggs'", -3.423978434840001], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% biggs' OR sheriff_2 LIKE '% biggs' OR sheriff_3 LIKE '% biggs'", -3.4244644579], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% biggs' OR sheriff_2 LIKE '% biggs' OR sheriff_3 LIKE '% biggs'", -3.4244644579], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '%biggs'", -4.091694861480001], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% biggs'", -5.76838326836], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '%biggs' OR sheriff_2 LIKE '%biggs' OR sheriff_3 LIKE '%biggs'", -5.96007095393], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '%biggs' OR sheriff_2 LIKE '%biggs' OR sheriff_3 LIKE '%biggs'", -5.96007095393], [" SELECT COUNT(DISTINCT sheriff) FROM w WHERE sheriff LIKE '% biggs'", -7.128941789705], [" SELECT COUNT(DISTINCT sheriff) FROM w WHERE sheriff LIKE '%biggs'", -13.815243536384997]]}, "834": {"question": "how many kw was the radio in davao?", "gold_answer": ["10 kW"], "pred_answer": {"0": [["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], [10]]}, "nsql": [[" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.8312529062849998], [" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.8312529062849998], [" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.8312529062849998], [" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.8312529062849998], [" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.831820485125], [" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.831820485125], [" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.831820485125], [" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.831820485125], [" SELECT `power (kw)` FROM w WHERE location = 'davao'", -1.831820485125], [" SELECT CAST(REPLACE(`power (kw)`,'kw','') AS INT) FROM w WHERE location = 'davao'", -7.7353316243200005]]}, "875": {"question": "chipper adams and justin beyendeza have how mnay wins?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND `co-driver` = 'justin beyendeza'", -2.7296237163000003], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND `co-driver` = 'justin beyendeza'", -2.72991587072], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -5.49328851492], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -6.15025965822], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -6.152272656919999], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -7.56346416592], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -9.096455046220001], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -10.07465054692], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -10.397872746920001], [" SELECT COUNT(*) FROM w WHERE driver = 'chipper adams' AND co-driver = 'justin beyendeza'", -10.71092774622]]}, "916": {"question": "what were the total number of times the romanians had a population percentage above 70%?", "gold_answer": ["9"], "pred_answer": {"0": [[7], [7], [7], [2], [2], [9], [9], [2], [2], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(romanians,'%','') AS INT) > 70", -3.6756526608639994], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(romanians, '%', '') AS INT) > 70", -4.094599138864], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(romanians, '%', '') AS INT) > 70", -4.094599138864], [" SELECT COUNT(*) FROM w WHERE `romanians` LIKE '%70%'", -4.265391244084], [" SELECT COUNT(*) FROM w WHERE `romanians` LIKE '%70%'", -4.265391244084], [" SELECT COUNT(*) FROM w WHERE `romanians` > '70%'", -4.329151042873999], [" SELECT COUNT(*) FROM w WHERE `romanians` > '70%'", -4.329151042873999], [" SELECT COUNT(*) FROM w WHERE romanians LIKE '%70%'", -5.061009026693999], [" SELECT COUNT(*) FROM w WHERE `romanians` LIKE '%70%'", -5.760501008084], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`romanians`,'%','') AS INT) > 70", -8.613349256284]]}, "957": {"question": "which country had the most roller coasters over 80 feet in height in 2008?", "gold_answer": ["China"], "pred_answer": {"0": [[6], [0], [], "<error>", [0], [0], [0], [0], "<error>", [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE height\\nm (ft) > 80", -6.345616297039999], [" SELECT COUNT(DISTINCT country) FROM w WHERE `height\\nm (ft)` > 80 AND `completed` = '2008'", -7.030023838724], [" SELECT country FROM w WHERE height\\nm (ft) > 80 AND completed = '2008'", -7.851765224289999], [" SELECT COUNT(DISTINCT country) FROM w WHERE height > 80 AND completed = '2008'", -8.306095046704], [" SELECT COUNT(*) FROM w WHERE height\\nm (ft) > 80 AND completed = '2008'", -9.262097826989999], [" SELECT COUNT(*) FROM w WHERE height\\nm (ft) > 80 AND completed = '2008'\n```", -9.75794306219], [" SELECT COUNT(DISTINCT country) FROM w WHERE `height\\nm (ft)` > 80 AND `completed` = '2008'", -10.885500569404002], [" SELECT COUNT(*) FROM w WHERE height\\nm (ft) > 80 AND completed = 2008", -11.373451781054], [" SELECT country FROM w WHERE height > 80 AND completed = 2008 GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1", -11.43879010473], [" SELECT COUNT(DISTINCT country) FROM w WHERE height\\nm (ft) LIKE '% (80)%' AND completed LIKE '%2008%'", -12.331684477104002]]}, "960": {"question": "what was the cause of the most deaths?", "gold_answer": ["Cause undetermined"], "pred_answer": {"0": [[14356], [14356], [14356], [14356], "<error>", "<error>", "<error>", [14356], [14356], [14356]], "1": [[58256], [58256], [58256], [58256], "<error>", "<error>", "<error>", [58256], [58256], [58256]]}, "nsql": [[" SELECT total FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT total FROM w WHERE description = 'violent deaths'", -3.747958941439999], [" SELECT SUM(total) FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'violent deaths'", -4.080664694009998], [" SELECT SUM(total) FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'violent deaths'", -4.080664694009998], [" SELECT SUM(total) FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'violent deaths'", -4.080664694009998], [" SELECT `total unsolved cases` FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT `total unsolved cases` FROM w WHERE description = 'violent deaths'", -5.100529406880001], [" SELECT `total unsolved cases` FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT `total unsolved cases` FROM w WHERE description = 'violent deaths'", -5.1008864830060014], [" SELECT SUM(`cause undetermined`) FROM w\nNeuralSQL2: SELECT SUM(`total unsolved cases`) FROM w", -6.5858954780899985], [" SELECT `total` FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT `total` FROM w WHERE description = 'violent deaths'", -9.132346694389998], [" SELECT `total` FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT `total` FROM w WHERE description = 'violent deaths'", -14.149223994389999], [" SELECT SUM(total) FROM w WHERE description LIKE '%suicides%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description LIKE '%violent deaths%'", -14.892533129480002]]}, "981": {"question": "how many times was the number one position earned?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.451689082635], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.451689082635], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.454464291475], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.454464291475], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.454464291475], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.454464291475], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -3.775924108145], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -3.7804690245350003], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -5.138289290945001], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -6.5538111991750005]]}, "998": {"question": "how many women have been elected mayor of seattle, washington?", "gold_answer": ["1"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [57], [0], [17], [0], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name LIKE '%women%'", -3.2706257444999998], [" SELECT COUNT(*) FROM w WHERE name LIKE '%women%'", -3.2706257444999998], [" SELECT COUNT(*) FROM w WHERE name LIKE '%women%'", -3.2706257444999998], [" SELECT COUNT(*) FROM w WHERE name LIKE '%woman%'", -3.39652324836], [" SELECT COUNT(*) FROM w WHERE name LIKE '%women%'", -5.4603141088400005], [" SELECT COUNT(*) FROM w WHERE name LIKE '% %'", -6.5691676900900005], [" SELECT COUNT(*) FROM w WHERE name LIKE '%woman%' AND elected LIKE 'elected%'", -7.8501654040399975], [" SELECT COUNT(*) FROM w WHERE name LIKE '% %' AND name NOT LIKE '% % %'", -9.926247740840001], [" SELECT COUNT(*) FROM w WHERE name LIKE '%woman%' OR name LIKE '%woman%'", -10.919211075340003], [" SELECT COUNT(*) FROM w WHERE name LIKE '% %' AND name NOT LIKE '% % %' AND name NOT LIKE '% % % %' AND name NOT LIKE '% % % % %' AND name NOT LIKE '% % % % % %' AND name NOT LIKE '% % % % % % %' AND name NOT LIKE '% % % % % % % %' AND name NOT LIKE '% % % % % % % % %' AND name NOT LIKE '% % % % % % % % % %' AND name NOT LIKE '% % % % % % % % % % %' AND name NOT LIKE '% % % % % % % % % % % %' AND name NOT LIKE '% % % % % % % % % % % % %' AND name NOT LIKE '% % % % % % % % % % % % % %' AND name NOT LIKE '% % % % % % % % % % % % % % %' AND name NOT LIKE '% % % % % % % % % % % % % % % %' AND name NOT LIKE '% % % % % % % % % % % % %", -14.208592731870013]]}, "1002": {"question": "how many total points were scored in the second round proper?", "gold_answer": ["45"], "pred_answer": {"0": [[30], [30], [30], [30], [30], [30], [20], [20], [30], [null]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w", -4.7536166168400005], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w", -5.182467058951001], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w", -5.190833072959999], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w", -5.190833072959999], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, ' - ') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w", -5.704152401553], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w", -7.221542761084001], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE tie no NOT LIKE 'replay'", -8.09633144102], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE tie no <> 'replay'", -9.215754385814003], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE tie no NOT IN ('1st qualifying round', '2nd qualifying round', '3rd qualifying round', '4th qualifying round')", -21.711821329213997], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, ' - ') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE tie no LIKE '%' AND date >= '1921-12-31' AND date < '1922-01-01'", -24.760364910716]]}, "1039": {"question": "what is the total number of class c (championship) teams?", "gold_answer": ["21"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -1.6513063026749997], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -1.6513063026749997], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -1.6513063026749997], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -1.6513063026749997], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -1.6513063026749997], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -1.6513063026749997], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -1.6513063026749997], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -1.6513063026749997], [" SELECT COUNT(DISTINCT team) FROM w WHERE class = 'c'", -2.6516560766749997], [" SELECT COUNT(DISTINCT(team)) FROM w WHERE class = 'c'", -3.007863374675]]}, "1043": {"question": "who placed higher, bradl or gadea?", "gold_answer": ["Sergio Gadea"], "pred_answer": {"0": [[0], [0], [], [], [], [], [], [], [], []], "1": [[0], [0], [], [], [], [], [], [], [], []]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rider = 'gadea'", -3.4025341450700006], [" SELECT COUNT(*) FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rider = 'gadea'", -3.402695272560001], [" SELECT pos FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'gadea'", -4.517101003391999], [" SELECT pos FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'gadea'", -6.7872764040460005], [" SELECT pos FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'gadea'", -7.720472081296], [" SELECT pos FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'gadea'", -7.858879770076], [" SELECT pos FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'gadea'", -8.434034770076], [" SELECT pos FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'gadea'", -9.222771770076], [" SELECT pos FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'gadea'", -10.182756381296], [" SELECT pos FROM w WHERE rider = 'bradl'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'gadea'", -13.581584410776]]}, "1084": {"question": "what is the total amount of winnings for the united states in gold, silver and bronze?", "gold_answer": ["9"], "pred_answer": {"0": [[1], [1], [1], [1], [0], [0], [0], [0], [0], [0]], "1": [[6], [6], [6], [6], [0], [0], [0], [0], [0], [0]], "2": [[2], [2], [2], [2], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%(usa)%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%(usa)%'", -2.827362198659999], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%(usa)%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%(usa)%'", -2.82934316212], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%(usa)%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%(usa)%'", -2.858475855639999], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%(usa)%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%(usa)%'", -2.858491105761], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%united states%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%united states%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%united states%'", -9.030212419447], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%united states%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%united states%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%united states%'", -9.030212419447], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%united states%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%united states%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%united states%'", -10.432656827327], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%united states%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%united states%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%united states%'", -12.303378909447], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%united states%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%united states%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%united states%'", -12.330580809447], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%united states%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver LIKE '%united states%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze LIKE '%united states%'", -12.971810009447]]}, "1125": {"question": "who had the most wins in the 1950's: kansas or kansas state?", "gold_answer": ["Kansas"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year >= 1950 AND year < 1960 AND winning team = 'kansas'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year >= 1950 AND year < 1960 AND winning team = 'kansas state'", -4.5869227099800005], [" SELECT COUNT(*) FROM w WHERE year >= 1950 AND year < 1960 AND winning team = 'kansas'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year >= 1950 AND year < 1960 AND winning team = 'kansas state'", -4.598845620836], [" SELECT COUNT(*) FROM w WHERE winning team = 'kansas' AND year BETWEEN 1950 AND 1959\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winning team = 'kansas state' AND year BETWEEN 1950 AND 1959", -4.824885005165999], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas' AND `year` BETWEEN 1950 AND 1959\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas state' AND `year` BETWEEN 1950 AND 1959", -5.346141170630003], [" SELECT COUNT(*) FROM w WHERE winning team = 'kansas' AND year LIKE '195%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winning team = 'kansas state' AND year LIKE '195%'", -6.497194085049998], [" SELECT COUNT(*) FROM w WHERE winning team = 'kansas' AND year LIKE '195%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winning team = 'kansas state' AND year LIKE '195%'", -6.521684184419999], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas' AND year > 1949 AND year < 1960\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas state' AND year > 1949 AND year < 1960", -7.8439403727800014], [" SELECT COUNT(*) FROM w WHERE winning team = 'kansas' AND `year` > '1950' AND `year` < '1960'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losing team = 'kansas state' AND `year` > '1950' AND `year` < '1960'", -11.594922310320003], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas' AND `year` BETWEEN 1950 AND 1959\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas state' AND `year` BETWEEN 1950 AND 1959\n```", -16.155671973832003], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND (year >= 1950 AND year <= 1959) AND winning team = 'kansas'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND (year >= 1950 AND year <= 1959) AND winning team = 'kansas state'", -20.810882474421994]]}, "1166": {"question": "how many swaras do not have dhaivata in their name?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -10.14626485269], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -10.25216815169], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -10.35264815169], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -10.612858149690002], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -10.806271493690002], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -11.72303939369], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -11.729138193690002], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -12.25685664726], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -14.43500137926], [" SELECT COUNT(*) FROM w WHERE swara NOT LIKE '%dhaivata%'", -16.04717019369]]}, "1207": {"question": "who was the only person to be inducted for wrestling and managing?", "gold_answer": ["Paul Jones"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and managing'", -3.4854215806499997], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and managing'", -3.4854215806499997], [" SELECT COUNT(*) FROM w WHERE `inducted for` LIKE '%wrestling and managing%'", -3.5342976979099996], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and managing'", -5.84499325747], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and managing'", -5.84499325747], [" SELECT COUNT(*) FROM w WHERE `inducted for` LIKE '%wrestling%' AND `inducted for` LIKE '%managing%'", -6.26401171618], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and managing'", -8.230507751200001], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and managing'", -8.533188094469999], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and managing'", -8.533188094469999], [" SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and managing'", -10.48908489447]]}, "1248": {"question": "how many times was josh constable the winner after 2007?", "gold_answer": ["1"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT event) FROM w WHERE winner = 'josh constable'", -3.0967167459400007], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -4.36934290799], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -4.36934290799], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -4.94658534172], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -4.94658534172], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -5.030532007990001], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -5.38842734172], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -6.14277934172], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -6.23137784172], [" SELECT COUNT(*) FROM w WHERE winner = 'josh constable'", -6.31428694172]]}, "30": {"question": "taylor kelly is shorter than 6' 3\", which other player is also shorter than 6' 3\"?", "gold_answer": ["Steven Shepp"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE height < '6\\' 3\"'", -3.494033647566], [" SELECT COUNT(*) FROM w WHERE height < '6\\' 3\"'", -3.494033647566], [" SELECT COUNT(*) FROM w WHERE height < '6\\' 3\"'", -3.494033647566], [" SELECT COUNT(*) FROM w WHERE height < '6\\' 3\"'", -3.494034839745], [" SELECT COUNT(*) FROM w WHERE height < '6\\'3\"'", -3.730692939795], [" SELECT COUNT(*) FROM w WHERE height < '6\\' 3\\\"'", -4.18493923005], [" SELECT COUNT(*) FROM w WHERE height < \"6' 3\"\"", -5.564487853530001], [" SELECT COUNT(*) FROM w WHERE height < '6' 3\"'", -5.694402543539999], [" SELECT COUNT(*) FROM w WHERE `height` < '6\\' 3\\\"'", -5.86150149395], [" SELECT COUNT(*) FROM w WHERE height LIKE '%\\'%\\'%' AND CAST(SUBSTR(height, 1, INSTR(height, '\\'') - 1) AS INT) < 6", -12.190710372080002]]}, "71": {"question": "how many players have a 3 dart average of more than 97?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -1.74153651456], [" SELECT COUNT(*) FROM w WHERE `3-dart average` > 97", -3.88069099432]]}, "112": {"question": "how many more gold medals does china have over france?", "gold_answer": ["26"], "pred_answer": {"0": [[37], [37], [37], [37], [37], [37], [37], [37], [37], [37]], "1": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0110935250150002], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0110935250150002], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0110935250150002], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0121936684150001], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0121936684150001], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.012397438675], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0128691154949996], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0128691154949996], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0131751333649999], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -1.0131751333649999]]}, "153": {"question": "how many weeks did season 15 of comedy central presents span?", "gold_answer": ["9"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15", -4.364640494470001], [" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15", -4.364640494470001], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `no. in\\nseason` = 15", -4.819725458775], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `no. in\\nseason` = 15", -4.822848908475001], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `no. in\\nseason` = 15", -4.827434157275001], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `no. in\\nseason` = 15", -4.827697017975], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `no. in\\nseason` = 15", -7.0018425372749995], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `no. in\\nseason` = 15", -7.4122333812750005], [" SELECT MAX(`no. in\\nseries`) - MIN(`no. in\\nseries`) + 1 FROM w WHERE `no. in\\nseason` = 15", -9.35966112071], [" SELECT COUNT(DISTINCT `air date`) FROM w WHERE `no. in\\nseries` >= '256' AND `no. in\\nseries` <= '271'", -16.330383655445]]}, "194": {"question": "in which year were the most steam locomotives built?", "gold_answer": ["1898"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[4], [4], [4], [4], [4], [4], [4], [3], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `year built` = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898", -2.1896412094569992], [" SELECT COUNT(*) FROM w WHERE `year built` = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898", -2.19558563153], [" SELECT COUNT(*) FROM w WHERE `year built` = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898", -2.197000506741999], [" SELECT COUNT(*) FROM w WHERE `year built` = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898", -2.197000506741999], [" SELECT COUNT(*) FROM w WHERE `year built` = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898", -2.197000506741999], [" SELECT COUNT(*) FROM w WHERE `year built` = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898", -2.197000506741999], [" SELECT COUNT(*) FROM w WHERE year built = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year built = 1898", -2.911447698828], [" SELECT COUNT(*) FROM w WHERE `year built` = 1891 AND `wheel arr.` LIKE '%st'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898 AND `wheel arr.` LIKE '%st'", -5.5391954047], [" SELECT COUNT(*) FROM w WHERE `year built` = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898", -6.0792981768219985], [" SELECT COUNT(*) FROM w WHERE `year built` = 1891\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year built` = 1898", -10.831351100171998]]}, "235": {"question": "which producers produced the majority of songs on this record?", "gold_answer": ["I.N.F.O. & NOVA"], "pred_answer": {"0": [[6], [6], [12], [12], [15], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE producers LIKE '% & %'", -6.548665868700001], [" SELECT COUNT(*) FROM w WHERE producers LIKE '% & %'", -8.409992619686], [" SELECT COUNT(DISTINCT producers) FROM w", -9.89322457041], [" SELECT COUNT(DISTINCT producers) FROM w", -10.36396447941], [" SELECT COUNT(*) FROM w WHERE producers != 'none'", -11.6895621201], [" SELECT COUNT(DISTINCT producers) FROM w", -11.74383912941], [" SELECT COUNT(DISTINCT producers) FROM w", -12.01146887041], [" SELECT COUNT(DISTINCT producers) FROM w", -12.36021287041], [" SELECT COUNT(DISTINCT producers) FROM w", -12.45183984443], [" SELECT COUNT(DISTINCT producers) FROM w", -13.23592842941]]}, "276": {"question": "tell me the number of mines that also produced arsenic.", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -3.2503540409180003], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -3.2503540409180003], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -3.2503540409180003], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -3.2503540409180003], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -3.2503540409180003], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -3.2503540409180003], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -3.2503540409180003], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -4.05928582037], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -4.05928582037], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%arsenic%'", -4.05928582037]]}, "317": {"question": "how many days did hardcore tv #6 take?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>", "<error>", "<error>"], "2": [[41], [3258], [0]], "3": ["<error>", "<error>", "<error>"], "4": [[60.333333333333336], [26], [3]], "5": ["<error>", "<error>", "<error>"], "6": [[29], [0], [0]], "7": ["<error>", "<error>", "<error>"], "8": [[26], "<error>", "<error>"], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT `days held` FROM w WHERE `event` = 'hardcore tv #6'", -3.4492933990899997], [" SELECT SUM(`days held`) FROM w WHERE event = 'hardcore tv #6'", -7.486484301089999], [" SELECT SUM(`days held`) FROM w WHERE `event` LIKE 'hardcore tv #6'", -7.513574349519999], [" SELECT SUM(`days held`) FROM w WHERE `event` LIKE 'hardcore tv #6'", -7.513574349519999], [" SELECT SUM(`days held`) FROM w WHERE `event` LIKE 'hardcore tv #6'", -8.596656649789999], [" SELECT `days held` FROM w WHERE `event` = 'hardcore tv #6'", -9.87015563649], [" SELECT COUNT(*) FROM w WHERE `event` LIKE '%hardcore tv #6%'", -10.93259592019], [" SELECT `days held` FROM w WHERE `event` = 'hardcore tv #6'\nQ2: the number of the tag team champions is {how many = a2}.\nNeuralSQL2: SELECT COUNT(DISTINCT `wrestlers`) FROM w\nQ3: the average days held of the tag team champions is {how many = a3}.\nNeuralSQL3: SELECT AVG(`days held`) FROM w\nQ4: {how many = a4} tag team champions were held in philadelphia, pa.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `location` = 'philadelphia, pa'\nQ5: the number of the tag team champions held in philadelphia, pa is {how many = a5}.\nNeuralSQL5: SELECT COUNT(DISTINCT `wrestlers`) FROM w WHERE `location` = 'philadelphia, pa'\nQ6: the average days held of the tag team champions held in philadelphia, pa is {how many = a6}.\nNeuralSQL6: SELECT AVG(`days held`) FROM w WHERE `location` =", -47.60538920683597], [" SELECT SUM(`days held`) FROM w WHERE event = 'hardcore tv #6'\nQ2: the total days of the tag team champions is {how many = a2}.\nNeuralSQL2: SELECT SUM(`days held`) FROM w\nQ3: The number of tag team champions that take place in philadelphia, pa is {how many = a3}.\nNeuralSQL3: SELECT COUNT(DISTINCT(wrestlers)) FROM w WHERE location = 'philadelphia, pa'\nQ4: The number of tag team champions that take place in philadelphia, pa and the tag team champions is {how many = a4}.\nNeuralSQL4: SELECT COUNT(DISTINCT(wrestlers)) FROM w WHERE location = 'philadelphia, pa' AND event = 'the tag team champions'\nQ5: The number of tag team champions that take place in philadelphia, pa or the tag team champions is {how many = a5}.\nNeuralSQL5: SELECT COUNT(DISTINCT(wrestlers)) FROM w WHERE location = 'philadelphia, pa' OR event = 'the tag", -66.37261178532208], [" SELECT SUM(days held) FROM w WHERE event LIKE '%hardcore tv #6%'\nQ2: {how many = a2} event is in the philippines.\nNeuralSQL2: SELECT COUNT(DISTINCT event) FROM w WHERE location LIKE '%philippines%'\nQ3: {how many = a3} wrestlers have a name start with 'c'.\nNeuralSQL3: SELECT COUNT(DISTINCT wrestlers) FROM w WHERE wrestlers LIKE 'c%'\nQ4: {how many = a4} wrestlers have a name start with 'c' and the date is in the year 2000.\nNeuralSQL4: SELECT COUNT(DISTINCT wrestlers) FROM w WHERE wrestlers LIKE 'c%' AND `date` LIKE '2000%-%-%'\nQ5: {how many = a5} wrestlers have a name start with 'c' and the date is in the year 2000 and the event is in the philippines.\nNeuralSQL5: SELECT COUNT(DISTINCT wrestlers) FROM w WHERE wrestlers LIKE 'c%' AND `date` LIKE '2000%-%-", -72.81094988646502]]}, "320": {"question": "how many images are listed?", "gold_answer": ["6"], "pred_answer": {"0": [[7], [0], [0], [0], [7], [7], [7], "<error>", [7], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.78778888101], [" SELECT COUNT(*) FROM w WHERE description LIKE '%image%'", -5.28327457195], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -5.688161714935002], [" SELECT COUNT(*) FROM w WHERE name LIKE '%image%'", -5.690729187369999], [" SELECT COUNT(*) FROM w WHERE `filledcolumnname` IS NOT NULL", -6.171409525763998], [" SELECT COUNT(*) FROM w WHERE filledcolumnname IS NOT NULL", -6.3065731813040005], [" SELECT COUNT(*) FROM w WHERE `filledcolumnname` != 'none'", -7.947313542409999], [" SELECT COUNT(*) FROM w WHERE image IS NOT NULL", -9.465051036610001], [" SELECT COUNT(*) FROM w WHERE filledcolumnname > 0", -9.53977449123], [" SELECT COUNT(*) FROM w WHERE image IS NOT NULL", -9.60906406855]]}, "341": {"question": "how many consecutive years were there 20 or more assisted tackles?", "gold_answer": ["5"], "pred_answer": {"0": ["<error>", [6], [5], [6], [6], [6], [6], [0], [0], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE assisted_tackles >= 20", -4.957047763787001], [" SELECT COUNT(*) FROM w WHERE `assisted tackles` >= 20", -5.663918660419999], [" SELECT COUNT(*) FROM w WHERE assisted tackles > 20", -6.28310971242], [" SELECT COUNT(*) FROM w WHERE assisted tackles >= 20", -7.39376312872], [" SELECT COUNT(*) FROM w WHERE assisted tackles >= 20", -7.39376312872], [" SELECT COUNT(*) FROM w WHERE assisted tackles >= 20", -7.40423173768], [" SELECT COUNT(*) FROM w WHERE assisted tackles >= 20", -12.529579343719998], [" SELECT COUNT(*) FROM (SELECT year FROM w WHERE assisted tackles > 20 GROUP BY year HAVING COUNT(year) > 1)", -13.215861820187], [" SELECT COUNT(*) FROM w WHERE assisted tackles >= 20 AND row_id IN (SELECT row_id FROM w WHERE row_id = row_id + 1 AND assisted tackles >= 20)", -16.02453278366], [" SELECT COUNT(*) FROM (SELECT year FROM w WHERE assisted tackles >= 20) AS T1, (SELECT year FROM w WHERE assisted tackles >= 20) AS T2 WHERE T1.year = T2.year - 1", -17.952700817940002]]}, "358": {"question": "who lived longer, van vechten or variacoes?", "gold_answer": ["Van Vechten"], "pred_answer": {"0": [[1], [1], [1], ["1880\u20131964"], ["1880\u2013196"], [1880], [1880], [84], [1880], "<error>"], "1": [[0], [0], [0], [], ["1944\u2013198"], [1944], [1944], [40], [], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name = 'van vechten'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'variacoes'", -6.362133166953999], [" SELECT COUNT(*) FROM w WHERE name = 'van vechten'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'variacoes'", -6.362133166953999], [" SELECT COUNT(*) FROM w WHERE name = 'van vechten'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'variacoes'", -6.362133166953999], [" SELECT `lifetime` FROM w WHERE name = 'van vechten'\nNeuralSQL2: SELECT `lifetime` FROM w WHERE name = 'variacoes'", -6.541463913469998], [" SELECT SUBSTR(lifetime, INSTR(lifetime, '-') + 1, LENGTH(lifetime) - (INSTR(lifetime, '-') + 1)) FROM w WHERE name = 'carl van vechten'\nNeuralSQL2: SELECT SUBSTR(lifetime, INSTR(lifetime, '-') + 1, LENGTH(lifetime) - (INSTR(lifetime, '-') + 1)) FROM w WHERE name = 'ant\u00f3nio varia\u00e7\u00f5es'", -8.915331531935495], [" SELECT (CAST(SUBSTR(lifetime, INSTR(lifetime, '-') + 1, LENGTH(lifetime) - (INSTR(lifetime, ' - ') + 1)) AS INT) - CAST(SUBSTR(lifetime, 1, INSTR(lifetime, '-') - 1) AS INT)) FROM w WHERE name = 'carl van vechten'\nNeuralSQL2: SELECT (CAST(SUBSTR(lifetime, INSTR(lifetime, '-') + 1, LENGTH(lifetime) - (INSTR(lifetime, ' - ') + 1)) AS INT) - CAST(SUBSTR(lifetime, 1, INSTR(lifetime, '-') - 1) AS INT)) FROM w WHERE name = 'ant\u00f3nio varia\u00e7\u00f5es'", -8.9814409916338], [" SELECT CAST(SUBSTR(lifetime, INSTR(lifetime, '-') + 1, LENGTH(lifetime) - (INSTR(lifetime, '-') + 1)) AS INT) FROM w WHERE name = 'carl van vechten'\nNeuralSQL2: SELECT CAST(SUBSTR(lifetime, INSTR(lifetime, '-') + 1, LENGTH(lifetime) - (INSTR(lifetime, '-') + 1)) AS INT) FROM w WHERE name = 'ant\u00f3nio varia\u00e7\u00f5es'", -9.528216843204502], [" SELECT CAST(SUBSTR(lifetime, INSTR(lifetime, '\u2013') + 1, LENGTH(lifetime) - (INSTR(lifetime, ' \u2013 ') + 1)) AS INT) - CAST(SUBSTR(lifetime, 1, INSTR(lifetime, '\u2013') - 1) AS INT) FROM w WHERE name = 'carl van vechten'\nNeuralSQL2: SELECT CAST(SUBSTR(lifetime, INSTR(lifetime, '\u2013') + 1, LENGTH(lifetime) - (INSTR(lifetime, ' \u2013 ') + 1)) AS INT) - CAST(SUBSTR(lifetime, 1, INSTR(lifetime, '\u2013') - 1) AS INT) FROM w WHERE name = 'ant\u00f3nio varia\u00e7\u00f5es'", -11.228310226079802], [" SELECT (CAST(SUBSTR(lifetime, INSTR(lifetime, '-') + 1, LENGTH(lifetime) - (INSTR(lifetime, ' - ') + 1)) AS INT) - CAST(SUBSTR(lifetime, 1, INSTR(lifetime, '-') - 1) AS INT)) FROM w WHERE name = 'van vechten'\nNeuralSQL2: SELECT (CAST(SUBSTR(lifetime, INSTR(lifetime, '-') + 1, LENGTH(lifetime) - (INSTR(lifetime, ' - ') + 1)) AS INT) - CAST(SUBSTR(lifetime, 1, INSTR(lifetime, '-') - 1) AS INT)) FROM w WHERE name = 'variacoes'", -11.655261343911901], [" SELECT DATEDIFF(`lifetime`, '1900-01-01') FROM w WHERE name = 'van vechten'\nNeuralSQL2: SELECT DATEDIFF(`lifetime`, '1900-01-01') FROM w WHERE name = 'variacoes'", -12.097427755003995]]}, "362": {"question": "what is the total number of suture materials that have a mono-filament structure?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `filledcolumnname` LIKE '%mono-filament%'", -5.315719135875001], [" SELECT COUNT(*) FROM w WHERE `plain catgut` LIKE '%mono-filament%' OR `chromic catgut` LIKE '%mono-filament%' OR `polyglycolide\\n(p.g.a.)` LIKE '%mono-filament%' OR `polydioxanone (pds)` LIKE '%mono-filament%'", -6.045797863080004], [" SELECT COUNT(*) FROM w WHERE filledcolumnname LIKE '%mono-filament%'", -6.65993031926], [" SELECT COUNT(*) FROM w WHERE `filledcolumnname` = 'mono-filament structure'", -7.441900547010001], [" SELECT COUNT(*) FROM w WHERE (`plain catgut` LIKE '%mono-filament%' OR `chromic catgut` LIKE '%mono-filament%' OR `polyglycolide\\n(p.g.a.)` LIKE '%mono-filament%' OR `polydioxanone (pds)` LIKE '%mono-filament%')", -7.7407883748855015], [" SELECT COUNT(*) FROM w WHERE `filledcolumnname` = 'mono-filament structure'", -8.900893248155002], [" SELECT COUNT(*) FROM w WHERE `filledcolumnname` = 'mono-filament structure'", -8.900893248155002], [" SELECT COUNT(*) FROM w WHERE filledcolumnname LIKE '%mono-filament structure%'", -9.054166027370002], [" SELECT COUNT(*) FROM w WHERE `filledcolumnname` = 'mono-filament structure'", -9.967704990724], [" SELECT COUNT(*) FROM w WHERE filledcolumnname LIKE '%mono-filament%'", -12.40631500849]]}, "399": {"question": "between january, october and december which month had the most rainfall?", "gold_answer": ["October"], "pred_answer": {"0": [["4.9"], ["4.9"], ["12.4"], ["12.4"], "<error>", ["12.4"], "<error>", "<error>", "<error>", "<error>"], "1": [["10.7"], ["10.7"], ["10.7"], ["10.7"], "<error>", ["10.7"], "<error>", "<error>", "<error>", "<error>"], "2": [["7.7"], ["7.7"], ["11.9"], ["11.9"], "<error>", ["11.9"], "<error>", "<error>", "<error>", "<error>"], "3": ["<error>"]}, "nsql": [[" SELECT jan FROM w WHERE month = 'avg. rainy days (\u2265 0.2 mm)'\nNeuralSQL2: SELECT oct FROM w WHERE month = 'avg. rainy days (\u2265 0.2 mm)'\nNeuralSQL3: SELECT dec FROM w WHERE month = 'avg. rainy days (\u2265 0.2 mm)'", -3.6464892407850003], [" SELECT jan FROM w WHERE month = 'avg. rainy days (\u2265 0.2 mm)'\nNeuralSQL2: SELECT oct FROM w WHERE month = 'avg. rainy days (\u2265 0.2 mm)'\nNeuralSQL3: SELECT dec FROM w WHERE month = 'avg. rainy days (\u2265 0.2 mm)'", -3.650767375918001], [" SELECT jan FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'\nNeuralSQL2: SELECT oct FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'\nNeuralSQL3: SELECT dec FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'", -3.657486590726702], [" SELECT jan FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'\nNeuralSQL2: SELECT oct FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'\nNeuralSQL3: SELECT dec FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'", -6.0271356970867025], [" SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'\nNeuralSQL2: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'\nNeuralSQL3: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'average low \u00b0c (\u00b0f)'", -6.436573388435403], [" SELECT jan FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'\nNeuralSQL2: SELECT oct FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'\nNeuralSQL3: SELECT dec FROM w WHERE month = 'avg. precipitation days (\u2265 0.2 mm)'\n```", -6.527796946636701], [" SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'january'\nNeuralSQL2: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'october'\nNeuralSQL3: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'december'", -11.7031746850618], [" SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'january'\nNeuralSQL2: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'october'\nNeuralSQL3: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'december'", -12.179511133121602], [" SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'january'\nNeuralSQL2: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'october'\nNeuralSQL3: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'december'", -13.920735763121602], [" SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'january'\nNeuralSQL2: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'october'\nNeuralSQL3: SELECT `avg. rainy days (\u2265 0.2 mm)` FROM w WHERE month = 'december'", -14.4507402282618]]}, "403": {"question": "how many more runs does john have than albert?", "gold_answer": ["127"], "pred_answer": {"0": [[], [], [], [], [], [], [], [], [], [286]], "1": [[], [], [], [], [], [], [], [], [], [159]]}, "nsql": [[" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.353038580357], [" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.353481351257], [" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.353481351257], [" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.353481351257], [" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.353481351257], [" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.353481351257], [" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.353481351257], [" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.353481351257], [" SELECT runs FROM w WHERE player = 'john'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert'", -1.375614920737], [" SELECT runs FROM w WHERE player = 'john challen'\nNeuralSQL2: SELECT runs FROM w WHERE player = 'albert clapp'", -5.495899263671]]}, "444": {"question": "which junction on highway 91 is closer to ein zivan, gadot junction or shipon junction?", "gold_answer": ["Gadot Junction"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [], [7], [7], [7], [null]], "1": [[23], [23], [23], [23], [23], [], [23], [23], [23], [null]], "2": ["<error>"]}, "nsql": [[" SELECT kilometers FROM w WHERE name = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE name = 'shipon junction'", -3.292004608349999], [" SELECT kilometers FROM w WHERE name = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE name = 'shipon junction'", -3.292004608349999], [" SELECT kilometers FROM w WHERE name = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE name = 'shipon junction'", -3.292004608349999], [" SELECT kilometers FROM w WHERE name = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE name = 'shipon junction'", -3.292004608349999], [" SELECT kilometers FROM w WHERE name = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE name = 'shipon junction'", -3.292004608349999], [" SELECT kilometers FROM w WHERE location = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE location = 'shipon junction'", -5.844998474870001], [" SELECT kilometers FROM w WHERE name = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE name = 'shipon junction'\n```", -6.015356788839999], [" SELECT kilometers FROM w WHERE name = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE name = 'shipon junction'", -6.197540703049999], [" SELECT kilometers FROM w WHERE name = 'gadot junction'\nNeuralSQL2: SELECT kilometers FROM w WHERE name = 'shipon junction'", -6.96910514683], [" SELECT (SELECT kilometers FROM w WHERE name = 'gadot junction') - (SELECT kilometers FROM w WHERE name = 'ein zivan')\nNeuralSQL2: SELECT (SELECT kilometers FROM w WHERE name = 'shipon junction') - (SELECT kilometers FROM w WHERE name = 'ein zivan')", -9.22553194742]]}, "485": {"question": "what are the total number of landmarks located in maui?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -1.0654519383799999], [" SELECT COUNT(*) FROM w WHERE county = 'maui'", -2.69358657228]]}, "526": {"question": "how many lawyers have won the award between 1883 and 2014?", "gold_answer": ["5"], "pred_answer": {"0": [[66], [0], [5], [5], [5], [5], [0], [66], [0], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (year >= 1883 AND year <= 2014) OR (year_2 >= 1883 AND year_2 <= 2014)", -5.980322012116002], [" SELECT COUNT(*) FROM w WHERE `laetare medalist` LIKE '%lawyer%' AND `year` BETWEEN 1883 AND 2014", -6.961246361635998], [" SELECT COUNT(*) FROM w WHERE (year BETWEEN 1883 AND 2014) AND position LIKE '%lawyer%'", -7.171255094376], [" SELECT COUNT(*) FROM w WHERE position LIKE '%lawyer%' AND year >= 1883 AND year_2 <= 2014", -7.213200150555999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%lawyer%' AND year BETWEEN 1883 AND 2014", -8.402077383302], [" SELECT COUNT(DISTINCT laetare medalist) FROM w WHERE year BETWEEN 1883 AND 2014 AND position LIKE '%lawyer%'", -8.406359392735], [" SELECT COUNT(*) FROM w WHERE `laetare medalist` LIKE '%lawyer%' AND `year` BETWEEN 1883 AND 2014", -8.512821041635997], [" SELECT COUNT(*) FROM w WHERE (year >= 1883 AND year <= 2014) OR (year_2 >= 1883 AND year_2 <= 2014)", -8.748812705116002], [" SELECT COUNT(*) FROM w WHERE (laetare medalist LIKE '%lawyer%' OR laetare medalist LIKE '%lawyer%') AND year BETWEEN 1883 AND 2014", -14.987983649425999], [" SELECT COUNT(*) FROM w WHERE (year BETWEEN 1883 AND 2014) AND (position LIKE '%lawyer%' OR position LIKE '%attorney%')", -15.172485503105998]]}, "567": {"question": "how many laetare medalists were philantrohpists?", "gold_answer": ["2"], "pred_answer": {"0": [[7], [7], [7], [7], [0], [2], [0], [7], [7], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -3.16316866412], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -3.16316866412], [" SELECT COUNT(*) FROM w WHERE position = 'philantrohpists'", -3.8696183199599994], [" SELECT COUNT(*) FROM w WHERE position = 'philantrohpists'", -3.8696183199599994], [" SELECT COUNT(*) FROM w WHERE laetare medalist_2 = 'philantrohpists'", -5.036875365879999], [" SELECT COUNT(*) FROM w WHERE position_2 = 'philantrohpists'", -5.1973680909099995], [" SELECT COUNT(*) FROM w WHERE laetare medalist_2 = 'philantrohpist'", -5.31389050495], [" SELECT COUNT(*) FROM w WHERE position = 'philantrohpist'", -5.4378895401100005], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -6.27244846717], [" SELECT COUNT(*) FROM w WHERE position = 'philantrohpist' OR position_2 = 'philantrohpist'", -9.48653716262]]}, "608": {"question": "what junction is the furthest from mahanayim junction?", "gold_answer": ["Zivan Junction"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "1": ["<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT kilometers FROM w WHERE name = 'mahanayim junction')", -3.56688741038], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT kilometers FROM w WHERE name = 'mahanayim junction')", -3.56688741038], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT kilometers FROM w WHERE name = 'mahanayim junction')", -3.56688741038], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT kilometers FROM w WHERE name = 'mahanayim junction')", -3.56688741038], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT kilometers FROM w WHERE name = 'mahanayim junction')", -6.424289230379999], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT MAX(kilometers) FROM w WHERE name = 'mahanayim junction')", -9.092091230740001], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT kilometers FROM w WHERE name = 'mahanayim junction')\n```", -14.29748545418], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT MAX(kilometers) FROM w WHERE name = 'mahanayim junction')", -14.938327225214001], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT kilometers FROM w WHERE name = 'mahanayim junction')\n```", -15.444334374179999], [" SELECT COUNT(*) FROM w WHERE kilometers > (SELECT kilometers FROM w WHERE name = 'mahanayim junction')\n```", -21.60339079418]]}, "649": {"question": "how many fumble recoveries did this player have in 2004?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [1], [1], [1], [0], [2], [2], [7], [2]], "1": ["<error>"], "2": [[20]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": [[0]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT fumble recoveries FROM w WHERE year = 2004", -2.6402410750899996], [" SELECT fumble recoveries FROM w WHERE year = 2004", -2.6402410750899996], [" SELECT COUNT(*) FROM w WHERE year = 2004 AND fumble recoveries > 0", -4.35148145685], [" SELECT COUNT(*) FROM w WHERE fumble recoveries > 0 AND year = 2004", -5.01787539277], [" SELECT COUNT(*) FROM w WHERE year = 2004 AND fumble recoveries > 0", -5.68193899685], [" SELECT COUNT(*) FROM w WHERE fumble recoveries = '2004'", -6.427786965739999], [" SELECT `fumble recoveries` FROM w WHERE year = 2004", -7.109045349449999], [" SELECT SUM(fumble recoveries) FROM w WHERE year = 2004", -7.879769100857], [" SELECT COUNT(*) FROM w WHERE fumble recoveries != 0", -12.663144918725], [" SELECT SUM(fumble recoveries) FROM w WHERE year = 2004\nQ2: the sum of the assisted tackles in 2005 is {how many = a2}.\nNeuralSQL2: SELECT SUM(assisted tackles) FROM w WHERE year = 2005\nQ3: the sum of the fumble return yards in 2010 is {how many = a3}.\nNeuralSQL3: SELECT SUM(fumble return yards) FROM w WHERE year = 2010\nQ4: the sum of the interceptions in 2004 is {how many = a4}.\nNeuralSQL4: SELECT SUM(interceptions) FROM w WHERE year = 2004\nQ5: the sum of the interceptions returned for touchdown in 2004 is {how many = a5}.\nNeuralSQL5: SELECT SUM(interceptions returned for touchdown) FROM w WHERE year = 2004\nQ6: the sum of the interceptions returned for touchdown in 2005 is {how many = a6}.\nNeuralSQL6: SELECT SUM(interceptions returned for touchdown) FROM w WHERE year = 2005\nQ7: the sum of the interceptions returned for touchdown in 2007 is {how many = a7}.\nNeuralSQL7: SELECT SUM(interceptions", -48.31959879846502]]}, "690": {"question": "is a 2 credit full house the same as a 5 credit three of a kind?", "gold_answer": ["No"], "pred_answer": {"0": [["16"], ["16"], ["16"], ["16"], ["16"], ["16"], ["16"], ["16"], ["16"], ["16"]], "1": [["15"], ["15"], ["15"], ["15"], ["15"], ["15"], ["15"], ["15"], ["15"], ["15"]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'\n```", -8.83487019296], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'", -8.875333675723999], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'", -9.145260820610002], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'", -10.807729475723999], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'", -11.496855095724], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'", -12.689594545723997], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'", -12.746530075724], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'", -13.391586775724], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'\n```", -13.406243436059999], [" SELECT `2 credits` FROM w WHERE hand = 'full house'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '3 of a kind'", -16.673333875724]]}, "731": {"question": "what was the number of wins the philadelphia flyers had?", "gold_answer": ["35"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -5.992014751271041], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -5.992981988911041], [" SELECT COUNT(*) FROM w WHERE score LIKE '%w%'", -6.663897864519999], [" SELECT COUNT(*) FROM w WHERE score LIKE '%w%'", -8.97825172415], [" SELECT COUNT(*) FROM w WHERE record LIKE 'w%'", -10.45814381259], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -11.087009345142501], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -11.119705403424998], [" SELECT COUNT(*) FROM w WHERE record LIKE 'w%'", -11.881507977840002], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -11.923480173208043], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - % - %' AND SUBSTR(record, 1, INSTR(record, '-') - 1) = 'w'", -12.323932554609998]]}, "772": {"question": "did ibricic score more or less goals in his 3 seasons with hajduk split when compared to his 4 seasons with nk zagreb?", "gold_answer": ["more"], "pred_answer": {"0": [[35], [35], [35], [35], [35], [35], [35], [35], [35], [35]], "1": [[22], [22], [22], [22], [22], [22], [22], [22], [22], [22]]}, "nsql": [[" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.237406243254], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.237406243254], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.237406243254], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.237406243254], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.2432001483910002], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.2432001483910002], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.2432001483910002], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.2432001483910002], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.2432001483910002], [" SELECT SUM(goals) FROM w WHERE club = 'hajduk split'\nNeuralSQL2: SELECT SUM(goals) FROM w WHERE club = 'nk zagreb'", -1.2432001483910002]]}, "813": {"question": "how many tiers had more than one relegated movement?", "gold_answer": ["1"], "pred_answer": {"0": [[], [], [2], [2], [2], [2], [2], [2], [2], "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE movements = 'relegated' GROUP BY level HAVING COUNT(*) > 1", -4.558623388830001], [" SELECT COUNT(*) FROM w WHERE movements = 'relegated' GROUP BY level HAVING COUNT(*) > 1", -4.561370928240001], [" SELECT COUNT(DISTINCT level) FROM w WHERE movements LIKE '%relegated%'", -8.472446916100001], [" SELECT COUNT(DISTINCT level) FROM w WHERE movements LIKE '%relegated%'", -8.472446916100001], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%relegated%' GROUP BY level HAVING COUNT(*) > 1\n```", -12.261891371539999], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%relegated%' GROUP BY level HAVING COUNT(*) > 1", -12.902600950979998], [" SELECT COUNT(DISTINCT level) FROM w WHERE movements LIKE '%relegated%'", -13.1425546217], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%relegated%' GROUP BY level HAVING COUNT(*) > 1", -13.632847750979998], [" SELECT COUNT(*) FROM w WHERE movements LIKE '%relegated%' GROUP BY level HAVING COUNT(*) > 1", -15.21327606079], [" SELECT COUNT(*) FROM (SELECT level, COUNT(*) FROM w WHERE movements = 'relegated' GROUP BY level) WHERE COUNT(*) > 1", -20.528931483710004]]}, "854": {"question": "how many ships were laid down in september?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `laid down` LIKE '%-09-%'", -2.9197769052200004], [" SELECT COUNT(*) FROM w WHERE `laid down` LIKE '%-09-%'", -2.92233121791], [" SELECT COUNT(*) FROM w WHERE `laid down` LIKE '%-09-%'", -3.2181807512200002], [" SELECT COUNT(*) FROM w WHERE `laid down` LIKE '%-09-%'", -3.2181807512200002], [" SELECT COUNT(*) FROM w WHERE `laid down` LIKE '%-09-%'", -3.2181807512200002], [" SELECT COUNT(*) FROM w WHERE `laid down` LIKE '%-09-%'", -3.21862130962], [" SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `laid down`) = '09'", -4.044199739540001], [" SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `laid down`) = '09'", -4.0479568407499995], [" SELECT COUNT(*) FROM w WHERE STRFTIME('%m', laid down) = '09'", -13.058878014720001], [" SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `laid down`) = '09'\nQ2: {how many = a2} ships were laid down in march.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `laid down`) = '03'\nQ3: {how many = a3} ships were laid down in april.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `laid down`) = '04'\nQ4: {how many = a4} ships were laid down in may.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `laid down`) = '05'\nQ5: {how many = a5} ships were laid down in june.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `laid down`) = '06'\nQ6: {how many = a6} ships were laid down in july.\nNeuralSQL6: SELECT", -18.12280600170514]]}, "895": {"question": "what is the total number of stations under the cbs network?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.6472511480300005], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.6472511480300005], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.65214482725], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.65214482725], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.65214482725], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.65214482725], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.65214482725], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -3.1049780842100008], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -3.1049780842100008], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -3.10540548821]]}, "936": {"question": "what is the number of individuals in this group who were indian?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -2.412325740866], [" SELECT COUNT(*) FROM w WHERE nationality = 'indian'", -3.4385091862159998]]}, "977": {"question": "what is the difference between france's and egypt's silver medals?", "gold_answer": ["23"], "pred_answer": {"0": [[28.0], [28.0], [28.0], [28.0], [28.0], [28.0], [28.0], [28.0], [28.0], [28.0]], "1": [[5.0], [5.0], [5.0], [5.0], [5.0], [5.0], [5.0], [5.0], [5.0], [5.0]]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3249907323999999], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3249907323999999], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3249907323999999], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3249907323999999], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3249907323999999], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3249907323999999], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3249907323999999], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3249907323999999], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.3253097619299998], [" SELECT silver FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'egypt'", -1.32570350826]]}, "980": {"question": "which total score was higher, game #163 or #181?", "gold_answer": ["163"], "pred_answer": {"0": [[40], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[12], [3], [3], [3], [1], [3], [3], [3], [3], [1]]}, "nsql": [[" SELECT SUM(CAST(REPLACE(score, '-', '') AS INT)) FROM w WHERE `#` = 163\nNeuralSQL2: SELECT SUM(CAST(REPLACE(score, '-', '') AS INT)) FROM w WHERE `#` = 181", -5.987750759601999], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE `#` = 163\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE `#` = 181", -6.184962998033638], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE `#` = 163\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE `#` = 181", -6.1865434861342], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE `#` = 163\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE `#` = 181", -6.1865434861342], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, '-') + 1)) AS INT)) FROM w WHERE `#` = 163\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, '-') + 1)) AS INT)) FROM w WHERE `#` = 181", -7.223379132233199], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE # = 163\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE # = 181", -8.335651515114698], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE # = 163\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE # = 181", -8.3910796357138], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE # = 163\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE # = 181", -8.3951538705026], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE # = 163\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE # = 181", -8.397664223313798], [" SELECT SUM(CAST(REPLACE(score, '-', ' + ') AS INT)) FROM w WHERE `#` = 163\nNeuralSQL2: SELECT SUM(CAST(REPLACE(score, '-', ' + ') AS INT)) FROM w WHERE `#` = 181", -9.198080434556001]]}, "1001": {"question": "does patton state hospital in the city of patton in san bernardino county have more mental health hospital beds than atascadero state hospital in atascadero, san luis obispo county?", "gold_answer": ["yes"], "pred_answer": {"0": [[1500], [1500], [1500], [1500], [1500], [1500], [1500], [1500], [1500], [1500]], "1": [[1200], [1200], [1200], [1200], [1200], [1200], [1200], [1200], [1200], [1200]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino' AND type of hospital = 'mental health'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo' AND type of hospital = 'mental health'", -3.6338277690255], [" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino' AND type of hospital = 'mental health'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo' AND type of hospital = 'mental health'", -3.636824575658501], [" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo'", -5.531879385118941], [" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo'", -5.532237153590941], [" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino' AND `type of hospital` = 'mental health'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo' AND `type of hospital` = 'mental health'", -6.808884801899201], [" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino' AND `type of hospital` = 'mental health'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo' AND `type of hospital` = 'mental health'", -6.831769501874199], [" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino' AND `type of hospital` = 'mental health'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo' AND `type of hospital` = 'mental health'", -6.845408658574202], [" SELECT # beds FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino' AND type of hospital = 'mental health'\nNeuralSQL2: SELECT # beds FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo' AND type of hospital = 'mental health'", -6.968734332613801], [" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino' AND type of hospital = 'mental health'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo' AND type of hospital = 'mental health'\n```", -13.380109587008501], [" SELECT `# beds` FROM w WHERE hospital = 'patton state hospital' AND city = 'patton' AND county = 'san bernardino' AND type of hospital = 'mental health'\nNeuralSQL2: SELECT `# beds` FROM w WHERE hospital = 'atascadero state hospital' AND city = 'atascadero' AND county = 'san luis obispo' AND type of hospital = 'mental health'\n```", -15.726419933965502]]}, "1018": {"question": "how many people were ranked?", "gold_answer": ["12"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -6.569353051907], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -7.652486408082], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -7.71460085605], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -8.666849345907], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -8.666849345907], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -8.829297551907], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -9.499892591907], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -10.257931691907], [" SELECT COUNT(*) FROM w WHERE rank != 'nan'", -11.03816599402], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL", -11.54234611305]]}, "1022": {"question": "what is the number of countries they have played?", "gold_answer": ["11"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(DISTINCT opposition) FROM w", -1.487794216282], [" SELECT COUNT(DISTINCT opposition) FROM w", -1.487794216282], [" SELECT COUNT(DISTINCT opposition) FROM w", -1.487794216282], [" SELECT COUNT(DISTINCT opposition) FROM w", -1.487794216282], [" SELECT COUNT(DISTINCT opposition) FROM w", -1.487794216282], [" SELECT COUNT(DISTINCT opposition) FROM w", -1.487794216282], [" SELECT COUNT(DISTINCT opposition) FROM w", -3.934580550782], [" SELECT COUNT(DISTINCT opposition) FROM w", -3.934580550782], [" SELECT COUNT(DISTINCT(opposition)) FROM w", -5.763511876862], [" SELECT COUNT(DISTINCT opposition) FROM w", -14.304478769051999]]}, "1059": {"question": "how many of these buildings were built after 1975", "gold_answer": ["8"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998], [" SELECT COUNT(*) FROM w WHERE year > 1975", -1.2009509934599998]]}, "1063": {"question": "how many teams won at least 4 matches?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE won >= 4", -1.1324613670040002], [" SELECT COUNT(*) FROM w WHERE won >= 4", -1.1324613670040002], [" SELECT COUNT(*) FROM w WHERE won >= 4", -1.1324613670040002], [" SELECT COUNT(*) FROM w WHERE won >= 4", -1.1324613670040002], [" SELECT COUNT(*) FROM w WHERE won >= 4", -1.1324613670040002], [" SELECT COUNT(*) FROM w WHERE won >= 4", -1.1324613670040002], [" SELECT COUNT(*) FROM w WHERE won >= 4", -1.1324613670040002], [" SELECT COUNT(*) FROM w WHERE won >= 4", -1.1324613670040002], [" SELECT COUNT(DISTINCT team) FROM w WHERE won >= 4", -3.3574759414599997], [" SELECT COUNT(*) FROM w WHERE won >= 4", -3.6503255762039997]]}, "1104": {"question": "what is the number of songs on rock records?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -3.768205924083], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -5.329054195145], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -5.329054195145], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -5.329054195145], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -5.541365595145], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -5.854846295144999], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -5.984790195145], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'\n```", -6.005206306233], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -7.085307895145], [" SELECT COUNT(*) FROM w WHERE label = 'rock records'", -7.429824595145]]}, "1145": {"question": "what episode number was the only episode to have over 16% of ratings?", "gold_answer": ["11"], "pred_answer": {"0": [[1], [0], [1], [1], [1], [1], [1], "<error>", [1], [1]], "1": ["<error>"], "2": [[11]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": [[0]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE ratings > 16", -3.9802040289600003], [" SELECT COUNT(*) FROM w WHERE ratings = '16.0%'", -6.0836292591099985], [" SELECT COUNT(*) FROM w WHERE ratings LIKE '%16%'", -6.57144247962], [" SELECT COUNT(*) FROM w WHERE ratings > '16%'", -7.329778112590001], [" SELECT COUNT(DISTINCT(`episode title`)) FROM w WHERE ratings LIKE '16%'", -7.890881636306], [" SELECT COUNT(*) FROM w WHERE ratings > '16%'", -9.383843114570002], [" SELECT COUNT(DISTINCT row_id) FROM w WHERE ratings > '16%'", -10.416052738289002], [" SELECT COUNT(*) FROM w WHERE ratings > 16%", -14.161910962060002], [" SELECT COUNT(DISTINCT filledcolumnname) FROM w WHERE ratings LIKE '16%'", -14.807361335966], [" SELECT COUNT(*) FROM w WHERE ratings > '16%'\nQ2: {how many = a2} episode number had a broadcast date in 2010.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2010%'\nQ3: {how many = a3} episode number had a broadcast date in 2011.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2011%'\nQ4: {how many = a4} episode number had a broadcast date in 2012.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2012%'\nQ5: {how many = a5} episode number had a broadcast date in 2013.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2013%'\nQ6: {how many = a6} episode number had a broadcast date in 2014.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `broadcast date` LIKE '2014%'\nQ7: {how many = a7} episode number had a", -32.05284640207001]]}, "1186": {"question": "how many consecutive trio shows did charmaine sheh do before being on another variety program?", "gold_answer": ["34"], "pred_answer": {"0": [[6], [6], [1], [6], [6], [2], [6], [1], [0], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%'", -5.150605744020001], [" SELECT COUNT(*) FROM w WHERE `name of show` LIKE '%trio%' AND `name of show` NOT LIKE '%glam%'", -9.5915527044], [" SELECT COUNT(*) FROM w WHERE `name of show` LIKE '%trio%' AND `name of show` NOT LIKE '%super%'", -9.766789544399998], [" SELECT COUNT(*) FROM w WHERE `name of show` LIKE '%trio%' AND `name of show` NOT LIKE '%all star%' AND `name of show` NOT LIKE '%foodie%'", -12.212294004679997], [" SELECT COUNT(*) FROM w WHERE `name of show` LIKE '%trio%'", -12.846756511182999], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%' AND (year - 1) IN (SELECT year FROM w WHERE name of show NOT LIKE '%trio%')", -13.395118172279998], [" SELECT COUNT(*) FROM w WHERE `name of show` LIKE '%trio%'", -15.671304047709999], [" SELECT COUNT(*) FROM w WHERE name of show LIKE '%trio%' AND name of show NOT LIKE '%super%'", -17.323936313262003], [" SELECT COUNT(*) FROM w WHERE row_id > 0 AND name of show LIKE '%trio%' AND row_id = (SELECT row_id FROM w WHERE row_id > 0 AND name of show NOT LIKE '%trio%' LIMIT 1)", -19.117988625964006], [" SELECT COUNT(*) FROM w WHERE `name of show` LIKE '%trio%'", -19.418985801]]}, "1227": {"question": "how many schools are there in this conference?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT school) FROM w", -8.27012212634], [" SELECT COUNT(DISTINCT school) FROM w", -8.482555658295], [" SELECT COUNT(DISTINCT school) FROM w", -9.447044226340001], [" SELECT COUNT(DISTINCT school) FROM w", -9.447176178295], [" SELECT COUNT(DISTINCT school) FROM w", -9.46689433934], [" SELECT COUNT(DISTINCT school) FROM w", -9.54415064634], [" SELECT COUNT(DISTINCT school) FROM w\n```", -9.785434798035], [" SELECT COUNT(DISTINCT school) FROM w", -10.119129298295], [" SELECT COUNT(DISTINCT school) FROM w", -10.40961547634], [" SELECT COUNT(DISTINCT school) FROM w", -11.123475276339999]]}, "1268": {"question": "how many times did the toronto maple leaves win?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -1.2000437572400002], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -1.2000437572400002], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -1.2000437572400002], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -1.2000437572400002], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -1.2000437572400002], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -1.20116327695], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -1.20116327695], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -2.62797190374], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -2.62981899295], [" SELECT COUNT(*) FROM w WHERE team = 'toronto maple leafs'", -2.62981899295]]}, "9": {"question": "how many mines were in temagami?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.4869732147639998], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.4869732147639998], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.4869732147639998], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.4869732147639998], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -1.4869732147639998], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -3.22182665659], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -3.22182665659], [" SELECT COUNT(*) FROM w WHERE town = 'temagami'", -3.22182665659], [" SELECT COUNT(DISTINCT mine) FROM w WHERE town = 'temagami'", -4.961020072609], [" SELECT COUNT(DISTINCT mine) FROM w WHERE town = 'temagami'", -7.112268141174002]]}, "50": {"question": "how many denominations never dropped below 20%?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [7], [0], [4], [0], [7], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE 1870 >= '20%' AND 1880 >= '20%' AND 1890 >= '20%' AND 1900 >= '20%' AND 1910 >= '20%' AND 1920 >= '20%' AND 1930 >= '20%' AND 1941 >= '20%' AND 1949 >= '20%' AND 2001 >= '20%' AND 2011 >= '20%'", -5.422579520879999], [" SELECT COUNT(*) FROM w WHERE `1870` > '20%' AND `1880` > '20%' AND `1890` > '20%' AND `1900` > '20%' AND `1910` > '20%' AND `1920` > '20%' AND `1930` > '20%' AND `1941` > '20%' AND `1949` > '20%' AND `2001` > '20%' AND `2011` > '20%'", -5.951303830909997], [" SELECT COUNT(*) FROM w WHERE 1870 >= '20%' AND 1880 >= '20%' AND 1890 >= '20%' AND 1900 >= '20%' AND 1910 >= '20%' AND 1920 >= '20%' AND 1930 >= '20%' AND 1941 >= '20%' AND 1949 >= '20%' AND 2001 >= '20%' AND 2011 >= '20%'", -6.30492224998], [" SELECT COUNT(DISTINCT denomination) FROM w WHERE 1870 >= '20%' AND 1880 >= '20%' AND 1890 >= '20%' AND 1900 >= '20%' AND 1910 >= '20%' AND 1920 >= '20%' AND 1930 >= '20%' AND 1941 >= '20%' AND 1949 >= '20%' AND 2001 >= '20%' AND 2011 >= '20%'", -7.267007026904996], [" SELECT COUNT(*) FROM w WHERE (1870 >= '20' OR 1880 >= '20' OR 1890 >= '20' OR 1900 >= '20' OR 1910 >= '20' OR 1920 >= '20' OR 1930 >= '20' OR 1941 >= '20' OR 1949 >= '20' OR 2001 >= '20' OR 2011 >= '20')", -8.525213744770001], [" SELECT COUNT(*) FROM w WHERE `1870` LIKE '%20%' AND `1880` LIKE '%20%' AND `1890` LIKE '%20%' AND `1900` LIKE '%20%' AND `1910` LIKE '%20%' AND `1920` LIKE '%20%' AND `1930` LIKE '%20%' AND `1941` LIKE '%20%' AND `1949` LIKE '%20%' AND `2001` LIKE '%20%' AND `2011` LIKE '%20%'", -8.617641616740002], [" SELECT COUNT(*) FROM w WHERE (CAST(REPLACE(`1870`,'%','') AS INT) >= 20 OR CAST(REPLACE(`1880`,'%','') AS INT) >= 20 OR CAST(REPLACE(`1890`,'%','') AS INT) >= 20 OR CAST(REPLACE(`1900`,'%','') AS INT) >= 20 OR CAST(REPLACE(`1910`,'%','') AS INT) >= 20 OR CAST(REPLACE(`1920`,'%','') AS INT) >= 20 OR CAST(REPLACE(`1930`,'%','') AS INT) >= 20 OR CAST(REPLACE(`1941`,'%','') AS INT) >= 20 OR CAST(REPLACE(`1949`,'%','') AS INT) >= 20 OR CAST(REPLACE(`2001`,'%','') AS INT) >= 20 OR CAST(REPLACE(`2011`,'%','') AS INT) >= 20)", -9.553916463141505], [" SELECT COUNT(*) FROM w WHERE `1870` LIKE '%20%' AND `1880` LIKE '%20%' AND `1890` LIKE '%20%' AND `1900` LIKE '%20%' AND `1910` LIKE '%20%' AND `1920` LIKE '%20%' AND `1930` LIKE '%20%'", -10.19485058256], [" SELECT COUNT(*) FROM w WHERE (1870 >= 20 OR 1880 >= 20 OR 1890 >= 20 OR 1900 >= 20 OR 1910 >= 20 OR 1920 >= 20 OR 1930 >= 20 OR 1941 >= 20 OR 1949 >= 20 OR 2001 >= 20 OR 2011 >= 20)", -10.40519788047], [" SELECT COUNT(DISTINCT denomination) FROM w WHERE `1870` >= '20%' AND `1880` >= '20%' AND `1890` >= '20%' AND `1900` >= '20%' AND `1910` >= '20%' AND `1920` >= '20%' AND `1930` >= '20%' AND `1941` >= '20%' AND `1949` >= '20%' AND `2001` >= '20%' AND `2011` >= '20%'\n```", -15.566683156934996]]}, "91": {"question": "how many weeks did julie covington's \"don't cry for me argentina\" spend at the top of australia's singles chart?", "gold_answer": ["7"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", [], "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT `weeks at no. 1` FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentina'", -4.6948585412909996], [" SELECT `weeks at no. 1` FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentina'", -4.71025990635], [" SELECT weeks at no. 1 FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentina'", -5.319645337634999], [" SELECT COUNT(*) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentina'", -5.663837291495998], [" SELECT `weeks at no. 1` FROM w WHERE title = \"don't cry for me argentina\" AND artist = \"julie covington\"", -5.811950582807], [" SELECT COUNT(*) FROM w WHERE title = 'don't cry for me argentina' AND artist = 'julie covington'", -6.412634704003999], [" SELECT SUM(`weeks at no. 1`) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentina'", -6.760536909492], [" SELECT COUNT(*) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentina'", -7.738865694895999], [" SELECT SUM(weeks at no. 1) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentina'", -8.471073637514], [" SELECT SUM(`weeks at no. 1`) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentina'", -8.655879925226001]]}, "132": {"question": "did belfast royal academy have more or less total finals than ballyclare high school?", "gold_answer": ["more"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": ["<error>"]}, "nsql": [[" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -5.690868065987999], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -5.690968720677999], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -5.6930237237], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -5.697307977443], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -5.697307977443], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -6.865330805860001], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -9.02829800086], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -10.007047771443002], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'", -10.1911570867], [" SELECT `total finals` FROM w WHERE school = 'belfast royal academy'\nNeuralSQL2: SELECT `total finals` FROM w WHERE school = 'ballyclare high school'\n```", -14.060442028019999]]}, "173": {"question": "total number of assists and turnovers combined", "gold_answer": ["193"], "pred_answer": {"0": [[218.0], [218], [218.0], [218.0], [218], [218], [218], [218.0], [218], [218]], "1": [[153.0], [153.0], [153.0], [153.0], [153], [153.0], [153], [153.0], [153], [153]], "2": ["<error>"]}, "nsql": [[" SELECT SUM(assists) FROM w WHERE assists != 'none'\nNeuralSQL2: SELECT SUM(turnovers) FROM w WHERE turnovers != 'nan'", -6.215719835840002], [" SELECT SUM(CAST(REPLACE(assists,'\u2014','') AS INT)) FROM w\nNeuralSQL2: SELECT SUM(turnovers) FROM w", -6.333934381749999], [" SELECT SUM(assists) FROM w\nNeuralSQL2: SELECT SUM(turnovers) FROM w", -6.676754364835], [" SELECT SUM(assists) FROM w WHERE assists != 'none'\nNeuralSQL2: SELECT SUM(turnovers) FROM w WHERE turnovers != 'nan'", -7.876454309509999], [" SELECT SUM(CAST(REPLACE(assists,'\u2013','') AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(REPLACE(turnovers,'\u2013','') AS INT)) FROM w", -8.064009628614], [" SELECT SUM(CAST(REPLACE(assists, '\u2013', '0') AS INT)) FROM w\nNeuralSQL2: SELECT SUM(turnovers) FROM w", -14.13932112526], [" SELECT SUM(CAST(REPLACE(assists, '\u2014', '0') AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(REPLACE(turnovers, '\u2014', '0') AS INT)) FROM w\n```", -14.692984264033996], [" SELECT SUM(assists) FROM w WHERE assists <> 'none'\nNeuralSQL2: SELECT SUM(turnovers) FROM w WHERE turnovers <> 'nan'", -14.77361158269], [" SELECT SUM(CAST(REPLACE(`assists`,'\u2013','') AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`turnovers`,'\u2013','') AS INT)) FROM w", -15.879295019059999], [" SELECT SUM(CAST(REPLACE(`assists`,'\u2013','') AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`turnovers`,'\u2013','') AS INT)) FROM w", -19.984091984160003]]}, "214": {"question": "which year was there at least three movies?", "gold_answer": ["2008"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "3": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008", -7.835865427334], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008", -7.843510839614], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008\n```", -8.486335339404], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008", -8.748448428974001], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008", -8.919402522614002], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008", -10.360885759274], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008", -10.813962609614], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008", -12.307000677334], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008\n```", -12.923473170764], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008", -12.976924539614]]}, "255": {"question": "how many partial members will occur before the first annular?", "gold_answer": ["7"], "pred_answer": {"0": [[1], [0], [1], [1], [0], [1], [7], [1], [1], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type = 'partial' AND `date` < (SELECT `date` FROM w WHERE type = 'annular' LIMIT 1)", -5.5840677902000015], [" SELECT COUNT(*) FROM w WHERE type = 'partial' AND date < (SELECT date FROM w WHERE type = 'annular' ORDER BY date ASC LIMIT 1)", -7.5909757221000005], [" SELECT COUNT(*) FROM w WHERE type = 'partial' AND date < (SELECT date FROM w WHERE type = 'annular' LIMIT 1)", -8.417820732660001], [" SELECT COUNT(*) FROM w WHERE type = 'partial' AND date < (SELECT date FROM w WHERE type = 'annular' LIMIT 1)", -8.417820732660001], [" SELECT COUNT(*) FROM w WHERE type = 'partial' AND date < (SELECT MIN(date) FROM w WHERE type = 'annular')", -9.055496334486], [" SELECT COUNT(*) FROM w WHERE type = 'partial' AND `time\\n(greatest)\\nutc` < (SELECT `time\\n(greatest)\\nutc` FROM w WHERE type = 'annular' ORDER BY `time\\n(greatest)\\nutc` LIMIT 1)", -9.625971081109], [" SELECT COUNT(*) FROM w WHERE type = 'partial' AND member < (SELECT member FROM w WHERE type = 'annular' LIMIT 1)", -9.631566648209999], [" SELECT COUNT(*) FROM w WHERE type = 'partial' AND date < (SELECT date FROM w WHERE type = 'annular' LIMIT 1)", -10.41082913266], [" SELECT COUNT(*) FROM w WHERE `type` = 'partial' AND `date` < (SELECT `date` FROM w WHERE `type` = 'annular' LIMIT 1)", -10.809234053540003], [" SELECT COUNT(*) FROM w WHERE type = 'partial' AND (SELECT COUNT(*) FROM w WHERE type = 'annular') > 0", -10.885846908099998]]}, "296": {"question": "how many silver medals did evgeni plushenko get?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [1]]}, "nsql": [[" SELECT silver FROM w WHERE athlete = 'evgeni plushenko'", -4.09946420856], [" SELECT silver FROM w WHERE athlete = 'evgeni plushenko'", -4.09946420856], [" SELECT silver FROM w WHERE athlete = 'evgeni plushenko'", -4.09971168213], [" SELECT `silver` FROM w WHERE athlete = 'evgeni plushenko'", -4.349095372560001], [" SELECT silver FROM w WHERE athlete = 'evgeni plushenko'", -4.82002230009], [" SELECT `silver` FROM w WHERE athlete = 'evgeni plushenko'", -5.046354386040001], [" SELECT silver FROM w WHERE athlete = 'evgeni plushenko'", -5.19623820009], [" SELECT SUM(silver) FROM w WHERE athlete LIKE '%evgeni plushenko%'", -6.412350223550001], [" SELECT SUM(silver) FROM w WHERE athlete LIKE 'evgeni plushenko'", -7.686681622720001], [" SELECT COUNT(*) FROM w WHERE athlete = 'evgeni plushenko' AND silver > 0", -8.08925355435]]}, "337": {"question": "combined, how many winning golfers does england and wales have in the masters?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], []]}, "nsql": [[" SELECT SUM(masters) FROM w WHERE country IN ('england','wales')", -4.386628804989999], [" SELECT SUM(masters) FROM w WHERE country = 'england' OR country = 'wales'", -5.06761728174], [" SELECT SUM(masters) FROM w WHERE country IN ('england', 'wales')", -5.5418014607299995], [" SELECT SUM(masters) FROM w WHERE country IN ('england', 'wales')", -5.5418014607299995], [" SELECT SUM(masters) FROM w WHERE country = 'england' OR country = 'wales'", -6.20279673498], [" SELECT SUM(masters) FROM w WHERE country = 'england' OR country = 'wales'", -6.20279673498], [" SELECT SUM(masters) FROM w WHERE country = 'england' OR country = 'wales'", -6.2243777616600005], [" SELECT SUM(masters) FROM w WHERE country = 'england' OR country = 'wales'", -6.94329623498], [" SELECT SUM(masters) FROM w WHERE country = 'england' OR country = 'wales'", -8.35097661354], [" SELECT CAST(SUBSTR(`masters`, 1, INSTR(`masters`, '-') - 1) AS INT) FROM w WHERE country = 'england and wales'", -10.870034796640002]]}, "340": {"question": "how many votes did both the conservative party and the rainbow dream ticket party receive?", "gold_answer": ["6634"], "pred_answer": {"0": [[6482], [6482], [6482], ["6482"], ["6482"], ["6482"], ["6482"], ["6482"], ["6482"], ["6482"]], "1": [[152], [152], [152], ["152"], ["152"], ["152"], ["152"], ["152"], ["152"], ["152"]]}, "nsql": [[" SELECT SUM(votes) FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT SUM(votes) FROM w WHERE party = 'rainbow dream ticket'", -2.2195039266099994], [" SELECT SUM(votes) FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT SUM(votes) FROM w WHERE party = 'rainbow dream ticket'", -2.2217964747900005], [" SELECT SUM(votes) FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT SUM(votes) FROM w WHERE party = 'rainbow dream ticket'", -2.2217964747900005], [" SELECT votes FROM w WHERE party = 'conservative party'\nNeuralSQL2: SELECT votes FROM w WHERE party = 'rainbow dream ticket party'", -4.154994532944001], [" SELECT votes FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT votes FROM w WHERE party = 'rainbow dream ticket'", -5.836743769580001], [" SELECT votes FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT votes FROM w WHERE party = 'rainbow dream ticket'", -5.836743769580001], [" SELECT votes FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT votes FROM w WHERE party = 'rainbow dream ticket'", -6.545700094580001], [" SELECT votes FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT votes FROM w WHERE party = 'rainbow dream ticket'", -9.523339206580001], [" SELECT votes FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT votes FROM w WHERE party = 'rainbow dream ticket'", -9.881504065444], [" SELECT votes FROM w WHERE party = 'conservative'\nNeuralSQL2: SELECT votes FROM w WHERE party = 'rainbow dream ticket'", -10.36645450658]]}, "361": {"question": "was roddick a runner-up or winner more?", "gold_answer": ["Winner"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.10464158028], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.10464158028], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.10505270128], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.10505270128], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.10505270128], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.10505270128], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.10505270128], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -1.10505270128], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -2.60168860728], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner'", -2.61587636441]]}, "378": {"question": "in 1926 brazilian football,aside from the first place team, what other teams had winning records?", "gold_answer": ["Auto", "Corinthians", "Santos"], "pred_answer": {"0": [[4], [4], [4], [10], "<error>", [4], [5], [5], [5], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE won > lost", -2.66548537691], [" SELECT COUNT(*) FROM w WHERE won > lost", -2.66548537691], [" SELECT COUNT(*) FROM w WHERE won > lost", -2.66548537691], [" SELECT COUNT(*) FROM w WHERE points > 0", -3.63649595691], [" SELECT COUNT(*) FROM w WHERE `for` > `against`", -3.81149523853], [" SELECT COUNT(*) FROM w WHERE (won - lost) > 0", -4.214015634354], [" SELECT COUNT(*) FROM w WHERE `difference` > 0", -7.26370936058], [" SELECT COUNT(*) FROM w WHERE `difference` > 0", -7.26370936058], [" SELECT COUNT(*) FROM w WHERE `difference` > 0", -7.59538406058], [" SELECT COUNT(*) FROM w WHERE (`won` + `drawn`) / `played` > 0.5", -8.224128718610002]]}, "382": {"question": "did charles royer hold office longer than paul schell?", "gold_answer": ["yes"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT `term ended` - `term began` FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT `term ended` - `term began` FROM w WHERE name = 'paul schell'", -3.456216763740002], [" SELECT `term ended` - `term began` FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT `term ended` - `term began` FROM w WHERE name = 'paul schell'", -3.456216763740002], [" SELECT `term ended` - `term began` FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT `term ended` - `term began` FROM w WHERE name = 'paul schell'", -3.456216763740002], [" SELECT (`term ended` - `term began`) FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT (`term ended` - `term began`) FROM w WHERE name = 'paul schell'", -3.811090464367001], [" SELECT (`term ended` - `term began`) FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT (`term ended` - `term began`) FROM w WHERE name = 'paul schell'", -3.811090464367001], [" SELECT (`term ended` - `term began`) FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT (`term ended` - `term began`) FROM w WHERE name = 'paul schell'", -3.811090464367001], [" SELECT (term ended - term began) FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT (term ended - term began) FROM w WHERE name = 'paul schell'", -3.8902672594059986], [" SELECT SUM(`term ended` - `term began`) FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT SUM(`term ended` - `term began`) FROM w WHERE name = 'paul schell'", -6.582624697160001], [" SELECT `term ended` - `term began` FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT `term ended` - `term began` FROM w WHERE name = 'paul schell'", -6.669166186210002], [" SELECT SUM(`term ended` - `term began`) FROM w WHERE name = 'charles royer'\nNeuralSQL2: SELECT SUM(`term ended` - `term began`) FROM w WHERE name = 'paul schell'", -8.225321000030002]]}, "419": {"question": "after the united states, what country won the most gold medals.", "gold_answer": ["Jamaica"], "pred_answer": {"0": [[1], [1], ["total"], [1], ["total"], ["total"], [1], [1], [1], ["total"]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = (SELECT MAX(gold) FROM w)", -3.201764110335], [" SELECT COUNT(*) FROM w WHERE gold = (SELECT MAX(gold) FROM w)", -3.202117462335], [" SELECT nation FROM w ORDER BY gold DESC LIMIT 1", -4.014295607435001], [" SELECT COUNT(DISTINCT(nation)) FROM w WHERE gold = (SELECT MAX(gold) FROM w)", -4.595766146644999], [" SELECT nation FROM w ORDER BY gold DESC LIMIT 1", -5.161571065634999], [" SELECT nation FROM w WHERE gold = (SELECT MAX(gold) FROM w)", -5.378406017431], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold = (SELECT MAX(gold) FROM w)", -6.26505478338], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold = (SELECT MAX(gold) FROM w)", -6.267011521105999], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold = (SELECT MAX(gold) FROM w)", -7.094116321106], [" SELECT nation FROM w GROUP BY nation ORDER BY gold DESC LIMIT 1", -7.826388135813]]}, "423": {"question": "how many episodes are below 2.00?", "gold_answer": ["27"], "pred_answer": {"0": [[171], [171], [171], [171], [171], [171], [171], [171], [171], [171]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.00", -2.13314387559], [" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.00", -2.1334021691899996], [" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.00", -2.13505632845], [" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.00", -2.1352300238899997], [" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.00", -2.13540663409], [" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.00", -2.13540663409], [" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.00", -2.136540903886], [" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.00", -2.137036596845], [" SELECT COUNT(*) FROM w WHERE `episode(s)` < 2.0", -5.2291141009599995], [" SELECT COUNT(*) FROM w WHERE episode(s) < 2.00", -5.88505942296]]}, "464": {"question": "what is the total of named trains?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT named trains) FROM w", -2.2950080119400003], [" SELECT COUNT(*) FROM w", -4.7691057278], [" SELECT COUNT(*) FROM w", -4.7691057278], [" SELECT COUNT(*) FROM w", -5.4389340944399995], [" SELECT COUNT(*) FROM w", -5.4389340944399995], [" SELECT COUNT(*) FROM w", -5.4401547507300005], [" SELECT COUNT(*) FROM w", -6.42838192273], [" SELECT COUNT(*) FROM w", -6.42838192273], [" SELECT COUNT(DISTINCT named trains) FROM w", -8.678183410940001], [" SELECT COUNT(*) FROM w\n```", -10.85642474758]]}, "505": {"question": "were there more cause undetermined or miscellaneous deaths in the baltic states?", "gold_answer": ["Cause undetermined"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT `baltic states(resettled in poland during war)` FROM w WHERE description = 'cause undetermined'\nNeuralSQL2: SELECT `baltic states(resettled in poland during war)` FROM w WHERE description = 'miscellaneous'", -3.6085664430967004], [" SELECT `baltic states(resettled in poland during war)` FROM w WHERE description = 'cause undetermined'\nNeuralSQL2: SELECT `baltic states(resettled in poland during war)` FROM w WHERE description = 'miscellaneous'", -3.624799631707401], [" SELECT `baltic states(resettled in poland during war)` FROM w WHERE description = 'cause undetermined'\nNeuralSQL2: SELECT `baltic states(resettled in poland during war)` FROM w WHERE description = 'miscellaneous'", -3.6670244094433997], [" SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'cause undetermined'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'miscellaneous'", -5.3492882149895], [" SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'cause undetermined'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'miscellaneous'", -5.362254246038199], [" SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'cause undetermined'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'miscellaneous'", -5.362254246038199], [" SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'cause undetermined'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'miscellaneous'", -5.362422298515102], [" SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description LIKE '%deaths%'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description LIKE '%misc%'", -8.499254509068999], [" SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description LIKE '%cause undetermined%'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description LIKE '%miscellaneous%'", -13.814897800319], [" SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description LIKE '%cause undetermined%'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description LIKE '%miscellaneous%'", -15.259568271428495]]}, "546": {"question": "how many italians finished in the top ten?", "gold_answer": ["3"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank <= 10", -3.1347314964999997], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank <= 10", -3.1347314964999997], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank <= 10", -3.1347314964999997], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank <= 10", -3.1351321385], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank <= 10", -3.1351321385], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank < 10", -3.7442190825], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank < 10", -3.7442190825], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank < 10", -3.7451231601], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank < 10.0", -5.1743732655], [" SELECT COUNT(*) FROM w WHERE nation = 'italy' AND rank <= 10", -5.497881712299999]]}, "587": {"question": "which driver is the only driver who retired because of collision damage?", "gold_answer": ["Jarno Trulli"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `time/retired` = 'collision damage'", -1.8436755884700002], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'collision damage'", -1.8436755884700002], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'collision damage'", -1.8436755884700002], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'collision damage'", -2.95959742097], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'collision damage'", -2.95969750847], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE 'collision damage'", -3.2851762346699998], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%collision%'", -7.3520988783700005], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%collision damage%'", -7.8810182289099995], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%collision damage%'", -11.75950057291], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%collision damage%'", -12.071749919299998]]}, "628": {"question": "how many locations have or had at least 2 windmills?", "gold_answer": ["4"], "pred_answer": {"0": [[2, 3, 2, 2], [2, 3, 2, 2], [1, 1, 1, 1], [1, 1, 1, 1], [2, 3, 2, 2], [4], [9], [0], "<error>", [2, 3, 2, 2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY location HAVING COUNT(*) >= 2", -3.5900454938300004], [" SELECT COUNT(*) FROM w GROUP BY location HAVING COUNT(*) >= 2", -3.5904659694600003], [" SELECT COUNT(DISTINCT location) FROM w GROUP BY location HAVING COUNT(*) >= 2", -5.324134122994], [" SELECT COUNT(DISTINCT location) FROM w GROUP BY location HAVING COUNT(*) >= 2", -5.435387240081], [" SELECT COUNT(*) FROM w GROUP BY location HAVING COUNT(*) >= 2", -5.442025900209999], [" SELECT COUNT(DISTINCT location) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) >= 2)", -6.333832900111002], [" SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) >= 2)", -6.75435015706], [" SELECT COUNT(DISTINCT location) FROM w WHERE location LIKE '% windmill%'", -9.035824300321], [" SELECT COUNT(DISTINCT location) FROM w WHERE COUNT(*) > 1 GROUP BY location", -13.346956830369], [" SELECT COUNT(*) FROM w GROUP BY location HAVING COUNT(*) >= 2\n```", -14.64090646879]]}, "669": {"question": "how many networks does tv azteca own?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.6098048863749999], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.6099885928550002], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.610101105215], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -1.610101225355], [" SELECT COUNT(DISTINCT(network name)) FROM w WHERE owner = 'tv azteca'", -3.6428449675449994], [" SELECT COUNT(*) FROM w WHERE owner = 'tv azteca'", -4.319848137005001], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'tv azteca'", -5.9066135131949995], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'tv azteca'", -5.9066135131949995], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'tv azteca'", -6.41888968368], [" SELECT COUNT(DISTINCT network) FROM w WHERE owner = 'tv azteca'", -8.5678218577]]}, "710": {"question": "what is the total number of points earned in the years 2009?", "gold_answer": ["134"], "pred_answer": {"0": [[57], [57], ["57"], [134], [57], [0], [57], [134], [57], ["57 "]], "1": ["<error>"]}, "nsql": [[" SELECT CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, 'pts') - (INSTR(winners, '(') + 1)) AS INT) FROM w WHERE year = 2009", -9.165286372459999], [" SELECT CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, ' pts)') - (INSTR(winners, '(') + 1)) AS INT) FROM w WHERE year = 2009", -10.110190504849998], [" SELECT (SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, ' pts') - (INSTR(winners, '(') + 1))) FROM w WHERE year = 2009", -10.836802351760005], [" SELECT CAST(SUBSTR(winners, INSTR(winners, '(') + 1, LENGTH(winners) - (INSTR(winners, '(') + 1)) AS INT) + CAST(SUBSTR(runner-up, INSTR(runner-up, '(') + 1, LENGTH(runner-up) - (INSTR(runner-up, '(') + 1)) AS INT) + CAST(SUBSTR(3rd place, INSTR(3rd place, '(') + 1, LENGTH(3rd place) - (INSTR(3rd place, '(') + 1)) AS INT) FROM w WHERE year = 2009", -11.369037228153193], [" SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, ' pts') - INSTR(winners, '(') - 1) AS INT)) FROM w WHERE year = 2009", -11.389315688100003], [" SELECT CAST(SUBSTR(winners, 1, INSTR(winners, '(') - 1) AS INT) + CAST(SUBSTR(runner-up, 1, INSTR(runner-up, '(') - 1) AS INT) + CAST(SUBSTR(3rd place, 1, INSTR(3rd place, '(') - 1) AS INT) FROM w WHERE year = 2009", -13.634098760834004], [" SELECT CAST(SUBSTR(winners, INSTR(winners, '(') + 1, LENGTH(winners) - (INSTR(winners, '(') + 1)) AS INT) FROM w WHERE year = 2009", -16.31831162498], [" SELECT CAST(SUBSTR(winners, INSTR(winners, '(') + 1, LENGTH(winners) - (INSTR(winners, '(') + 1) - 1) AS INT) + CAST(SUBSTR(runner-up, INSTR(runner-up, '(') + 1, LENGTH(runner-up) - (INSTR(runner-up, '(') + 1) - 1) AS INT) + CAST(SUBSTR(`3rd place`, INSTR(`3rd place`, '(') + 1, LENGTH(`3rd place`) - (INSTR(`3rd place`, '(') + 1) - 1) AS INT) FROM w WHERE year = 2009", -16.605618347377995], [" SELECT CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, ')') - INSTR(winners, '(') - 1) AS INT) FROM w WHERE year = 2009\n```", -18.968370373179997], [" SELECT (SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, 'pts') - (INSTR(winners, '(') + 1))) FROM w WHERE year = 2009", -20.26817633269]]}, "751": {"question": "how many networks do not air sports?", "gold_answer": ["2"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE programming type NOT LIKE '%sports%'", -2.5559381553300002], [" SELECT COUNT(*) FROM w WHERE programming type NOT LIKE '%sports%'", -2.566311637987], [" SELECT COUNT(*) FROM w WHERE programming type NOT LIKE '%sports%'", -2.566311637987], [" SELECT COUNT(*) FROM w WHERE programming type NOT LIKE '%sports%'", -2.566311637987], [" SELECT COUNT(*) FROM w WHERE NOT programming type LIKE '%sports%'", -4.6845827299869995], [" SELECT COUNT(*) FROM w WHERE programming type NOT LIKE '%sports%'", -4.768150264987], [" SELECT COUNT(*) FROM w WHERE programming type NOT LIKE '%sports%'", -4.768150264987], [" SELECT COUNT(DISTINCT network name) FROM w WHERE programming type NOT LIKE '%sports%'", -5.662213161427], [" SELECT COUNT(DISTINCT network name) FROM w WHERE programming type NOT LIKE '%sports%'", -7.299836587707], [" SELECT COUNT(*) FROM w WHERE `programming type` NOT LIKE '%sports%'", -10.600625827792001]]}, "792": {"question": "how many drivers earned 5 bonus each in the race?", "gold_answer": ["19"], "pred_answer": {"0": [[19], [19], [19], [19], [19], [19], [19], [19], [19], [19]]}, "nsql": [[" SELECT COUNT(DISTINCT driver) FROM w WHERE bonus = 5.0", -3.07159052022], [" SELECT COUNT(DISTINCT driver) FROM w WHERE bonus = 5", -3.660662743045], [" SELECT COUNT(*) FROM w WHERE bonus = 5.0", -3.9774072701600005], [" SELECT COUNT(*) FROM w WHERE bonus = 5.0", -3.9774072701600005], [" SELECT COUNT(*) FROM w WHERE bonus = 5.0", -3.97798854266], [" SELECT COUNT(*) FROM w WHERE bonus = 5.0", -7.975735693253999], [" SELECT COUNT(*) FROM w WHERE bonus = 5.0", -8.42174306759], [" SELECT COUNT(*) FROM w WHERE bonus = 5.0", -8.584005867590001], [" SELECT COUNT(*) FROM w WHERE bonus = 5.0", -8.689608467589998], [" SELECT COUNT(*) FROM w WHERE bonus = 5.0", -8.893627893254]]}, "833": {"question": "how many gold medals did india win?", "gold_answer": ["102"], "pred_answer": {"0": [[102], [102], [102], [102], [102], [102], [102], [102], [102], [102]], "1": ["<error>", "<error>"], "2": [[4]], "3": ["<error>"], "4": [[4]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": [[6]], "9": ["<error>"], "10": [[6]], "11": ["<error>"], "12": [[7]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'india'", -1.2310354096], [" SELECT gold FROM w WHERE nation = 'india'", -1.2310354096], [" SELECT gold FROM w WHERE nation = 'india'", -1.2310354096], [" SELECT gold FROM w WHERE nation = 'india'", -1.2310354096], [" SELECT gold FROM w WHERE nation = 'india'", -4.17920490174], [" SELECT gold FROM w WHERE nation = 'india'", -4.17920490174], [" SELECT `gold` FROM w WHERE nation = 'india'", -7.42874496229], [" SELECT gold FROM w WHERE nation = 'india'", -7.827968963], [" SELECT gold FROM w WHERE nation = 'india'\n```", -10.0085009086], [" SELECT gold FROM w WHERE nation = 'india'\nQ2: {how many = a2} nations won more than 2 gold medals.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold > 2\nQ3: {how many = a3} nations won more than 2 gold medals and more than 3 silver medals.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE gold > 2 AND silver > 3\nQ4: {how many = a4} nations won more than 3 silver medals.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE silver > 3\nQ5: {how many = a5} nations won more than 3 silver medals and more than 4 bronze medals.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE silver > 3 AND bronze > 4\nQ6: {how many = a6} nations won more than 4 bronze medals.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE bronze > 4\nQ7: {how many = a7} nations won more than 4 bronze medals and more than 5 total medals.\nNeuralSQL7: SELECT COUNT(*) FROM w", -35.046539406016]]}, "874": {"question": "how many consecutive floor exercise gold medals did romanian star andreea raducan win at the world championships?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [0], [0], [0], [0], [2], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 'andreea raducan'", -4.01120528152], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea raducan%'", -6.380589330964], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea raducan%'", -6.380589330964], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea raducan%'", -6.380589330964], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea raducan%'", -6.415561062948001], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea r\u0103ducan%'", -7.501889212990001], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea raducan%'", -10.629483763884], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea raducan%'", -11.321590463884], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea raducan%'", -11.700767229748], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%andreea raducan%'", -12.331399329747999]]}, "915": {"question": "how many songs were on the track list?", "gold_answer": ["17"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.3461827317589998], [" SELECT COUNT(*) FROM w", -1.3461827317589998], [" SELECT COUNT(*) FROM w", -1.3461827317589998], [" SELECT COUNT(*) FROM w", -1.3462949544149998], [" SELECT COUNT(*) FROM w", -1.3478424412550003], [" SELECT COUNT(*) FROM w", -1.3478424412550003], [" SELECT COUNT(*) FROM w", -2.861029945155], [" SELECT COUNT(*) FROM w", -2.8652777561550002], [" SELECT COUNT(*) FROM w", -2.8652777561550002], [" SELECT COUNT(*) FROM w", -3.429865348855]]}, "956": {"question": "how many swimmers had a time of at least 1:00", "gold_answer": ["9"], "pred_answer": {"0": [[20], [20], [20], [20], [20], [20], [20], [20], [20], [20]], "1": ["<error>"], "2": [[16]], "3": ["<error>"], "4": [[15]], "5": ["<error>"], "6": [[15]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -2.2342948910870004], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -2.2342948910870004], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -2.2342948910870004], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -2.2342948910870004], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -2.2342948910870004], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -2.2342948910870004], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -2.2342948910870004], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -4.10776072559], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'", -4.10776072559], [" SELECT COUNT(*) FROM w WHERE time >= '1:00'\nQ2: {how many = a2} swimmers had a time of at least 1:00 and at least 1 rank.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE time >= '1:00' AND rank != '--'\nQ3: {how many = a3} swimmers had a time of at least 1:00 and at least 1 rank and a rank of at least 10.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE time >= '1:00' AND rank != '--' AND rank >= '10'\nQ4: {how many = a4} swimmers had a time of at least 1:00 and at least 1 rank and a rank of at least 10 and a country of at least 1.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE time >= '1:00' AND rank != '--' AND rank >= '10' AND country != 'none'", -45.92139368232996]]}, "997": {"question": "how many different drivers are listed?", "gold_answer": ["23"], "pred_answer": {"0": [[23], [23], [23], [23], [23], [23], [23], [23], [23], [23]]}, "nsql": [[" SELECT COUNT(DISTINCT driver) FROM w", -4.512231882910001], [" SELECT COUNT(DISTINCT driver) FROM w", -8.621840428670001], [" SELECT COUNT(DISTINCT driver) FROM w", -8.71452092867], [" SELECT COUNT(DISTINCT driver) FROM w", -9.02063312867], [" SELECT COUNT(DISTINCT driver) FROM w", -9.63819420077], [" SELECT COUNT(DISTINCT driver) FROM w", -10.77507779867], [" SELECT COUNT(DISTINCT driver) FROM w", -10.83040697158], [" SELECT COUNT(DISTINCT driver) FROM w", -12.187131253650001], [" SELECT COUNT(DISTINCT driver) FROM w", -14.765824058669999], [" SELECT COUNT(DISTINCT driver) FROM w", -15.46773245867]]}, "1000": {"question": "how many directors served more than 3 years?", "gold_answer": ["3"], "pred_answer": {"0": [[2], [0], [0], [3], [3], [1], [4], [0], [0], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, 4) AS INT) - CAST(SUBSTR(`term of office`, 1, 4) AS INT)) > 3", -8.779473792300998], [" SELECT COUNT(*) FROM w WHERE `term of office` LIKE '% - %' AND (CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, '-') - 1) AS INT) - CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, ' - ') + 1)) AS INT)) > 3", -8.860666135484003], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, ' - ') - 1) AS INT) - CAST(SUBSTR(`term of office`, INSTR(`term of office`, ' - ') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, ' - ') + 1)) AS INT)) > 3", -8.880076904859004], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, INSTR(`term of office`, ' - ') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, ' - ') + 1)) AS INT) - CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, ' - ') - 1) AS INT)) > 3", -9.462205865052999], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, LENGTH(`term of office`) - 3, 4) AS INT) - CAST(SUBSTR(`term of office`, 1, 4) AS INT)) > 3", -11.440840327276], [" SELECT COUNT(*) FROM w WHERE `term of office` LIKE '% \u2013 %' AND (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, ' - ') + 1)) AS INT) - CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, '-') - 1) AS INT)) > 3", -11.733365811976002], [" SELECT COUNT(*) FROM w WHERE SUBSTR(`term of office`, LENGTH(`term of office`) - 4, 5) - SUBSTR(`term of office`, 1, 4) > 3", -11.7530018737], [" SELECT COUNT(*) FROM w WHERE `term of office` LIKE '% - %' AND (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, ' - ') + 1)) AS INT) - CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, '-') - 1) AS INT)) > 3", -11.833565507064998], [" SELECT COUNT(*) FROM w WHERE `term of office` LIKE '%-%-% - %-%-%' AND (CAST(SUBSTR(`term of office`, INSTR(`term of office`, ' - ') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, ' - ') + 1)) AS INT) - CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, ' - ') - 1) AS INT)) > 3", -13.304520618753], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, '-') + 1)) AS INT) - CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, '-') - 1) AS INT)) > 3", -16.998254355992998]]}, "1021": {"question": "what is the number of away games ?", "gold_answer": ["6"], "pred_answer": {"0": [[11], [11], [0], [0], [11], [11], [11], [0], [11], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE site LIKE '% \u2022 %, %'", -6.241151895770001], [" SELECT COUNT(*) FROM w WHERE site LIKE '% \u2022 %, %'", -6.57289130012], [" SELECT COUNT(*) FROM w WHERE site LIKE '% at %'", -9.474467418175], [" SELECT COUNT(*) FROM w WHERE site LIKE 'at%'", -9.74197964204], [" SELECT COUNT(*) FROM w WHERE site LIKE '% \u2022 %'", -10.948591482280001], [" SELECT COUNT(*) FROM w WHERE site LIKE '% \u2022 %'", -10.948591482280001], [" SELECT COUNT(*) FROM w WHERE site LIKE '% \u2022 %'", -11.697963682280001], [" SELECT COUNT(*) FROM w WHERE site LIKE 'at%'", -12.003284411039997], [" SELECT COUNT(*) FROM w WHERE site LIKE '% \u2022 %'", -12.356144882279999], [" SELECT COUNT(*) FROM w WHERE site LIKE 'at%'", -14.958163773039999]]}, "1038": {"question": "what is the total number of drivers on the list?", "gold_answer": ["20"], "pred_answer": {"0": [[20], [20], [20], [20], [20], [20], [20], [20], [20], ["sebastian vettel", "mark webber", "jenson button", "rubens barrichello", "heikki kovalainen", "lewis hamilton", "timo glock", "s\u00e9bastien buemi", "fernando alonso", "kimi r\u00e4ikk\u00f6nen", "s\u00e9bastien bourdais", "nick heidfeld", "robert kubica", "giancarlo fisichella", "nico rosberg", "nelson piquet, jr.", "adrian sutil", "kazuki nakajima", "felipe massa", "jarno trulli"]]}, "nsql": [[" SELECT COUNT(DISTINCT driver) FROM w", -1.8088325554899998], [" SELECT COUNT(DISTINCT driver) FROM w", -1.8088325554899998], [" SELECT COUNT(DISTINCT driver) FROM w", -1.8088325554899998], [" SELECT COUNT(DISTINCT driver) FROM w", -1.8088325554899998], [" SELECT COUNT(DISTINCT driver) FROM w", -1.810547220274], [" SELECT COUNT(DISTINCT driver) FROM w", -1.810547220274], [" SELECT COUNT(DISTINCT driver) FROM w", -1.810547220274], [" SELECT COUNT(DISTINCT driver) FROM w", -1.810547220274], [" SELECT COUNT(DISTINCT driver) FROM w", -3.5007533314899995], [" SELECT DISTINCT(driver) FROM w", -5.54519866537]]}, "1042": {"question": "what is the number of russian participants?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.291630661959999], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.291630661959999], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.34065326196], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.4721705896129995], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.4721705896129995], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.4721705896129995], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.4721705896129995], [" SELECT COUNT(*) FROM w WHERE nationality = 'russian'", -5.029082054412999], [" SELECT COUNT(*) FROM w WHERE nationality = 'russian'", -5.029082054412999], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -5.036641789613]]}, "1079": {"question": "how many coaches have coached from america?", "gold_answer": ["6"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'america'", -2.6256116957700004], [" SELECT COUNT(*) FROM w WHERE nationality = 'america'", -2.6256116957700004], [" SELECT COUNT(*) FROM w WHERE nationality = 'america'", -2.6256116957700004], [" SELECT COUNT(*) FROM w WHERE nationality = 'america'", -2.6256116957700004], [" SELECT COUNT(*) FROM w WHERE nationality = 'america'", -2.6256116957700004], [" SELECT COUNT(*) FROM w WHERE nationality = 'america'", -2.6392372361500005], [" SELECT COUNT(*) FROM w WHERE `from` = 'america'", -4.527416197659999], [" SELECT COUNT(*) FROM w WHERE nationality = 'america'", -4.85354251041], [" SELECT COUNT(*) FROM w WHERE nationality = 'america'", -4.863032293770001], [" SELECT COUNT(*) FROM w WHERE `from` BETWEEN 1980 AND 1989", -10.54754456279]]}, "1083": {"question": "in total, how many different tv series has gauri tejwani either starred or cameoed in?", "gold_answer": ["11"], "pred_answer": {"0": [[12], [12], [12], [11], [11], [12], [11], [12], [12], [11]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[5]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT show) FROM w", -1.9927881133999996], [" SELECT COUNT(DISTINCT show) FROM w", -1.9927881133999996], [" SELECT COUNT(DISTINCT(show)) FROM w", -2.7570609259000003], [" SELECT COUNT(DISTINCT show) FROM w WHERE role != 'none'", -4.1910032701699995], [" SELECT COUNT(DISTINCT show) FROM w WHERE role != 'none'", -4.1910032701699995], [" SELECT COUNT(DISTINCT show) FROM w WHERE show != 'none'", -4.939204498900001], [" SELECT COUNT(DISTINCT(show)) FROM w WHERE role != 'none'", -5.188677327900001], [" SELECT COUNT(DISTINCT show) FROM w WHERE show != 'none'", -8.400947680400002], [" SELECT COUNT(DISTINCT show) FROM w WHERE role NOT LIKE '%cameo%'", -16.29701299222], [" SELECT COUNT(DISTINCT show) FROM w WHERE role != 'none'\nQ2: {how many = a2} of the tv series in which gauri tejwani has starred in were in the year 2003.\nNeuralSQL2: SELECT COUNT(DISTINCT show) FROM w WHERE role != 'none' AND year = 2003\nQ3: {how many = a3} of the tv series in which gauri tejwani has starred in were in the year 2003 or 2005.\nNeuralSQL3: SELECT COUNT(DISTINCT show) FROM w WHERE role != 'none' AND year IN (2003, 2005)\nQ4: {how many = a4} of the tv series in which gauri tejwani has starred in were in the year 2003 and 2005.\nNeuralSQL4: SELECT COUNT(DISTINCT show) FROM w WHERE role != 'none' AND year IN (2003, 2005) AND COUNT(DISTINCT show) = 2", -55.650826828894004]]}, "1124": {"question": "what is the only season he has fewer than three sacks?", "gold_answer": ["2007"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[12]], "3": ["<error>"], "4": [[11]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[0]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE sacks < 3", -1.08556904013], [" SELECT COUNT(*) FROM w WHERE sacks < 3", -1.08556904013], [" SELECT COUNT(*) FROM w WHERE sacks < 3", -1.08556904013], [" SELECT COUNT(*) FROM w WHERE sacks < 3", -1.08556904013], [" SELECT COUNT(*) FROM w WHERE sacks < 3", -1.09073846713], [" SELECT COUNT(*) FROM w WHERE sacks < 3", -1.09073846713], [" SELECT COUNT(*) FROM w WHERE sacks < 3", -3.380610985729999], [" SELECT COUNT(*) FROM w WHERE sacks < 3", -3.38586906683], [" SELECT COUNT(*) FROM w WHERE sacks < 3", -3.38586906683], [" SELECT COUNT(*) FROM w WHERE sacks < 3\nQ2: {how many = a2} season he has more than three sacks.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE sacks > 3\nQ3: {how many = a3} season he has more than three sacks and fewer than three interceptions.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE sacks > 3 AND interceptions < 3\nQ4: {how many = a4} season he has more than three sacks, fewer than three interceptions, and more than three passes defended.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE sacks > 3 AND interceptions < 3 AND passes defended > 3\nQ5: {how many = a5} season he has more than three sacks, fewer than three interceptions, more than three passes defended, and more than three fumble recoveries.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE sacks > 3 AND interceptions < 3 AND passes defended > 3 AND fumble recoveries > 3\nQ6: {how many = a6} season he has more than three sacks, fewer than three interceptions, more than three passes defended,", -36.89557610754]]}, "1165": {"question": "how many \"best of\" volumes compile the top episodes of the television show \"the two ronnies\".", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE dvd title LIKE '%best of%'", -2.8348422955], [" SELECT COUNT(*) FROM w WHERE dvd title LIKE '%best of%'", -2.8348422955], [" SELECT COUNT(*) FROM w WHERE dvd title LIKE '%best of%'", -3.9821840315], [" SELECT COUNT(DISTINCT dvd title) FROM w WHERE `dvd title` LIKE '%best of%'", -6.721674300716001], [" SELECT COUNT(*) FROM w WHERE `dvd title` LIKE '%best of%'", -7.83920692351], [" SELECT COUNT(*) FROM w WHERE `dvd title` LIKE 'the best of%'", -8.906103358200001], [" SELECT COUNT(*) FROM w WHERE `dvd title` LIKE '%best of%'", -10.21680768451], [" SELECT COUNT(*) FROM w WHERE `dvd title` LIKE '%best of%'", -10.560251931509999], [" SELECT COUNT(*) FROM w WHERE `dvd title` LIKE '%best of%'", -11.37273868451], [" SELECT COUNT(*) FROM w WHERE `dvd title` LIKE '%best of%'", -15.946392509180003]]}, "1206": {"question": "how many episode are not over 14%?", "gold_answer": ["8"], "pred_answer": {"0": ["<error>", "<error>", [8], [8], [8], [8], [8], [8], [8], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE ratings < 14", -3.7046453818], [" SELECT COUNT(*) FROM w WHERE ratings < 14", -3.7046453818], [" SELECT COUNT(*) FROM w WHERE ratings < '14%'", -7.06222257617], [" SELECT COUNT(*) FROM w WHERE ratings < '14%'", -7.065132084570001], [" SELECT COUNT(*) FROM w WHERE ratings < '14%'", -7.12506958457], [" SELECT COUNT(*) FROM w WHERE ratings < '14%'", -7.12506958457], [" SELECT COUNT(*) FROM w WHERE ratings < '14%'", -7.431833376169999], [" SELECT COUNT(*) FROM w WHERE ratings < '14%'", -8.02464478457], [" SELECT COUNT(*) FROM w WHERE ratings < '14%'", -9.39064246197], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(ratings, '%', '') AS DECIMAL) < 14", -11.733384025680001]]}, "1247": {"question": "how many of the players did not score any goals in the cup?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9917208922199999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9917208922199999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9917208922199999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9917208922199999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9917208922199999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9917208922199999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -0.9917208922199999], [" SELECT COUNT(*) FROM w WHERE cup = 0", -4.12785928066], [" SELECT COUNT(*) FROM w WHERE cup = 0", -4.13234068502], [" SELECT COUNT(*) FROM w WHERE cup = 0", -4.13234068502]]}, "29": {"question": "between bjorn ferry, simon elder and erik lesser - who had the most penalties?", "gold_answer": ["Erik Lesser"], "pred_answer": {"0": [[1], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[1], [3], [3], [3], [3], [3], [3], [0], [0], [0]], "2": [[1], [4], [4], [4], [4], [4], [4], "<error>", [0], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE name = 'erik lesser'", -3.7691380315939993], [" SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'erik lesser'", -4.848326472587097], [" SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'erik lesser'", -4.863097570889703], [" SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, 1, INSTR(`penalties (p+p+s+s)`, '(') - 1) AS INT) FROM w WHERE name = 'erik lesser'", -4.871359707877208], [" SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'erik lesser'", -6.4574445517050005], [" SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'erik lesser'", -6.4821804202190005], [" SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT CAST(REPLACE(`penalties (p+p+s+s)`,'(','') AS INT) FROM w WHERE name = 'erik lesser'", -6.4867278769270005], [" SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, INSTR(`penalties (p+p+s+s)`, '(') + 1, INSTR(`penalties (p+p+s+s)`, '+') - (INSTR(`penalties (p+p+s+s)`, '(') + 1)) AS INT) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, INSTR(`penalties (p+p+s+s)`, '(') + 1, INSTR(`penalties (p+p+s+s)`, '+') - (INSTR(`penalties (p+p+s+s)`, '(') + 1)) AS INT) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT CAST(SUBSTR(`penalties (p+p+s+s)`, INSTR(`penalties (p+p+s+s)`, '('", -8.17986350815251], [" SELECT COUNT(*) FROM w WHERE name = 'bjorn ferry' AND penalties (p+p+s+s) LIKE '%p%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'simon elder' AND penalties (p+p+s+s) LIKE '%p%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE name = 'erik lesser' AND penalties (p+p+s+s) LIKE '%p%'", -10.916947386735497], [" SELECT CAST(REPLACE(SUBSTR(`penalties (p+p+s+s)`, INSTR(`penalties (p+p+s+s)`, '('), LENGTH(`penalties (p+p+s+s)`) - INSTR(`penalties (p+p+s+s)`, '(') - 1), ')', '') AS INT) FROM w WHERE name = 'bjorn ferry'\nNeuralSQL2: SELECT CAST(REPLACE(SUBSTR(`penalties (p+p+s+s)`, INSTR(`penalties (p+p+s+s)`, '('), LENGTH(`penalties (p+p+s+s)`) - INSTR(`penalties (p+p+s+s)`, '(') - 1), ')', '') AS INT) FROM w WHERE name = 'simon elder'\nNeuralSQL3: SELECT CAST(REPLACE(SUBSTR(`penalties (p+p+s+s)`, INSTR(`penalties (p", -14.392647538558995]]}, "70": {"question": "how many titles did not list an english translation?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -4.196678414450001], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -5.66285588065], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -5.66285588065], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -5.66285588065], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -5.66285588065], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -5.66285588065], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -5.66285588065], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -7.54791038065], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -8.09625865016], [" SELECT COUNT(*) FROM w WHERE `title (english translation)` = 'none'", -9.1084436881]]}, "111": {"question": "how many films did ms. starfelt produce after 2010?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -5.69719734495], [" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -5.712253645799999], [" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -10.226894819500002], [" SELECT COUNT(*) FROM w WHERE year >= 2010 AND `function` LIKE '%producer%'", -11.24106666195], [" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -12.0227870695], [" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -12.52536396026], [" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -13.38166813805], [" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -15.40889993805], [" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -15.9146243695], [" SELECT COUNT(*) FROM w WHERE year > 2010 AND function LIKE '%producer%'", -18.18732765909]]}, "152": {"question": "how many wins are listed for the season?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[5]], "5": ["<error>"], "6": [[5]], "7": ["<error>"], "8": [[5]], "9": ["<error>"], "10": [[5]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.00537224324], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.03523285456], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.05319485456], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.5843870545600005], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.80743605456], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.87098505456], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -7.57538563476], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -8.594873634759999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -8.66076163476], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nQ2: {how many = a2} of the games were played at home.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE site LIKE '%autzen stadium%'\nQ3: {how many = a3} of the games were played at home.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE site LIKE '%autzen stadium%'\nQ4: {how many = a4} of the games were played at home.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE site LIKE '%autzen stadium%'\nQ5: {how many = a5} of the games were played at home.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE site LIKE '%autzen stadium%'\nQ6: {how many = a6} of the games were played at home.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE site LIKE '%autzen stadium%'\nQ7: {how many = a7} of the games were played at home.\nNeuralSQL7:", -25.36287670679101]]}, "193": {"question": "how many votes were counted as invalid or blank votes?", "gold_answer": ["0"], "pred_answer": {"0": [[752692], [752692], [0.0], [0.0], [0.0], [0.0], [292576], [0.0], [0.0], [0.0]]}, "nsql": [[" SELECT SUM(votes) FROM w WHERE party = 'registered voters/turnout'", -7.101058369804001], [" SELECT SUM(votes) FROM w WHERE party = 'registered voters/turnout'", -7.179559069804], [" SELECT SUM(votes) FROM w WHERE party LIKE '%invalid%' OR party LIKE '%blank%'", -8.752234945238003], [" SELECT SUM(votes) FROM w WHERE party LIKE '%invalid%' OR party LIKE '%blank%'", -8.757473262925], [" SELECT SUM(votes) FROM w WHERE party LIKE '%invalid%' OR party LIKE '%blank%'", -8.757473262925], [" SELECT SUM(votes) FROM w WHERE party = 'invalid/blank votes'", -9.89550759123], [" SELECT SUM(votes) FROM w WHERE party IN ('general league of roman catholic caucuses', 'liberal democratic league', 'free-thinking democratic league')", -10.709023047050001], [" SELECT SUM(votes) FROM w WHERE party LIKE '%votes%'", -13.594294506179999], [" SELECT SUM(votes) FROM w WHERE party LIKE '%votes%'", -13.81324371818], [" SELECT SUM(votes) FROM w WHERE party LIKE '%invalid%' OR party LIKE '%blank%'", -14.057690884925]]}, "234": {"question": "how many teams are named after birds?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [7], [7], [7], [2], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team name LIKE '%bird%'", -3.4991344535], [" SELECT COUNT(*) FROM w WHERE team name LIKE '%bird%'", -3.5080961557599997], [" SELECT COUNT(*) FROM w WHERE team name LIKE '%bird%'", -3.5080961557599997], [" SELECT COUNT(*) FROM w WHERE team name LIKE '%bird%'", -3.5080961557599997], [" SELECT COUNT(*) FROM w WHERE team name LIKE '%(lady)%'", -7.781567838570001], [" SELECT COUNT(*) FROM w WHERE team name LIKE '%(lady)%' AND team name LIKE '%(lady)%'", -9.20061716932], [" SELECT COUNT(*) FROM w WHERE team name LIKE '%(lady)%'\n```", -13.348236541619999], [" SELECT COUNT(*) FROM w WHERE team name LIKE '%eagles%' OR team name LIKE '%hawks%' OR team name LIKE '%cardinals%'", -15.290793920750001], [" SELECT COUNT(*) FROM w WHERE team name LIKE '%eagles%' OR team name LIKE '%hawks%' OR team name LIKE '%falcons%'", -17.684902883145003], [" SELECT COUNT(*) FROM w WHERE `team name` LIKE '% bird%' OR `team name` LIKE '% eagle%' OR `team name` LIKE '% falcon%' OR `team name` LIKE '% hawk%' OR `team name` LIKE '% owl%' OR `team name` LIKE '% raven%' OR `team name` LIKE '% sparrow%' OR `team name` LIKE '% swallow%' OR `team name` LIKE '% vulture%' OR `team name` LIKE '% woodpecker%' OR `team name` LIKE '% wren%'", -31.428396935733993]]}, "275": {"question": "name two players with goals above 15.", "gold_answer": ["Dmitri Alenichev", "Vyacheslav Ambartsumyan"], "pred_answer": {"0": [[71], [71], [71], [71], [71], [71], [71], [71], [71], [71]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001], [" SELECT COUNT(*) FROM w WHERE goals > 15", -0.8773508955700001]]}, "316": {"question": "what is the total number of times the competition was held at the semple stadium venue?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>", "<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": [[0]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -1.303381700344], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -1.303381700344], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -1.303381700344], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -1.303381700344], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -2.3681533703000004], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -2.3681533703000004], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -2.3681533703000004], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'", -2.3681533703000004], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'\n```", -5.1697533685], [" SELECT COUNT(*) FROM w WHERE venue = 'semple stadium'\nQ2: {how many = a2} of the winning captains were from dublin.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winning captain = 'dublin'\nQ3: {how many = a3} of the winning captains were from dublin.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winning captain = 'dublin'\nQ4: {how many = a4} of the winning captains were from dublin.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE winning captain = 'dublin'\nQ5: {how many = a5} of the winning captains were from dublin.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE winning captain = 'dublin'\nQ6: {how many = a6} of the winning captains were from dublin.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE winning captain = 'dublin'\nQ7: {how many = a7} of the winning captains were from dublin.\nNeuralSQL", -29.012586685043487]]}, "357": {"question": "how many stations have at least 5 kw or more listed in the power column?", "gold_answer": ["6"], "pred_answer": {"0": [[4], [4], [4], [6], [6], [6], [6], [6], [6], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `power (kw)` >= 5", -3.1069721906099996], [" SELECT COUNT(*) FROM w WHERE `power (kw)` >= 5", -3.12556413327], [" SELECT COUNT(*) FROM w WHERE `power (kw)` >= 5", -3.12556413327], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`power (kw)`,'kw','') AS INT) >= 5", -3.9528566499199997], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`power (kw)`, 'kw', '') AS INT) >= 5", -5.404575048029999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`power (kw)`,'kw','') AS INT) >= 5", -6.664755790779999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`power (kw)`,'kw','') AS INT) >= 5", -7.154545379999999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`power (kw)`,'kw','') AS INT) >= 5", -7.154545379999999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`power (kw)`,'\u00a0kw','') AS INT) >= 5", -7.81860039712], [" SELECT COUNT(*) FROM w WHERE `power (kw)` >= '5 kw'", -12.76359391688]]}, "360": {"question": "games above 30,000 in attendance", "gold_answer": ["21"], "pred_answer": {"0": [[21], [21], [21], [21], [21], [21], [21], [21], [21], [21]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance > 30000", -1.17971727023], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -1.17971727023], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -1.17971727023], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -1.17971727023], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -1.17971727023], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -1.17971727023], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -1.17971727023], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -1.17971727023], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -2.45980355223], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -2.45980355223]]}, "381": {"question": "how many men winners had times at least 46 minutes or under?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [5], [5], [2], [5], [12], [12], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `time (m:s)` <= '46:00'", -5.463573943609999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`time (m:s)`,':','') AS INT) <= 4600", -5.514882086859999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`time (m:s)`,':','') AS INT) <= 4600", -5.514882086859999], [" SELECT COUNT(*) FROM w WHERE `time (m:s)` < '46:00'", -6.11820933811], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`time (m:s)`,':','') AS INT) < 4600", -6.30762649486], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`time (m:s)`, 1, INSTR(`time (m:s)`, ':') - 1) AS INT) <= 46", -6.6492348111899995], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`time (m:s)`, 1, INSTR(`time (m:s)`, ':') - 1) AS INT) <= 46", -6.6492348111899995], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`time (m:s)`, ':', '') AS INT) <= 4600", -6.72167926186], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`time (m:s)`, ':', '') AS INT) <= 4600", -6.72167926186], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`time (m:s)`,':','') AS INT) <= 4600", -6.921859243859998]]}, "398": {"question": "what is the total number of components on the chart?", "gold_answer": ["18"], "pred_answer": {"0": [[18], [18], [18], [18], [18], [18], [18], [18], [18], [18]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.21566680753], [" SELECT COUNT(*) FROM w", -2.21747748459], [" SELECT COUNT(*) FROM w", -2.21747748459], [" SELECT COUNT(*) FROM w", -3.1179951405099993], [" SELECT COUNT(DISTINCT component) FROM w", -4.711651515200001], [" SELECT COUNT(DISTINCT component) FROM w", -10.511672868329999], [" SELECT COUNT(DISTINCT component) FROM w", -10.54712940408], [" SELECT COUNT(DISTINCT component) FROM w", -10.96969345075], [" SELECT COUNT(DISTINCT component) FROM w", -13.854074550750001], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} components have a model 01.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `model 01` = 'yes'\nQ3: {how many = a3} components have a model 01+.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `model 01+` = 'yes'\nQ4: {how many = a4} components have a model 02.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `model 02` = 'yes'\nQ5: {how many = a5} components have a model e2.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `model e2` = 'yes'\nQ6: {how many = a6} components have a model 2+.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `model 2+ (pre-production)` = 'yes'\nQ7: {how many = a7} components have a model 03.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE `model 03 (china copy", -22.628842327304]]}, "402": {"question": "how many months had a record high of 111 degrees?", "gold_answer": ["3"], "pred_answer": {"0": ["<error>", "<error>", [0], [0], "<error>", "<error>", [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `record high \u00b0f (\u00b0c)` = '111; (44)'", -4.119079885830001], [" SELECT COUNT(*) FROM w WHERE `record high \u00b0f (\u00b0c)` = '111; (44)'", -4.119079885830001], [" SELECT COUNT(*) FROM w WHERE jan = '111' OR feb = '111' OR mar = '111' OR apr = '111' OR may = '111' OR jun = '111' OR jul = '111' OR aug = '111' OR sep = '111' OR oct = '111' OR nov = '111' OR dec = '111'", -4.46997733306], [" SELECT COUNT(*) FROM w WHERE jan = '111' OR feb = '111' OR mar = '111' OR apr = '111' OR may = '111' OR jun = '111' OR jul = '111' OR aug = '111' OR sep = '111' OR oct = '111' OR nov = '111' OR dec = '111'", -4.479305039340002], [" SELECT COUNT(*) FROM w WHERE record high \u00b0f (\u00b0c) = '111; (44)'", -5.6283312012460005], [" SELECT COUNT(*) FROM w WHERE record high \u00b0f (\u00b0c) = '111; (44)'", -7.2045366069300005], [" SELECT COUNT(*) FROM w WHERE jan = '111; (44)' OR feb = '111; (44)' OR mar = '111; (44)' OR apr = '111; (44)' OR may = '111; (44)' OR jun = '111; (44)' OR jul = '111; (44)' OR aug = '111; (44)' OR sep = '111; (44)' OR oct = '111; (44)' OR nov = '111; (44)' OR dec = '111; (44)'", -8.768532048891998], [" SELECT COUNT(*) FROM w WHERE jan = '111; (44)' OR feb = '111; (44)' OR mar = '111; (44)' OR apr = '111; (44)' OR may = '111; (44)' OR jun = '111; (44)' OR jul = '111; (44)' OR aug = '111; (44)' OR sep = '111; (44)' OR oct = '111; (44)' OR nov = '111; (44)' OR dec = '111; (44)'", -8.768532048891998], [" SELECT COUNT(*) FROM w WHERE jan = '111; (44)' OR feb = '111; (44)' OR mar = '111; (44)' OR apr = '111; (44)' OR may = '111; (44)' OR jun = '111; (44)' OR jul = '111; (44)' OR aug = '111; (44)' OR sep = '111; (44)' OR oct = '111; (44)' OR nov = '111; (44)' OR dec = '111; (44)'", -9.060116157097], [" SELECT COUNT(*) FROM w WHERE (jan = '111; (44)' OR feb = '111; (44)' OR mar = '111; (44)' OR apr = '111; (44)' OR may = '111; (44)' OR jun = '111; (44)' OR jul = '111; (44)' OR aug = '111; (44)' OR sep = '111; (44)' OR oct = '111; (44)' OR nov = '111; (44)' OR dec = '111; (44)') AND month = 'record high \u00b0f (\u00b0c)'", -19.13701018357]]}, "439": {"question": "how many languages have a name that is derived from a country?", "gold_answer": ["4"], "pred_answer": {"0": [[3], [0], [3], [0], [0], [0], [0], [0], [0], [5]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE language IN ('ukrainian', 'russian', 'polish')", -4.855161267459999], [" SELECT COUNT(*) FROM w WHERE language LIKE '%land%' OR language LIKE '%stan%'", -7.0387003616], [" SELECT COUNT(*) FROM w WHERE language IN ('ukrainian', 'russian', 'polish')\n```", -7.29942587251], [" SELECT COUNT(DISTINCT language) FROM w WHERE language LIKE '%land' OR language LIKE '%land'", -8.644960198533001], [" SELECT COUNT(*) FROM w WHERE language LIKE '%land'", -9.327341085839999], [" SELECT COUNT(*) FROM w WHERE language LIKE '%land%' OR language LIKE '%stan%' OR language LIKE '%mark%'", -10.467797642999999], [" SELECT COUNT(*) FROM w WHERE language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%'", -11.551843870239999], [" SELECT COUNT(*) FROM w WHERE language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language LIKE '%land%' OR language", -11.598671109979989], [" SELECT COUNT(DISTINCT language) FROM w WHERE language LIKE '%land%' OR language LIKE '%land%'", -17.847816374123], [" SELECT COUNT(*) FROM w WHERE language LIKE '%land%' OR language LIKE '%stan%' OR language LIKE '%tan%' OR language LIKE '%sia%' OR language LIKE '%a%'", -19.515809341440004]]}, "443": {"question": "which owner has the most networks?", "gold_answer": ["Televisa"], "pred_answer": {"0": [["televisa"], ["televisa"], ["televisa", 4], ["televisa", 4], ["televisa", 4], ["televisa", 4], [1], [4], [4], ["televisa", 4]]}, "nsql": [[" SELECT owner FROM w GROUP BY owner ORDER BY COUNT(*) DESC LIMIT 1", -3.91136666628], [" SELECT owner FROM w GROUP BY owner ORDER BY COUNT(*) DESC LIMIT 1", -3.91136666628], [" SELECT owner, COUNT(*) FROM w GROUP BY owner ORDER BY COUNT(*) DESC LIMIT 1", -4.785348654706], [" SELECT owner, COUNT(*) FROM w GROUP BY owner ORDER BY COUNT(*) DESC LIMIT 1", -4.785348654706], [" SELECT owner, COUNT(*) FROM w GROUP BY owner ORDER BY COUNT(*) DESC LIMIT 1", -4.785348654706], [" SELECT owner, COUNT(DISTINCT network name) FROM w GROUP BY owner ORDER BY COUNT(DISTINCT network name) DESC LIMIT 1", -5.381557372875003], [" SELECT COUNT(DISTINCT owner) FROM w WHERE affiliates = (SELECT MAX(affiliates) FROM w)", -5.78365047299], [" SELECT COUNT(*) FROM w WHERE owner = (SELECT owner FROM w GROUP BY owner ORDER BY COUNT(*) DESC LIMIT 1)", -8.999673771540001], [" SELECT COUNT(*) FROM w WHERE owner = (SELECT owner FROM w GROUP BY owner ORDER BY COUNT(*) DESC LIMIT 1)", -8.999673771540001], [" SELECT owner, COUNT(*) AS c FROM w GROUP BY owner ORDER BY c DESC LIMIT 1", -12.821766827437003]]}, "484": {"question": "how many goalies drafted?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [0], [2], [2], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE player LIKE '%(g)%'", -4.046087506785], [" SELECT COUNT(*) FROM w WHERE player LIKE '% (g)%'", -4.136843403985], [" SELECT COUNT(*) FROM w WHERE player LIKE '% (g)%'", -4.142445430785], [" SELECT COUNT(*) FROM w WHERE `player` LIKE '% (g)%'", -4.896456632785], [" SELECT COUNT(*) FROM w WHERE player LIKE '%(g)%'", -5.439597397785], [" SELECT COUNT(*) FROM w WHERE `player` LIKE '%(g)'", -5.736803674785], [" SELECT COUNT(*) FROM w WHERE nationality = 'g'", -6.886684948985], [" SELECT COUNT(*) FROM w WHERE `player` LIKE '% (g)%'", -7.068347653185], [" SELECT COUNT(*) FROM w WHERE player LIKE '% (g)%'", -7.601257480785], [" SELECT COUNT(*) FROM w WHERE `college/junior/club team (league)` LIKE '% (g)%'", -10.929327784905]]}, "525": {"question": "how many establishments are restored for tourism?", "gold_answer": ["9"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [8], [8], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `current condition` = 'restored for tourism'", -1.96498564983], [" SELECT COUNT(*) FROM w WHERE `current condition` = 'restored for tourism'", -1.96498564983], [" SELECT COUNT(*) FROM w WHERE `current condition` = 'restored for tourism'", -1.96498564983], [" SELECT COUNT(*) FROM w WHERE `current condition` = 'restored for tourism'", -1.96909744123], [" SELECT COUNT(*) FROM w WHERE `current condition` = 'restored for tourism'", -1.96909744123], [" SELECT COUNT(*) FROM w WHERE `current condition` = 'restored for tourism'", -1.96909744123], [" SELECT COUNT(*) FROM w WHERE `current condition` = 'restored for tourism'", -4.478421234329999], [" SELECT COUNT(*) FROM w WHERE `current condition` LIKE '%restored for tourism%'", -6.072395721549999], [" SELECT COUNT(*) FROM w WHERE `current condition` LIKE '%restored for tourism%'", -6.072395721549999], [" SELECT COUNT(*) FROM w WHERE `current condition` = 'restored for tourism'\n```", -16.60284052018]]}, "566": {"question": "how many times did korzeniowski finish above fourth place?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [23], [23], [20], [7], [18], [18], [0], [18], [22]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position LIKE '%st' OR position LIKE '%nd' OR position LIKE '%rd'", -5.12888194995], [" SELECT COUNT(*) FROM w WHERE position NOT LIKE '%4th%'", -5.1391768432700005], [" SELECT COUNT(*) FROM w WHERE position NOT LIKE '%4th%'", -5.1391768432700005], [" SELECT COUNT(*) FROM w WHERE position NOT LIKE '%th%'", -5.441019336069999], [" SELECT COUNT(*) FROM w WHERE position NOT LIKE '%th%' AND position NOT LIKE '%st%' AND position NOT LIKE '%nd%' AND position NOT LIKE '%rd%'", -8.69991442405], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st%' OR position LIKE '%nd%' OR position LIKE '%rd%' OR position LIKE '%th%' AND CAST(SUBSTR(position, 1, INSTR(position, ' ') - 1) AS INT) < 4", -9.375161614369999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st%' OR position LIKE '%nd%' OR position LIKE '%rd%' OR position LIKE '%th%' AND CAST(SUBSTR(position, 1, INSTR(position, ' ') - 1) AS INT) <= 4", -9.58517146037], [" SELECT COUNT(*) FROM w WHERE position LIKE '%th' AND (CAST(REPLACE(position, 'th', '') AS INT) < 4)", -11.341166872050003], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st%' OR position LIKE '%nd%' OR position LIKE '%rd%' OR position LIKE '%th%'", -11.506415785729999], [" SELECT COUNT(*) FROM w WHERE position != '4th' AND position != '5th'", -16.88196603557]]}, "607": {"question": "is denmark better against sweden or england?", "gold_answer": ["Sweden"], "pred_answer": {"0": ["<error>", [0], [0], [0], [0], "<error>", [0], [8], [0], [0]], "1": ["<error>", [0], [0], [0], [0], "<error>", [0], [3], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `denmark scorers` IS NOT NULL AND `opponents` = 'sweden'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `denmark scorers` IS NOT NULL AND `opponents` = 'england'", -8.210818303220002], [" SELECT COUNT(*) FROM w WHERE opponents = 'sweden' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponents = 'england' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -8.57639438180634], [" SELECT COUNT(*) FROM w WHERE opponents = 'sweden' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponents = 'england' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -8.580556143832343], [" SELECT COUNT(*) FROM w WHERE opponents = 'sweden' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponents = 'england' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -8.586126150282341], [" SELECT COUNT(*) FROM w WHERE opponents = 'sweden' AND `score` LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponents = 'england' AND `score` LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -8.801122622572738], [" SELECT COUNT(*) FROM w WHERE `denmark scorers` LIKE '% - %' AND `opponents` = 'sweden'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `denmark scorers` LIKE '% - %' AND `opponents` = 'england'", -8.930506188056999], [" SELECT COUNT(*) FROM w WHERE opponents = 'sweden' AND (score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponents = 'england' AND (score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0)", -9.081991317614001], [" SELECT COUNT(*) FROM w WHERE opponents = 'sweden' AND score LIKE '%-%' AND CAST(SUBSTR(score,1,INSTR(score,'-')-1) AS INT) > CAST(SUBSTR(score,INSTR(score,'-')+1,LENGTH(score)-(INSTR(score,'-')+1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponents = 'england' AND score LIKE '%-%' AND CAST(SUBSTR(score,1,INSTR(score,'-')-1) AS INT) > CAST(SUBSTR(score,INSTR(score,'-')+1,LENGTH(score)-(INSTR(score,'-')+1)) AS INT)", -10.685281633977002], [" SELECT COUNT(*) FROM w WHERE opponents = 'sweden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponents = 'england' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -12.2543603779213], [" SELECT COUNT(*) FROM w WHERE opponents = 'sweden' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponents = 'england' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -12.913242995494638]]}, "648": {"question": "how many times was war memorial stadium the game site?", "gold_answer": ["6"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.1272483882100002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.1272483882100002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.1272483882100002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.1272483882100002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.1272483882100002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.1272483882100002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.1272483882100002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.1272483882100002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -2.20011575921], [" SELECT COUNT(*) FROM w WHERE game site = 'war memorial stadium'", -3.023522049980001]]}, "689": {"question": "how many schools had above 5 outright titles?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -3.372078297604], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -3.372078297604], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -3.372078297604], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -4.81200445384], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -4.81200445384], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -4.81200445384], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -5.48345745384], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -5.59956815384], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -6.13001145384], [" SELECT COUNT(*) FROM w WHERE `outright titles` > 5", -7.347229153839999]]}, "730": {"question": "which opera has the most acts, la fortezza al cimento or astarto?", "gold_answer": ["Astarto"], "pred_answer": {"0": [[1], [1], [1], [1], [1], ["2 acts"], ["2 acts"], ["2 acts"], ["2 acts"], [1]], "1": [[1], [1], [1], [1], [1], ["3 acts"], ["3 acts"], ["3 acts"], ["3 acts"], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'astarto'", -3.5134783384600006], [" SELECT COUNT(*) FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'astarto'", -3.5134783384600006], [" SELECT COUNT(*) FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'astarto'", -3.5136642281000006], [" SELECT COUNT(*) FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'astarto'", -3.5138585386899996], [" SELECT COUNT(*) FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'astarto'", -3.5138585386899996], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'astarto'", -3.980076043112999], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'astarto'", -3.9810704510029997], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'astarto'", -3.985616393812999], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'astarto'", -3.987335986993], [" SELECT COUNT(*) FROM w WHERE title = 'la fortezza al cimento'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE title = 'astarto'", -6.08511840246]]}, "771": {"question": "how many steam locomotives are currently located at the bala lake railway?", "gold_answer": ["364"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [6], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE current location = 'bala lake railway'", -1.956074472], [" SELECT COUNT(*) FROM w WHERE current location = 'bala lake railway'", -1.956074472], [" SELECT COUNT(*) FROM w WHERE current location = 'bala lake railway'", -1.956074472], [" SELECT COUNT(*) FROM w WHERE current location = 'bala lake railway'", -1.956074472], [" SELECT COUNT(*) FROM w WHERE current location = 'bala lake railway'", -1.956074472], [" SELECT COUNT(*) FROM w WHERE current location = 'bala lake railway'", -1.956074472], [" SELECT COUNT(*) FROM w WHERE `current location` = 'bala lake railway'", -4.0775292710099995], [" SELECT COUNT(*) FROM w WHERE `current location` = 'bala lake railway'", -6.05771196251], [" SELECT COUNT(*) FROM w WHERE `current location` LIKE '%bala lake railway%'", -7.32265174656], [" SELECT COUNT(*) FROM w WHERE `current location` = 'bala lake railway'", -8.60904126251]]}, "812": {"question": "how many tournaments began before aug 15th", "gold_answer": ["31"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [46], [46], [0], [0], [0]], "1": ["<error>"], "2": [[6]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE dates LIKE '%-08-%'", -4.907656718033999], [" SELECT COUNT(*) FROM w WHERE dates LIKE '%-08-%'", -4.907656718033999], [" SELECT COUNT(*) FROM w WHERE dates LIKE '%-08-%'", -4.907656718033999], [" SELECT COUNT(*) FROM w WHERE dates LIKE '%-08-%'", -4.907656718033999], [" SELECT COUNT(*) FROM w WHERE dates LIKE '%-8-%'", -5.954706778456], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT) < 15", -6.1333770635], [" SELECT COUNT(*) FROM w WHERE SUBSTR(dates, INSTR(dates, '-') + 1, LENGTH(dates) - (INSTR(dates, '-') + 1)) < 'aug 15'", -9.7434926029], [" SELECT COUNT(*) FROM w WHERE dates LIKE '% - % - 15%'", -10.69227760447], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(dates, 1, INSTR(dates, '-') - 1) AS INT) < 15) AND (SUBSTR(dates, INSTR(dates, '-') + 1, INSTR(dates, ' ') - (INSTR(dates, '-') + 1)) = 'aug')", -16.388774393934995], [" SELECT COUNT(DISTINCT tournament) FROM w WHERE dates LIKE '%-08-%'\nQ2: {how many = a2} tournaments are held in the united states.\nNeuralSQL2: SELECT COUNT(DISTINCT tournament) FROM w WHERE host country = 'united states'\nQ3: {how many = a3} tournaments are held in the united states and began before aug 15th.\nNeuralSQL3: SELECT COUNT(DISTINCT tournament) FROM w WHERE host country = 'united states' AND dates LIKE '%-08-%'\nQ4: {how many = a4} tournaments are held in the united states or began before aug 15th.\nNeuralSQL4: SELECT COUNT(DISTINCT tournament) FROM w WHERE host country = 'united states' OR dates LIKE '%-08-%'\nQ5: {how many = a5} tournaments are held in the united states and began before aug 15th and ended after aug 20th.\nNeuralSQL5: SELECT COUNT(DISTINCT tournament) FROM w WHERE host country = 'united states' AND dates LIKE '%-08", -42.194011177810616]]}, "853": {"question": "how many of shows had at least 5 episodes?", "gold_answer": ["7"], "pred_answer": {"0": [[4], [1], [1], [1], [2], [2], [0], [2], [1], [4]], "1": ["<error>", "<error>", "<error>"], "2": [[2], [1], [0]], "3": ["<error>", "<error>", "<error>"], "4": [[2], [0], [0]], "5": ["<error>", "<error>", "<error>"], "6": [[2], [3], [0]], "7": ["<error>", "<error>", "<error>"], "8": ["<error>", [1]], "9": ["<error>"], "10": [[2]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE episodes >= 5", -4.3592924892500005], [" SELECT COUNT(*) FROM w WHERE episodes LIKE '%5%'", -6.311819814250001], [" SELECT COUNT(*) FROM w WHERE episodes LIKE '%5%'", -9.330766901879999], [" SELECT COUNT(*) FROM w WHERE episodes LIKE '%5%'", -10.281917536879998], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(episodes, 1, INSTR(episodes, ',') - 1) AS INT) >= 5", -10.977544027554], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(episodes, 1, INSTR(episodes, ',') - 1) AS INT) >= 5", -13.27154691441], [" SELECT COUNT(*) FROM w WHERE episodes LIKE '% - %' AND CAST(SUBSTR(episodes, 1, INSTR(episodes, '-') - 1) AS INT) >= 5", -15.0639425402], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(episodes, 1, INSTR(episodes, ',') - 1) AS INT) > 4\nQ2: {how many = a2} of shows had at least 5 episodes.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(episodes, 1, INSTR(episodes, ',') - 1) AS INT) > 4\nQ3: {how many = a3} of shows had at least 5 episodes.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(episodes, 1, INSTR(episodes, ',') - 1) AS INT) > 4\nQ4: {how many = a4} of shows had at least 5 episodes.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(episodes, 1, INSTR(episodes, ',') - 1) AS INT) > 4\nQ5: {how many = a5} of shows had at least 5 episodes.\nNeuralSQL5: SELECT", -20.230217138753577], [" SELECT COUNT(*) FROM w WHERE episodes LIKE '%5%'\nQ2: {how many = a2} of shows were held in 2010.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2010\nQ3: {how many = a3} of shows had at least 10 episodes.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE episodes LIKE '%10%'\nQ4: {how many = a4} of shows had at least 1 episode.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE episodes LIKE '%1%'\nQ5: {how many = a5} of shows had at least 3 episodes.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE episodes LIKE '%3%'\nQ6: {how many = a6} of shows had at least 2 episodes.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE episodes LIKE '%2%'\nQ7: {how many = a7} of shows had at least 4 episodes.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE episodes LIKE '%4%", -36.57897517746499], [" SELECT COUNT(*) FROM w WHERE episodes >= 5\nQ2: {how many = a2} of shows had at least 5 episodes and was in 2008.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE episodes >= 5 AND year = 2008\nQ3: {how many = a3} of shows had at least 5 episodes and was in 2008 and the name of show contains \"super\".\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE episodes >= 5 AND year = 2008 AND `name of show` LIKE '%super%'\nQ4: {how many = a4} of shows had at least 5 episodes and was in 2008 and the name of show contains \"super\" and the other guests contains \"cutie\".\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE episodes >= 5 AND year = 2008 AND `name of show` LIKE '%super%' AND `other guests` LIKE '%cutie%'\nQ5: {how many = a5} of shows had at least 5 episodes and was in 2008 and the name of show contains \"super\" and the other guests contains \"cutie\" and the winner(s", -44.457657462745004]]}, "894": {"question": "which players have at least 4 in the europa league?", "gold_answer": ["Garra Dembele", "Daniel Mladenov", "Ismail Isa"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -5.0556552871000005], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -5.05571460188], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -5.062697464679999], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -5.062697464679999], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -5.062697464679999], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -5.062697464679999], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -5.76041896468], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -5.76041896468], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -6.115713864679999], [" SELECT COUNT(*) FROM w WHERE `europa league` >= 4", -8.907943861379998]]}, "935": {"question": "what country had the most cities founded in the 1830's?", "gold_answer": ["Brazil"], "pred_answer": {"0": [[0], ["brazil", 13], [3], [3], [3], [0], ["brazil", 13], ["brazil", 13], [3], ["brazil", 13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1830", -6.083554754250001], [" SELECT country, COUNT(*) FROM w WHERE year BETWEEN 1830 AND 1839 GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1", -6.24366682321], [" SELECT COUNT(DISTINCT country) FROM w WHERE year BETWEEN 1830 AND 1839", -6.435317319375], [" SELECT COUNT(DISTINCT country) FROM w WHERE year BETWEEN 1830 AND 1839", -6.435317319375], [" SELECT COUNT(DISTINCT country) FROM w WHERE year BETWEEN 1830 AND 1839", -6.435317319375], [" SELECT COUNT(DISTINCT country) FROM w WHERE year = 1830", -6.501269973454999], [" SELECT country, COUNT(*) FROM w WHERE year BETWEEN 1830 AND 1839 GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1", -7.7797141103300005], [" SELECT country, COUNT(*) AS c FROM w WHERE year BETWEEN 1830 AND 1839 GROUP BY country ORDER BY c DESC LIMIT 1", -8.104561020460002], [" SELECT COUNT(DISTINCT country) FROM w WHERE year >= 1830 AND year < 1840", -8.487365025894999], [" SELECT country, COUNT(*) FROM w WHERE year BETWEEN 1830 AND 1839 GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1", -8.74701905785]]}, "976": {"question": "how many free agents did this team pick up this season?", "gold_answer": ["14"], "pred_answer": {"0": [[14], [12], [12], [12], [12], [12], [12], [14], [12], [14]]}, "nsql": [[" SELECT COUNT(DISTINCT player) FROM w", -3.880682300374], [" SELECT COUNT(*) FROM w WHERE `2013 team` != '\u2013'", -4.569511788565], [" SELECT COUNT(*) FROM w WHERE `2013 team` != '\u2013'", -4.569511788565], [" SELECT COUNT(*) FROM w WHERE `2013 team` != '\u2013'", -4.569511788565], [" SELECT COUNT(*) FROM w WHERE `2013 team` != '\u2013'", -4.569511788565], [" SELECT COUNT(*) FROM w WHERE `2013 team` != '\u2013'", -4.569511788565], [" SELECT COUNT(*) FROM w WHERE `2013 team` != '\u2013'", -4.569511788565], [" SELECT COUNT(*) FROM w WHERE `free agency\\ntag` IS NOT NULL", -5.55578656675], [" SELECT COUNT(*) FROM w WHERE `2013 team` != '\u2013'", -6.61908459582], [" SELECT COUNT(*) FROM w WHERE `date signed` IS NOT NULL", -7.276488968390001]]}, "1017": {"question": "how many tournaments has jane o'donoghue competed in?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(DISTINCT tournament) FROM w", -3.599128889074], [" SELECT COUNT(DISTINCT tournament) FROM w", -3.599128889074], [" SELECT COUNT(DISTINCT tournament) FROM w", -8.286202606652001], [" SELECT COUNT(DISTINCT tournament) FROM w", -8.286202606652001], [" SELECT COUNT(DISTINCT tournament) FROM w", -8.286202606652001], [" SELECT COUNT(DISTINCT tournament) FROM w", -9.228446036652], [" SELECT COUNT(DISTINCT tournament) FROM w", -9.228446036652], [" SELECT COUNT(DISTINCT tournament) FROM w", -9.608907466652001], [" SELECT COUNT(DISTINCT tournament) FROM w", -9.868444636652], [" SELECT COUNT(DISTINCT tournament) FROM w", -13.334119436652]]}, "1020": {"question": "what is the amount races that were competed in?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w", -4.350137496466], [" SELECT COUNT(DISTINCT year) FROM w", -4.350362164366], [" SELECT COUNT(DISTINCT year) FROM w", -4.350665846666001], [" SELECT COUNT(DISTINCT year) FROM w", -9.214275412446], [" SELECT COUNT(DISTINCT year) FROM w", -10.064794389446], [" SELECT COUNT(DISTINCT year) FROM w", -10.997302389446], [" SELECT COUNT(DISTINCT(year)) FROM w", -11.195582164409998], [" SELECT COUNT(DISTINCT(year)) FROM w", -11.870311564409999], [" SELECT COUNT(DISTINCT year) FROM w", -12.579050677491997], [" SELECT COUNT(DISTINCT year) FROM w\nQ2: {how many = a2} races were competed in with a car of aston martin dbr9.\nNeuralSQL2: SELECT COUNT(DISTINCT year) FROM w WHERE car = 'aston martin dbr9'\nQ3: {how many = a3} races were competed in with a car of aston martin dbr9 and a class of gt1.\nNeuralSQL3: SELECT COUNT(DISTINCT year) FROM w WHERE car = 'aston martin dbr9' AND class = 'gt1'\nQ4: {how many = a4} races were competed in with a car of aston martin dbr9 and a class of gt1 and a pos. of 7th.\nNeuralSQL4: SELECT COUNT(DISTINCT year) FROM w WHERE car = 'aston martin dbr9' AND class = 'gt1' AND pos. = '7th'\nQ5: {how many = a5} races were competed in with a car of aston martin dbr9 and a class of", -31.114731205694408]]}, "1041": {"question": "which license is listed more, os or c?", "gold_answer": ["OS"], "pred_answer": {"0": [[27], [27], [27], [27], [27], [27], [27], [28], [28], "<error>"], "1": [[10], [10], [10], [10], [10], [10], [10], [16], [16], "<error>"], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `licence*` = 'os'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` = 'c'", -2.6706804147820002], [" SELECT COUNT(*) FROM w WHERE `licence*` = 'os'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` = 'c'", -2.6706804147820002], [" SELECT COUNT(*) FROM w WHERE `licence*` = 'os'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` = 'c'", -2.671722815588], [" SELECT COUNT(*) FROM w WHERE `licence*` = 'os'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` = 'c'", -2.671722815588], [" SELECT COUNT(*) FROM w WHERE `licence*` = 'os'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` = 'c'", -2.6717231750880006], [" SELECT COUNT(*) FROM w WHERE licence* = 'os'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE licence* = 'c'", -2.8523555343690004], [" SELECT COUNT(*) FROM w WHERE `licence*` = 'os'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` = 'c'", -6.014294400688001], [" SELECT COUNT(*) FROM w WHERE `licence*` LIKE '%os%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` LIKE '%c%'", -10.329542798776998], [" SELECT COUNT(*) FROM w WHERE `licence*` LIKE '%os%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `licence*` LIKE '%c%'", -11.052410844837], [" SELECT COUNT(*) FROM w WHERE licence = 'os'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE licence = 'c'\n```", -19.13660388472]]}, "1058": {"question": "how many titles have at least 5 episodes?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE episodes >= 5", -1.49810855977], [" SELECT COUNT(*) FROM w WHERE episodes >= 5", -1.49810855977], [" SELECT COUNT(*) FROM w WHERE episodes >= 5", -1.49810855977], [" SELECT COUNT(*) FROM w WHERE episodes >= 5", -1.49810855977], [" SELECT COUNT(*) FROM w WHERE episodes >= 5", -1.49810855977], [" SELECT COUNT(*) FROM w WHERE episodes >= 5", -1.49810855977], [" SELECT COUNT(*) FROM w WHERE episodes >= 5", -1.49810855977], [" SELECT COUNT(*) FROM w WHERE episodes >= 5", -3.7140817041699994], [" SELECT COUNT(*) FROM w WHERE episodes >= 5", -3.7140817041699994], [" SELECT COUNT(*) FROM w WHERE episodes >= 5.0", -11.912786003863001]]}, "1062": {"question": "how many were built in 1847?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -1.354678146434], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -1.354678146434], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -1.354678146434], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -1.354678146434], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -1.354678146434], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -1.354678146434], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -1.354678146434], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -1.354678146434], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -2.65175822021], [" SELECT COUNT(*) FROM w WHERE `date built` = '1847'", -2.65175822021]]}, "1099": {"question": "how many number of teams played altogether?", "gold_answer": ["64"], "pred_answer": {"0": [[68], [68], [68], [68], [65], [65], [65], [65], [65], [65]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.8500435193600002], [" SELECT COUNT(*) FROM w", -1.8500435193600002], [" SELECT COUNT(*) FROM w", -1.8500435193600002], [" SELECT COUNT(*) FROM w", -2.8747965291899997], [" SELECT COUNT(DISTINCT team) FROM w", -3.43312156903], [" SELECT COUNT(DISTINCT team) FROM w", -3.43312156903], [" SELECT COUNT(DISTINCT team) FROM w", -3.43312156903], [" SELECT COUNT(DISTINCT team) FROM w", -8.4380276348], [" SELECT COUNT(DISTINCT team) FROM w", -9.1817645208], [" SELECT COUNT(DISTINCT team) FROM w", -10.8938215708]]}, "1103": {"question": "how many players play cb or og?", "gold_answer": ["5"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.16840267054], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.16840267054], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.16840267054], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.16840267054], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.16840267054], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.16840267054], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.16840267054], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.16840267054], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -1.1688915130899997], [" SELECT COUNT(*) FROM w WHERE position = 'cb'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'og'", -3.87370062786]]}, "1144": {"question": "what is the number of times the total population was 6,000 or more?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"], "2": [[6]], "3": ["<error>"], "4": [[6]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": [[6]], "9": ["<error>"], "10": [[6]], "11": ["<error>"], "12": [[6]], "13": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total >= 6000", -1.66064466996], [" SELECT COUNT(*) FROM w WHERE total >= 6000", -1.66064466996], [" SELECT COUNT(*) FROM w WHERE total >= 6000", -1.66064466996], [" SELECT COUNT(*) FROM w WHERE total >= 6000", -1.66064466996], [" SELECT COUNT(*) FROM w WHERE total >= 6000", -1.66064466996], [" SELECT COUNT(*) FROM w WHERE total >= 6000", -1.66064466996], [" SELECT COUNT(*) FROM w WHERE total >= 6000", -1.66416648456], [" SELECT COUNT(*) FROM w WHERE total >= 6000", -1.66416648456], [" SELECT COUNT(*) FROM w WHERE total >= 6000", -5.44209866886], [" SELECT COUNT(*) FROM w WHERE total >= 6000\nQ2: total population was 6,000 or more {how many = a2} times.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total >= 6000\nQ3: total population was 6,000 or more {how many = a3} times.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE total >= 6000\nQ4: total population was 6,000 or more {how many = a4} times.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE total >= 6000\nQ5: total population was 6,000 or more {how many = a5} times.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE total >= 6000\nQ6: total population was 6,000 or more {how many = a6} times.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE total >= 6000\nQ7: total population was 6,000 or more {how many = a7} times.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE total >= 6000\nQ8: total population was 6,000", -13.8939537412475]]}, "1185": {"question": "how many judges were appointed by president carter?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -1.65152889323], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -1.65152889323], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -1.65152889323], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -1.65152889323], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -1.65152889323], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -1.65152889323], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -2.49180980123], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -2.49180980123], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'", -2.49180980123], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'carter'\nQ2: {how many = a2} judges were born in the 20th century.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `born/died` LIKE '19%-%-%'\nQ3: {how many = a3} judges were born in the 19th century.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `born/died` LIKE '18%-%-%'\nQ4: {how many = a4} judges died in the 20th century.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `born/died` LIKE '%-19%-%'\nQ5: {how many = a5} judges died in the 19th century.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `born/died` LIKE '%-18%-%'\nQ6: {how many = a6} judges were born in the 19th century and died in the 20th century.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `born/died", -28.39017139321817]]}, "1226": {"question": "which country conceded the least goals?", "gold_answer": ["Finland"], "pred_answer": {"0": [[10], [10], [10], [1027], [10], [1027], [10], [10], [1027], [10]], "1": [[28], [28], [28], [2812], [28], [2812], [28], [28], [2812], [28]], "2": [[33], [33], [33], [3314], [33], [3314], [33], [33], [3314], [33]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'sweden'", -5.3319941993899995], [" SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'sweden'", -5.336993330074504], [" SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, ' - ') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, ' - ') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, ' - ') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'sweden'", -5.425144695426903], [" SELECT SUM(CAST(REPLACE(difference,'\u2013','') AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(difference,'\u2013','') AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(REPLACE(difference,'\u2013','') AS INT)) FROM w WHERE team = 'sweden'", -6.199105169198003], [" SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'sweden'", -7.715098816998794], [" SELECT SUM(CAST(REPLACE(difference,'\u2013','') AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(difference,'\u2013','') AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(REPLACE(difference,'\u2013','') AS INT)) FROM w WHERE team = 'sweden'", -8.825873867198002], [" SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, '-') + 1)) AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, '-') + 1)) AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, '-') + 1)) AS INT)) FROM w WHERE team = 'sweden'", -11.9545534895026], [" SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, '-') + 1)) AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, '-') + 1)) AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, '-') + 1, LENGTH(difference) - (INSTR(difference, '-') + 1)) AS INT)) FROM w WHERE team = 'sweden'", -12.884499584377805], [" SELECT SUM(CAST(REPLACE(difference, '\u2013', '') AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(difference, '\u2013', '') AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(REPLACE(difference, '\u2013', '') AS INT)) FROM w WHERE team = 'sweden'", -15.255806664831002], [" SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, ' - ') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'norway'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, ' - ') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'switzerland'\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(difference, INSTR(difference, ' - ') + 1, LENGTH(difference) - (INSTR(difference, ' - ') + 1)) AS INT)) FROM w WHERE team = 'sweden'", -19.9173445315859]]}, "1267": {"question": "which is the only nation to win a gold medal and nothing else?", "gold_answer": ["Ecuador"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -2.19858659455], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -2.1992114558], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -2.1992114558], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -2.1992114558], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -2.20119109585], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -2.20263844925], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -2.20263844925], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -2.20263844925], [" SELECT COUNT(*) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -4.4637430062500005], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0 AND silver = 0 AND bronze = 0", -6.576395905159]]}, "8": {"question": "list two pylons that are at most, 80 m in height.", "gold_answer": ["Mittersill goods aerial tramway", "Singapore cable car"], "pred_answer": {"0": [[12], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE height <= '80 m'", -2.599031503376], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, 'm', '') AS INT) <= 80", -3.8370267107419997], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, 'm', '') AS INT) <= 80", -3.8381672505139997], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, 'm', '') AS INT) <= 80", -3.838690833871], [" SELECT COUNT(*) FROM w WHERE height <= 80", -3.95708057862], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, ' m', '') AS INT) <= 80", -4.340539479146], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height,'m','') AS INT) <= 80", -4.3406248369439995], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, ' m', '') AS INT) <= 80", -4.342943537230999], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(height, 1, INSTR(height, ' ') - 1) AS INT) <= 80", -5.79750982829], [" SELECT COUNT(*) FROM w WHERE CAST(height AS INT) <= 80", -6.299596506585999]]}, "49": {"question": "what were the total number of honors/award titles listed according to this chart?", "gold_answer": ["29"], "pred_answer": {"0": [[27], [27], [27], [27], [27], [27], [27], [29], [29], [27]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT `honour/award title`) FROM w", -2.4435954851170005], [" SELECT COUNT(DISTINCT `honour/award title`) FROM w", -2.4435954851170005], [" SELECT COUNT(DISTINCT `honour/award title`) FROM w", -2.4435954851170005], [" SELECT COUNT(DISTINCT `honour/award title`) FROM w", -2.44533336012], [" SELECT COUNT(DISTINCT `honour/award title`) FROM w", -2.44533336012], [" SELECT COUNT(DISTINCT(`honour/award title`)) FROM w", -2.9076123784900005], [" SELECT COUNT(DISTINCT(`honour/award title`)) FROM w", -2.94246784386], [" SELECT COUNT(*) FROM w", -4.67834440597], [" SELECT COUNT(*) FROM w", -8.812624230299999], [" SELECT COUNT(DISTINCT `honour/award title`) FROM w\n```", -12.406037120039999]]}, "90": {"question": "which year end ranking was higher, 2004 or 2011?", "gold_answer": ["2011"], "pred_answer": {"0": [["219"], ["219"], ["a", "a", "a", "a", "0\u20130", "0\u20130", "219"], ["219"], ["219"], ["219"], ["219"], ["219"], ["219"], ["219"]], "1": [["57"], ["57"], ["2r", "3r", "4r", "a", "6\u20133", "0\u20130", "57"], ["57"], ["57"], ["57"], ["57"], ["57"], ["57"], ["57"]], "2": ["<error>"]}, "nsql": [[" SELECT `2004` FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT `2011` FROM w WHERE tournament = 'year end ranking'", -2.929868756244], [" SELECT 2004 FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT 2011 FROM w WHERE tournament = 'year end ranking'\n```", -6.691852722003999], [" SELECT 2004 FROM w\nNeuralSQL2: SELECT 2011 FROM w", -6.93125875874], [" SELECT 2004 FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT 2011 FROM w WHERE tournament = 'year end ranking'", -7.120512978677999], [" SELECT 2004 FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT 2011 FROM w WHERE tournament = 'year end ranking'", -7.120512978677999], [" SELECT 2004 FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT 2011 FROM w WHERE tournament = 'year end ranking'", -7.1987663425339985], [" SELECT 2004 FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT 2011 FROM w WHERE tournament = 'year end ranking'", -7.945451178677999], [" SELECT 2004 FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT 2011 FROM w WHERE tournament = 'year end ranking'", -8.368845478677999], [" SELECT 2004 FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT 2011 FROM w WHERE tournament = 'year end ranking'", -8.702741178677998], [" SELECT 2004 FROM w WHERE tournament = 'year end ranking'\nNeuralSQL2: SELECT 2011 FROM w WHERE tournament = 'year end ranking'", -9.096543878677998]]}, "131": {"question": "what town is listed the most?", "gold_answer": ["Temagami"], "pred_answer": {"0": [["temagami", 10], ["temagami", 10], ["temagami", 10], ["temagami", 10], ["temagami"], ["temagami", 10], [1], ["temagami", 10], ["temagami", 10], ["timmins", 1]]}, "nsql": [[" SELECT town, COUNT(*) FROM w GROUP BY town ORDER BY COUNT(*) DESC LIMIT 1", -3.6264710759400005], [" SELECT town, COUNT(*) FROM w GROUP BY town ORDER BY COUNT(*) DESC LIMIT 1", -3.6264710759400005], [" SELECT town, COUNT(*) FROM w GROUP BY town ORDER BY COUNT(*) DESC LIMIT 1", -3.6264710759400005], [" SELECT town, COUNT(*) FROM w GROUP BY town ORDER BY COUNT(*) DESC LIMIT 1", -3.6264710759400005], [" SELECT town FROM w GROUP BY town ORDER BY COUNT(*) DESC LIMIT 1", -4.1816358957799995], [" SELECT town, COUNT(*) FROM w GROUP BY town ORDER BY COUNT(*) DESC LIMIT 1", -5.03498014427], [" SELECT COUNT(*) FROM w WHERE town = 'timmins'", -5.416200507536001], [" SELECT town, COUNT(*) FROM w GROUP BY town ORDER BY COUNT(*) DESC LIMIT 1", -6.311937884700001], [" SELECT town, COUNT(*) AS cnt FROM w GROUP BY town ORDER BY cnt DESC LIMIT 1", -7.0693014646600005], [" SELECT town, COUNT(*) FROM w GROUP BY town ORDER BY 2 DESC LIMIT 1", -9.51629906847]]}, "172": {"question": "how many townships are in leavenworth county?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": [[2]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.3758106385], [" SELECT COUNT(*) FROM w", -3.67095000287], [" SELECT COUNT(DISTINCT township) FROM w", -4.503456684420001], [" SELECT COUNT(DISTINCT(township)) FROM w", -5.04039396822], [" SELECT COUNT(DISTINCT(township)) FROM w", -5.04039396822], [" SELECT COUNT(DISTINCT township) FROM w", -9.31284938543], [" SELECT COUNT(DISTINCT township) FROM w", -9.71439994443], [" SELECT COUNT(DISTINCT township) FROM w", -10.26009117443], [" SELECT COUNT(DISTINCT township) FROM w", -11.94159767443], [" SELECT COUNT(DISTINCT(township)) FROM w\nQ2: {how many = a2} townships have a population of less than 1000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE population < 1000\nQ3: {how many = a3} townships have a population density of more than 30.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `population\\ndensity\\n/km\u00b2 (/sq\u00a0mi)` > 30\nQ4: {how many = a4} townships have a water area of more than 1.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `water area\\nkm\u00b2 (sq\u00a0mi)` > 1\nQ5: {how many = a5} townships have a water area of more than 1 and a population density of more than 30.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `water area\\nkm\u00b2 (sq\u00a0mi)` > 1 AND `population\\ndensity\\n/km\u00b2 (/sq\u00a0mi)` > 30\nQ6: {how many = a6} townships have", -38.384467545695955]]}, "213": {"question": "how many areas are unparished areas?", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]], "1": ["<error>"], "2": [[19]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[19]], "7": ["<error>"], "8": [[9]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -1.141224243214], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -1.141224243214], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -1.1418909574840002], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -1.1418909574840002], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -1.1418909574840002], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -1.1418909574840002], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -1.1418909574840002], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -1.1429476092339999], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'", -2.890582165554], [" SELECT COUNT(*) FROM w WHERE status = 'unparished area'\nQ2: {how many = a2} areas are civil parishes.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE status = 'civil parish'\nQ3: {how many = a3} areas are civil parishes and have a population larger than 100000.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population > 100000\nQ4: {how many = a4} areas are civil parishes and have a population smaller than 100000.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population < 100000\nQ5: {how many = a5} areas are civil parishes and have a population smaller than 100000 and have a district of sefton.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE status = 'civil parish' AND population < 100000 AND district = 'sefton'\nQ6: {how many = a6} areas are civil parishes and have a population larger than 100000 and have a district of se", -38.684626253839]]}, "254": {"question": "what is the total number of state regents who are attorneys?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -3.93053413382], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -3.9315906928200004], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -3.9315906928200004], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -4.21002656592], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -4.21002656592], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -4.21002656592], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -5.05023077042], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -5.05218386592], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -5.05218386592], [" SELECT COUNT(*) FROM w WHERE profession = 'attorney'", -5.05218386592]]}, "295": {"question": "how many laps in total is the race?", "gold_answer": ["56"], "pred_answer": {"0": [[1023], [1023], [1023], [1023], [1023], [1023], [1023], [1023], [1023], [1023]]}, "nsql": [[" SELECT SUM(laps) FROM w", -1.033183845685], [" SELECT SUM(laps) FROM w", -1.033183845685], [" SELECT SUM(laps) FROM w", -1.033183845685], [" SELECT SUM(laps) FROM w", -1.033183845685], [" SELECT SUM(laps) FROM w", -1.033183845685], [" SELECT SUM(laps) FROM w", -1.033533731025], [" SELECT SUM(laps) FROM w", -1.033533731025], [" SELECT SUM(laps) FROM w", -1.033533731025], [" SELECT SUM(laps) FROM w", -1.033533731025], [" SELECT SUM(laps) FROM w", -2.828287793355]]}, "336": {"question": "other than burke, name an athlete from the us.", "gold_answer": ["Leif Nordgren"], "pred_answer": {"0": [[0], [0], [0], [0], [4], [4], [4], [4], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'us'", -4.02420444024], [" SELECT COUNT(*) FROM w WHERE nationality = 'us'", -4.02420444024], [" SELECT COUNT(*) FROM w WHERE nationality = 'us'", -4.980361490258001], [" SELECT COUNT(*) FROM w WHERE nationality = 'us'", -5.001148502858], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -5.445054045292], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -6.050745307297], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -6.050745307297], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -6.059596445292], [" SELECT COUNT(*) FROM w WHERE nationality = 'us'", -7.923893796158], [" SELECT COUNT(*) FROM w WHERE nationality = 'us'", -8.193883396158]]}, "377": {"question": "in the first 10 years of his reign, how many encyclicals did pope pius ix issue?", "gold_answer": ["14"], "pred_answer": {"0": [[14], [14], [14], [13], [14], [13], [13], [38], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1846-11-09 00:00:00' AND '1856-11-09 00:00:00'", -5.2597533078800005], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1846-11-09 00:00:00' AND '1856-11-09 00:00:00'", -5.793275003243998], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1846-11-09 00:00:00' AND '1856-11-09 00:00:00'", -5.79541844702], [" SELECT COUNT(*) FROM w WHERE `date` >= '1846-01-01 00:00:00' AND `date` < '1856-01-01 00:00:00'", -5.922267785990001], [" SELECT COUNT(*) FROM w WHERE `date` >= '1846-11-09' AND `date` < '1856-11-09'", -6.9188828628999985], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1846-%-%' OR `date` LIKE '1847-%-%' OR `date` LIKE '1848-%-%' OR `date` LIKE '1849-%-%' OR `date` LIKE '1850-%-%' OR `date` LIKE '1851-%-%' OR `date` LIKE '1852-%-%' OR `date` LIKE '1853-%-%' OR `date` LIKE '1854-%-%' OR `date` LIKE '1855-%-%'", -7.456653093095003], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1846-01-01 00:00:00' AND '1855-12-31 23:59:59'", -9.589581175689998], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '18%-%-%' OR `date` LIKE '19%-%-%'", -9.85113919546], [" SELECT COUNT(*) FROM w WHERE `date` >= '1846-01-01 00:00:00' AND `date` < '1856-01-01 00:00:00'", -10.142040657109998], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(date, 1, 4) AS INT) - 1846 < 10", -12.64530930021]]}, "380": {"question": "how many players played more than 10 matches?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE matches > 10", -0.9635831849740001], [" SELECT COUNT(*) FROM w WHERE matches > 10", -0.9635831849740001], [" SELECT COUNT(*) FROM w WHERE matches > 10", -0.9635831849740001], [" SELECT COUNT(*) FROM w WHERE matches > 10", -0.9635831849740001], [" SELECT COUNT(*) FROM w WHERE matches > 10", -0.9635831849740001], [" SELECT COUNT(*) FROM w WHERE matches > 10", -0.9635831849740001], [" SELECT COUNT(*) FROM w WHERE matches > 10", -0.9635831849740001], [" SELECT COUNT(*) FROM w WHERE matches > 10", -3.474797926974], [" SELECT COUNT(*) FROM w WHERE matches > 10", -3.474797926974], [" SELECT COUNT(*) FROM w WHERE matches > 10", -3.474797926974]]}, "401": {"question": "what is the number of games won by brazil during the month of march 1982?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], "<error>", [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1982-03-%' AND result = 'w'", -4.29213782633], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1982-03-%' AND result = 'w'", -4.29213782633], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND date LIKE '1982-03-%'", -4.456603911790001], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND date LIKE '1982-03-%'", -4.456603911790001], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND date LIKE '1982-03-%'", -4.456603911790001], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND date LIKE '1982-03-%'", -4.49053582053], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND date LIKE '1982-03-%'", -4.49053582053], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1982-03-%' AND result = 'w'", -5.560513407339999], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND MONTH(date) = 3", -13.795376317795], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND date LIKE '1982-03-% 00:00:00'", -15.75387322086]]}, "418": {"question": "how many trains other than the transrapid 07 can go faster than 450km/h?", "gold_answer": ["1"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > '450' AND `train` != 'transrapid 07'", -5.840439755629001], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > '450' AND train != 'transrapid 07'", -8.662084318199], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > 450 AND train <> 'transrapid 07'", -9.291099263819], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > 450 AND `train` <> 'transrapid 07'", -9.645043110708999], [" SELECT COUNT(*) FROM w WHERE train != 'transrapid 07' AND `top speed (km/h)` > '450'", -9.754273217799], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > '450' AND train != 'transrapid 07'", -10.114928823568999], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > 450 AND train NOT LIKE 'transrapid 07'", -10.792976865248999], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > 450 AND train != 'transrapid 07'\n```", -12.953375808648998], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > 450 AND train != 'transrapid 07'", -13.370065513638998], [" SELECT COUNT(*) FROM w WHERE `top speed (km/h)` > 450 AND train NOT LIKE '%07%'", -14.716620025579]]}, "422": {"question": "avram grant was with chelsea for at least how many years?", "gold_answer": ["1"], "pred_answer": {"0": [[1], "<error>", [1], [1], "<error>", [1], [1], "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outgoing manager = 'avram grant'", -5.135749968200001], [" SELECT DATEDIFF(`date of vacancy`, `date of appointment`) FROM w WHERE outgoing manager = 'avram grant'", -5.53550727925], [" SELECT COUNT(*) FROM w WHERE outgoing manager = 'avram grant' AND team = 'chelsea'", -7.474198652072001], [" SELECT COUNT(*) FROM w WHERE outgoing manager = 'avram grant' AND team = 'chelsea'", -7.492934379206], [" SELECT DATEDIFF(`date of vacancy`, `date of appointment`) FROM w WHERE team = 'chelsea' AND outgoing manager = 'avram grant'", -7.8430067605], [" SELECT COUNT(*) FROM w WHERE outgoing manager = 'avram grant' AND team = 'chelsea'", -7.915784204942001], [" SELECT COUNT(*) FROM w WHERE team = 'chelsea' AND outgoing manager = 'avram grant'", -8.686817923020001], [" SELECT DATEDIFF('2008-05-24', '2007-07-01')", -9.68219835215], [" SELECT DATEDIFF(date of vacancy, date of appointment) FROM w WHERE outgoing manager = 'avram grant' AND team = 'chelsea'", -10.262798878958], [" SELECT DATEDIFF(`date of vacancy`, `date of appointment`) FROM w WHERE `outgoing manager` = 'avram grant'", -12.291739322195998]]}, "459": {"question": "how many drivers received points from the race?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE points IS NOT NULL", -2.8170639651900005], [" SELECT COUNT(*) FROM w WHERE points IS NOT NULL", -2.8170639651900005], [" SELECT COUNT(*) FROM w WHERE points IS NOT NULL", -2.8170639651900005], [" SELECT COUNT(*) FROM w WHERE points IS NOT NULL", -2.8170639651900005], [" SELECT COUNT(*) FROM w WHERE points IS NOT NULL", -3.5891970981900005], [" SELECT COUNT(*) FROM w WHERE points IS NOT NULL", -3.5891970981900005], [" SELECT COUNT(*) FROM w WHERE points IS NOT NULL", -3.5891970981900005], [" SELECT COUNT(DISTINCT driver) FROM w WHERE points IS NOT NULL", -3.774893500029001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE points IS NOT NULL", -5.189341791275002], [" SELECT COUNT(DISTINCT driver) FROM w WHERE points > 0", -7.738098275291001]]}, "463": {"question": "tell me the number of seats from nsw?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(DISTINCT seat) FROM w WHERE state = 'nsw'", -2.08565525124], [" SELECT COUNT(DISTINCT seat) FROM w WHERE state = 'nsw'", -2.08565525124], [" SELECT COUNT(*) FROM w WHERE state = 'nsw'", -3.70674278963], [" SELECT COUNT(*) FROM w WHERE state = 'nsw'", -4.379359532774], [" SELECT COUNT(*) FROM w WHERE state = 'nsw'", -4.379359532774], [" SELECT COUNT(*) FROM w WHERE state = 'nsw'", -4.381453076945], [" SELECT COUNT(*) FROM w WHERE state = 'nsw'", -4.381453076945], [" SELECT COUNT(*) FROM w WHERE state = 'nsw'", -4.381453076945], [" SELECT COUNT(*) FROM w WHERE state = 'nsw'", -4.55813479293], [" SELECT COUNT(*) FROM w WHERE state = 'nsw'", -5.34407482883]]}, "504": {"question": "how many cities are below 1000 in population?", "gold_answer": ["5"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE population < 1000", -1.23249519477], [" SELECT COUNT(*) FROM w WHERE population < 1000", -1.23249519477], [" SELECT COUNT(*) FROM w WHERE population < 1000", -1.23249519477], [" SELECT COUNT(*) FROM w WHERE population < 1000", -1.23249519477], [" SELECT COUNT(*) FROM w WHERE population < 1000", -1.23249519477], [" SELECT COUNT(*) FROM w WHERE population < 1000", -3.2308759433699996], [" SELECT COUNT(*) FROM w WHERE population < 1000", -3.2332547720699996], [" SELECT COUNT(*) FROM w WHERE population < 1000", -3.86766405477], [" SELECT COUNT(*) FROM w WHERE population <= 1000", -4.43289553177], [" SELECT COUNT(*) FROM w WHERE population < 1000\n```", -11.338400862210001]]}, "545": {"question": "how many total competitions were in south korea?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -2.0838492136699998], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -2.0852157561910003], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -2.0852157561910003], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -2.0852157561910003], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -2.0852157561910003], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -3.4563485361560002], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -3.465734731156], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -3.465734731156], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%south korea%'", -3.465734731156], [" SELECT COUNT(DISTINCT competition) FROM w WHERE venue LIKE '%south korea%'", -8.051741769786]]}, "586": {"question": "how many combined gold medals did japan and france win?", "gold_answer": ["6"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -3.872203805876], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -6.600285138456], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -6.600285138456], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -7.281947578456], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -7.408467552456], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -8.992438718456], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -10.011981033956], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -10.270492658456], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -10.641200858456001], [" SELECT gold FROM w WHERE nation = 'japan'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'france'", -11.269397558456]]}, "627": {"question": "how many provinces in afghanistan speak dari persian?", "gold_answer": ["28"], "pred_answer": {"0": [[28], [28], [28], [28], [28], [28], [28], [28], [28], [28]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE language LIKE '%dari persian%'", -1.7761371368239998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%dari persian%'", -1.7761371368239998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%dari persian%'", -1.7761371368239998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%dari persian%'", -1.7761371368239998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%dari persian%'", -1.7761371368239998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%dari persian%'", -2.5765483273239997], [" SELECT COUNT(*) FROM w WHERE language LIKE '%dari persian%'", -2.5765483273239997], [" SELECT COUNT(*) FROM w WHERE `language` LIKE '%dari persian%'", -8.526805062111999], [" SELECT COUNT(*) FROM w WHERE `language` LIKE '%dari persian%'", -8.526805062111999], [" SELECT COUNT(*) FROM w WHERE `language` LIKE '%dari persian%'", -11.005287362112]]}, "668": {"question": "which team had four gold models and one bronze medal?", "gold_answer": ["Puerto Rico"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -1.091220709334], [" SELECT COUNT(*) FROM w WHERE gold = 4 AND bronze = 1", -3.1365011604300004]]}, "709": {"question": "how many silver medals did belarus win?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'belarus'", -1.8773060413500002], [" SELECT silver FROM w WHERE nation = 'belarus'", -1.8773060413500002], [" SELECT silver FROM w WHERE nation = 'belarus'", -1.8773060413500002], [" SELECT silver FROM w WHERE nation = 'belarus'", -1.8822385180999999], [" SELECT silver FROM w WHERE nation = 'belarus'", -1.8822385180999999], [" SELECT silver FROM w WHERE nation = 'belarus'", -3.89207986135], [" SELECT silver FROM w WHERE nation = 'belarus'", -4.0685632031], [" SELECT silver FROM w WHERE nation = 'belarus'", -4.44364737135], [" SELECT silver FROM w WHERE nation = 'belarus\u00a0(blr)'", -9.901967300199999], [" SELECT `silver` FROM w WHERE nation = 'belarus'", -18.095299888070002]]}, "750": {"question": "how many u.s. open wins does fiji have?", "gold_answer": ["0"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT `u.s. open` FROM w WHERE country = 'fiji'", -1.9353210986399998], [" SELECT `u.s. open` FROM w WHERE country = 'fiji'", -1.9353210986399998], [" SELECT `u.s. open` FROM w WHERE country = 'fiji'", -1.9353210986399998], [" SELECT `u.s. open` FROM w WHERE country = 'fiji'", -1.9353210986399998], [" SELECT `u.s. open` FROM w WHERE country = 'fiji'", -3.2047816881499998], [" SELECT `u.s. open` FROM w WHERE country = 'fiji'", -3.2047816881499998], [" SELECT `u.s. open` FROM w WHERE country = 'fiji'", -3.2052924510899996], [" SELECT `u.s. open` FROM w WHERE country = 'fiji'", -3.2052924510899996], [" SELECT COUNT(*) FROM w WHERE country = 'fiji' AND `u.s. open` > 0", -5.731762657566], [" SELECT u.s. open FROM w WHERE country = 'fiji'", -6.895393637189999]]}, "791": {"question": "how many times was the final position above 20?", "gold_answer": ["2"], "pred_answer": {"0": [[6], [6], [6], [2], [1], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE pos. > 20", -4.760440320970001], [" SELECT COUNT(*) FROM w WHERE pos. > 20", -4.760440320970001], [" SELECT COUNT(*) FROM w WHERE pos. > 20", -4.76446993217], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(pos., 'th', '') AS INT) > 20", -4.925485591670001], [" SELECT COUNT(*) FROM w WHERE `pos.` LIKE '%th' AND CAST(SUBSTR(`pos.`, 1, INSTR(`pos.`, 'th') - 1) AS INT) > 20", -7.005058102699999], [" SELECT COUNT(*) FROM w WHERE pos. > '20'", -8.859333676030001], [" SELECT COUNT(*) FROM w WHERE pos. > 20", -10.32369273989], [" SELECT COUNT(*) FROM w WHERE `pos.` > 20", -10.49396300089], [" SELECT COUNT(*) FROM w WHERE pos. > 20", -10.77378506989], [" SELECT COUNT(*) FROM w WHERE pos. > 20", -11.321486693386001]]}, "832": {"question": "how many times was ayrton senna in pole position?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [1], [1], [13]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[3]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `pole position` = 'ayrton senna'", -1.5894292946000004], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'ayrton senna'", -1.5894292946000004], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'ayrton senna'", -1.5894292946000004], [" SELECT COUNT(*) FROM w WHERE pole position = 'ayrton senna'", -2.0794051381100003], [" SELECT COUNT(*) FROM w WHERE pole position = 'ayrton senna'", -3.0966856441100004], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'ayrton senna'", -3.272724813700001], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'ayrton senna'", -3.272724813700001], [" SELECT COUNT(DISTINCT pole position) FROM w WHERE pole position = 'ayrton senna'", -5.105043730236], [" SELECT COUNT(DISTINCT pole position) FROM w WHERE pole position = 'ayrton senna'", -5.105043730236], [" SELECT COUNT(*) FROM w WHERE `pole position` = 'ayrton senna'\nQ2: {how many = a2} times was alain prost in pole position.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `pole position` = 'alain prost'\nQ3: {how many = a3} times was nelson piquet in pole position.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `pole position` = 'nelson piquet'\nQ4: {how many = a4} times was jonathan palmer in pole position.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `pole position` = 'jonathan palmer'\nQ5: {how many = a5} times was ayrton senna in fastest lap.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `fastest lap` = 'ayrton senna'\nQ6: {how many = a6} times was alain prost in fastest lap.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `fastest lap` = '", -22.96386366578401]]}, "873": {"question": "how many townships have populations over 2,000?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -0.9414096918399999], [" SELECT COUNT(*) FROM w WHERE population > 2000", -3.24962550454]]}, "914": {"question": "how many games was their ranking not lower than #5?", "gold_answer": ["9"], "pred_answer": {"0": [[0], [3], [9], [3], [3], [3], [3], [3], [3], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank# >= 5", -6.72788728579], [" SELECT COUNT(*) FROM w WHERE rank# >= '#5'", -8.065183179049999], [" SELECT COUNT(*) FROM w WHERE rank# LIKE '#%' AND CAST(REPLACE(rank#,'#','') AS INT) <= 5", -8.40370309925], [" SELECT COUNT(*) FROM w WHERE rank# >= '#5'", -8.67212437905], [" SELECT COUNT(*) FROM w WHERE rank# >= '#5'", -8.71918467905], [" SELECT COUNT(*) FROM w WHERE `rank#` LIKE '#%' AND CAST(REPLACE(`rank#`,'#','') AS INT) >= 5", -10.67536880176], [" SELECT COUNT(*) FROM w WHERE `rank#` LIKE '#%' AND CAST(REPLACE(`rank#`,'#','') AS INT) >= 5", -11.06457680176], [" SELECT COUNT(*) FROM w WHERE rank# LIKE '#5%' OR rank# LIKE '#6%' OR rank# LIKE '#7%' OR rank# LIKE '#8%' OR rank# LIKE '#9%' OR rank# LIKE '#10%'", -12.125126039589999], [" SELECT COUNT(*) FROM w WHERE `rank#` LIKE '#%' AND CAST(SUBSTR(`rank#`, 2, LENGTH(`rank#`) - 1) AS INT) >= 5", -12.769417540824001], [" SELECT COUNT(*) FROM w WHERE rank# NOT LIKE '%[1-4]%'", -19.386205497936004]]}, "955": {"question": "how many total places are in greene county?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `principal county` = 'greene county'", -2.4771254405], [" SELECT COUNT(*) FROM w WHERE `principal county` = 'greene county'", -2.4771254405], [" SELECT COUNT(*) FROM w WHERE `principal county` = 'greene county'", -2.4771254405], [" SELECT COUNT(*) FROM w WHERE `principal county` = 'greene county'", -2.4771254405], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -3.0617405868699996], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -3.0617405868699996], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -3.0617405868699996], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -3.0617405868699996], [" SELECT COUNT(*) FROM w WHERE `principal county` = 'greene county'", -4.5100372935], [" SELECT COUNT(*) FROM w WHERE principal county = 'greene county'", -7.047133836599999]]}, "996": {"question": "what number of players have canada listed as their nationality?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -3.12413076397], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -3.12413076397], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -3.12413076397], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.36297429195], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.43862069195], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.48103439195], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -4.69275319195], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -6.85860429195], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -7.672673381099999], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nQ2: {how many = a2} players have canada listed as their nationality and were drafted in the first round.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round = 1\nQ3: {how many = a3} players have canada listed as their nationality and were drafted in the first or second round.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND (round = 1 OR round = 2)\nQ4: {how many = a4} players were drafted in the first or second round.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE (round = 1 OR round = 2)\nQ5: {how many = a5} players were drafted in the first round.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE round = 1\nQ6: {how many = a6} players were drafted in the first round and have canada listed as their nationality.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE nationality = 'can", -33.223237391459996]]}, "1037": {"question": "number of times to finish the races running.", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE retired = 'running'", -3.618890697820001], [" SELECT COUNT(*) FROM w WHERE retired = 'running'", -3.618890697820001], [" SELECT COUNT(*) FROM w WHERE retired = 'running'", -3.6270855103199997], [" SELECT COUNT(*) FROM w WHERE retired = 'running'", -3.6270855103199997], [" SELECT COUNT(*) FROM w WHERE retired = 'running'", -6.2025561722800004], [" SELECT COUNT(*) FROM w WHERE retired = 'running'", -6.872195010742001], [" SELECT COUNT(*) FROM w WHERE retired = 'running'", -6.87466845728], [" SELECT COUNT(*) FROM w WHERE retired = 'running'", -8.864934918707], [" SELECT SUM(CASE WHEN `retired` = 'running' THEN 1 ELSE 0 END) FROM w\n```", -10.665449698309999], [" SELECT COUNT(*) FROM w WHERE retired = 'running'", -11.262384418707]]}, "1040": {"question": "how many times was a mitsubishi lancer the winning car before the year 2004?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -4.4169858496700005], [" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -4.4169858496700005], [" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -5.69678512036], [" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -5.70347361092], [" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -5.70347361092], [" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -6.55206352192], [" SELECT COUNT(*) FROM w WHERE year < 2004 AND car = 'mitsubishi lancer'", -7.342611994070001], [" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -8.11723090436], [" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -9.82501335592], [" SELECT COUNT(*) FROM w WHERE car = 'mitsubishi lancer' AND year < 2004", -10.594542004360001]]}, "1061": {"question": "how many more gold medals must qatar win before they can earn 12 gold medals?", "gold_answer": ["11"], "pred_answer": {"0": [[], [1], [], [], [], [], [], [], [1], [1]], "1": ["<error>"], "2": [[10]], "3": ["<error>"], "4": [[22]], "5": ["<error>"], "6": [[22]], "7": ["<error>"], "8": [[22]], "9": ["<error>"], "10": [[22]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'qatar'", -2.673703969054], [" SELECT gold FROM w WHERE nation LIKE '%qatar%'", -3.8267235182499997], [" SELECT gold FROM w WHERE nation = 'qatar'", -4.37690571625], [" SELECT gold FROM w WHERE nation = 'qatar'", -4.51693841264], [" SELECT gold FROM w WHERE nation = 'qatar'", -4.51693841264], [" SELECT gold FROM w WHERE nation = 'qatar'", -4.51693841264], [" SELECT gold FROM w WHERE nation = 'qatar'", -4.51693841264], [" SELECT gold FROM w WHERE nation = 'qatar'", -5.73380891025], [" SELECT SUM(gold) FROM w WHERE nation LIKE '%qatar%'", -10.74303281231], [" SELECT gold FROM w WHERE nation LIKE '%qatar%'\nQ2: the number of countries that win {how many = a2} gold medals.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = 0\nQ3: {how many = a3} countries win more than {how many = a4} gold medals.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE gold > 0\nQ4: {how many = a5} countries win more than {how many = a6} gold medals.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE gold > 0\nQ5: {how many = a7} countries win more than {how many = a8} gold medals.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE gold > 0\nQ6: {how many = a9} countries win more than {how many = a10} gold medals.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE gold > 0\nQ7: {how many = a11} countries win more than {how many = a12} gold medals.\nNeuralSQL7:", -40.11698734314898]]}, "1078": {"question": "how many nations received a medal in each gold, silver, and bronze?", "gold_answer": ["6"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]], "2": [[19], [19], [19], [19], [19], [19], [19], [19], [19], [19]]}, "nsql": [[" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(DISTINCT nation) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(DISTINCT nation) FROM w WHERE bronze > 0", -2.32871329186387], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(DISTINCT nation) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(DISTINCT nation) FROM w WHERE bronze > 0", -2.32871329186387], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(DISTINCT nation) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(DISTINCT nation) FROM w WHERE bronze > 0", -2.32871329186387], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(DISTINCT nation) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(DISTINCT nation) FROM w WHERE bronze > 0", -2.32871329186387], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(DISTINCT nation) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(DISTINCT nation) FROM w WHERE bronze > 0", -2.32871329186387], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze > 0", -7.975008533093001], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze > 0", -8.215334673493], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze > 0", -8.215334673493], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze > 0", -9.981286233093], [" SELECT COUNT(*) FROM w WHERE gold > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE silver > 0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE bronze > 0", -10.215227115443]]}, "1082": {"question": "in 1926 brazilian football, how many teams scored above 10 points in the season?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE points > 10", -0.99535039895], [" SELECT COUNT(*) FROM w WHERE points > 10", -0.99535039895], [" SELECT COUNT(*) FROM w WHERE points > 10", -0.99535039895], [" SELECT COUNT(*) FROM w WHERE points > 10", -0.9954106119499999], [" SELECT COUNT(*) FROM w WHERE points > 10", -0.99548606595], [" SELECT COUNT(*) FROM w WHERE points > 10", -0.99724960115], [" SELECT COUNT(DISTINCT team) FROM w WHERE points > 10", -2.4798047877359997], [" SELECT COUNT(*) FROM w WHERE points > 10", -3.8304142156500003], [" SELECT COUNT(*) FROM w WHERE points > 10", -5.102402248889999], [" SELECT COUNT(DISTINCT team) FROM w WHERE points > 10\n```", -15.461666617555998]]}, "1119": {"question": "who was the only winner to have their time below 61:45:00?", "gold_answer": ["Jacinto Sicam"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [18], [18], [0], [7], [18]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE time < '61:45:00'", -2.58086503908], [" SELECT COUNT(*) FROM w WHERE time < '61:45:00'", -2.58086503908], [" SELECT COUNT(*) FROM w WHERE time < '61:45:00'", -2.58086503908], [" SELECT COUNT(*) FROM w WHERE time < '61:45:00'", -2.58086503908], [" SELECT COUNT(*) FROM w WHERE `time` < '61:45:00'", -3.489199595079999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(time, ':', '') AS INT) < 6145000", -9.4475491262], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(time, ':', '') AS INT) < 6145000", -11.22752529666], [" SELECT COUNT(*) FROM w WHERE TIME(time) < TIME('61:45:00')", -11.364484434849999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(time, ':', '') AS INT) < 614500", -14.313058740520002], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(time, ':', '') AS INT) < 6145000", -14.58660133666]]}, "1123": {"question": "which team did czech republic score the most goals against?", "gold_answer": ["Malta"], "pred_answer": {"0": [[0], [0], [0], [0], [null], [0], [null], [0], [null], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = '{a2}'", -5.134318868970001], [" SELECT COUNT(*) FROM w WHERE opponent = '{a2}'", -5.134318868970001], [" SELECT COUNT(*) FROM w WHERE opponent = '{a2}'", -6.176624547800001], [" SELECT COUNT(*) FROM w WHERE opponent = 'a2'", -8.4987273018], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE opponent = '{team = a2}'", -8.699700944749999], [" SELECT COUNT(*) FROM w WHERE opponent = 'a2'", -9.002789293940001], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE opponent = '{a2}'", -9.31261886935], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND opponent = '{a2}'", -10.616121589919999], [" SELECT SUM(CAST(REPLACE(score,'\u2013','-') AS INT)) FROM w WHERE opponent = '{team}'", -13.334766925419997], [" SELECT COUNT(*) FROM w WHERE opponent = a2", -13.557050620100002]]}, "1164": {"question": "what is the number of times deggendorfer sc ii is on the list?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE north = 'deggendorfer sc ii' OR south = 'deggendorfer sc ii' OR east = 'deggendorfer sc ii' OR west = 'deggendorfer sc ii'", -2.8026720015080007], [" SELECT COUNT(*) FROM w WHERE north = 'deggendorfer sc ii' OR south = 'deggendorfer sc ii' OR east = 'deggendorfer sc ii' OR west = 'deggendorfer sc ii'", -2.803194424189001], [" SELECT COUNT(*) FROM w WHERE north = 'deggendorfer sc ii' OR south = 'deggendorfer sc ii' OR east = 'deggendorfer sc ii' OR west = 'deggendorfer sc ii'", -2.8034681515499997], [" SELECT COUNT(*) FROM w WHERE north = 'deggendorfer sc ii' OR south = 'deggendorfer sc ii' OR east = 'deggendorfer sc ii' OR west = 'deggendorfer sc ii'", -2.8038054984600005], [" SELECT COUNT(*) FROM w WHERE north LIKE '%deggendorfer sc ii%' OR south LIKE '%deggendorfer sc ii%' OR east LIKE '%deggendorfer sc ii%' OR west LIKE '%deggendorfer sc ii%'", -3.6372117570399998], [" SELECT COUNT(*) FROM w WHERE north LIKE '%deggendorfer sc ii%' OR south LIKE '%deggendorfer sc ii%' OR east LIKE '%deggendorfer sc ii%' OR west LIKE '%deggendorfer sc ii%'", -3.6395046947899994], [" SELECT COUNT(*) FROM w WHERE north LIKE '%deggendorfer sc ii%' OR south LIKE '%deggendorfer sc ii%' OR east LIKE '%deggendorfer sc ii%' OR west LIKE '%deggendorfer sc ii%'", -4.67075451104], [" SELECT COUNT(*) FROM w WHERE `east` = 'deggendorfer sc ii' OR `west` = 'deggendorfer sc ii' OR `north` = 'deggendorfer sc ii' OR `south` = 'deggendorfer sc ii'", -6.967719169802999], [" SELECT COUNT(*) FROM w WHERE east = 'deggendorfer sc ii' OR west = 'deggendorfer sc ii'", -9.496926052620001], [" SELECT COUNT(*) FROM w WHERE east = 'deggendorfer sc ii' OR west = 'deggendorfer sc ii'", -12.956697757939999]]}, "1205": {"question": "what is the number of mills first mentioned or built in the 1800s?", "gold_answer": ["8"], "pred_answer": {"0": [[6], [6], [6], [6], [0], [0], [0], [0], [6], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%'", -3.47518955441], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%'", -3.47518955441], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%'", -3.47518955441], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%'", -3.47518955441], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%-%-%'", -5.108715321589999], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%-%-%'", -5.11163469977], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%-%-%'", -5.11163469977], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%-%-%'", -5.11163469977], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%'", -5.6989956916099995], [" SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '18%-%-%'", -5.752129645409998]]}, "1246": {"question": "what is the total number of year begun?", "gold_answer": ["6"], "pred_answer": {"0": [[7], [9604], [11524], [11524], [11524], [10], [11524], [11524], [11524], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT year begun) FROM w", -3.9606181228099993], [" SELECT SUM(CAST(`year begun` AS INT)) FROM w", -7.09846416431], [" SELECT SUM(CAST(REPLACE(`year begun`,'ca. ','') AS INT)) FROM w", -8.08864902091], [" SELECT SUM(CAST(REPLACE(`year begun`,'ca. ','') AS INT)) FROM w", -8.589278714309998], [" SELECT SUM(CAST(REPLACE(`year begun`,'ca. ','') AS INT)) FROM w", -8.812253459724001], [" SELECT COUNT(*) FROM w WHERE `year begun` IS NOT NULL", -8.827404893514], [" SELECT SUM(CAST(REPLACE(`year begun`,'ca. ','') AS INT)) FROM w", -9.703727259724001], [" SELECT SUM(CAST(REPLACE(`year begun`,'ca. ','') AS INT)) FROM w", -10.209495759724], [" SELECT SUM(CAST(REPLACE(`year begun`,'ca. ','') AS INT)) FROM w", -10.943884359724], [" SELECT COUNT(DISTINCT(year begun)) FROM w", -12.60779448143]]}, "28": {"question": "how many pylons are in austria?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'austria'", -1.081684682685], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -1.081684682685], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -1.081684682685], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -1.081684682685], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -1.081684682685], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -1.085224793834], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -1.085224793834], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -1.085224793834], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -2.3815058804900002], [" SELECT COUNT(*) FROM w WHERE country = 'austria'", -2.3815058804900002]]}, "69": {"question": "how many years did earl ball coach the muncie flyers?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE coach = 'earl ball'", -2.2492864943510003], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -6.079642407482999], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -8.734347822023], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -9.575169510488001], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -9.893758507672], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -10.354244863487999], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -10.541051917672], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -11.196436790487999], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -11.609018518819], [" SELECT COUNT(DISTINCT year) FROM w WHERE coach = 'earl ball'", -11.884683709023]]}, "110": {"question": "how many people didn't name their native language?", "gold_answer": ["27"], "pred_answer": {"0": [[1285], [1285], [1285], [1285], [1285], [1285], [1285], [1285], [0], [0]]}, "nsql": [[" SELECT SUM(`number`) FROM w WHERE `language` = 'other'", -4.92060979899], [" SELECT SUM(number) FROM w WHERE language = 'other'", -6.559248116690002], [" SELECT SUM(number) FROM w WHERE language = 'other'", -7.331540115540001], [" SELECT SUM(number) FROM w WHERE language = 'other'", -7.57007672631], [" SELECT SUM(`number`) FROM w WHERE `language` = 'other'", -7.9239262109899995], [" SELECT SUM(number) FROM w WHERE language = 'other'", -11.178989875540001], [" SELECT SUM(number) FROM w WHERE language = 'other'", -11.946974675540002], [" SELECT SUM(number) FROM w WHERE language = 'other'", -13.20924065631], [" SELECT SUM(number) - SUM(males) - SUM(females) FROM w", -14.09739118747], [" SELECT SUM(males) + SUM(females) - SUM(number) FROM w", -17.36114638088]]}, "151": {"question": "what is the difference between vladimir gadzhev and yordan miliev's scores?", "gold_answer": ["3"], "pred_answer": {"0": [[4], [4], [2], [2], [2], [4], [4], [4], [2], [4]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'yordan miliev'", -3.0661994304500007], [" SELECT total FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT total FROM w WHERE player = 'yordan miliev'", -3.1571133428399993], [" SELECT league FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT league FROM w WHERE player = 'yordan miliev'", -3.46525570125], [" SELECT SUM(league) FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'yordan miliev'", -4.057806518513998], [" SELECT SUM(league) FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'yordan miliev'", -4.0620064770659985], [" SELECT total FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT total FROM w WHERE player = 'yordan miliev'", -4.72986076349], [" SELECT SUM(league) + SUM(cup) + SUM(europa league) FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT SUM(league) + SUM(cup) + SUM(europa league) FROM w WHERE player = 'yordan miliev'", -5.395499749177004], [" SELECT league + cup + europa league FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT league + cup + europa league FROM w WHERE player = 'yordan miliev'", -7.136850935600001], [" SELECT SUM(league) FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'yordan miliev'", -7.821328094009998], [" SELECT SUM(league) + SUM(cup) + SUM(`europa league`) FROM w WHERE player = 'vladimir gadzhev'\nNeuralSQL2: SELECT SUM(league) + SUM(cup) + SUM(`europa league`) FROM w WHERE player = 'yordan miliev'", -8.817794240809999]]}, "192": {"question": "how many stars have a current magnitude of at least 1.0?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -1.4582137001939999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -1.4582137001939999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -1.4582137001939999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -1.4582137001939999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -1.4582137001939999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -1.4582137001939999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -1.4582137001939999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -1.4582137001939999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -4.028850197793999], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` >= 1.0", -4.028850197793999]]}, "233": {"question": "which single ranks 1 in us and 1 in us alt?", "gold_answer": ["\"Butterfly\""], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -1.6782575970300004], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -1.6790355432300004], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -1.6790791799300004], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -1.6790791799300004], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -1.6790791799300004], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -1.6790791799300004], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -1.6790791799300004], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -1.6790791799300004], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = '1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = '1'", -3.320255779930001], [" SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus` = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `peak chart positions\\nus\\nalt.` = 1", -7.3552058199140005]]}, "274": {"question": "how many times has he been runner-up?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.37326235621], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.37326235621], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.37326235621], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.3741222336499999], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.3741222336499999], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.37412939445], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.4478432160700003], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.4483001448699997], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.44831868387], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.4517826928699997]]}, "315": {"question": "what is the total amount of runs?", "gold_answer": ["4"], "pred_answer": {"0": [[21], [21], [21], [21], [21], [21], [21], [21], [21], [21]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.8963481732899996], [" SELECT COUNT(*) FROM w", -1.8963481732899996], [" SELECT COUNT(*) FROM w", -1.8963481732899996], [" SELECT COUNT(*) FROM w", -1.8963481732899996], [" SELECT COUNT(*) FROM w", -3.2131743147200007], [" SELECT COUNT(*) FROM w", -3.21583405972], [" SELECT COUNT(*) FROM w", -5.324710216370001], [" SELECT COUNT(*) FROM w WHERE run 1 IS NOT NULL AND run 2 IS NOT NULL AND run 3 IS NOT NULL AND run 4 IS NOT NULL", -8.056645137720004], [" SELECT COUNT(*) FROM w WHERE run 1 IS NOT NULL AND run 2 IS NOT NULL AND run 3 IS NOT NULL AND run 4 IS NOT NULL", -8.111656117420003], [" SELECT COUNT(*) FROM w WHERE `run 1` IS NOT NULL AND `run 2` IS NOT NULL AND `run 3` IS NOT NULL AND `run 4` IS NOT NULL", -10.565427524939999]]}, "356": {"question": "does any country have more than 5 winners?", "gold_answer": ["Yes"], "pred_answer": {"0": [[1, 1], [6, 6], [1, 1], [6, 6], [6, 6], [1, 1], [2], [6, 6], "<error>", [6, 6]]}, "nsql": [[" SELECT COUNT(DISTINCT host country) FROM w GROUP BY host country HAVING COUNT(*) > 5", -4.324603865514], [" SELECT COUNT(*) FROM w GROUP BY host country HAVING COUNT(*) > 5", -9.212385306734], [" SELECT COUNT(DISTINCT `host country`) FROM w GROUP BY `host country` HAVING COUNT(*) > 5", -9.879855862738], [" SELECT COUNT(*) FROM w GROUP BY host country HAVING COUNT(*) > 5", -10.62512850386], [" SELECT COUNT(*) FROM w GROUP BY host country HAVING COUNT(*) > 5", -11.039103407734], [" SELECT COUNT(DISTINCT host country) FROM w GROUP BY host country HAVING COUNT(host country) > 5", -11.830199220906], [" SELECT COUNT(DISTINCT host country) FROM w WHERE host country IN (SELECT host country FROM w GROUP BY host country HAVING COUNT(*) > 5)", -12.697301050614001], [" SELECT COUNT(*) FROM w GROUP BY host country HAVING COUNT(*) > 5", -13.013524507734], [" SELECT COUNT(*) FROM (SELECT host country, COUNT(*) FROM w GROUP BY host country) WHERE COUNT(*) > 5", -14.28725805836], [" SELECT COUNT(*) FROM w GROUP BY host country HAVING COUNT(*) > 5", -17.74716918055]]}, "397": {"question": "how many sites were listed as historical before 1980?", "gold_answer": ["12"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01 00:00:00'", -2.26841957894], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01 00:00:00'", -2.26841957894], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01 00:00:00'", -2.26841957894], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01 00:00:00'", -2.26841957894], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01 00:00:00'", -2.26841957894], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01 00:00:00'", -2.26841957894], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01 00:00:00'", -2.26841957894], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01'", -5.935545181790001], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01'", -5.935545181790001], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1980-01-01'", -6.079819019240001]]}, "400": {"question": "in 1906, how many total rolling stock vehicles were in service?", "gold_answer": ["12"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12037630839], [" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12037630839], [" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12037630839], [" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12037630839], [" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12037630839], [" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12037630839], [" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12037630839], [" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12240670039], [" SELECT COUNT(*) FROM w WHERE date = 1906", -2.12240670039], [" SELECT COUNT(*) FROM w WHERE date = 1906", -3.1249402783900004]]}, "421": {"question": "how many more votes did the liberal democratic league win over the free-thinking democratic league?", "gold_answer": ["112,781"], "pred_answer": {"0": [["164376"], [164376], ["164376"], ["164376"], [164376], [0], [164376], [164376], [164376], [164376]], "1": [["51595"], [51595], ["51595"], ["51595"], [51595], [0], [51595], [51595], [51595], [51595]]}, "nsql": [[" SELECT REPLACE(votes, ',', '') FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT REPLACE(votes, ',', '') FROM w WHERE party = 'free-thinking democratic league'", -5.04463182653], [" SELECT CAST(REPLACE(votes, '.', '') AS INT) FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT CAST(REPLACE(votes, '.', '') AS INT) FROM w WHERE party = 'free-thinking democratic league'", -6.23723309893], [" SELECT votes FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT votes FROM w WHERE party = 'free-thinking democratic league'", -6.44618457902], [" SELECT REPLACE(votes,'none','') FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT REPLACE(votes,'none','') FROM w WHERE party = 'free-thinking democratic league'", -6.9273511736139985], [" SELECT CAST(REPLACE(votes, ',', '') AS INT) FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT CAST(REPLACE(votes, ',', '') AS INT) FROM w WHERE party = 'free-thinking democratic league'", -8.937569438449998], [" SELECT CAST(SUBSTR(votes, 1, INSTR(votes, '(') - 1) AS INT) FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT CAST(SUBSTR(votes, 1, INSTR(votes, '(') - 1) AS INT) FROM w WHERE party = 'free-thinking democratic league'", -9.671380012511001], [" SELECT CAST(votes AS INT) FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT CAST(votes AS INT) FROM w WHERE party = 'free-thinking democratic league'", -11.85041053022], [" SELECT CAST(votes AS INT) FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT CAST(votes AS INT) FROM w WHERE party = 'free-thinking democratic league'", -12.129392130219998], [" SELECT CAST(REPLACE(votes,'.','') AS INT) FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT CAST(REPLACE(votes,'.','') AS INT) FROM w WHERE party = 'free-thinking democratic league'", -12.248211194454], [" SELECT CAST(REPLACE(votes,'.','') AS INT) FROM w WHERE party = 'liberal democratic league'\nNeuralSQL2: SELECT CAST(REPLACE(votes,'.','') AS INT) FROM w WHERE party = 'free-thinking democratic league'", -12.930005894454002]]}, "438": {"question": "how many months had a record high of over 15.0 degrees?", "gold_answer": ["11"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE record high \u00b0c (\u00b0f) > 15", -5.248541690799999], [" SELECT COUNT(*) FROM w WHERE `record high \u00b0c (\u00b0f)` LIKE '%15%'", -5.91570739618], [" SELECT COUNT(*) FROM w WHERE `record high \u00b0c (\u00b0f)` LIKE '%15%'", -5.91570739618], [" SELECT COUNT(*) FROM w WHERE record high \u00b0c (\u00b0f) LIKE '%15;%'", -7.834043952346], [" SELECT COUNT(*) FROM w WHERE `record high \u00b0c (\u00b0f)` LIKE '%15;%'", -8.0708121557], [" SELECT COUNT(*) FROM w WHERE `record high \u00b0c (\u00b0f)` LIKE '%> 15%'", -8.3773567677], [" SELECT COUNT(*) FROM w WHERE `record high \u00b0c (\u00b0f)` > '15'", -10.387403487006], [" SELECT COUNT(*) FROM w WHERE record high \u00b0c (\u00b0f) > '15'", -10.961038921060002], [" SELECT COUNT(*) FROM w WHERE record high \u00b0c (\u00b0f) LIKE '%15%'", -11.922927672145999], [" SELECT COUNT(*) FROM w WHERE `record high \u00b0c (\u00b0f)` LIKE '%15; (59)%'", -16.095323979769997]]}, "442": {"question": "how many boats costed less than \u00a320m to build?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [4], [4], [3], "<error>", [4], [3], [4]], "1": ["<error>", "<error>"], "2": [[2], [2]], "3": ["<error>", "<error>"], "4": [[2], [1]], "5": ["<error>", "<error>"], "6": [[2], [1]], "7": ["<error>", "<error>"], "8": [[2]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`est. building cost`,'\u00a3','') AS INT) < 20000000", -2.95823184453], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`est. building cost`,'\u00a3','') AS INT) < 20000000", -2.95823184453], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`est. building cost`,'\u00a3','') AS INT) < 20000000", -2.95823184453], [" SELECT COUNT(*) FROM w WHERE `est. building cost` < '\u00a320m'", -4.28962784816], [" SELECT COUNT(*) FROM w WHERE `est. building cost` < '\u00a320m'", -4.28962784816], [" SELECT COUNT(*) FROM w WHERE `est. building cost` < '\u00a320,000,000'", -6.014144112479999], [" SELECT COUNT(*) FROM w WHERE est. building cost < 20m", -7.7154282628], [" SELECT COUNT(*) FROM w WHERE `est. building cost` < '\u00a320m'", -12.09213463959], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`est. building cost`,'\u00a3','') AS INT) < 20000000\nQ2: {how many = a2} boats were built by vosper thornycroft.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `hull builder` = 'vosper thornycroft'\nQ3: {how many = a3} boats were built by vosper thornycroft.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `hull builder` = 'vosper thornycroft'\nQ4: {how many = a4} boats were built by vosper thornycroft.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `hull builder` = 'vosper thornycroft'\nQ5: {how many = a5} boats were built by vosper thornycroft.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `hull builder` = 'vosper thornycroft'\nQ6: {how many = a6} boats were built by vos", -20.39506319484151], [" SELECT COUNT(*) FROM w WHERE `est. building cost` < '\u00a320m'\nQ2: {how many = a2} boats were built by vosper thornycroft.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `hull builder` = 'vosper thornycroft'\nQ3: {how many = a3} boats were built by vosper thornycroft and costed less than \u00a320m.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `hull builder` = 'vosper thornycroft' AND `est. building cost` < '\u00a320m'\nQ4: {how many = a4} boats were built by vosper thornycroft and costed more than \u00a320m.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `hull builder` = 'vosper thornycroft' AND `est. building cost` > '\u00a320m'\nQ5: {how many = a5} boats were built by vosper thornycroft and costed more than \u00a320m and were accepted into service after 1974-", -35.57766579331501]]}, "479": {"question": "how many total coaches on the list are from canada?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [4], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -3.436557097584], [" SELECT COUNT(DISTINCT name) FROM w WHERE nationality = 'canada'", -4.698434609054], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -5.711263176618001], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -5.711263176618001], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -5.711263176618001], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -5.711263176618001], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -5.716588476618], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -5.726763152318], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -7.287070976618001], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -7.848481476618001]]}, "483": {"question": "how many tournaments had 5 total losses?", "gold_answer": ["2"], "pred_answer": {"0": [[1], [1], [1], [0], [2], [0], [1], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE w\u2013l = '5\u20135'", -4.659913288539999], [" SELECT COUNT(*) FROM w WHERE `w\u2013l` = '5\u20135'", -5.15411010444], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '5\u2013%'", -5.271986435539999], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '%-5'", -5.55214581957], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '%\u20135%'", -5.97101253754], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '5-%'", -6.423773132540001], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '%5\u2013%'", -6.656146312540001], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '%\u20135'", -7.66273035054], [" SELECT COUNT(*) FROM w WHERE w\u2013l LIKE '%\u20135'", -7.66273035054], [" SELECT COUNT(DISTINCT tournament) FROM w WHERE w\u2013l LIKE '%\u20135'", -11.63903706624]]}, "524": {"question": "how many drivers from germany?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": [[0]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'", -4.318087278605001], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'", -4.318087278605001], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'", -4.318919837605], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'", -5.140531507815001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '% germany'", -5.594201542905001], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'", -6.121524163415], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'", -6.121524163415], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'", -6.121524163415], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%germany%'", -6.126016036395001], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nQ2: {how many = a2} drivers from germany.\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nQ3: {how many = a3} drivers from germany.\nNeuralSQL3: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nQ4: {how many = a4} drivers from germany.\nNeuralSQL4: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nQ5: {how many = a5} drivers from germany.\nNeuralSQL5: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nQ6: {how many = a6} drivers from germany.\nNeuralSQL6: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '%germany%'\nQ7: {how many =", -14.956321509918299]]}, "565": {"question": "the shows with at most 1 cameo", "gold_answer": ["Krishna Arjun", "Rihaae", "Jassi Jaisi Koi Nahin", "Kumkum - Ek Pyara Sa Bandhan"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [4], [4], [4], [4]], "1": ["<error>", "<error>", "<error>"], "2": [[1], [1]], "3": ["<error>", "<error>"], "4": [[0], [1]], "5": ["<error>", "<error>"], "6": [[5], [3]], "7": ["<error>", "<error>"], "8": [[0], [0]], "9": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notes LIKE '%cameo%'", -4.857615238259999], [" SELECT COUNT(*) FROM w WHERE notes = 'cameo'", -5.39276333797], [" SELECT COUNT(*) FROM w WHERE notes = 'cameo'", -5.39276333797], [" SELECT COUNT(*) FROM w WHERE notes = 'cameo'", -5.39276333797], [" SELECT COUNT(*) FROM w WHERE notes = 'cameo'", -5.39276333797], [" SELECT COUNT(*) FROM w GROUP BY show HAVING COUNT(*) <= 1", -5.739441133749999], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%cameo%'", -6.32786381526], [" SELECT COUNT(DISTINCT show) FROM w WHERE notes LIKE 'cameo'\n```", -13.310469922214], [" SELECT COUNT(*) FROM w WHERE notes = 'cameo'\nQ2: {how many = a2} shows with a role of mayuri / gauri.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE role = 'mayuri / gauri'\nQ3: {how many = a3} shows with a role of mayuri / gauri and a cameo.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE role = 'mayuri / gauri' AND notes = 'cameo'\nQ4: {how many = a4} shows with a role of mayuri / gauri or a cameo.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE role = 'mayuri / gauri' OR notes = 'cameo'\nQ5: {how many = a5} shows with a role of mayuri / gauri and a cameo and at most 1 cameo.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE role = 'mayuri / gauri' AND notes = 'cameo' AND notes = 'cameo'\nQ6: {how many =", -38.07709792959393], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%cameo%'\nQ2: {how many = a2} shows with a role of none.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE role = 'none'\nQ3: {how many = a3} shows with a role of none and a year of 2005.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE role = 'none' AND year = 2005\nQ4: {how many = a4} shows with a role of none or a year of 2005.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE role = 'none' OR year = 2005\nQ5: {how many = a5} shows with a role of none and a year of 2005 and a show of kya hadsaa kya haqeeqat.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE role = 'none' AND year = 2005 AND show = 'kya hadsaa kya haqeeqat'\nQ6: {how many = a6} shows with a role of none or a year of 2005 and a", -40.444806590019056]]}, "606": {"question": "what is the total number of runner-ups listed on the chart?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.7172313136700001], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.72344707911], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.72344707911], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.72511947251], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -1.72511947251], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.1575643634299997], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.1575643634299997], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.1575643634299997], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.1575643634299997], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -2.1581823046300004]]}, "647": {"question": "how many more people attended the november 18, 1993 games than the november 9th game?", "gold_answer": ["8865"], "pred_answer": {"0": [[17008], [17008], [17008], [17008], [17008], [1], [17008], [null], [17008], [17008]], "1": [[8143], [8143], [8143], [8143], [8143], [1], [8143], "<error>", [8143], [8143]]}, "nsql": [[" SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date LIKE '1993-11-18%'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date LIKE '1993-11-09%'", -6.016005347795999], [" SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date LIKE '1993-11-18%'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date LIKE '1993-11-09%'", -6.017029596410001], [" SELECT SUM(CAST(REPLACE(attendance, '*', '') AS INT)) FROM w WHERE date LIKE '1993-11-18%'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance, '*', '') AS INT)) FROM w WHERE date LIKE '1993-11-09%'", -6.241572228872999], [" SELECT SUM(CAST(REPLACE(attendance, '*', '') AS INT)) FROM w WHERE date LIKE '1993-11-18%'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance, '*', '') AS INT)) FROM w WHERE date LIKE '1993-11-09%'", -7.619387795872999], [" SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date = '1993-11-18 00:00:00'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date LIKE '1993-11-09 00:00:00'", -8.269830798936999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1993-11-18%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1993-11-09%'", -9.4016431003], [" SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date = '1993-11-18 00:00:00'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date LIKE '1993-11-09%'", -11.883261349163002], [" SELECT SUM(CAST(REPLACE(attendance, '*', '') AS INT)) FROM w WHERE date = '1993-11-18'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance, '*', '') AS INT)) FROM w WHERE DATE_FORMAT(date, '%Y-%m-%d') = '1993-11-09'", -12.134221967563999], [" SELECT SUM(CAST(REPLACE(attendance, '*', '') AS INT)) FROM w WHERE date = '1993-11-18 00:00:00'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance, '*', '') AS INT)) FROM w WHERE date LIKE '1993-11-09%'", -13.832111905586], [" SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date = '1993-11-18 00:00:00'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(attendance,'*','') AS INT)) FROM w WHERE date LIKE '1993-11-09%'", -15.114593344858001]]}, "688": {"question": "which engines were used after 1999?", "gold_answer": ["Silvertop", "Blacktop"], "pred_answer": {"0": [[7], [0], [0], [0], "<error>", [0], [0], [9], [1], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE engine IN ('blacktop', 'redtop')", -7.234019288530001], [" SELECT COUNT(DISTINCT engine) FROM w WHERE CAST(SUBSTR(car, 1, INSTR(car, '-') - 1) AS INT) > 1999", -7.644514073357301], [" SELECT COUNT(DISTINCT engine) FROM w WHERE car LIKE '%-%' AND CAST(SUBSTR(car, INSTR(car, '-') + 1, LENGTH(car) - (INSTR(car, '-') + 1)) AS INT) > 1999", -8.444601272049296], [" SELECT COUNT(DISTINCT car) FROM w WHERE car LIKE '% - %' AND CAST(SUBSTR(car, INSTR(car, ' - ') + 1, LENGTH(car) - (INSTR(car, ' - ') + 1)) AS INT) > 1999", -11.1993320832783], [" SELECT COUNT(*) FROM w WHERE `car` LIKE '%'99'%'", -11.566526072830001], [" SELECT COUNT(DISTINCT engine) FROM w WHERE car LIKE '%-99%'", -11.6993939954993], [" SELECT COUNT(*) FROM w WHERE `car` LIKE '% - %' AND SUBSTR(`car`, INSTR(`car`, '-') + 1, LENGTH(`car`) - (INSTR(`car`, '-') + 1)) > 1999", -12.915164659119998], [" SELECT COUNT(*) FROM w WHERE `car` LIKE '%' AND `car` NOT LIKE '%-99 %'", -13.980621179730003], [" SELECT COUNT(DISTINCT engine) FROM w WHERE `car` LIKE '%99%'", -14.0543980859253], [" SELECT COUNT(DISTINCT engine) FROM w WHERE car LIKE '%9%'", -18.191858797570298]]}, "729": {"question": "how many teams won at least 2 games throughout the 1951 world ice hockey championships?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE won >= 2", -1.1991299321], [" SELECT COUNT(*) FROM w WHERE won >= 2", -1.1991299321], [" SELECT COUNT(*) FROM w WHERE won >= 2", -1.1991299321], [" SELECT COUNT(*) FROM w WHERE won >= 2", -1.1991299321], [" SELECT COUNT(*) FROM w WHERE won >= 2", -1.1991299321], [" SELECT COUNT(*) FROM w WHERE won >= 2", -1.1991299321], [" SELECT COUNT(DISTINCT team) FROM w WHERE won >= 2", -3.0748006663900003], [" SELECT COUNT(*) FROM w WHERE won >= 2", -3.8770081583], [" SELECT COUNT(*) FROM w WHERE won >= 2\n```", -8.56786699037], [" SELECT COUNT(*) FROM w WHERE won >= 2", -9.166893189300001]]}, "770": {"question": "which team was the only team that was undefeated?", "gold_answer": ["Palestra It\u00e1lia-SP"], "pred_answer": {"0": [[1], [1], [1], [0], [0], [0], [0], [0], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE won = played", -3.20840348837], [" SELECT COUNT(*) FROM w WHERE won = 0", -4.00841258837], [" SELECT COUNT(*) FROM w WHERE won = played AND drawn = 0 AND lost = 0", -4.56111651217], [" SELECT COUNT(*) FROM w WHERE won = 0 AND drawn = 0", -4.565396423149998], [" SELECT COUNT(*) FROM w WHERE won = 0 AND drawn = 0 AND lost = 0", -4.568777835869999], [" SELECT COUNT(DISTINCT team) FROM w WHERE won = 0 AND drawn = 0 AND lost = 0", -6.5672679069], [" SELECT COUNT(*) FROM w WHERE won = 0 AND drawn = 0 AND lost = 1", -6.6172284358699995], [" SELECT COUNT(*) FROM w WHERE won = 0 AND drawn = 0", -6.7326330903699985], [" SELECT COUNT(*) FROM w WHERE won = played AND lost = 0", -7.042077090669999], [" SELECT COUNT(*) FROM w WHERE won = played AND drawn = 0 AND lost = 0", -19.670160751549997]]}, "811": {"question": "how many cities from canada are on this list?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>"], "2": [[9458]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": [[0]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city LIKE 'canada%'", -3.6961267275980005], [" SELECT COUNT(*) FROM w WHERE city LIKE 'canada, %'", -3.882816208214], [" SELECT COUNT(DISTINCT city) FROM w WHERE city LIKE 'canada%'", -5.098007014970001], [" SELECT COUNT(DISTINCT city) FROM w WHERE city LIKE 'canada, %'", -5.225772982069999], [" SELECT COUNT(DISTINCT city) FROM w WHERE city LIKE 'canada,%'", -8.171310533060002], [" SELECT COUNT(DISTINCT city) FROM w WHERE city LIKE 'canada%'", -10.573813211210002], [" SELECT COUNT(DISTINCT city) FROM w WHERE city LIKE 'canada%'", -10.72415264121], [" SELECT COUNT(DISTINCT city) FROM w WHERE city LIKE 'canada%'", -10.72415264121], [" SELECT COUNT(DISTINCT city) FROM w WHERE city LIKE 'canada, %'", -12.2812000682], [" SELECT COUNT(DISTINCT city) FROM w WHERE city LIKE 'canada%'\nQ2: {how many = a2} passengers are in canada.\nNeuralSQL2: SELECT SUM(passengers) FROM w WHERE city LIKE 'canada%'\nQ3: {how many = a3} cities have a ranking of 1.0.\nNeuralSQL3: SELECT COUNT(DISTINCT city) FROM w WHERE ranking = 1.0\nQ4: {how many = a4} cities have a ranking of 4.0.\nNeuralSQL4: SELECT COUNT(DISTINCT city) FROM w WHERE ranking = 4.0\nQ5: {how many = a5} cities have a ranking of nan.\nNeuralSQL5: SELECT COUNT(DISTINCT city) FROM w WHERE ranking = 'nan'\nQ6: {how many = a6} cities have a ranking of 2.0.\nNeuralSQL6: SELECT COUNT(DISTINCT city) FROM w WHERE ranking = 2.0\nQ7: {how many = a7} cities have a ranking of", -41.81969956154564]]}, "852": {"question": "which was the only television show gauri starred in, in which she played herself?", "gold_answer": ["Jassi Jaisi Koi Nahin"], "pred_answer": {"0": [[1], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT show) FROM w WHERE role = 'herself'", -4.624084767953999], [" SELECT COUNT(*) FROM w WHERE role = 'gauri'", -6.69958539473], [" SELECT COUNT(*) FROM w WHERE role = 'gauri'", -6.69958539473], [" SELECT COUNT(*) FROM w WHERE role = 'gauri'", -6.700925133329999], [" SELECT COUNT(*) FROM w WHERE role = 'gauri'", -7.654953094729999], [" SELECT COUNT(*) FROM w WHERE role = 'gauri'", -7.780945094729999], [" SELECT COUNT(*) FROM w WHERE role = 'gauri'", -8.07647309473], [" SELECT COUNT(*) FROM w WHERE show = 'gauri'", -8.66275835199], [" SELECT COUNT(*) FROM w WHERE role = 'gauri'", -10.2088790086], [" SELECT COUNT(*) FROM w WHERE role = 'gauri'", -10.70473767623]]}, "893": {"question": "how many competitors were under the age of 30?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE age < 30", -1.07617768747], [" SELECT COUNT(*) FROM w WHERE age < 30", -1.07617768747], [" SELECT COUNT(*) FROM w WHERE age < 30", -1.07617768747], [" SELECT COUNT(*) FROM w WHERE age < 30", -1.07617768747], [" SELECT COUNT(*) FROM w WHERE age < 30", -1.07617768747], [" SELECT COUNT(*) FROM w WHERE age < 30", -1.07617768747], [" SELECT COUNT(*) FROM w WHERE age < 30", -1.0916399382], [" SELECT COUNT(*) FROM w WHERE age < 30", -2.0435786938], [" SELECT COUNT(*) FROM w WHERE age < 30", -2.0603201016000003], [" SELECT COUNT(*) FROM w WHERE age < 30", -2.0603201016000003]]}, "934": {"question": "how many different performers appeared during this season?", "gold_answer": ["16"], "pred_answer": {"0": [[16], [16], [16], [16], [16], [16], [16], [16], [16], [16]]}, "nsql": [[" SELECT COUNT(DISTINCT performer) FROM w", -4.71320662843], [" SELECT COUNT(DISTINCT performer) FROM w", -4.92270830673], [" SELECT COUNT(DISTINCT performer) FROM w", -6.01664488125], [" SELECT COUNT(DISTINCT performer) FROM w", -6.01664488125], [" SELECT COUNT(DISTINCT performer) FROM w", -6.01664488125], [" SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` LIKE '2011-%-%'", -7.229277808000001], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -7.471271048879999], [" SELECT COUNT(DISTINCT performer) FROM w", -7.90999037447], [" SELECT COUNT(DISTINCT performer) FROM w", -8.29438738125], [" SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` LIKE '2011-%-%'", -9.607592953520001]]}, "975": {"question": "how many counties have at least one silver medal?", "gold_answer": ["18"], "pred_answer": {"0": [[18], [18], [18], [18], [18], [18], [18], [18], [18], [18]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE silver > 0", -2.423778417966], [" SELECT COUNT(*) FROM w WHERE silver > 0", -2.423778417966], [" SELECT COUNT(*) FROM w WHERE silver > 0", -2.423778417966], [" SELECT COUNT(*) FROM w WHERE silver > 0", -2.423778417966], [" SELECT COUNT(*) FROM w WHERE silver > 0", -2.423778417966], [" SELECT COUNT(*) FROM w WHERE silver > 0", -2.423778417966], [" SELECT COUNT(*) FROM w WHERE silver > 0", -2.423778417966], [" SELECT COUNT(*) FROM w WHERE silver >= 1", -3.2869535377459997], [" SELECT COUNT(*) FROM w WHERE `silver` > 0", -3.678040642586], [" SELECT COUNT(*) FROM w WHERE silver > 0\n```", -6.257142246166]]}, "1016": {"question": "what was the number of losses gran cochisse had against el dandy?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -2.57862882088], [" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -2.57862882088], [" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -2.57862882088], [" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -2.57862882088], [" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -2.57862882088], [" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -2.57862882088], [" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -3.74733954712], [" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -3.74733954712], [" SELECT COUNT(*) FROM w WHERE loser = 'gran cochisse' AND winner = 'el dandy'", -3.74733954712], [" SELECT COUNT(*) FROM w WHERE winner = 'gran cochisse' AND loser = 'el dandy'", -3.9088162093939993]]}, "1057": {"question": "how many comedians made their only appearance on comedy central presents in season 15?", "gold_answer": ["16"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15 AND appearance = 'only'", -3.7361717631899998], [" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15 AND appearance = 'only'", -3.7361717631899998], [" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15 AND appearance = 'only'", -3.7361717631899998], [" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15 AND `appearance` = 'only'", -4.381342694700001], [" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15 AND `appearance` = 'only'", -4.381342694700001], [" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15 AND `appearance` = 'only'", -4.381342694700001], [" SELECT COUNT(DISTINCT performer) FROM w WHERE no. in\\nseason = 15 AND appearance = 'only'", -5.303359566309], [" SELECT COUNT(*) FROM w WHERE `no. in\\nseason` = 15 AND appearance = 'only'", -5.928024948460001], [" SELECT COUNT(DISTINCT performer) FROM w WHERE `no. in\\nseason` = 15 AND appearance = 'only'", -6.389996761499001], [" SELECT COUNT(DISTINCT performer) FROM w WHERE `no. in\\nseries` = 15 AND `no. in\\nseason` = 15 AND appearance = 'only'\n```", -21.450017804408997]]}, "1060": {"question": "how many locations in netanya are there?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [1], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -4.887027236484], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -4.887027236484], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -4.887027236484], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -4.887027236484], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -4.890776482086], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -4.890776482086], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -4.890776482086], [" SELECT COUNT(DISTINCT location) FROM w WHERE location = 'netanya'", -6.2548802123159986], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -7.274528304399999], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -7.701863382086]]}, "1081": {"question": "what is the total number of children born after 1675?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE birth date > '1675-%-%'", -4.05106284332], [" SELECT COUNT(*) FROM w WHERE birth date > '1675-%-%'", -4.05157663482], [" SELECT COUNT(*) FROM w WHERE birth date > '1675-01-01'", -4.17737762932], [" SELECT COUNT(*) FROM w WHERE birth date > '1675-01-01'", -4.17737762932], [" SELECT COUNT(*) FROM w WHERE birth date > '1675-01-01 00:00:00'", -4.236887769215], [" SELECT COUNT(*) FROM w WHERE birth date > '1675-00-00'", -5.62599668632], [" SELECT COUNT(*) FROM w WHERE birth date > '1675-01-01 00:00:00'", -6.11746844462], [" SELECT COUNT(*) FROM w WHERE birth date > '1675-01-01'", -6.997214980520001], [" SELECT COUNT(*) FROM w WHERE birth date > '1675-%-%'\n```", -14.869049290480001], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(birth date, 1, 4) AS INT) > 1675", -15.614799177696002]]}, "1098": {"question": "signed the same date as \"april fools day\".", "gold_answer": ["Chris Spencer"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date signed` = 'april fools day'", -2.4841714673800004], [" SELECT COUNT(*) FROM w WHERE `date signed` = 'april fools day'", -2.4841714673800004], [" SELECT COUNT(*) FROM w WHERE `date signed` = 'april fools day'", -2.4841714673800004], [" SELECT COUNT(*) FROM w WHERE `date signed` = 'april fools day'", -2.4841714673800004], [" SELECT COUNT(*) FROM w WHERE `date signed` = 'april fools day'", -2.4856943432700005], [" SELECT COUNT(*) FROM w WHERE date signed = 'april fools day'", -3.20986267786], [" SELECT COUNT(*) FROM w WHERE date signed = 'april fools day'", -3.20986267786], [" SELECT COUNT(*) FROM w WHERE date signed = 'april fools day'", -5.21103491286], [" SELECT COUNT(DISTINCT player) FROM w WHERE date signed = 'april fools day'", -10.407738391239999], [" SELECT COUNT(*) FROM w WHERE `date signed` = 'april fools day'", -12.62183706299]]}, "1102": {"question": "how many districts are there in this city?", "gold_answer": ["43"], "pred_answer": {"0": [[43], [43], [43], [43], [43], [43], [43], [43], [43], [43]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.963889538065], [" SELECT COUNT(*) FROM w", -1.963889538065], [" SELECT COUNT(*) FROM w", -1.963889538065], [" SELECT COUNT(*) FROM w", -1.963889538065], [" SELECT COUNT(*) FROM w", -2.719142647065], [" SELECT COUNT(*) FROM w", -2.719142647065], [" SELECT COUNT(*) FROM w", -2.719142647065], [" SELECT COUNT(DISTINCT districts) FROM w", -4.274860412035001], [" SELECT COUNT(DISTINCT districts) FROM w", -6.174713216535], [" SELECT COUNT(DISTINCT districts) FROM w", -6.1770214414149995]]}, "1139": {"question": "which event is listed more between the 10,000m and the 5000m?", "gold_answer": ["10,000 m"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -1.3753214848800002], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -1.3753214848800002], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -1.3753214848800002], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -1.3753214848800002], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -1.3753214848800002], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -1.3753214848800002], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -1.375418905606], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -1.375418905606], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -4.556468440880001], [" SELECT COUNT(*) FROM w WHERE event = '10000 m'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE event = '5000 m'", -4.69501644088]]}, "1143": {"question": "how many nations won at least two gold medals?", "gold_answer": ["3"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold >= 2", -1.4587338548000002], [" SELECT COUNT(*) FROM w WHERE gold >= 2", -1.4587338548000002], [" SELECT COUNT(*) FROM w WHERE gold >= 2", -1.4587338548000002], [" SELECT COUNT(*) FROM w WHERE gold >= 2", -1.4587338548000002], [" SELECT COUNT(*) FROM w WHERE gold >= 2", -1.4587338548000002], [" SELECT COUNT(*) FROM w WHERE gold >= 2", -1.4587338548000002], [" SELECT COUNT(*) FROM w WHERE gold >= 2", -2.6002366758], [" SELECT COUNT(*) FROM w WHERE gold >= 2", -2.6002366758], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold >= 2", -2.9585276434190004], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold >= 2\n```", -5.876103314909]]}, "1184": {"question": "what is the highest number of goals scored by senijad ibri&#269;i&#263; in a season?", "gold_answer": ["35"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]]}, "nsql": [[" SELECT MAX(goals) FROM w", -1.11562880025], [" SELECT MAX(goals) FROM w", -1.11562880025], [" SELECT MAX(goals) FROM w", -1.11562880025], [" SELECT MAX(goals) FROM w", -1.11562880025], [" SELECT MAX(goals) FROM w", -1.11562880025], [" SELECT MAX(goals) FROM w", -1.11562880025], [" SELECT MAX(goals) FROM w", -1.11562880025], [" SELECT MAX(goals) FROM w", -1.11562880025], [" SELECT MAX(goals) FROM w", -2.99228018425], [" SELECT MAX(goals) FROM w", -2.99228018425]]}, "1225": {"question": "how many world championships had the soviet union won first place in in the 25 metre pistol women's world championship?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.9002046458299997], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.9049734448299995], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.9049734448299995], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.9049734448299995], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%soviet union%'", -2.9071706920300002], [" SELECT COUNT(*) FROM w WHERE `gold` LIKE '%soviet union%'", -3.12884184513], [" SELECT COUNT(*) FROM w WHERE `gold` LIKE '%soviet union%'", -3.12884184513], [" SELECT COUNT(*) FROM w WHERE `gold` LIKE '%soviet union%'", -3.12884184513], [" SELECT COUNT(*) FROM w WHERE place LIKE '%soviet union%'", -4.18453074893], [" SELECT COUNT(*) FROM w WHERE `year` = '1978' AND `place` = 'seoul' AND `gold` LIKE '%soviet union%'", -17.896275378529996]]}, "1266": {"question": "how many buildings on this table are taller than 450 feet?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [30], [30], [8], [8], [8], [8]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`,'/','') AS INT) > 450", -5.50733223182], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`,'/','') AS INT) > 450", -5.507402809120002], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, '/') - 1) AS INT) > 450", -5.545777802210001], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, '/') - 1) AS INT) > 450", -5.54584375998], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`,' / ','') AS INT) > 450", -5.937652956220001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`,' / ','') AS INT) > 450", -5.937652956220001], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, '/') - 1) AS INT) > 450", -6.5451035616099995], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`, 'ft', '') AS INT) > 450", -6.6503292934200005], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft / m`, ' / ', '.') AS FLOAT) > 450", -8.399590590110002], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`height\\nft / m`, 1, INSTR(`height\\nft / m`, '/') - 1) AS INT) > 450\n```", -13.75387264981]]}, "7": {"question": "how many times has germany won bronze?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -1.8141187654029998], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -1.838230613861], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -1.838230613861], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -1.838230613861], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -1.838230613861], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -1.838230613861], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -1.838230613861], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -1.838230613861], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -3.25963814056], [" SELECT COUNT(*) FROM w WHERE bronze LIKE '%germany%'", -3.27827746316]]}, "48": {"question": "how many were played on a hard surface?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.09669649967], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.09669649967], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.09669649967], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.09669649967], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.09970366473], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -1.10061045033], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -2.2633860819800002], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -2.26433374253], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -2.26535453133], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -2.26535453133]]}, "89": {"question": "how many years are listed?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w", -1.4152007396394002], [" SELECT COUNT(DISTINCT year) FROM w", -1.4152007396394002], [" SELECT COUNT(DISTINCT year) FROM w", -1.4152007396394002], [" SELECT COUNT(DISTINCT year) FROM w", -1.4152007396394002], [" SELECT COUNT(DISTINCT year) FROM w", -1.4152007396394002], [" SELECT COUNT(DISTINCT year) FROM w", -1.4152007396394002], [" SELECT COUNT(DISTINCT year) FROM w", -1.4152007396394002], [" SELECT COUNT(DISTINCT year) FROM w", -1.4152007396394002], [" SELECT COUNT(DISTINCT(year)) FROM w", -2.2840632003394004], [" SELECT COUNT(DISTINCT year) FROM w", -3.7463014546394]]}, "130": {"question": "how many buildings has the same year of listing as 1974?", "gold_answer": ["15"], "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -8.216098529768], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -8.924214914768], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -9.043103848548], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -9.072927148548], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -9.436074562768], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -9.476638048548], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -9.548250862768], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -10.688197477548002], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -11.011461029768], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1974", -14.621713484768]]}, "171": {"question": "how many competitors were from russia?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT athlete) FROM w WHERE nationality = 'russia'", -3.26094456121], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -3.438611618955], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -3.438611618955], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -3.438611618955], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.357986118955], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.357986118955], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -4.7144509189549995], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -5.2689769189549995], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -5.3459202189549995], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia'", -6.806529118955]]}, "212": {"question": "how many recordings of nabucco have been made?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.49262464135], [" SELECT COUNT(*) FROM w", -1.49262464135], [" SELECT COUNT(*) FROM w", -1.49262464135], [" SELECT COUNT(*) FROM w", -1.49459859159], [" SELECT COUNT(*) FROM w", -1.49459859159], [" SELECT COUNT(*) FROM w", -1.49459859159], [" SELECT COUNT(*) FROM w", -2.58072742296], [" SELECT COUNT(*) FROM w", -2.58329290796], [" SELECT COUNT(*) FROM w", -2.58329290796], [" SELECT COUNT(DISTINCT label) FROM w", -10.230346529450001]]}, "253": {"question": "how many states were represented in the seats?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(DISTINCT state) FROM w", -4.7685614248000014], [" SELECT COUNT(DISTINCT state) FROM w", -8.42763381442], [" SELECT COUNT(DISTINCT state) FROM w", -8.53663521442], [" SELECT COUNT(DISTINCT state) FROM w", -8.61228324564], [" SELECT COUNT(DISTINCT state) FROM w", -8.85343214564], [" SELECT COUNT(DISTINCT state) FROM w", -9.308099002419999], [" SELECT COUNT(DISTINCT state) FROM w", -9.83133081442], [" SELECT COUNT(DISTINCT state) FROM w", -11.511837938700001], [" SELECT COUNT(DISTINCT state) FROM w", -11.58463391442], [" SELECT COUNT(DISTINCT state) FROM w", -11.821964708640001]]}, "294": {"question": "how many matches overall were there?", "gold_answer": ["233"], "pred_answer": {"0": [[466], [466], [466], [466], [466], [466], [466], [466], [466], [466]]}, "nsql": [[" SELECT SUM(matches) FROM w", -1.04194300345], [" SELECT SUM(matches) FROM w", -1.04194300345], [" SELECT SUM(matches) FROM w", -1.04194300345], [" SELECT SUM(matches) FROM w", -1.04194300345], [" SELECT SUM(matches) FROM w", -1.04194300345], [" SELECT SUM(matches) FROM w", -1.04194300345], [" SELECT SUM(matches) FROM w", -1.04194300345], [" SELECT SUM(matches) FROM w", -1.04210314503], [" SELECT SUM(matches) FROM w", -2.72497306131], [" SELECT SUM(matches) FROM w", -2.72497306131]]}, "335": {"question": "how many models require less than a week of use?", "gold_answer": ["2"], "pred_answer": {"0": [[10], [10], [10], [13], [10], [10], [13], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `length of use` < 'p7d'", -3.42022647191], [" SELECT COUNT(*) FROM w WHERE `length of use` < 'p7d'", -3.42980223941], [" SELECT COUNT(*) FROM w WHERE `length of use` < 'p7d'", -3.4309468064099997], [" SELECT COUNT(*) FROM w WHERE LENGTH(`length of use`) < 7", -5.24302357351], [" SELECT COUNT(DISTINCT model) FROM w WHERE `length of use` < 'p7d'", -5.475856644486001], [" SELECT COUNT(*) FROM w WHERE `length of use` < 'p7d'", -5.54220515241], [" SELECT COUNT(*) FROM w WHERE LENGTH(length of use) < 7", -6.224510287309999], [" SELECT COUNT(*) FROM w WHERE `length of use` LIKE 'p%d' AND CAST(REPLACE(`length of use`,'p','') AS INT) < 7", -7.62789411828], [" SELECT COUNT(*) FROM w WHERE length of use LIKE 'p%d' AND CAST(REPLACE(length of use, 'p', '') AS INT) < 7", -9.78575663895], [" SELECT COUNT(*) FROM w WHERE length of use LIKE 'p%d' AND CAST(REPLACE(`length of use`,'p','') AS INT) < 7", -9.895688785120003]]}, "376": {"question": "how many districts are in the province of kunduz?", "gold_answer": ["7"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], "<error>", [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE province = 'kunduz'", -2.09415325079], [" SELECT COUNT(*) FROM w WHERE province = 'kunduz'", -2.09597883142], [" SELECT COUNT(*) FROM w WHERE province = 'kunduz'", -2.09597883142], [" SELECT COUNT(*) FROM w WHERE province = 'kunduz'", -2.0959814578200002], [" SELECT COUNT(*) FROM w WHERE province = 'kunduz'", -3.2485472699599995], [" SELECT COUNT(*) FROM w WHERE province = 'kunduz'", -3.2485472699599995], [" SELECT COUNT(*) FROM w WHERE province = 'kunduz'", -3.24859547096], [" SELECT COUNT(*) FROM w WHERE province = 'kunduz'", -3.24859547096], [" SELECT SUM(districts) FROM w WHERE province = 'kunduz'", -4.54626861946], [" SELECT SUM(CAST(SUBSTR(notes, 1, INSTR(notes, ' districts') - 1) AS INT)) FROM w WHERE province = 'kunduz'", -10.97045994841]]}, "417": {"question": "who is the only ambassadors to honduras appointed by barack obama?", "gold_answer": ["Lisa Kubiske"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE appointed by = 'barack obama'", -1.5981438675800002], [" SELECT COUNT(*) FROM w WHERE appointed by = 'barack obama'", -1.5981438675800002], [" SELECT COUNT(*) FROM w WHERE appointed by = 'barack obama'", -1.5981438675800002], [" SELECT COUNT(*) FROM w WHERE appointed by = 'barack obama'", -1.60022736575], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'barack obama'", -1.78012256868], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'barack obama'", -1.78514821727], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'barack obama'", -1.78514821727], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'barack obama'", -1.78514821727], [" SELECT COUNT(*) FROM w WHERE appointed by = 'barack obama'", -3.4235239570800005], [" SELECT COUNT(*) FROM w WHERE appointed by = 'barack obama'", -3.42424989658]]}, "420": {"question": "how many total championships does spain have?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>", "<error>"], "2": [[10]], "3": ["<error>"], "4": [[10]], "5": ["<error>"], "6": [[10]], "7": ["<error>"], "8": [[10]], "9": ["<error>"], "10": [[10]], "11": ["<error>"], "12": [[10]], "13": ["<error>"]}, "nsql": [[" SELECT total FROM w WHERE country = 'spain'", -2.1968441876699996], [" SELECT total FROM w WHERE country = 'spain'", -3.04643610167], [" SELECT `total` FROM w WHERE country = 'spain'", -5.0822473426679995], [" SELECT `total` FROM w WHERE country = 'spain'", -5.0822473426679995], [" SELECT `total` FROM w WHERE country = 'spain'", -5.0822473426679995], [" SELECT `total` FROM w WHERE country = 'spain'", -5.718646742668], [" SELECT `total` FROM w WHERE country = 'spain'", -6.575672200570001], [" SELECT total FROM w WHERE country = 'spain'\n```", -9.789778473269998], [" SELECT `total` FROM w WHERE country = 'spain'", -12.19334884335], [" SELECT `total` FROM w WHERE country = 'spain'\nQ2: {how many = a2} countries have won the pga championship.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `pga` > 0\nQ3: {how many = a3} countries have won the pga championship.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `pga` > 0\nQ4: {how many = a4} countries have won the pga championship.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `pga` > 0\nQ5: {how many = a5} countries have won the pga championship.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `pga` > 0\nQ6: {how many = a6} countries have won the pga championship.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `pga` > 0\nQ7: {how many = a7} countries have won the pga championship.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE `pga` > 0\nQ", -25.700025402336994]]}, "441": {"question": "does alexandria county have a higher or lower population than delaware county?", "gold_answer": ["lower"], "pred_answer": {"0": [[859], [859], [859], [859], [859], [859], [859], [859], [859], [859]], "1": [[1361], [1361], [1361], [1361], [1361], [1361], [1361], [1361], [1361], [1361]], "2": ["<error>"]}, "nsql": [[" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'\n```", -4.58595938221], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -4.92340828477], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -5.144068245135], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -5.144068245135], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -5.196907077718], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -5.4300424777180005], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -5.667383845134999], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -6.297859477718], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -6.803583245135], [" SELECT population FROM w WHERE township = 'alexandria'\nNeuralSQL2: SELECT population FROM w WHERE township = 'delaware'", -11.14695986961]]}, "458": {"question": "what is the number of athletes to finish race one in the giant slalom?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -6.34565830864], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE event = 'giant slalom' AND race 1\\ntime != 'dnf'", -8.296583391420002], [" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -10.50472557236], [" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -10.50472557236], [" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -10.50472557236], [" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -10.50472557236], [" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -11.04700207236], [" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -11.715710572359999], [" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -12.434901572360001], [" SELECT COUNT(*) FROM w WHERE event = 'giant slalom' AND `race 1\\ntime` != 'dnf'", -12.812286832359998]]}, "462": {"question": "what were the only 3 countries to win gold medals at the the 1994 winter olympics biathlon?", "gold_answer": ["Russia (RUS)", "Canada (CAN)", "Germany (GER)"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold > 0", -1.9049657742700004], [" SELECT COUNT(*) FROM w WHERE gold > 0", -1.9049657742700004], [" SELECT COUNT(*) FROM w WHERE gold > 0", -1.9049657742700004], [" SELECT COUNT(*) FROM w WHERE gold > 0", -1.9049657742700004], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0", -2.275016235594], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0", -2.275016235594], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0", -2.275016235594], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0", -2.275016235594], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0", -2.275016235594], [" SELECT COUNT(*) FROM w WHERE gold > 0", -5.545646389849999]]}, "499": {"question": "how many times did the team play at home but did not win?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [8], [6], [5], [5], [5]], "1": ["<error>"], "2": [[8]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[5]], "7": ["<error>"], "8": [[5]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND results\\nscore NOT LIKE 'w%'", -5.782436905179998], [" SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND results\\nscore NOT LIKE 'w%'", -5.815757476080002], [" SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND results\\nscore NOT LIKE 'w%'", -7.180080924080001], [" SELECT COUNT(*) FROM w WHERE location LIKE '%farm show arena%' AND results\\nscore NOT LIKE 'w%'", -7.99429859255], [" SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND `results\\nscore` NOT LIKE 'w %'", -9.741170621780002], [" SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND (results\\nscore LIKE 'w %' OR results\\nscore LIKE 'l %')", -10.173362570580002], [" SELECT COUNT(*) FROM w WHERE location LIKE '% arena%' AND results\\nscore NOT LIKE 'w%'", -10.82498911155], [" SELECT COUNT(*) FROM w WHERE location LIKE '%farm show arena%' AND results\\nscore NOT LIKE '%w%'", -11.889793111446], [" SELECT COUNT(*) FROM w WHERE location LIKE '%farm show arena%' AND results\\nscore NOT LIKE '%w%'", -13.45971236339], [" SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND results\\nscore NOT LIKE 'w%'\nQ2: {how many = a2} times did the team play at home.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'farm show arena'\nQ3: {how many = a3} times did the team play at home and win.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND results\\nscore LIKE 'w%'\nQ4: {how many = a4} times did the team play at home and lose.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND results\\nscore NOT LIKE 'w%'\nQ5: {how many = a5} times did the team play at home and lose.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE location = 'farm show arena' AND results\\nscore NOT LIKE 'w%'\nQ6: {how many = a6} times did the team play at home and win.\nNeuralSQL", -32.289390624818004]]}, "503": {"question": "which opponent did kindley have the most victories against?", "gold_answer": ["Fokker D.VII"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -1.277945390025], [" SELECT COUNT(*) FROM w WHERE opponent = 'fokker d.vii'", -4.2710605485799995]]}, "544": {"question": "how many points apart were the 1st place competitor and the 12th place competitor?", "gold_answer": ["1.7"], "pred_answer": {"0": [[], [], [], [], [], [], [], [], [], []], "1": [["12.69"], ["12.69"], ["12.69"], ["12.69"], ["12.69"], ["12.69"], ["12.69"], ["12.69"], ["12.69"], ["12.69"]]}, "nsql": [[" SELECT result FROM w WHERE rank = 1.0\nNeuralSQL2: SELECT result FROM w WHERE rank = 12.0", -2.6639752271099995], [" SELECT result FROM w WHERE rank = 1.0\nNeuralSQL2: SELECT result FROM w WHERE rank = 12.0", -2.6639752271099995], [" SELECT result FROM w WHERE rank = 1.0\nNeuralSQL2: SELECT result FROM w WHERE rank = 12.0", -2.6639752271099995], [" SELECT result FROM w WHERE rank = 1.0\nNeuralSQL2: SELECT result FROM w WHERE rank = 12.0", -2.6639752271099995], [" SELECT result FROM w WHERE rank = 1\nNeuralSQL2: SELECT result FROM w WHERE rank = 12", -5.665647997355999], [" SELECT result FROM w WHERE rank = 1\nNeuralSQL2: SELECT result FROM w WHERE rank = 12", -5.790083197355999], [" SELECT result FROM w WHERE rank = 1\nNeuralSQL2: SELECT result FROM w WHERE rank = 12", -6.177655897355999], [" SELECT result FROM w WHERE rank = 1\nNeuralSQL2: SELECT result FROM w WHERE rank = 12", -6.789734297355999], [" SELECT result FROM w WHERE rank = 1\nNeuralSQL2: SELECT result FROM w WHERE rank = 12", -7.980836597355999], [" SELECT result FROM w WHERE rank = 1\nNeuralSQL2: SELECT result FROM w WHERE rank = 12", -8.525638095749999]]}, "585": {"question": "how many games did the university of florida win by at least 10 points?", "gold_answer": ["7"], "pred_answer": {"0": [[0], [8], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) >= 10", -8.41910315255], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%' AND attendance > 10", -8.489011495769999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) AS INT) > 10", -9.621560752750002], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 10)", -13.122316977752794], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (CAST(SUBSTR(result, INSTR(result, ' ') + 1, LENGTH(result) - (INSTR(result, ' ') + 1)) AS INT) - CAST(SUBSTR(result, INSTR(result, ' - ') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) >= 10", -15.006613881598], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (CAST(SUBSTR(result, 2, INSTR(result, '-') - 2) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 10", -15.323892154369002], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND (CAST(SUBSTR(result, 3, INSTR(result, '-') - 3) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) >= 10", -15.568650211738799], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(SUBSTR(result, INSTR(result, ' ') + 1, LENGTH(result) - (INSTR(result, ' ') + 1)) AS INT) - CAST(SUBSTR(result, 1, INSTR(result, ' - ') - 1) AS INT) >= 10", -17.22237458929], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(SUBSTR(result, INSTR(result, ' ') + 1, LENGTH(result) - (INSTR(result, ' ') + 1)) AS INT) - CAST(SUBSTR(result, 2, INSTR(result, ' ') - 2) AS INT) >= 10", -17.71814143333449], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND CAST(SUBSTR(result, INSTR(result, 'w') + 1, LENGTH(result) - (INSTR(result, 'w') + 1)) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) > 10", -19.4954653755168]]}, "626": {"question": "how many tournaments has he won by 3 or more strokes?", "gold_answer": ["5"], "pred_answer": {"0": [[2], [2], [5], [5], [5], [5], [5], [5], [5], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `margin of\\nvictory` LIKE '%stroke%' AND `margin of\\nvictory` LIKE '%3%'", -6.832385115189998], [" SELECT COUNT(*) FROM w WHERE `margin of\\nvictory` LIKE '%stroke%' AND `margin of\\nvictory` LIKE '%3%'", -6.886695119689999], [" SELECT COUNT(*) FROM w WHERE `margin of\\nvictory` LIKE '%stroke%' AND CAST(REPLACE(`margin of\\nvictory`, 'stroke', '') AS INT) >= 3", -10.740922948770002], [" SELECT COUNT(*) FROM w WHERE `margin of\\nvictory` LIKE '%stroke%' AND CAST(SUBSTR(`margin of\\nvictory`, 1, INSTR(`margin of\\nvictory`, 'stroke') - 1) AS INT) >= 3", -10.750734440439997], [" SELECT COUNT(*) FROM w WHERE `margin of\\nvictory` LIKE '%stroke%' AND CAST(REPLACE(`margin of\\nvictory`,'stroke','') AS INT) >= 3", -11.55444495398], [" SELECT COUNT(*) FROM w WHERE `margin of\\nvictory` LIKE '%stroke%' AND CAST(REPLACE(`margin of\\nvictory`,'stroke','') AS INT) >= 3", -12.382531316680002], [" SELECT COUNT(*) FROM w WHERE `margin of\\nvictory` LIKE '%stroke%' AND CAST(REPLACE(`margin of\\nvictory`,'stroke','') AS INT) >= 3", -12.437709527380001], [" SELECT COUNT(*) FROM w WHERE `margin of\\nvictory` LIKE '%stroke%' AND CAST(SUBSTR(`margin of\\nvictory`, 1, INSTR(`margin of\\nvictory`, 'stroke') - 1) AS INT) >= 3", -15.359445833979997], [" SELECT COUNT(*) FROM w WHERE margin of\\nvictory LIKE '%strokes' AND CAST(REPLACE(margin of\\nvictory, 'strokes', '') AS INT) >= 3", -17.52390246835], [" SELECT COUNT(*) FROM w WHERE margin of\\nvictory LIKE '% or more strokes'\n```", -25.0098492022887]]}, "667": {"question": "who placed the highest, italy or germany?", "gold_answer": ["Italy"], "pred_answer": {"0": [["silver", "5"], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [["6", "8"], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": ["<error>"]}, "nsql": [[" SELECT rank FROM w WHERE team LIKE '%italy%'\nNeuralSQL2: SELECT rank FROM w WHERE team LIKE '%germany%'", -3.3713282457300013], [" SELECT COUNT(*) FROM w WHERE `team` LIKE '%italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team` LIKE '%germany%'", -5.4625130658000005], [" SELECT COUNT(*) FROM w WHERE team LIKE '%italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -5.673656337389999], [" SELECT COUNT(*) FROM w WHERE team LIKE '%italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -5.673656337389999], [" SELECT COUNT(*) FROM w WHERE team LIKE '%italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -5.673656337389999], [" SELECT COUNT(*) FROM w WHERE team LIKE '%italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -5.673656337389999], [" SELECT COUNT(*) FROM w WHERE team LIKE '%italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -5.673656337389999], [" SELECT COUNT(*) FROM w WHERE team LIKE '%italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'\n```", -6.561517765779999], [" SELECT COUNT(*) FROM w WHERE team LIKE 'italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE 'germany%'", -6.92323377558], [" SELECT COUNT(*) FROM w WHERE team LIKE '%italy%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -8.167100803079999]]}, "708": {"question": "were more air on tv or video?", "gold_answer": ["Video"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": [[22], [22], [22], [22], [22], [22], [22], [22], [22], [22]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -1.38742359038], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -1.3957430565400002], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -1.3957430565400002], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -1.3957430565400002], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -3.4818397233900003], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -3.4930497410999997], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -3.4930497410999997], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -3.4930497410999997], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'", -4.528327146256999], [" SELECT COUNT(*) FROM w WHERE type = 'tv'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'video'\n```", -13.62611248206]]}, "749": {"question": "how many times did jeff gordon win the award?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13351317257], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13351317257], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13351317257], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13351317257], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13351317257], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13351317257], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13351317257], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13365066223], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -1.13384111122], [" SELECT COUNT(*) FROM w WHERE driver = 'jeff gordon'", -3.43425161909]]}, "790": {"question": "how many gold did u.s.a win", "gold_answer": ["1"], "pred_answer": {"0": [[0], [1], [1], [1], [1], [1], [1], [1], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold LIKE '%u.s.a%'", -3.397851734584], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'", -3.5786625215839996], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'", -3.5786625215839996], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%usa%'", -3.7577483895039996], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'", -4.2727774985839995], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'", -4.2727774985839995], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%(usa)%'", -4.2727774985839995], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%usa%'", -4.573704903584], [" SELECT COUNT(*) FROM w WHERE gold LIKE '% u.s.a %'", -5.546985950644], [" SELECT COUNT(*) FROM w WHERE gold LIKE '%u.s.a%'\nQ2: {how many = a2} of the place is in europe.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place LIKE '%europe%'\nQ3: {how many = a3} of the place is in europe and gold is in u.s.a.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE place LIKE '%europe%' AND gold LIKE '%u.s.a%'\nQ4: {how many = a4} of the place is in europe and gold is not in u.s.a.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE place LIKE '%europe%' AND gold NOT LIKE '%u.s.a%'\nQ5: {how many = a5} of the place is in europe and gold is in u.s.a and year is after 2000.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE place LIKE '%europe%' AND gold LIKE '%u.s", -50.407932282891004]]}, "831": {"question": "how many total consituency are listed in the table?", "gold_answer": ["19"], "pred_answer": {"0": [[19], [19], [19], [19], [19], [19], [19], [19], [19], [19]], "1": ["<error>"], "2": [[14]], "3": ["<error>"], "4": [[38]], "5": ["<error>"], "6": [[8]], "7": ["<error>"], "8": [[3]], "9": ["<error>"], "10": [[14]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT constituency) FROM w", -8.319834659714], [" SELECT COUNT(DISTINCT constituency) FROM w", -8.586111854514], [" SELECT COUNT(DISTINCT constituency) FROM w", -8.606118903518], [" SELECT COUNT(DISTINCT constituency) FROM w", -8.608629245518], [" SELECT COUNT(DISTINCT constituency) FROM w", -8.975313754514001], [" SELECT COUNT(DISTINCT constituency) FROM w", -9.086235903518], [" SELECT COUNT(DISTINCT constituency) FROM w", -9.197244454514], [" SELECT COUNT(DISTINCT constituency) FROM w", -9.219453903518001], [" SELECT COUNT(DISTINCT constituency) FROM w", -9.627388403518001], [" SELECT COUNT(DISTINCT(constituency)) FROM w\nQ2: {how many = a2} of the regions are listed in the table.\nNeuralSQL2: SELECT COUNT(DISTINCT(region)) FROM w\nQ3: {how many = a3} of the names are listed in the table.\nNeuralSQL3: SELECT COUNT(DISTINCT(name)) FROM w\nQ4: {how many = a4} of the parties are listed in the table.\nNeuralSQL4: SELECT COUNT(DISTINCT(party)) FROM w\nQ5: {how many = a5} of the last elected are listed in the table.\nNeuralSQL5: SELECT COUNT(DISTINCT(last elected)) FROM w\nQ6: {how many = a6} of the regions are listed in the table.\nNeuralSQL6: SELECT COUNT(DISTINCT(region)) FROM w\nQ7: {how many = a7} of the names are listed in the table.\nNeuralSQL7: SELECT COUNT(DISTINCT(name))", -32.092049970981996]]}, "872": {"question": "how many movies does jennifer tilly play herself?", "gold_answer": ["4"], "pred_answer": {"0": [[0], [0], [3], [3], [3], [3], [3], [3], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE role = 'jennifer tilly'", -3.0425075471099996], [" SELECT COUNT(*) FROM w WHERE role = 'jennifer tilly'", -3.0431831551099995], [" SELECT COUNT(*) FROM w WHERE role = 'herself'", -6.383237272763999], [" SELECT COUNT(*) FROM w WHERE role = 'herself'", -6.385247049474], [" SELECT COUNT(*) FROM w WHERE role = 'herself'", -6.385247049474], [" SELECT COUNT(*) FROM w WHERE role = 'herself'", -9.287303315473999], [" SELECT COUNT(*) FROM w WHERE role = 'herself'", -10.345964615474], [" SELECT COUNT(*) FROM w WHERE role = 'herself'", -10.781862815474], [" SELECT COUNT(*) FROM w WHERE role = 'none'", -12.08612110915], [" SELECT COUNT(*) FROM w WHERE role = 'none'", -12.31364410915]]}, "913": {"question": "how many competitors had less than 13.00 points?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [7], [7], [7], [7], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(result AS REAL) < 13.00", -3.7168419755000004], [" SELECT COUNT(*) FROM w WHERE CAST(result AS REAL) < 13.00", -3.7168419755000004], [" SELECT COUNT(*) FROM w WHERE CAST(result AS REAL) < 13.00", -3.72373319853], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(result, '.', '') AS INT) < 1300", -4.51355142699], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(result, '.', '') AS INT) < 1300", -4.514765025100001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(result, '.', '') AS INT) < 1300", -4.514765025100001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(result, '.', '') AS INT) < 1300", -4.514765025100001], [" SELECT COUNT(*) FROM w WHERE result < 13.00", -8.753626470326], [" SELECT COUNT(*) FROM w WHERE result < 13.00", -9.063076170326], [" SELECT COUNT(*) FROM w WHERE result < 13.00", -10.401157970326]]}, "954": {"question": "which was the only team to win by forfeit?", "gold_answer": ["The Dudley Boyz"], "pred_answer": {"0": [[1], [1], [1], [0], [1], [1], [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notes LIKE '%forfeit%'", -3.4576546047649996], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%awarded%'", -3.539339312281], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%by ecw%'", -4.138312454965], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%by forfeit%'", -4.460834591619], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%forfeit%'", -4.680816989765], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%forfeit%'", -4.680816989765], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%awarded%'", -5.074145430765], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%awarded%'", -5.074145430765], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%awarded%'", -5.074145430765], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%awarded%'\n```", -25.796878790965003]]}, "995": {"question": "did the two competitors from hungary get more or less combined points than the two competitors from argentina?", "gold_answer": ["less"], "pred_answer": {"0": [[15.0], [15.0], [15.0], [15.0], [15.0], [15.0], [15.0], [15.0], [14], [15.0]], "1": [[15.5], [15.5], [15.5], [15.5], [15.5], [15.5], [15.5], [15.5], [15], [15.5]]}, "nsql": [[" SELECT SUM(`\u03c3 points`) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(`\u03c3 points`) FROM w WHERE player LIKE '%argentina%'", -2.705974049269999], [" SELECT SUM(`\u03c3 points`) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(`\u03c3 points`) FROM w WHERE player LIKE '%argentina%'", -2.705974049269999], [" SELECT SUM(`\u03c3 points`) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(`\u03c3 points`) FROM w WHERE player LIKE '%argentina%'", -2.705974049269999], [" SELECT SUM(`\u03c3 points`) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(`\u03c3 points`) FROM w WHERE player LIKE '%argentina%'", -2.705974049269999], [" SELECT SUM(\u03c3 points) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(\u03c3 points) FROM w WHERE player LIKE '%argentina%'", -3.742924761249999], [" SELECT SUM(\u03c3 points) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(\u03c3 points) FROM w WHERE player LIKE '%argentina%'", -3.742924761249999], [" SELECT SUM(\u03c3 points) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(\u03c3 points) FROM w WHERE player LIKE '%argentina%'", -3.742924761249999], [" SELECT SUM(\u03c3 points) FROM w WHERE player LIKE '%(hungary)%'\nNeuralSQL2: SELECT SUM(\u03c3 points) FROM w WHERE player LIKE '%(argentina)%'", -5.0203091959999995], [" SELECT SUM(CAST(`\u03c3 points` AS INT)) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(CAST(`\u03c3 points` AS INT)) FROM w WHERE player LIKE '%argentina%'", -5.57471190221], [" SELECT SUM(CAST(REPLACE(`\u03c3 points`,',','') AS REAL)) FROM w WHERE player LIKE '%hungary%'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`\u03c3 points`,',','') AS REAL)) FROM w WHERE player LIKE '%argentina%'", -8.832206775087002]]}, "1036": {"question": "how many networks does televisa own?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -6.226941084168], [" SELECT COUNT(DISTINCT(network name)) FROM w WHERE owner = 'televisa'", -6.300472077152001], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -6.7220622708099995], [" SELECT COUNT(*) FROM w WHERE owner = 'televisa'", -7.50495156988], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -9.612671395418001], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -9.856078503972], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -11.198437466809999], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -12.904438220324], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -13.451957396168002], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -14.545878486418]]}, "1077": {"question": "is four 5s worth more or less than four 2s?", "gold_answer": ["less"], "pred_answer": {"0": [["200"], ["200"], ["250"], ["250"], ["250"], ["250"], ["200"], ["250"], ["200"], ["250"]], "1": [["400"], ["400"], ["500"], ["400"], ["500"], ["400"], ["400"], ["500"], ["400"], ["500"]]}, "nsql": [[" SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 2-4'", -11.797846956167998], [" SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 2-4'", -11.841101978168002], [" SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 2-k'", -12.249447079540001], [" SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 2-4'", -12.4682099202], [" SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 2-k'", -12.66216897954], [" SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 2-4'", -13.1562306202], [" SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 2-4'", -13.448575856167999], [" SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 2-4'", -13.71118196276], [" SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `4 credits` FROM w WHERE hand = '4 of a kind, 2-4'", -13.972438956167998], [" SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 5-k'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = '4 of a kind, 2-k'", -15.29831947954]]}, "1080": {"question": "how many drivers won at least twice?", "gold_answer": ["4"], "pred_answer": {"0": [[3, 2, 2, 3], [3, 2, 2, 3], [10], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY driver HAVING COUNT(*) >= 2", -4.107164646529999], [" SELECT COUNT(*) FROM w GROUP BY driver HAVING COUNT(*) >= 2", -4.107164646529999], [" SELECT COUNT(*) FROM w WHERE driver IN (SELECT driver FROM w GROUP BY driver HAVING COUNT(*) >= 2)", -6.38690017381], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver IN (SELECT driver FROM w GROUP BY driver HAVING COUNT(*) >= 2)", -6.659415128819999], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver IN (SELECT driver FROM w GROUP BY driver HAVING COUNT(*) > 1)", -7.055003742849998], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver IN (SELECT driver FROM w GROUP BY driver HAVING COUNT(*) >= 2)", -8.64907099037], [" SELECT COUNT(*) FROM (SELECT COUNT(*) FROM w GROUP BY driver HAVING COUNT(*) >= 2)", -9.356755404400001], [" SELECT COUNT(*) FROM (SELECT driver, COUNT(*) FROM w GROUP BY driver HAVING COUNT(*) >= 2)", -15.595643517909997], [" SELECT COUNT(*) FROM (SELECT driver, COUNT(*) AS cnt FROM w GROUP BY driver HAVING cnt >= 2)", -17.841523713630004], [" SELECT COUNT(*) FROM (SELECT driver, COUNT(*) AS cnt FROM w GROUP BY driver HAVING cnt > 1)", -19.896359316390004]]}, "1101": {"question": "in how many countries was the album released before 1990?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [7], [7], [5], [7], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(DISTINCT region) FROM w WHERE date < '1990-01-01 00:00:00'", -3.890524550920001], [" SELECT COUNT(DISTINCT region) FROM w WHERE date < '1990-01-01 00:00:00'", -3.8980128216740004], [" SELECT COUNT(DISTINCT region) FROM w WHERE date < '1990-01-01 00:00:00'", -3.8981584989740004], [" SELECT COUNT(*) FROM w WHERE `date` < '1990-01-01 00:00:00'", -3.969016527026001], [" SELECT COUNT(*) FROM w WHERE `date` < '1990-01-01 00:00:00'", -3.98935039156], [" SELECT COUNT(DISTINCT region) FROM w WHERE `date` < '1990-01-01'", -4.76504267392], [" SELECT COUNT(*) FROM w WHERE `date` < '1990-01-01 00:00:00'", -5.924905197160001], [" SELECT COUNT(DISTINCT region) FROM w WHERE `date` < '1990-01-01 00:00:00'", -10.474396440574], [" SELECT COUNT(DISTINCT region) FROM w WHERE `date` < '1990-01-01 00:00:00'", -12.09320289402], [" SELECT COUNT(DISTINCT region) FROM w WHERE `date` < '1990-01-01 00:00:00'", -12.964058440574]]}, "1118": {"question": "after 2008 how many points total were scored by winners?", "gold_answer": ["230"], "pred_answer": {"0": ["<error>", "<error>", [0], [230], [230], [230], [230], [230], [230], "<error>"]}, "nsql": [[" SELECT SUM(CAST(REPLACE(winners, ' pts)', '') AS INT)) FROM w WHERE year > 2008", -6.332514676329998], [" SELECT SUM(CAST(REPLACE(winners,' pts)','') AS INT)) FROM w WHERE year > 2008", -6.91854792803], [" SELECT SUM(CAST(REPLACE(winners, ' pts', '') AS INT)) FROM w WHERE year > 2008", -7.156364975029998], [" SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, 'pts') - (INSTR(winners, '(') + 1)) AS INT)) FROM w WHERE year > 2008", -7.527449066340001], [" SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, ')') - (INSTR(winners, '(') + 1)) AS INT)) FROM w WHERE year > 2008", -7.947089921529999], [" SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, 'pts') - (INSTR(winners, '(') + 1)) AS INT)) FROM w WHERE year > 2008", -8.989805069340001], [" SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, ' pts') - (INSTR(winners, '(') + 1)) AS INT)) FROM w WHERE year > 2008", -9.148341478450002], [" SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, ' pts') - (INSTR(winners, '(') + 1)) AS INT)) FROM w WHERE year > 2008", -9.148341478450002], [" SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, ' pts)') - (INSTR(winners, '(') + 1)) AS INT)) FROM w WHERE year > 2008", -10.721707533520002], [" SELECT SUM(CAST(REGEXP_REPLACE(REGEXP_REPLACE(winners, '^.*?\\((\\d+).*$', '\\\\1'), '\\+\\d+', '') AS INT)) FROM w WHERE year > 2008", -22.845686341292996]]}, "1122": {"question": "how many times was poland the opponent?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.3001669968739997], [" SELECT COUNT(*) FROM w WHERE opponents = 'poland'", -3.300586249974]]}, "1159": {"question": "what is the total number of competitions?", "gold_answer": ["21"], "pred_answer": {"0": [[21], [21], [21], [21], [21], [21], [21], [21], [21], [21]]}, "nsql": [[" SELECT COUNT(DISTINCT competition) FROM w", -3.8349221811845005], [" SELECT COUNT(DISTINCT competition) FROM w", -6.0173319998845], [" SELECT COUNT(DISTINCT competition) FROM w", -6.0173319998845], [" SELECT COUNT(DISTINCT competition) FROM w", -7.942150622884499], [" SELECT COUNT(DISTINCT competition) FROM w", -9.1299157498845], [" SELECT COUNT(DISTINCT competition) FROM w", -9.2369772498845], [" SELECT COUNT(DISTINCT competition) FROM w", -9.718552739884501], [" SELECT COUNT(DISTINCT competition) FROM w", -9.9989573498845], [" SELECT COUNT(DISTINCT competition) FROM w", -11.595044331444502], [" SELECT COUNT(DISTINCT competition) FROM w", -12.7832272498845]]}, "1163": {"question": "previous to 2008 how many times was sweden the runner up?", "gold_answer": ["2"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [0], [3], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE runner-up LIKE '%sweden%'", -2.62198013431], [" SELECT COUNT(*) FROM w WHERE runner-up LIKE '%sweden%'", -2.62198013431], [" SELECT COUNT(*) FROM w WHERE runner-up LIKE '%sweden%'", -2.62198013431], [" SELECT COUNT(*) FROM w WHERE runner-up LIKE '%sweden%'", -3.22317328821], [" SELECT COUNT(*) FROM w WHERE runner-up LIKE '%sweden%'", -3.22317328821], [" SELECT COUNT(*) FROM w WHERE runner-up LIKE '%sweden%'", -3.22317328821], [" SELECT COUNT(*) FROM w WHERE runner-up LIKE '%sweden%'", -3.2236535044800005], [" SELECT COUNT(*) FROM w WHERE runner-up = 'sweden'", -3.7259225449], [" SELECT COUNT(*) FROM w WHERE `runner-up` LIKE '%sweden%'", -5.3701752450799995], [" SELECT COUNT(*) FROM w WHERE runner - up = 'sweden'", -5.945916920450001]]}, "1204": {"question": "in how many years was the value of agriculture, in billion rials, greater than 500 in iran?", "gold_answer": ["4"], "pred_answer": {"0": [[1], [1], [1], [1], [0], [1], [0], [0], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'agricultural - value (billion rials)' AND (`2007/08` > 500 OR `2008/09` > 500 OR `2009/10` > 500 OR `2010/11` > 500 OR `2011/12` > 500)", -4.419614961380001], [" SELECT COUNT(*) FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'agricultural - value (billion rials)' AND (`2007/08` > 500 OR `2008/09` > 500 OR `2009/10` > 500 OR `2010/11` > 500 OR `2011/12` > 500)", -4.419614961380001], [" SELECT COUNT(*) FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'agricultural - value (billion rials)' AND (`2007/08` > 500 OR `2008/09` > 500 OR `2009/10` > 500 OR `2010/11` > 500 OR `2011/12` > 500)", -4.424058893229999], [" SELECT COUNT(*) FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'agricultural - value (billion rials)' AND (`2007/08` > 500 OR `2008/09` > 500 OR `2009/10` > 500 OR `2010/11` > 500 OR `2011/12` > 500)", -4.426975250650001], [" SELECT COUNT(*) FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'agricultural - value (billion rials)' AND `2007/08` > 500 AND `2008/09` > 500 AND `2009/10` > 500 AND `2010/11` > 500 AND `2011/12` > 500", -8.487831199840002], [" SELECT COUNT(*) FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'agricultural - value (billion rials)' AND (2007/08 > 500 OR 2008/09 > 500 OR 2009/10 > 500 OR 2010/11 > 500 OR 2011/12 > 500)\n```", -9.12790739946], [" SELECT COUNT(*) FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'agricultural - value (billion rials)' AND `2007/08` > 500 AND `2008/09` > 500 AND `2009/10` > 500 AND `2010/11` > 500 AND `2011/12` > 500", -9.887378569910002], [" SELECT COUNT(*) FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'agricultural - value (billion rials)' AND `2007/08` > 500 AND `2008/09` > 500 AND `2009/10` > 500 AND `2010/11` > 500 AND `2011/12` > 500", -10.346122069910002], [" SELECT COUNT(*) FROM w WHERE row_id = 3 AND (`2007/08` > 500 OR `2008/09` > 500 OR `2009/10` > 500 OR `2010/11` > 500 OR `2011/12` > 500)", -12.817716855370001], [" SELECT COUNT(*) FROM w WHERE row_id = 3 AND (`2007/08` > 500 OR `2008/09` > 500 OR `2009/10` > 500 OR `2010/11` > 500 OR `2011/12` > 500)", -12.842775863389999]]}, "1245": {"question": "who was the only cuban to finish in the top eight?", "gold_answer": ["Heysi Villarreal"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank <= 8 AND country = 'cuba'", -3.8488553273800004], [" SELECT COUNT(*) FROM w WHERE rank <= 8 AND country = 'cuba'", -3.8547607640100003], [" SELECT COUNT(*) FROM w WHERE country = 'cuba' AND rank <= 8", -4.197637897450001], [" SELECT COUNT(*) FROM w WHERE country = 'cuba' AND rank <= 8", -4.197637897450001], [" SELECT COUNT(*) FROM w WHERE country = 'cuba' AND rank <= 8", -4.197637897450001], [" SELECT COUNT(*) FROM w WHERE country = 'cuba' AND rank <= 8", -4.198164969082001], [" SELECT COUNT(*) FROM w WHERE country = 'cuba' AND rank <= 8", -4.198164969082001], [" SELECT COUNT(*) FROM w WHERE rank < 8 AND country = 'cuba'", -4.3610761069100015], [" SELECT COUNT(*) FROM w WHERE country = 'cuba' AND rank < '8'", -4.9571697738000005], [" SELECT COUNT(*) FROM w WHERE country = 'cuba' AND rank < '8'", -4.9571697738000005]]}, "27": {"question": "how many stars have a magnitude greater than zero?", "gold_answer": ["14"], "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -1.836265424125], [" SELECT COUNT(*) FROM w WHERE `current\\nmagnitude` > 0", -3.440135455125]]}, "68": {"question": "how many tracks on trae's album \"life goes on\"?", "gold_answer": ["20"], "pred_answer": {"0": [[20], [20], [20], [20], [20], [20], [20], [20], [20], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.3350975811549999], [" SELECT COUNT(*) FROM w", -1.3350975811549999], [" SELECT COUNT(*) FROM w", -1.33530954814], [" SELECT COUNT(*) FROM w", -1.33530954814], [" SELECT COUNT(*) FROM w", -1.33530954814], [" SELECT COUNT(*) FROM w", -3.0881583518399998], [" SELECT COUNT(*) FROM w", -3.0881583518399998], [" SELECT COUNT(*) FROM w", -3.0881583518399998], [" SELECT COUNT(*) FROM w", -3.55453265167], [" SELECT COUNT(*) FROM w WHERE title LIKE '%life goes on%'", -9.11990818867]]}, "109": {"question": "what is the number of time seyni kountche has been president?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE president = 'seyni kountch\u00e9'", -1.7007074914899998], [" SELECT COUNT(*) FROM w WHERE president = 'seyni kountch\u00e9'", -1.7007074914899998], [" SELECT COUNT(*) FROM w WHERE president = 'seyni kountch\u00e9'", -1.7007074914899998], [" SELECT COUNT(*) FROM w WHERE president = 'seyni kountch\u00e9'", -1.70452314966], [" SELECT COUNT(*) FROM w WHERE president = 'seyni kountch\u00e9'", -1.71201064195], [" SELECT COUNT(*) FROM w WHERE president = 'seyni kountch\u00e9'", -1.71201064195], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'seyni kountch\u00e9'", -3.000973964552001], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'seyni kountche'", -3.4509466688900003], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'seyni kountch\u00e9'", -4.879620643073], [" SELECT COUNT(*) FROM w WHERE president = 'seyni kountch\u00e9'", -10.27789461966]]}, "150": {"question": "how many works were made in the incidental music genre?", "gold_answer": ["6"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [1], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -1.306185888428], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -1.306185888428], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -1.306185888428], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -1.306185888428], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -1.306185888428], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -1.307038693036], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental\u00a0music'", -2.764481418426], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -2.8665336941260002], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -2.868197224126], [" SELECT COUNT(*) FROM w WHERE genre = 'incidental music'", -2.868197224126]]}, "191": {"question": "did they beat canada in more or less than 3 matches?", "gold_answer": ["less"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND `opponent team` = 'canada'", -3.42050742034], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -9.73732886101], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -10.131404905010001], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -10.67137156501], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -10.84753696501], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -11.13170193301], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -11.69280103301], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -11.91826818959], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -12.49822724959], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent team = 'canada'", -13.09448382959]]}, "232": {"question": "who got a larger number of votes, macneill or olsson?", "gold_answer": ["Mark MacNeill"], "pred_answer": {"0": [[7660], [7660], [7660], [7660], [7660], [7660], [7660], [7660], [7660], [7660]], "1": [[null], [], [], [], [], [], [], [], [], []], "2": ["<error>"]}, "nsql": [[" SELECT SUM(votes) FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT SUM(votes) FROM w WHERE candidate = 'olsson'", -4.63236102143], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'", -5.663698292607], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'", -5.740809151849999], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'", -8.388757385206999], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'", -8.418616310447], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'\n```", -9.52837455579], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'", -9.977110143446998], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'", -10.060554108207], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'", -10.105070393446999], [" SELECT votes FROM w WHERE candidate = 'macneill'\nNeuralSQL2: SELECT votes FROM w WHERE candidate = 'olsson'", -10.125028108207]]}, "273": {"question": "how many times was first place listed as the position?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.30182956254], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.30182956254], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.30182956254], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.30182956254], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.30182956254], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.30182956254], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -1.30182956254], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -3.6002259542400004], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -3.6002259542400004], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -3.6002259542400004]]}, "314": {"question": "how many more threads per inch does the 1/16th whitworth size have over the 1/8th whitworth size?", "gold_answer": ["20"], "pred_answer": {"0": [[60.0], [60.0], [60.0], [60.0], [60.0], [60.0], [60.0], [60.0], [60.0], [60.0]], "1": [[40.0], [40.0], [40.0], [40.0], [40.0], [40.0], [40.0], [40.0], [40.0], [40.0]]}, "nsql": [[" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/8'", -2.684854658878], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/8'", -2.684854658878], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/8'", -2.6850847391370007], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/8'", -2.687067971178], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/8'", -2.687067971178], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/8'", -2.687067971178], [" SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per\u00a0inch` FROM w WHERE `whitworth size (in)` = '1/8'", -2.687067971178], [" SELECT `threads per inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per inch` FROM w WHERE `whitworth size (in)` = '1/8'", -3.5358295819199994], [" SELECT `threads per inch` FROM w WHERE `whitworth size (in)` = '1/16'\nNeuralSQL2: SELECT `threads per inch` FROM w WHERE `whitworth size (in)` = '1/8'", -3.5358295819199994], [" SELECT `threads per` FROM w WHERE whitworth size (in) = '1/16'\nNeuralSQL2: SELECT `threads per` FROM w WHERE whitworth size (in) = '1/8'", -7.7236154267299995]]}, "355": {"question": "how many locations are bird sanctuaries.", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuaries'", -2.4438726354899996], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuaries'", -2.4438726354899996], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuaries'", -2.46272568292], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuaries'", -2.46272568292], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuaries'", -2.46272568292], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuary'", -4.2211447044699995], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuary'", -4.2211447044699995], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuary'", -4.2211447044699995], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuary'", -5.6137851108], [" SELECT COUNT(*) FROM w WHERE location = 'bird sanctuary'", -6.386283413170001]]}, "396": {"question": "how many total tournaments has he won?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [9], [9], [10]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.79033133026], [" SELECT COUNT(*) FROM w", -1.7979461529300003], [" SELECT COUNT(*) FROM w", -1.7979461529300003], [" SELECT COUNT(*) FROM w", -1.7986607560999999], [" SELECT COUNT(*) FROM w", -1.7986607560999999], [" SELECT COUNT(*) FROM w", -1.7986607560999999], [" SELECT COUNT(*) FROM w", -2.65602976213], [" SELECT COUNT(DISTINCT tournament) FROM w", -4.316534394013999], [" SELECT COUNT(DISTINCT tournament) FROM w", -4.316534394013999], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} records have a winning score of -11.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `winning score` = '\u221211 (72-68-67-70=277)'\nQ3: {how many = a3} records have a winning score of -11 and a margin of victory of 1 stroke.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `winning score` = '\u221211 (72-68-67-70=277)' AND `margin of\\nvictory` = '1 stroke'\nQ4: {how many = a4} records have a winning score of -11 and a margin of victory of 1 stroke and a runner-up of ian poulter.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `winning score` = '\u221211 (72-68-67-70=277)' AND `margin of\\nvictory` = '1 stroke' AND `runner(s)-up` = 'ian poulter'\nQ5: {how many = a5} records have", -34.46563518701901]]}, "437": {"question": "how many mills were built or first mentioned after 1800?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], "<error>", [8], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `first mention or built` > '1800'", -3.6100148471639995], [" SELECT COUNT(*) FROM w WHERE `first mention or built` > '1800'", -3.6130522438540003], [" SELECT COUNT(*) FROM w WHERE `first mention or built` > '1800'", -3.614201257254], [" SELECT COUNT(*) FROM w WHERE `first mention or built` > '1800'", -3.6145043530939995], [" SELECT COUNT(*) FROM w WHERE `first mention or built` >= '1800'", -4.39506202373], [" SELECT COUNT(*) FROM w WHERE `first mention\\nor built` > '1800'", -4.444782876054], [" SELECT COUNT(*) FROM w WHERE `first mention or built` > '1800'", -5.402702449254], [" SELECT COUNT(*) FROM w WHERE `first mention` > '1800'", -6.445019534639], [" SELECT COUNT(*) FROM w WHERE `first mention\\nor built` > '1800'", -8.003799757054], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`first mention or built`, 1, INSTR(`first mention or built`, '-') - 1) AS INT) > 1800", -9.513263651564003]]}, "440": {"question": "what are the number of titles that premiered in the month of september?", "gold_answer": ["4"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -4.19593531342], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -4.19593531342], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -4.19851026943], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -4.19851026943], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -4.40561557461], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -4.40561557461], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -4.40561557461], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -4.40561557461], [" SELECT COUNT(*) FROM w WHERE strftime('%m', `premi\u00e8re date`) = '09'", -4.52289198993], [" SELECT COUNT(*) FROM w WHERE `premi\u00e8re date` LIKE '%-09-%'", -13.23869108711]]}, "461": {"question": "what is the total amount of players who played more than 3 games?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE played > 3", -1.20508026347], [" SELECT COUNT(*) FROM w WHERE played > 3", -1.2053832471700001], [" SELECT COUNT(*) FROM w WHERE played > 3", -1.20541968631], [" SELECT COUNT(*) FROM w WHERE played > 3", -1.20573438027], [" SELECT COUNT(*) FROM w WHERE played > 3", -1.20585237217], [" SELECT COUNT(*) FROM w WHERE played > 3", -1.2064907866999999], [" SELECT COUNT(*) FROM w WHERE played > 3", -1.2065330911700003], [" SELECT COUNT(*) FROM w WHERE played > 3", -1.2071866890999998], [" SELECT COUNT(*) FROM w WHERE played > 3", -1.2080485084700001], [" SELECT COUNT(*) FROM w WHERE played > 3", -3.03803946117]]}, "478": {"question": "how many towers are at least 18 meters tall?", "gold_answer": ["3"], "pred_answer": {"0": [[1], [3], [0], "<error>", [0], [0], [0], [3], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `tower height\\nin meters (ft)` LIKE '%18%'", -5.852776408439999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`tower height\\nin meters (ft)`,'m (','') AS INT) >= 18", -6.18127865355], [" SELECT COUNT(*) FROM w WHERE `tower height\\nin meters (ft)` LIKE '%-%' AND CAST(REPLACE(`tower height\\nin meters (ft)`,'m (','') AS INT) >= 18", -10.507037765663998], [" SELECT COUNT(*) FROM w WHERE (`tower height\\nin meters (ft)` LIKE '%m (59%' OR `tower height\\nin meters (ft)` LIKE '%m (60%' OR `tower height\\nin meters (ft)` LIKE '%m (61%' OR `tower height\\nin meters (ft)` LIKE '%m (62%' OR `tower height\\nin meters (ft)` LIKE '%m (63%' OR `tower height\\nin meters (ft)` LIKE '%m (64%' OR `tower height\\nin meters (ft)` LIKE '%m (65%' OR `tower height\\nin meters (ft)` LIKE '%m (66%' OR `tower height\\nin meters (ft)` LIKE '%m (67%' OR `tower height\\nin meters (ft)` LIKE '%m (68%' OR `tower height\\nin meters (ft)` LIKE '%m (69%' OR `tower height\\nin meters (ft)` LIKE '%m (70%' OR `tower height\\nin meters (ft)` LIKE '", -11.244121926776003], [" SELECT COUNT(*) FROM w WHERE `tower height\\nin meters (ft)` LIKE '%m (%-%ft)%' AND CAST(SUBSTR(`tower height\\nin meters (ft)`, 1, INSTR(`tower height\\nin meters (ft)`, 'm') - 1) AS INT) >= 18", -11.427322897104998], [" SELECT COUNT(*) FROM w WHERE `tower height\\nin meters (ft)` LIKE '%m (%-%ft)%' AND CAST(SUBSTR(`tower height\\nin meters (ft)`, 1, INSTR(`tower height\\nin meters (ft)`, 'm') - 1) AS INT) >= 18", -11.448524685926003], [" SELECT COUNT(*) FROM w WHERE `tower height\\nin meters (ft)` LIKE '%m (%-%ft)%' AND CAST(SUBSTR(`tower height\\nin meters (ft)`, 1, INSTR(`tower height\\nin meters (ft)`, 'm') - 1) AS INT) >= 18", -11.448524685926003], [" SELECT COUNT(*) FROM w WHERE `tower height\\nin meters (ft)` LIKE '%m (%ft)%' AND CAST(SUBSTR(`tower height\\nin meters (ft)`, 1, INSTR(`tower height\\nin meters (ft)`, 'm') - 1) AS INT) >= 18", -11.608396309270004], [" SELECT COUNT(*) FROM w WHERE `tower height\\nin meters (ft)` LIKE '%m (%-%' AND CAST(SUBSTR(`tower height\\nin meters (ft)`, 1, INSTR(`tower height\\nin meters (ft)`, 'm (') - 1) AS INT) >= 18", -14.180351201464], [" SELECT COUNT(*) FROM w WHERE `tower height\\nin meters (ft)` LIKE '%m (%-%ft)%' AND CAST(REPLACE(SUBSTR(`tower height\\nin meters (ft)`, 1, INSTR(`tower height\\nin meters (ft)`, 'm') - 1), ' ', '') AS INT) >= 18", -14.644321301152008]]}, "482": {"question": "which universities had a number of wins higher than 12?", "gold_answer": ["Waseda University"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner > 12", -1.3639833621440003], [" SELECT COUNT(*) FROM w WHERE winner > 12", -1.3639833621440003], [" SELECT COUNT(*) FROM w WHERE winner > 12", -1.3639833621440003], [" SELECT COUNT(*) FROM w WHERE winner > 12", -1.3639833621440003], [" SELECT COUNT(*) FROM w WHERE winner > 12", -1.3639833621440003], [" SELECT COUNT(*) FROM w WHERE winner > 12", -1.3639833621440003], [" SELECT COUNT(*) FROM w WHERE winner > 12", -3.262514207144], [" SELECT COUNT(*) FROM w WHERE winner > 12", -3.262514207144], [" SELECT COUNT(*) FROM w WHERE winner > 12", -4.262900507144], [" SELECT COUNT(DISTINCT university) FROM w WHERE winner > 12", -5.479347536973999]]}, "519": {"question": "how many times was golding in 2nd position?", "gold_answer": ["0"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = '2nd'", -3.6156535972300006], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -3.6156535972300006], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -3.6156535972300006], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -8.20011725819], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -8.401839765990001], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -8.401839765990001], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -9.953402675989999], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -10.029690445990001], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -10.10966044599], [" SELECT COUNT(*) FROM w WHERE position = '2nd'", -10.42956597599]]}, "523": {"question": "which is the only region with vinyl lp format?", "gold_answer": ["United Kingdom"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT region) FROM w WHERE format = '180-gram vinyl lp'", -2.9426822704699993], [" SELECT COUNT(DISTINCT region) FROM w WHERE format = '180-gram vinyl lp'", -2.9426822704699993], [" SELECT COUNT(DISTINCT region) FROM w WHERE format = '180-gram vinyl lp'", -2.9426822704699993], [" SELECT COUNT(*) FROM w WHERE format = '180 - gram vinyl lp'", -4.623719471439999], [" SELECT COUNT(*) FROM w WHERE format = 'vinyl lp'", -4.79449058004], [" SELECT COUNT(DISTINCT region) FROM w WHERE format = 'vinyl lp'", -6.82484163907], [" SELECT COUNT(DISTINCT region) FROM w WHERE format = 'vinyl lp'", -9.044886773345], [" SELECT COUNT(DISTINCT region) FROM w WHERE format = 'vinyl lp'", -9.044886773345], [" SELECT COUNT(DISTINCT region) FROM w WHERE format = 'vinyl lp'", -11.51683346107], [" SELECT COUNT(DISTINCT region) FROM w WHERE format = 'vinyl lp'", -13.03187758133]]}, "564": {"question": "how many districts have more than 100,000 people in this city?", "gold_answer": ["21"], "pred_answer": {"0": [[21], [21], [21], [21], [21], [21], [21], [21], [21], [21]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE population > 100000", -4.37887224283], [" SELECT COUNT(*) FROM w WHERE `population` > 100000", -5.16495330293], [" SELECT COUNT(*) FROM w WHERE population > 100000", -5.2172636384399995], [" SELECT COUNT(*) FROM w WHERE population > 100000", -5.2172636384399995], [" SELECT COUNT(*) FROM w WHERE population > 100000", -5.2172636384399995], [" SELECT COUNT(*) FROM w WHERE population > 100000", -5.2172636384399995], [" SELECT COUNT(*) FROM w WHERE population > 100000", -5.2172636384399995], [" SELECT COUNT(*) FROM w WHERE population > 100000", -5.2172636384399995], [" SELECT COUNT(*) FROM w WHERE population > 100000", -5.2172636384399995], [" SELECT COUNT(*) FROM w WHERE population > 100000", -6.7394998814300004]]}, "605": {"question": "how many russians lived in south ossetia in 1970?", "gold_answer": ["1,574"], "pred_answer": {"0": [["1574 (1.6%)"], ["1574 (1.6%)"], ["1574 (1.6%)"], ["1574 (1.6%)"], ["1574 (1.6%)"], ["1574 (1.6%)"], [1574], [1574], [1574], "<error>"]}, "nsql": [[" SELECT `1970 census` FROM w WHERE ethnicity = 'russians'", -2.731195045], [" SELECT `1970 census` FROM w WHERE ethnicity = 'russians'", -2.731195045], [" SELECT `1970 census` FROM w WHERE ethnicity = 'russians'", -2.731195045], [" SELECT `1970 census` FROM w WHERE ethnicity = 'russians'", -2.731195045], [" SELECT `1970 census` FROM w WHERE ethnicity = 'russians'", -4.40177222675], [" SELECT `1970 census` FROM w WHERE ethnicity = 'russians'", -4.86840494035], [" SELECT CAST(SUBSTR(`1970 census`, 1, INSTR(`1970 census`, '(') - 1) AS INT) FROM w WHERE ethnicity = 'russians'", -6.014957362299998], [" SELECT CAST(SUBSTR(`1970 census`, 1, INSTR(`1970 census`, '(') - 1) AS INT) FROM w WHERE ethnicity = 'russians'", -6.014957362299998], [" SELECT CAST(SUBSTR(`1970 census`, 1, INSTR(`1970 census`, '(') - 1) AS INT) FROM w WHERE ethnicity = 'russians'", -6.02090935125], [" SELECT SUM(CAST(REPLACE(`1970 census`,'%','')) AS INT) FROM w WHERE ethnicity = 'russians'", -9.371852198480001]]}, "646": {"question": "does the united states have more nation of citzenship then united kingdom?", "gold_answer": ["yes"], "pred_answer": {"0": [[17], [17], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [2], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation of citizenship = 'united kingdom'", -5.34096551609], [" SELECT COUNT(*) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation of citizenship = 'united kingdom'", -5.682024816089999], [" SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united kingdom'", -7.853745891944001], [" SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united kingdom'", -7.894092969761001], [" SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united kingdom'", -8.263854910761001], [" SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united kingdom'", -9.317034760760999], [" SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united kingdom'", -10.127638711944002], [" SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united kingdom'", -10.211526544761], [" SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united kingdom'", -10.881747544761], [" SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT nation of citizenship) FROM w WHERE nation of citizenship = 'united kingdom'", -12.838000650761]]}, "687": {"question": "how many are symphonic poems?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -1.0292387433819998], [" SELECT COUNT(*) FROM w WHERE genre = 'symphonic poem'", -2.756575304048]]}, "728": {"question": "how many songs are at least 4 minutes long?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [0], [11], [0], [0], [9], [9], [5], [12], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`length`, 1, INSTR(`length`, ':') - 1) AS INT) >= 4", -5.711542489099998], [" SELECT COUNT(*) FROM w WHERE LENGTH(`length`) > 4", -6.143324007630001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`length`,':','') AS INT) > 239", -8.21849982413], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) > 4", -9.750801705769998], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) > 4", -9.750801705769998], [" SELECT COUNT(*) FROM w WHERE length >= '4:0'", -11.17828730609], [" SELECT COUNT(*) FROM w WHERE length >= '4:0'", -12.24047070609], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(length, 1, INSTR(length, ':') - 1) AS INT) * 60 + CAST(SUBSTR(length, INSTR(length, ':') + 1, LENGTH(length) - (INSTR(length, ':') + 1)) AS INT)) > 240", -12.853869406234997], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) >= 4", -13.47247261528], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, ':', '.') AS FLOAT) > 4", -16.525826853873998]]}, "769": {"question": "how many partners from spain are listed?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>", "<error>"], "2": [[0], [1]], "3": ["<error>", "<error>"], "4": [[0], [0]], "5": ["<error>", "<error>"], "6": [[0], "<error>"], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": [[0]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'", -3.8811023395940003], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'", -3.8811023395940003], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'", -3.8811023395940003], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'", -3.8811023395940003], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'", -3.8811023395940003], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'", -3.8811023395940003], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'", -9.479393188034], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'", -10.632491888034], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'\nQ2: {how many = a2} partners from spain are listed.\nNeuralSQL2: SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'\nQ3: {how many = a3} partners from spain are listed.\nNeuralSQL3: SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'\nQ4: {how many = a4} partners from spain are listed.\nNeuralSQL4: SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'\nQ5: {how many = a5} partners from spain are listed.\nNeuralSQL5: SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'\nQ6: {how many = a6} partners from spain are listed.\nNeuralSQL6: SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'\nQ7", -13.055263666086502], [" SELECT COUNT(DISTINCT partner) FROM w WHERE partner LIKE '%spain%'\nQ2: {how many = a2} records have a date in 2014.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2014%'\nQ3: {how many = a3} records have a score in the final with the first number larger than the second number.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE score in the final LIKE '% - %' AND (CAST(SUBSTR(score in the final, 1, INSTR(score in the final, '-') - 1) AS INT) - CAST(SUBSTR(score in the final, INSTR(score in the final, '-') + 1, LENGTH(score in the final) - (INSTR(score in the final, ' - ') + 1)) AS INT)) > 0\nQ4: {how many = a4} records have a score in the final with the first number larger than the second number and the surface is clay.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE score in", -40.9934152945247]]}, "810": {"question": "aspen and lienz in 2009 are the only races where this racer got what position?", "gold_answer": ["1st"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>", "<error>"], "2": [[4], [1]], "3": ["<error>", "<error>"], "4": [[1], [5]], "5": ["<error>", "<error>"], "6": [[3], [8]], "7": ["<error>", "<error>"], "8": [[1], [8]], "9": ["<error>", "<error>"], "10": [[4], [9]], "11": ["<error>"], "12": [[4]], "13": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (location = 'aspen' OR location = 'lienz') AND season = 2009", -4.242922171344], [" SELECT COUNT(*) FROM w WHERE (location = 'aspen' OR location = 'lienz') AND season = 2009", -4.246159451344], [" SELECT COUNT(*) FROM w WHERE date LIKE '2009-%-%' AND (location = 'aspen' OR location = 'lienz')", -6.4246186242539975], [" SELECT COUNT(*) FROM w WHERE season = 2009 AND location IN ('aspen', 'lienz')", -6.817112933293999], [" SELECT COUNT(*) FROM w WHERE (location = 'aspen' OR location = 'lienz') AND date LIKE '2009-%-%'", -8.194640403344001], [" SELECT COUNT(*) FROM w WHERE (location = 'aspen' OR location = 'lienz') AND season = 2009 AND place != 'dnf'", -10.440342410344], [" SELECT COUNT(*) FROM w WHERE (location = 'aspen' OR location = 'lienz') AND season = 2009", -11.113848023344], [" SELECT COUNT(*) FROM w WHERE (location = 'aspen' OR location = 'lienz') AND season = '2009'", -12.236281057104], [" SELECT COUNT(*) FROM w WHERE (location = 'aspen' OR location = 'lienz') AND season = 2009\nQ2: {how many = a2} races were held in 2010.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = 2010\nQ3: {how many = a3} races were held in 2009.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE season = 2009\nQ4: {how many = a4} races were held in 2011.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE season = 2011\nQ5: {how many = a5} races were held in 2009.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE season = 2009\nQ6: {how many = a6} races were held in 2010.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE season = 2010\nQ7: {how many = a7} races were held in 2010.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE season = 2010\nQ8: {how many = a8} races were held in 2010.\n", -33.94230420282099], [" SELECT COUNT(*) FROM w WHERE location IN ('aspen, united states', 'lienz, austria') AND season = 2009\nQ2: {how many = a2} races where this racer got what position in 2009.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = 2009\nQ3: {how many = a3} races where this racer got what position in 2009 and 2010.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE season IN (2009, 2010)\nQ4: {how many = a4} races where this racer got what position in 2009 and 2010 and 2011.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE season IN (2009, 2010, 2011)\nQ5: {how many = a5} races where this racer got what position in 2009 or 2010 or 2011.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE season IN (2009, 2010, 2011)\nQ6: {how many = a6} races where this racer got what position in 2009 or 2010 or 2011 and 2012.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE season", -37.977853968072445]]}, "851": {"question": "between september 26 and october 24, how many games were played in eugene, or?", "gold_answer": ["3"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -1.85490396052], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -1.85490396052], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -1.85490396052], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -1.8624469775199999], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -1.8644271845699998], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -1.8644271845699998], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -1.8644271845699998], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -1.8644271845699998], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -4.02522013207], [" SELECT COUNT(*) FROM w WHERE site LIKE '%eugene, or%'", -4.04350901092]]}, "892": {"question": "how many metres is the tallest pylon?", "gold_answer": ["113.6 m"], "pred_answer": {"0": [[113.6], [113], [113], [113], [113], [113], [113], [113], [113], [113]]}, "nsql": [[" SELECT MAX(CAST(REPLACE(height, ' m', '') AS FLOAT)) FROM w", -5.912886602511001], [" SELECT MAX(CAST(REPLACE(`height`,'m','') AS INT)) FROM w", -7.904835491285], [" SELECT MAX(CAST(REPLACE(height, 'm', '') AS INT)) FROM w", -7.920214613024999], [" SELECT MAX(CAST(REPLACE(height,'m','') AS INT)) FROM w", -8.234404855185002], [" SELECT MAX(CAST(REPLACE(height, ' m', '') AS INT)) FROM w", -10.786093275215], [" SELECT MAX(CAST(REPLACE(height,'m','') AS INT)) FROM w", -10.928385023425001], [" SELECT MAX(CAST(REPLACE(height,'m','') AS INT)) FROM w", -11.125190223425001], [" SELECT MAX(CAST(REPLACE(height, 'm', '') AS INT)) FROM w", -12.427478140025], [" SELECT MAX(CAST(REPLACE(height, 'm', '') AS INT)) FROM w", -12.511176440025], [" SELECT MAX(CAST(REPLACE(height,'m','') AS INT)) FROM w", -12.747304423425]]}, "933": {"question": "what were the number of directors that stayed in office more than three years?", "gold_answer": ["3"], "pred_answer": {"0": [[4], [3], [0], [4], [4], [0], [0], [7], [0], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '(') + 1, INSTR(`term of office`, '-') - (INSTR(`term of office`, '(') + 1)) AS INT) - CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, INSTR(`term of office`, ',') - (INSTR(`term of office`, '-') + 1)) AS INT)) > 3", -12.009167760228005], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, ' - ') + 1)) AS INT) - CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, '-') - 1) AS INT)) > 3", -12.681872348041], [" SELECT COUNT(*) FROM w WHERE `term of office` LIKE '% - % - % - %' AND (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, LENGTH(`term of office`) - (INSTR(`term of office`, ' - ') + 1)) AS INT) - CAST(SUBSTR(`term of office`, 1, INSTR(`term of office`, '-') - 1) AS INT)) > 3", -13.269584970323999], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(term of office, INSTR(term of office, '(') + 1, INSTR(term of office, ',') - (INSTR(term of office, '(') + 1)) AS INT) - CAST(SUBSTR(term of office, INSTR(term of office, ',') + 1, INSTR(term of office, ')') - (INSTR(term of office, ',') + 1)) AS INT)) > 3", -13.381333673854007], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '(') + 1, INSTR(`term of office`, '-') - INSTR(`term of office`, '(') - 1) AS INT) - CAST(SUBSTR(`term of office`, INSTR(`term of office`, '-') + 1, INSTR(`term of office`, ',') - INSTR(`term of office`, '-') - 1) AS INT)) > 3", -13.480591422772005], [" SELECT COUNT(*) FROM w WHERE `term of office` LIKE '%y%'", -14.544016835479999], [" SELECT COUNT(*) FROM w WHERE term of office LIKE '% - % - %' AND (CAST(SUBSTR(term of office, INSTR(term of office, '-') + 1, LENGTH(term of office) - (INSTR(term of office, ' - ') + 1)) AS INT) - CAST(SUBSTR(term of office, 1, INSTR(term of office, '-') - 1) AS INT)) > 3", -17.040189936125998], [" SELECT COUNT(*) FROM w WHERE (SELECT MAX(CAST(SUBSTR(`term of office`, INSTR(`term of office`, '(') + 1, INSTR(`term of office`, ',') - (INSTR(`term of office`, '(') + 1)) AS INT)) FROM w) - (SELECT MIN(CAST(SUBSTR(`term of office`, INSTR(`term of office`, '(') + 1, INSTR(`term of office`, ',') - (INSTR(`term of office`, '(') + 1)) AS INT)) FROM w) > 3", -18.708329986456008], [" SELECT COUNT(*) FROM w WHERE `term of office` LIKE '%(%y%m%d%y%m%d,p%d)%' AND CAST(REPLACE(SUBSTR(`term of office`, INSTR(`term of office`, 'p') + 1, INSTR(`term of office`, 'd') - INSTR(`term of office`, 'p') - 1), ',', '') AS INT) > 1095", -23.228214508305992], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`term of office`, INSTR(`term of office`, '(') + 1, INSTR(`term of office`, ')') - (INSTR(`term of office`, '(') + 1)) AS INT) - CAST(SUBSTR(`term of office`, INSTR(`term of office`, ',') + 1, INSTR(`term of office`, 'd') - (INSTR(`term of office`, ',') + 1)) AS INT)) > 365 * 3", -25.370587668429998]]}, "974": {"question": "how many different codes were used from 1953 to 1958?", "gold_answer": ["6"], "pred_answer": {"0": [[2], [2], [2], [6], [2], [2], [2], [2], [2], [2]], "1": ["<error>", "<error>"], "2": [[4], [4]], "3": ["<error>", "<error>"], "4": [[0], [0]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year >= 1953 AND year <= 1958", -5.95921693281], [" SELECT COUNT(DISTINCT code) FROM w WHERE year >= 1953 AND year <= 1958", -6.171071998534001], [" SELECT COUNT(DISTINCT code) FROM w WHERE year >= 1953 AND year <= 1958", -6.171071998534001], [" SELECT COUNT(DISTINCT(code)) FROM w WHERE (year >= 1953 AND year <= 1958) OR (year_2 >= 1953 AND year_2 <= 1958) OR (year_3 >= 1953 AND year_3 <= 1958)", -8.977828182844], [" SELECT COUNT(DISTINCT(code)) FROM w WHERE year >= 1953 AND year <= 1958", -9.436792913757], [" SELECT COUNT(DISTINCT code) FROM w WHERE year >= 1953 AND year <= 1958", -11.018107991744001], [" SELECT COUNT(DISTINCT code) FROM w WHERE year >= 1953 AND year <= 1958", -13.268312435627], [" SELECT COUNT(DISTINCT code) FROM w WHERE year >= 1953 AND year <= 1958", -14.790772191744], [" SELECT COUNT(DISTINCT(code)) FROM w WHERE year >= 1953 AND year <= 1958\nQ2: {how many = a2} different codes were used from 1953 to 1958.\nNeuralSQL2: SELECT COUNT(DISTINCT(code_2)) FROM w WHERE year_2 >= 1953 AND year_2 <= 1958\nQ3: {how many = a3} different codes were used from 1953 to 1958.\nNeuralSQL3: SELECT COUNT(DISTINCT(code_3)) FROM w WHERE year_3 >= 1953 AND year_3 <= 1958", -17.249425682233294], [" SELECT COUNT(DISTINCT code) FROM w WHERE year >= 1953 AND year <= 1958\nQ2: {how many = a2} different codes were used from 1953 to 1958.\nNeuralSQL2: SELECT COUNT(DISTINCT code_2) FROM w WHERE year_2 >= 1953 AND year_2 <= 1958\nQ3: {how many = a3} different codes were used from 1953 to 1958.\nNeuralSQL3: SELECT COUNT(DISTINCT code_3) FROM w WHERE year_3 >= 1953 AND year_3 <= 1958\n```", -22.577328321719005]]}, "1015": {"question": "how many of these games occurred before 17 february 1976?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17'", -2.6038558205499998], [" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17'", -2.6038558205499998], [" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17 00:00:00'", -2.712561797906], [" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17 00:00:00'", -2.712561797906], [" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17 00:00:00'", -2.712561797906], [" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17 00:00:00'", -2.7127800766349996], [" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17 00:00:00'", -2.7136882878399997], [" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17 00:00:00'", -4.71572613893], [" SELECT COUNT(*) FROM w WHERE date < '1976-02-17 00:00:00'", -7.6317983041440005], [" SELECT COUNT(*) FROM w WHERE `date` < '1976-02-17 00:00:00'\n```", -16.72632514386]]}, "1056": {"question": "which year has the most buildings listed?", "gold_answer": ["1974"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "3": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988", -2.8766952441870006], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988", -2.878424443605], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988", -2.878424443605], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982.0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973.0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988.0", -6.097065788255], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982.0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973.0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988.0", -6.099903501678], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988", -6.223391965475002], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982.0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973.0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988.0", -7.441908278742999], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982.0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973.0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988.0", -7.930873173179001], [" SELECT COUNT(*) FROM w WHERE '1982' IN (year of listing & ref(s))\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE '1973' IN (year of listing & ref(s))\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE '1988' IN (year of listing & ref(s))", -10.404469672068002], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1982.0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1973.0\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` = 1988.0\n```", -11.662587932279]]}, "1097": {"question": "how many times is division 2 listed as the division?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -2.9327884410900005], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -2.9327884410900005], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -2.9327884410900005], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -2.9327884410900005], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -4.1340669966], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -5.17415960542], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -5.17415960542], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -5.17853535711], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -6.29801835711], [" SELECT COUNT(*) FROM w WHERE division = 'division 2'", -8.02075300542]]}, "1100": {"question": "how many monkey pillow pals were there?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `animal type` = 'monkey'", -2.11367857433], [" SELECT COUNT(*) FROM w WHERE `animal type` = 'monkey'", -2.11367857433], [" SELECT COUNT(*) FROM w WHERE `animal type` = 'monkey'", -3.2431054269400006], [" SELECT COUNT(*) FROM w WHERE animal type = 'monkey'", -3.8473952708400008], [" SELECT COUNT(*) FROM w WHERE animal type = 'monkey'", -3.8473952708400008], [" SELECT COUNT(*) FROM w WHERE animal type = 'monkey'", -3.8473952708400008], [" SELECT COUNT(*) FROM w WHERE animal type = 'monkey'", -5.932682592120001], [" SELECT COUNT(*) FROM w WHERE animal type = 'monkey'", -5.932682592120001], [" SELECT COUNT(*) FROM w WHERE animal type = 'monkey'", -5.932682592120001], [" SELECT COUNT(*) FROM w WHERE animal type = 'monkey'", -6.31783349212]]}, "1121": {"question": "how many drivers did not make more than 60 laps?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps < 60", -1.6039853248799998], [" SELECT COUNT(*) FROM w WHERE laps < 60", -1.60613699586], [" SELECT COUNT(*) FROM w WHERE laps < 60", -1.60613699586], [" SELECT COUNT(*) FROM w WHERE laps < 60", -1.60613699586], [" SELECT COUNT(*) FROM w WHERE laps < 60", -1.60635269586], [" SELECT COUNT(*) FROM w WHERE laps < 60", -1.60635269586], [" SELECT COUNT(*) FROM w WHERE laps <= 60", -2.21951120886], [" SELECT COUNT(*) FROM w WHERE laps < 60", -3.39342818186], [" SELECT COUNT(*) FROM w WHERE laps < 60", -3.39342818186], [" SELECT COUNT(*) FROM w WHERE laps < 60", -3.39342818186]]}, "1138": {"question": "how many years did they not qualify for the playoffs?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE playoffs = 'did not qualify'", -2.3892119589060004], [" SELECT COUNT(*) FROM w WHERE `playoffs` LIKE 'did not qualify'", -4.369230550756], [" SELECT COUNT(*) FROM w WHERE `playoffs` LIKE 'did not qualify'", -4.369230550756], [" SELECT COUNT(*) FROM w WHERE `playoffs` LIKE 'did not qualify'", -4.369230550756], [" SELECT COUNT(*) FROM w WHERE playoffs = 'did not qualify'\n```", -5.065609165456], [" SELECT COUNT(*) FROM w WHERE playoffs = 'did not qualify'", -5.326926619756], [" SELECT COUNT(*) FROM w WHERE `playoffs` LIKE 'did not%'", -5.432516947756], [" SELECT COUNT(*) FROM w WHERE `playoffs` LIKE 'did not%'", -5.432516947756], [" SELECT COUNT(*) FROM w WHERE playoffs = 'did not qualify'", -5.645992949356001], [" SELECT COUNT(*) FROM w WHERE `regular season` LIKE '%did not qualify%'", -9.152492770905999]]}, "1142": {"question": "what was the total number of silver medals awarded to the french and the germans in the 1994 winter olympic biathlon?", "gold_answer": ["4"], "pred_answer": {"0": [[null], [null], [null], [null], [null], [null], [null], [null], [null], [null]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [null], [3]], "2": ["<error>"]}, "nsql": [[" SELECT SUM(silver) FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation = 'germany'", -3.41475265067], [" SELECT SUM(silver) FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation = 'germany'", -3.41475265067], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%french%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%german%'", -7.034564775250001], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%french%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%german%'", -7.035259331500001], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%french%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%german%'", -7.04376136036], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%french%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%german%'", -8.40014844986], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%french%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%german%'", -10.14120343862], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%french%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%german%'", -10.59274523862], [" SELECT SUM(silver) FROM w WHERE nation LIKE '%french%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE '%germans%'", -11.037800814659999], [" SELECT SUM(silver) FROM w WHERE nation = 'france'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation = 'germany'\n```", -15.028000752129998]]}, "1179": {"question": "did japan have more starting appearances in the 2013 eaff east asian cup or 2007 fifa u-17 world cup?", "gold_answer": ["2013 EAFF East Asian Cup"], "pred_answer": {"0": [[2], [2], [1], [2], [0], [0], [0], [2], [2], [0]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT SUM(`appearances\\nstart`) FROM w WHERE competition = '2013 eaff east asian cup'\nNeuralSQL2: SELECT SUM(`appearances\\nstart`) FROM w WHERE competition = '2007 fifa u-17 world cup'", -4.427708985119999], [" SELECT SUM(`appearances\\nstart`) FROM w WHERE competition = '2013 eaff east asian cup'\nNeuralSQL2: SELECT SUM(`appearances\\nstart`) FROM w WHERE competition = '2007 fifa u-17 world cup'", -4.42907217368], [" SELECT COUNT(*) FROM w WHERE team = 'japan' AND competition = '2013 eaff east asian cup'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'japan' AND competition = '2007 fifa u-17 world cup'", -5.116057734765001], [" SELECT SUM(appearances\\nstart) FROM w WHERE team = 'japan' AND competition = '2013 eaff east asian cup'\nNeuralSQL2: SELECT SUM(appearances\\nstart) FROM w WHERE team = 'japan' AND competition = '2007 fifa u-17 world cup'", -5.157821029256999], [" SELECT COUNT(*) FROM w WHERE competition = '2013 eaff east asian cup' AND category = 'u-17'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE competition = '2007 fifa u-17 world cup' AND category = 'u-17'", -7.521574452519997], [" SELECT COUNT(*) FROM w WHERE team = 'japan' AND competition = '2013 eaff east asian cup' AND category = 'u-17'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'japan' AND competition = '2007 fifa u-17 world cup' AND category = 'u-17'", -7.9021029606], [" SELECT COUNT(*) FROM w WHERE team = 'japan' AND competition = '2013 eaff east asian cup' AND category = 'u-17'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'japan' AND competition = '2007 fifa u-17 world cup' AND category = 'u-17'", -7.903094661849998], [" SELECT SUM(`appearances\\nstart`) FROM w WHERE team = 'japan' AND competition = '2013 eaff east asian cup'\nNeuralSQL2: SELECT SUM(`appearances\\nstart`) FROM w WHERE team = 'japan' AND competition = '2007 fifa u-17 world cup'", -11.161229279087], [" SELECT SUM(`appearances\\nstart`) FROM w WHERE team = 'japan' AND competition = '2013 eaff east asian cup'\nNeuralSQL2: SELECT SUM(`appearances\\nstart`) FROM w WHERE team = 'japan' AND competition = '2007 fifa u-17 world cup'", -11.393843285576], [" SELECT COUNT(*) FROM w WHERE team = 'japan' AND competition = '2013 eaff east asian cup' AND category = 'u-17' AND `appearances\\nstart` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'japan' AND competition = '2007 fifa u-17 world cup' AND category = 'u-17' AND `appearances\\nstart` > 0", -18.381266036915996]]}, "1183": {"question": "how many seasons had combined tackles of 70 or more?", "gold_answer": ["5"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00827363521], [" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00827363521], [" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00902826589], [" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00902826589], [" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00902826589], [" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00902826589], [" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00902826589], [" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00902826589], [" SELECT COUNT(*) FROM w WHERE `combined tackles` >= 70", -2.00902826589], [" SELECT COUNT(*) FROM w WHERE `combined tackles` > 70", -3.38891516329]]}, "1224": {"question": "how many television credits does this actress have?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(DISTINCT title) FROM w", -1.8574375349799999], [" SELECT COUNT(DISTINCT title) FROM w", -1.8574529879799997], [" SELECT COUNT(DISTINCT title) FROM w", -1.8574529879799997], [" SELECT COUNT(DISTINCT title) FROM w", -1.8574529879799997], [" SELECT COUNT(DISTINCT title) FROM w", -1.8574529879799997], [" SELECT COUNT(DISTINCT title) FROM w", -1.8574529879799997], [" SELECT COUNT(DISTINCT title) FROM w", -1.85832848498], [" SELECT COUNT(*) FROM w", -6.229453114996], [" SELECT COUNT(*) FROM w", -6.258380114996], [" SELECT COUNT(*) FROM w", -6.282826714995999]]}, "1265": {"question": "which year was more successful, 2010 or 2013?", "gold_answer": ["2013"], "pred_answer": {"0": [["5th, atlantic"], ["5th, atlantic"], "<error>", ["5th, atlantic"], [1], ["5th, atlantic"], ["5th, atlantic"], ["unsuccessful"], [0], [1]], "1": [["3rd, atlantic"], ["3rd, atlantic"], "<error>", ["3rd, atlantic"], [1], ["3rd, atlantic"], ["3rd, atlantic"], ["unsuccessful"], [0], [1]]}, "nsql": [[" SELECT regular season FROM w WHERE year = 2010\nNeuralSQL2: SELECT regular season FROM w WHERE year = 2013", -3.4683849341179993], [" SELECT regular season FROM w WHERE year = 2010\nNeuralSQL2: SELECT regular season FROM w WHERE year = 2013", -3.4683849341179993], [" SELECT regular_season FROM w WHERE year = 2010\nNeuralSQL2: SELECT regular_season FROM w WHERE year = 2013", -4.7891465371400015], [" SELECT `regular season` FROM w WHERE year = '2010'\nNeuralSQL2: SELECT `regular season` FROM w WHERE year = '2013'", -4.843587752927998], [" SELECT COUNT(*) FROM w WHERE year = 2010\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2013", -8.29790021709], [" SELECT `regular season` FROM w WHERE year = 2010\nNeuralSQL2: SELECT `regular season` FROM w WHERE year = 2013", -10.652115185320001], [" SELECT `regular season` FROM w WHERE year = 2010\nNeuralSQL2: SELECT `regular season` FROM w WHERE year = 2013", -10.769111705319999], [" SELECT CASE WHEN `regular season` LIKE '%nd%' THEN 'successful' ELSE 'unsuccessful' END FROM w WHERE year = 2010\nNeuralSQL2: SELECT CASE WHEN `regular season` LIKE '%nd%' THEN 'successful' ELSE 'unsuccessful' END FROM w WHERE year = 2013", -12.3656027780208], [" SELECT COUNT(*) FROM w WHERE year = 2010 AND (regular season LIKE '%successful%' OR playoffs LIKE '%successful%' OR `open cup` LIKE '%successful%')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2013 AND (regular season LIKE '%successful%' OR playoffs LIKE '%successful%' OR `open cup` LIKE '%successful%')", -12.884342245523994], [" SELECT COUNT(*) FROM w WHERE year = 2010 AND (regular season NOT LIKE '%did not%' OR playoffs NOT LIKE '%did not%' OR open cup NOT LIKE '%did not%')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2013 AND (regular season NOT LIKE '%did not%' OR playoffs NOT LIKE '%did not%' OR open cup NOT LIKE '%did not%')", -16.394529621489998]]}, "6": {"question": "what is the difference in runners-up from coleraine academical institution and royal school dungannon?", "gold_answer": ["20"], "pred_answer": {"0": [[24], [24], [24], [24], [24], [24], [24], [24], [24], [24]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "2": ["<error>"]}, "nsql": [[" SELECT runners-up FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT runners-up FROM w WHERE school = 'royal school dungannon'", -2.3837045756739994], [" SELECT runners-up FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT runners-up FROM w WHERE school = 'royal school dungannon'", -2.3879116593929997], [" SELECT `runners-up` FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT `runners-up` FROM w WHERE school = 'royal school dungannon'", -4.254100395767001], [" SELECT `runners-up` FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT `runners-up` FROM w WHERE school = 'royal school dungannon'", -9.511873704077], [" SELECT `runners-up` FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT `runners-up` FROM w WHERE school = 'royal school dungannon'", -9.64911913001], [" SELECT `runners-up` FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT `runners-up` FROM w WHERE school = 'royal school dungannon'", -10.052571710077], [" SELECT `runners-up` FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT `runners-up` FROM w WHERE school = 'royal school dungannon'", -10.24984120001], [" SELECT `runners-up` FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT `runners-up` FROM w WHERE school = 'royal school dungannon'", -10.473218600010002], [" SELECT `runners-up` FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT `runners-up` FROM w WHERE school = 'royal school dungannon'", -11.237982973017], [" SELECT `runners-up` FROM w WHERE school = 'coleraine academical institution'\nNeuralSQL2: SELECT `runners-up` FROM w WHERE school = 'royal school dungannon'\n```", -11.811973608937]]}, "47": {"question": "what is the difference in child population between koraput and puri?", "gold_answer": ["51,130"], "pred_answer": {"0": [[215518], [215518], [215518], [215518], [215518], [215518], [215518], [215518], [215518], [215518]], "1": [[164388], [164388], [164388], [164388], [164388], [164388], [164388], [164388], [164388], [164388]], "2": ["<error>"]}, "nsql": [[" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -5.4213866502400005], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -5.4213866502400005], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -5.4213866502400005], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -9.26675974587], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -10.029132606040001], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'\n```", -10.075490388119999], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -10.3554400561], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -12.09188403101], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -12.62988552188], [" SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'koraput'\nNeuralSQL2: SELECT `child\\npopulation\\n0\u20136 years` FROM w WHERE district = 'puri'", -15.490902891880001]]}, "88": {"question": "which of the girls had the least amount in archery?", "gold_answer": ["Bernie"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "3": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "4": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -1.4460077517140002], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -1.4467750794260001], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -1.4467750794260001], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -1.4467750794260001], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -1.4467750794260001], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -1.4467750794260001], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -1.4467750794260001], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -2.5620173594260005], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -2.5620173594260005], [" SELECT amanda FROM w WHERE discipline = 'archery'\nNeuralSQL2: SELECT bernie FROM w WHERE discipline = 'archery'\nNeuralSQL3: SELECT `javine h` FROM w WHERE discipline = 'archery'\nNeuralSQL4: SELECT julia FROM w WHERE discipline = 'archery'\nNeuralSQL5: SELECT michelle FROM w WHERE discipline = 'archery'", -2.5660034415800004]]}, "129": {"question": "how many litres do individuals in yukon consume in spirits per year?", "gold_answer": ["12.7"], "pred_answer": {"0": [["13.8"], ["13.8"], ["13.8"], ["13.8"], ["13.8"], ["13.8"], ["13.8"], ["13.8"], ["13.8"], ["13.8"]]}, "nsql": [[" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -4.38119066171], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -4.38119066171], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -4.38119066171], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -4.38119066171], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -4.5442946617099995], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -4.54476554921], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -4.54476554921], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -5.092735893424], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -5.095495934458], [" SELECT spirits FROM w WHERE filledcolumnname = 'yukon'", -6.0864289344580005]]}, "170": {"question": "how many gold medals did germany earn?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'germany'", -1.1138015925350002], [" SELECT gold FROM w WHERE nation = 'germany'", -1.1138015925350002], [" SELECT gold FROM w WHERE nation = 'germany'", -1.1138015925350002], [" SELECT gold FROM w WHERE nation = 'germany'", -1.1138015925350002], [" SELECT gold FROM w WHERE nation = 'germany'", -1.1138015925350002], [" SELECT gold FROM w WHERE nation = 'germany'", -1.1138015925350002], [" SELECT gold FROM w WHERE nation = 'germany'", -1.1138015925350002], [" SELECT gold FROM w WHERE nation = 'germany'", -1.1138015925350002], [" SELECT gold FROM w WHERE nation = 'germany'", -4.434344302095001], [" SELECT gold FROM w WHERE nation = 'germany'", -6.237429694635]]}, "211": {"question": "how many years was ali saibou president?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>", "<error>"], "2": [[6], [22]], "3": ["<error>", "<error>"], "4": [[6], [18]], "5": ["<error>", "<error>"], "6": [[6], [3]], "7": ["<error>", "<error>"], "8": [[6], [3]], "9": ["<error>", "<error>"], "10": [[6]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'", -1.54003580264], [" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'", -1.54003580264], [" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'", -1.54003580264], [" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'", -1.54003580264], [" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'", -4.08161387906], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'", -5.4502096064600005], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'", -5.4502096064600005], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'", -12.00852883746], [" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nQ2: {how many = a2} years was ali saibou president.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nQ3: {how many = a3} years was ali saibou president.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nQ4: {how many = a4} years was ali saibou president.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nQ5: {how many = a5} years was ali saibou president.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nQ6: {how many = a6} years was ali saibou president.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nQ7: {how many = a7} years was ali saibou president.\nNeuralSQL7: SELECT COUNT", -15.367782667465303], [" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nQ2: {how many = a2} years was the status not free.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE status = 'not free'\nQ3: {how many = a3} years was the status not free and the political rights was 7.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE status = 'not free' AND political rights = 7\nQ4: {how many = a4} years was the political rights was 6 and the civil liberties was 6.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE political rights = 6 AND civil liberties = 6\nQ5: {how many = a5} years was the political rights was 6 and the civil liberties was 6 and the status was not free.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE political rights = 6 AND civil liberties = 6 AND status = 'not free'\nQ6: {how many = a6} years was the political rights was 6 and the civil liberties was 6 and the status was not free and the president was ali saib", -40.877520382169976]]}, "252": {"question": "which was the only team with less than 20 wins?", "gold_answer": ["Penn State"], "pred_answer": {"0": [[8], [8], [1], [1], [0], [1], [0], "<error>", "<error>", [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(record (conference), 1, INSTR(record (conference), '-') - 1) AS INT) < 20", -4.74528538363], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(record (conference), 1, INSTR(record (conference), '-') - 1) AS INT) < 20", -4.752546350550001], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(record (conference), 1, INSTR(record (conference), '\u2013') - 1) AS INT) < 20", -5.384124652929999], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(record (conference), 1, INSTR(record (conference), '\u2013') - 1) AS INT) < 20", -5.384124652929999], [" SELECT COUNT(*) FROM w WHERE record (conference) LIKE '%-%' AND CAST(SUBSTR(record (conference), 1, INSTR(record (conference), '-') - 1) AS INT) < 20", -5.9576059381399995], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(record (conference), '\u2013', '-') AS INT) < 20", -6.6461736674299985], [" SELECT COUNT(*) FROM w WHERE record (conference) LIKE '%-%' AND CAST(SUBSTR(record (conference), 1, INSTR(record (conference), '-') - 1) AS INT) < 20", -7.277271157490003], [" SELECT COUNT(*) FROM w WHERE `record (conference)` LIKE '%-%' AND CAST(SUBSTR(`record (conference)`, 1, INSTR(`record (conference)`, '-') - 1) AS INT) < 20", -7.890349068399995], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < 20", -11.775753412600002], [" SELECT COUNT(*) FROM w WHERE record (conference) LIKE '% - %' AND (CAST(SUBSTR(record (conference), 1, INSTR(record (conference), '-') - 1) AS INT) + CAST(SUBSTR(record (conference), INSTR(record (conference), '-') + 1, LENGTH(record (conference)) - (INSTR(record (conference), ' - ') + 1)) AS INT)) < 20", -15.127696207699005]]}, "293": {"question": "what is the total number of positions listed?", "gold_answer": ["16"], "pred_answer": {"0": [[16], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(position) FROM w", -4.32876040021], [" SELECT COUNT(DISTINCT position) FROM w", -9.466881662247], [" SELECT COUNT(DISTINCT position) FROM w", -9.795857400047], [" SELECT COUNT(DISTINCT position) FROM w", -10.027560112702], [" SELECT COUNT(DISTINCT position) FROM w", -10.356515769247], [" SELECT COUNT(DISTINCT position) FROM w", -10.356515769247], [" SELECT COUNT(DISTINCT position) FROM w", -10.366983642212], [" SELECT COUNT(DISTINCT(position)) FROM w", -10.651493781247], [" SELECT COUNT(DISTINCT(position)) FROM w", -11.318399581247], [" SELECT COUNT(DISTINCT(position)) FROM w", -11.458476177540001]]}, "334": {"question": "what's the number of people who attended the oregon state game?", "gold_answer": ["76,290"], "pred_answer": {"0": ["<error>", [76290], [1], [76290], [76290], [76290], [76290], [76290], [76290], [76290]], "1": ["<error>"], "2": [[7]], "3": ["<error>"], "4": [[7]], "5": ["<error>"], "6": [[7]], "7": ["<error>"], "8": [[7]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT attendance FROM w WHERE opponent = 'oregon state'", -2.75708102905], [" SELECT SUM(attendance) FROM w WHERE opponent# = 'oregon state'", -4.47504741589], [" SELECT COUNT(*) FROM w WHERE opponent# = 'oregon state'", -4.706598116479999], [" SELECT attendance FROM w WHERE opponent# = 'oregon state'", -5.19296087545], [" SELECT attendance FROM w WHERE opponent# = 'oregon state'", -7.63260947069], [" SELECT attendance FROM w WHERE opponent# = 'oregon state'", -8.817907042689999], [" SELECT attendance FROM w WHERE opponent# = 'oregon state'", -10.61123488569], [" SELECT attendance FROM w WHERE opponent# = 'oregon state'", -10.80387810134], [" SELECT attendance FROM w WHERE opponent# = 'oregon state'", -11.15793450534], [" SELECT attendance FROM w WHERE opponent# = 'oregon state'\nQ2: {how many = a2} games were played in lincoln.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE site LIKE '%lincoln%'\nQ3: {how many = a3} games were played in nebraska.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE site LIKE '%nebraska%'\nQ4: {how many = a4} games were played in lincoln and nebraska.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE site LIKE '%lincoln%' AND site LIKE '%nebraska%'\nQ5: {how many = a5} games were played in lincoln or nebraska.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE site LIKE '%lincoln%' OR site LIKE '%nebraska%'\nQ6: {how many = a6} games were played in lincoln and not nebraska.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE site LIKE '%lincoln%' AND NOT site LIKE '%nebraska", -35.05324466440102]]}, "375": {"question": "how many airports are listed?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -3.3107453329], [" SELECT COUNT(*) FROM w", -3.3107453329], [" SELECT COUNT(*) FROM w", -3.3403799539300003], [" SELECT COUNT(*) FROM w", -3.3403799539300003], [" SELECT COUNT(*) FROM w\n```", -4.4246052356400005], [" SELECT COUNT(DISTINCT airport) FROM w", -5.2428176200635], [" SELECT COUNT(*) FROM w", -5.2435565763300005], [" SELECT COUNT(DISTINCT airport) FROM w", -8.0651383678335], [" SELECT COUNT(DISTINCT airport) FROM w", -9.1539717596335], [" SELECT COUNT(DISTINCT airport) FROM w", -10.012505249492]]}, "416": {"question": "how many dates are on the chart", "gold_answer": ["12"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(DISTINCT date) FROM w", -1.3753889594], [" SELECT COUNT(DISTINCT date) FROM w", -1.3753889594], [" SELECT COUNT(DISTINCT date) FROM w", -1.3753889594], [" SELECT COUNT(DISTINCT date) FROM w", -1.3753889594], [" SELECT COUNT(DISTINCT date) FROM w", -1.3753889594], [" SELECT COUNT(DISTINCT date) FROM w", -1.3753889594], [" SELECT COUNT(DISTINCT date) FROM w", -1.3753889594], [" SELECT COUNT(DISTINCT date) FROM w", -3.8716688336], [" SELECT COUNT(DISTINCT date) FROM w", -9.685769988399999], [" SELECT COUNT(DISTINCT date) FROM w", -16.20666203023]]}, "457": {"question": "how many operas on this list has at least 3 acts?", "gold_answer": ["51"], "pred_answer": {"0": ["<error>", [52], [52], [52], [52], [52], [48], [52], [41], [52]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE acts >= 3", -3.8354829980999994], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%'", -4.262071337300001], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%'", -4.262071337300001], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%'", -4.262071337300001], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%'", -5.3316603883], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%acts%'", -5.3316603883], [" SELECT COUNT(*) FROM w WHERE sub\u00addivisions LIKE '%3 acts%'", -5.708436559399999], [" SELECT COUNT(*) FROM w WHERE sub\u00addivisions LIKE '% acts%'", -6.366519076029999], [" SELECT COUNT(*) FROM w WHERE genre = 'dramma per musica' AND `sub\u00addivisions` = '3 acts'", -11.480362414870001], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` LIKE '%act%' AND `sub\u00addivisions` LIKE '%act%' AND `sub\u00addivisions` LIKE '%act%'", -12.276465386519998]]}, "460": {"question": "what is the total number of russian gymnasts that have won silver.", "gold_answer": ["8"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'", -2.16728627299], [" SELECT COUNT(*) FROM w WHERE silver LIKE '%russian%'\n```", -4.986868518640001]]}, "481": {"question": "how many years before was the film bacchae out before the watermelon?", "gold_answer": ["6"], "pred_answer": {"0": [[4], [6], [6], [6], [0], [6], [6], [6], [6], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year < 2008", -6.15001386498], [" SELECT (2008 - MAX(year)) FROM w WHERE film = 'bacchae'", -6.233734523819998], [" SELECT (2008 - (SELECT year FROM w WHERE film = 'bacchae'))", -6.43190793654], [" SELECT ABS(MAX(year) - (SELECT year FROM w WHERE film = 'the watermelon')) FROM w WHERE film = 'bacchae'", -7.739119246979999], [" SELECT `year` - 2008 FROM w WHERE film = 'the watermelon'", -9.01194776501], [" SELECT MAX(year) - MIN(year) FROM w WHERE film LIKE '%bacchae%' OR film LIKE '%the watermelon%'", -9.944421650480004], [" SELECT (SELECT year FROM w WHERE film = 'the watermelon') - (SELECT year FROM w WHERE film = 'bacchae')", -10.249361787409999], [" SELECT (2008 - (SELECT MIN(year) FROM w WHERE film = 'bacchae'))", -13.74564907645], [" SELECT ABS(2008 - (SELECT year FROM w WHERE film = 'bacchae'))", -14.737471620019999], [" SELECT ABS(MAX(year) - MIN(year)) FROM w WHERE film IN ('the watermelon', 'bacchae')", -17.276953714848002]]}, "498": {"question": "how many points did the brazilian football team auto get in 1926?", "gold_answer": ["14"], "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]], "1": ["<error>"]}, "nsql": [[" SELECT points FROM w WHERE team = 'auto'", -1.2905028068810003], [" SELECT points FROM w WHERE team = 'auto'", -1.2905028068810003], [" SELECT points FROM w WHERE team = 'auto'", -1.2905028068810003], [" SELECT points FROM w WHERE team = 'auto'", -1.2905028068810003], [" SELECT points FROM w WHERE team = 'auto'", -1.2905028068810003], [" SELECT points FROM w WHERE team = 'auto'", -1.2905028068810003], [" SELECT points FROM w WHERE team = 'auto'", -3.4375196105959995], [" SELECT points FROM w WHERE team = 'auto'", -3.4375196105959995], [" SELECT points FROM w WHERE team = 'auto'", -3.654826550396], [" SELECT points FROM w WHERE team = 'auto'\n```", -13.992116000096]]}, "502": {"question": "are there at least 13 different components on the chart?", "gold_answer": ["yes"], "pred_answer": {"0": [[18], [18], [18], [18], [18], [18], [18], [18], [18], [18]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -3.32885113337], [" SELECT COUNT(DISTINCT(component)) FROM w", -6.092954191609999], [" SELECT COUNT(DISTINCT(component)) FROM w", -6.093392581609999], [" SELECT COUNT(DISTINCT component) FROM w", -6.48535465961], [" SELECT COUNT(DISTINCT component) FROM w", -8.82921444694], [" SELECT COUNT(DISTINCT component) FROM w\n```", -9.18460160394], [" SELECT COUNT(DISTINCT component) FROM w", -10.062607376939999], [" SELECT COUNT(DISTINCT component) FROM w", -10.504376546940001], [" SELECT COUNT(DISTINCT component) FROM w", -11.00443644694], [" SELECT COUNT(DISTINCT component) FROM w", -11.744157246939999]]}, "539": {"question": "how many years of service do the members of the second incarnation have combined?", "gold_answer": ["26"], "pred_answer": {"0": [[26752], [-24073], [14], [14], [12], [null], [-24073], [26752], [null], [1]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(term, INSTR(term, '-') + 1, LENGTH(term) - (INSTR(term, '-') + 1)) AS INT) - CAST(SUBSTR(term, 1, INSTR(term, '-') - 1) AS INT)) FROM w", -7.239405698900001], [" SELECT SUM(CAST(SUBSTR(term, INSTR(term, '\u2013') + 1, LENGTH(term) - (INSTR(term, '\u2013') + 1)) AS INT) - CAST(SUBSTR(term, 1, INSTR(term, '\u2013') - 1) AS INT)) FROM w", -8.045581477771998], [" SELECT COUNT(*) FROM w WHERE `term` LIKE '%\u2013%'", -8.06767416439], [" SELECT SUM(LENGTH(term) - LENGTH(REPLACE(term, '\u2013', ''))) FROM w", -8.22200215285], [" SELECT SUM(LENGTH(term) - LENGTH(REPLACE(term, '\u2013', ''))) FROM w WHERE row_id > 1", -8.709328196649999], [" SELECT SUM(CAST(SUBSTR(term, INSTR(term, '-') + 1, LENGTH(term) - (INSTR(term, '-') + 1)) AS INT) - CAST(SUBSTR(term, 1, INSTR(term, '-') - 1) AS INT)) FROM w WHERE term LIKE '% - %'", -10.193671431340002], [" SELECT SUM(CAST(SUBSTR(term, INSTR(term, '\u2013') + 1, LENGTH(term) - (INSTR(term, '\u2013') + 1)) AS INT) - CAST(SUBSTR(term, 1, INSTR(term, '\u2013') - 1) AS INT)) FROM w WHERE term LIKE '%\u2013%'", -10.281066749408], [" SELECT SUM(CAST(REPLACE(term, '\u2013', '-') AS INT)) FROM w WHERE term LIKE '%\u2013%'", -12.233849019109998], [" SELECT SUM(CAST(REPLACE(term, '\u2013', '-') AS INT)) FROM w WHERE term LIKE '%-%'", -12.625107160856], [" SELECT SUM(LENGTH(term) - LENGTH(REPLACE(term, '\u2013', ''))) FROM w WHERE row_id > 1 AND row_id < 4", -14.01476268801]]}, "543": {"question": "how many old municipalities were in tripoli?", "gold_answer": ["8"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `old municipalities` = 'tripoli'", -5.0830115641599996], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -5.637783143913], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -5.637783143913], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -5.637783143913], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -5.898737763912999], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -6.3241378039130005], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -6.864156953913], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -7.592987540724], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -8.940420353913], [" SELECT COUNT(*) FROM w WHERE old municipalities = 'tripoli'", -10.171021883913001]]}, "584": {"question": "what is the difference in kw between naga and bacolod radio?", "gold_answer": ["5 kW"], "pred_answer": {"0": [["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"], ["10\u00a0kw"]], "1": [["5\u00a0kw"], ["5\u00a0kw"], ["5\u00a0kw"], ["5\u00a0kw"], ["5\u00a0kw"], ["5\u00a0kw"], ["5\u00a0kw"], ["5\u00a0kw"], ["5\u00a0kw"], ["5\u00a0kw"]], "2": ["<error>"]}, "nsql": [[" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5214591818239995], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5271252438240002], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5271252438240002], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5308560562039997], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5308560562039997], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5308560562039997], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5308560562039997], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5308560562039997], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'", -1.5308560562039997], [" SELECT `power (kw)` FROM w WHERE location = 'naga'\nNeuralSQL2: SELECT `power (kw)` FROM w WHERE location = 'bacolod'\n```", -14.251627427174]]}, "625": {"question": "which ship sunk the most u-boats", "gold_answer": ["HMS Vidette"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "3": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE sunk by = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE sunk by = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE sunk by = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE sunk by = 'hms loosestrife'", -2.601173086055002], [" SELECT COUNT(*) FROM w WHERE sunk by = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE sunk by = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE sunk by = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE sunk by = 'hms loosestrife'", -2.601547312894999], [" SELECT COUNT(*) FROM w WHERE sunk by = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE sunk by = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE sunk by = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE sunk by = 'hms loosestrife'", -2.608748859990002], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms loosestrife'", -6.305173343680201], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms loosestrife'", -6.305173343680201], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms loosestrife'", -6.890718302853199], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms loosestrife'", -6.9528119436802], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms loosestrife'", -7.3014296436802], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms loosestrife'", -7.3014296436802], [" SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms vidette'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms oribi'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms snowflake'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `sunk by` = 'hms loosestrife'", -7.8461939436802]]}, "666": {"question": "which countries have the same number of silver medals in the asian youth games as north korea?", "gold_answer": ["Vietnam (VIE)", "Malaysia (MAS)"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.3153208617], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.3153208617], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.3153208617], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.3153208617], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.3153208617], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.3153208617], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.3153208617], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.32753138409], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -2.32753138409], [" SELECT COUNT(*) FROM w WHERE silver = (SELECT silver FROM w WHERE nation = 'north korea')", -4.399241829340001]]}, "707": {"question": "which was the only team in the atlantic division in the 1993-1994 season to acquire less points than the philadelphia flyers?", "gold_answer": ["Tampa Bay Lightning"], "pred_answer": {"0": [[4], [1], [1], [1], "<error>", [1], [1], [4], [4], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE points < 24", -3.643591157015], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE opponent = '@ toronto maple leafs')", -6.329360873615], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE opponent = '@ toronto maple leafs')", -6.329360873615], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE opponent = '@ toronto maple leafs')", -6.355894399818002], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE team = 'philadelphia flyers')", -6.438285663125002], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE opponent = 'toronto maple leafs')", -6.781672947368], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE opponent = 'toronto maple leafs')", -6.781672947368], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE opponent = 'new jersey devils')", -7.032255807375001], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE opponent = 'new jersey devils')", -9.446346383565], [" SELECT COUNT(*) FROM w WHERE points < (SELECT points FROM w WHERE row_id = 0)", -10.743078774344003]]}, "748": {"question": "how many pylons are at least 80 meters tall?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [8], [11], [11], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, 'm', '') AS INT) >= 80", -3.51742971594], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, 'm', '') AS INT) >= 80", -3.51742971594], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, 'm', '') AS INT) >= 80", -3.51853672283], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, ' m', '') AS INT) >= 80", -4.085516642939999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height,' m','') AS INT) >= 80", -4.716122443940002], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(height, 1, INSTR(height, ' ') - 1) AS INT) >= 80", -5.0894739600999985], [" SELECT COUNT(*) FROM w WHERE `height` >= '80 m'", -5.83440877535], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(height, 'm', '') AS INT) >= 80", -6.2037079242400015], [" SELECT COUNT(*) FROM w WHERE height LIKE '% m' AND CAST(REPLACE(height, 'm', '') AS INT) >= 80", -6.940455058960001], [" SELECT COUNT(*) FROM w WHERE height >= '80 m'", -6.99173836401]]}, "789": {"question": "how many medals have sweden and norway won combined?", "gold_answer": ["7"], "pred_answer": {"0": [[0], [null], [4], [4], [4], [4], [1], [1], [1], [4]], "1": [[0], [null], [3], [3], [3], [3], [1], [1], [1], [3]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nation = 'sweden'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'norway'", -3.2384445816], [" SELECT SUM(total) FROM w WHERE nation = 'sweden'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'norway'", -3.55117200005], [" SELECT SUM(total) FROM w WHERE nation LIKE '%sweden%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%norway%'", -4.8869849402000005], [" SELECT SUM(total) FROM w WHERE nation LIKE '%sweden%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%norway%'", -4.88913483853], [" SELECT SUM(total) FROM w WHERE nation LIKE '%sweden%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%norway%'", -4.8978541487800005], [" SELECT SUM(total) FROM w WHERE nation LIKE '%(swe)%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%(nor)%'", -5.1686927183], [" SELECT COUNT(*) FROM w WHERE nation LIKE '%sweden%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation LIKE '%norway%'", -5.31655565148], [" SELECT COUNT(*) FROM w WHERE nation LIKE '%sweden%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation LIKE '%norway%'", -5.31655565148], [" SELECT COUNT(*) FROM w WHERE nation LIKE '%sweden%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation LIKE '%norway%'", -5.3205624686799995], [" SELECT SUM(total) FROM w WHERE nation LIKE '%sweden%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%norway%'\n```", -9.61801024257]]}, "830": {"question": "what is the difference of the amount sold between boeing and general dynamics in 2007?", "gold_answer": ["8960"], "pred_answer": {"0": [[30480.0], [30480.0], [30480.0], [30480.0], [30480.0], [30480.0], [30480.0], [30480.0], [30480.0], [30480.0]], "1": [[21520.0], [21520.0], [21520.0], [21520.0], [21520.0], [21520.0], [21520.0], [21520.0], [21520.0], [21520.0]], "2": ["<error>"]}, "nsql": [[" SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'general dynamics'", -2.323221898230001], [" SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'general dynamics'", -2.323221898230001], [" SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'general dynamics'", -2.3241886610040003], [" SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'general dynamics'", -2.3241886610040003], [" SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'general dynamics'", -2.3248570054699993], [" SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'general dynamics'", -2.3248570054699993], [" SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'general dynamics'", -5.2758748500040005], [" SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE `company (country)` = 'general dynamics'", -5.525216850004], [" SELECT '2007 arms sales (us$ m.)' FROM w WHERE company (country) = 'boeing'\nNeuralSQL2: SELECT '2007 arms sales (us$ m.)' FROM w WHERE company (country) = 'general dynamics'", -8.392997963929998], [" SELECT `2007 arms sales (us$ m.)` FROM w WHERE company (country) = 'boeing'\nNeuralSQL2: SELECT `2007 arms sales (us$ m.)` FROM w WHERE company (country) = 'general dynamics'\n```", -12.236825273340001]]}, "871": {"question": "who is the only team from the east region to reach the final round?", "gold_answer": ["Duke"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [17], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE region = 'east' AND finished = 'final'", -2.9229448021100004], [" SELECT COUNT(*) FROM w WHERE region = 'east' AND finished = 'final'", -2.9229448021100004], [" SELECT COUNT(*) FROM w WHERE region = 'east' AND finished = 'final'", -2.9229448021100004], [" SELECT COUNT(*) FROM w WHERE region = 'east' AND finished = 'final'", -2.9229448021100004], [" SELECT COUNT(*) FROM w WHERE region = 'east' AND finished = 'final'", -2.9229448021100004], [" SELECT COUNT(DISTINCT team) FROM w WHERE region = 'east'", -5.114511021241], [" SELECT COUNT(*) FROM w WHERE region = 'east' AND finished LIKE '%final round%'", -7.11631689334], [" SELECT COUNT(DISTINCT team) FROM w WHERE region = 'east' AND finished = 'final round'", -9.585410439866], [" SELECT COUNT(DISTINCT team) FROM w WHERE region = 'east' AND finished = 'final'", -10.422819003046], [" SELECT COUNT(*) FROM w WHERE region = 'east' AND finished = 'final round'\nQ2: {how many = a2} team from the west region to reach the final round.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'west' AND finished = 'final round'\nQ3: {how many = a3} team from the east region to reach the final round.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE region = 'east' AND finished = 'final round'\nQ4: {how many = a4} team from the west region to reach the final round.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE region = 'west' AND finished = 'final round'\nQ5: {how many = a5} team from the east region to reach the final round.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE region = 'east' AND finished = 'final round'\nQ6: {how many = a6} team from the west region to reach the final round.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE region", -22.948477948679997]]}, "912": {"question": "how many consecutive escorts were in 1943?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"], "2": [[4]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[5]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date = 1943", -2.17726966839], [" SELECT COUNT(*) FROM w WHERE date = 1943", -2.17726966839], [" SELECT COUNT(*) FROM w WHERE date = 1943", -2.17726966839], [" SELECT COUNT(*) FROM w WHERE date = 1943", -2.17726966839], [" SELECT COUNT(*) FROM w WHERE date = 1943", -2.17726966839], [" SELECT COUNT(*) FROM w WHERE date = 1943", -2.17726966839], [" SELECT COUNT(*) FROM w WHERE date = 1943", -2.17726966839], [" SELECT COUNT(*) FROM w WHERE date = 1943", -2.17726966839], [" SELECT COUNT(*) FROM w WHERE date = 1943", -3.3836181728900003], [" SELECT COUNT(*) FROM w WHERE date = 1943\nQ2: {how many = a2} escorts have a speed of 30 knots.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE speed = '30 knots'\nQ3: {how many = a3} escorts have a displacement of 2200 tons.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE displacement = '2200 tons'\nQ4: {how many = a4} escorts have a displacement of 2200 tons and a speed of 30 knots.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE displacement = '2200 tons' AND speed = '30 knots'\nQ5: {how many = a5} escorts have a displacement of 2200 tons or a speed of 30 knots.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE displacement = '2200 tons' OR speed = '30 knots'\nQ6: {how many = a6} escorts have a displacement of 2200 tons and a speed of 30 knots and were in 1943.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE displacement = '2200", -35.09401026398901]]}, "953": {"question": "how many secretary of states were under prime minister macdonald?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -1.56024423716], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -1.5616949913250002], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -1.5616949913250002], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -1.5616949913250002], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -1.5616949913250002], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -1.56684375919], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -1.5671120325499999], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -3.2316667242600006], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'", -3.2316667242600006], [" SELECT COUNT(*) FROM w WHERE prime minister = 'macdonald'\n```", -16.194257160010004]]}, "994": {"question": "how many total television shows has gauri starred in?", "gold_answer": ["12"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": ["<error>"], "2": [[12]], "3": ["<error>"], "4": [[12]], "5": ["<error>"], "6": [[12]], "7": ["<error>"], "8": [[12]], "9": ["<error>"], "10": [[12]], "11": ["<error>"], "12": [[12]], "13": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.77917113048], [" SELECT COUNT(DISTINCT(show)) FROM w", -6.825084633329999], [" SELECT COUNT(DISTINCT show) FROM w", -9.796868699040001], [" SELECT COUNT(DISTINCT show) FROM w", -9.797394019950001], [" SELECT COUNT(DISTINCT show) FROM w", -10.061916199039999], [" SELECT COUNT(DISTINCT show) FROM w", -10.233929546950002], [" SELECT COUNT(DISTINCT show) FROM w", -10.402661946950001], [" SELECT COUNT(DISTINCT show) FROM w", -11.167803546950001], [" SELECT COUNT(DISTINCT show) FROM w", -11.20237011995], [" SELECT COUNT(DISTINCT show) FROM w\nQ2: {how many = a2} total television shows has gauri starred in.\nNeuralSQL2: SELECT COUNT(DISTINCT show) FROM w\nQ3: {how many = a3} total television shows has gauri starred in.\nNeuralSQL3: SELECT COUNT(DISTINCT show) FROM w\nQ4: {how many = a4} total television shows has gauri starred in.\nNeuralSQL4: SELECT COUNT(DISTINCT show) FROM w\nQ5: {how many = a5} total television shows has gauri starred in.\nNeuralSQL5: SELECT COUNT(DISTINCT show) FROM w\nQ6: {how many = a6} total television shows has gauri starred in.\nNeuralSQL6: SELECT COUNT(DISTINCT show) FROM w\nQ7: {how many = a7} total television shows has gauri starred in.\nNeuralSQL7: SELECT COUNT(DISTINCT show) FROM w\nQ8: {how many = a", -15.095815623671]]}, "1035": {"question": "after 8th position, how many points does a driver receive?", "gold_answer": ["0"], "pred_answer": {"0": [[null], [null], [null], [2], [2], [2], [0], [0], [null], [0]]}, "nsql": [[" SELECT SUM(points) FROM w WHERE pos > 8", -2.1532307310600003], [" SELECT SUM(points) FROM w WHERE pos > 8", -2.16428736256], [" SELECT SUM(points) FROM w WHERE pos > 8", -2.16428736256], [" SELECT COUNT(*) FROM w WHERE pos > 8", -3.07762447956], [" SELECT COUNT(*) FROM w WHERE pos > 8", -3.07762447956], [" SELECT COUNT(*) FROM w WHERE pos > 8", -3.07762447956], [" SELECT COUNT(*) FROM w WHERE pos > 8 AND points IS NOT NULL", -4.8660660492800005], [" SELECT COUNT(*) FROM w WHERE pos > 8 AND points IS NOT NULL", -4.8660660492800005], [" SELECT SUM(points) FROM w WHERE pos > 8", -6.11197611926], [" SELECT COUNT(*) FROM w WHERE pos > 8 AND points IS NOT NULL", -7.000387858859999]]}, "1076": {"question": "how many tours took place during january?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT tour) FROM w WHERE `date\\nstart` LIKE 'january%'", -4.6600030747179995], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE 'january%' OR `date\\nfinish` LIKE 'january%'", -6.12676821353], [" SELECT COUNT(DISTINCT tour) FROM w WHERE `date\\nstart` LIKE 'january%'", -6.3357686307179995], [" SELECT COUNT(DISTINCT tour) FROM w WHERE `date\\nstart` LIKE 'january%' OR `date\\nfinish` LIKE 'january%'", -6.381961357978], [" SELECT COUNT(DISTINCT tour) FROM w WHERE `date\\nstart` LIKE '%january%' OR `date\\nfinish` LIKE '%january%'", -7.187280776837999], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE 'january%'", -7.8588843193399995], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE 'january%'", -7.8588843193399995], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE 'january %'", -8.34785706287], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE 'january%'", -9.28116501511], [" SELECT COUNT(DISTINCT tour) FROM w WHERE (date\\nstart LIKE 'january%' OR date\\nfinish LIKE 'january%')", -9.903445590803003]]}, "1117": {"question": "how many games did zico end up scoring in during this season?", "gold_answer": ["7"], "pred_answer": {"0": ["<error>", "<error>", [7], [0], "<error>", "<error>", "<error>", [7], "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `brazil scorers` LIKE '%zico%'", -4.75747885437], [" SELECT COUNT(*) FROM w WHERE `brazil scorers` LIKE '%zico%'", -4.75747885437], [" SELECT COUNT(*) FROM w WHERE brazil scorers LIKE '%zico%'", -5.32613148142], [" SELECT COUNT(*) FROM w WHERE score LIKE '%zico%'", -5.682976287070001], [" SELECT COUNT(*) FROM w WHERE `brazil scorers` LIKE '%zico%'", -6.209437953800001], [" SELECT COUNT(*) FROM w WHERE `brazil scorers` LIKE '%zico%'", -6.209437953800001], [" SELECT COUNT(*) FROM w WHERE scorers LIKE '%zico%'", -6.403247393229999], [" SELECT COUNT(*) FROM w WHERE brazil scorers LIKE '%zico%'", -8.413590490819999], [" SELECT COUNT(*) FROM w WHERE `brazil scorers` LIKE '%zico%'", -8.5343371708], [" SELECT COUNT(*) FROM w WHERE `brazil scorers` LIKE '%zico%'", -9.1610903708]]}, "1120": {"question": "how many championships occurred in toronto or montreal?", "gold_answer": ["3"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE championship = 'toronto'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship = 'montreal'", -2.1350427695549996], [" SELECT COUNT(*) FROM w WHERE championship = 'toronto'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship = 'montreal'", -2.1350427695549996], [" SELECT COUNT(*) FROM w WHERE championship = 'toronto'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship = 'montreal'", -2.1350427695549996], [" SELECT COUNT(*) FROM w WHERE championship = 'toronto'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship = 'montreal'", -2.1350427695549996], [" SELECT COUNT(*) FROM w WHERE championship = 'toronto'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship = 'montreal'", -2.1350427695549996], [" SELECT COUNT(*) FROM w WHERE championship = 'toronto'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship = 'montreal'", -2.1350427695549996], [" SELECT COUNT(*) FROM w WHERE championship = 'toronto'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship = 'montreal'", -2.1350427695549996], [" SELECT COUNT(*) FROM w WHERE championship = 'toronto'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship = 'montreal'", -3.615259599555], [" SELECT COUNT(*) FROM w WHERE championship LIKE '%toronto%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship LIKE '%montreal%'", -7.385930630834], [" SELECT COUNT(*) FROM w WHERE championship LIKE '%toronto%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE championship LIKE '%montreal%'", -7.488808730834]]}, "1141": {"question": "at the 2006 gran premio telmex, how many drivers completed less than 60 laps?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -0.9109623894159999], [" SELECT COUNT(*) FROM w WHERE laps < 60", -3.511055063176]]}, "1158": {"question": "how many games had more than 1,500 in attendance?", "gold_answer": ["12"], "pred_answer": {"0": [[19], [19], [19], [19], [19], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance > 1500", -2.464978694176], [" SELECT COUNT(*) FROM w WHERE attendance > 1500", -2.464978694176], [" SELECT COUNT(*) FROM w WHERE attendance > 1500", -2.464978694176], [" SELECT COUNT(*) FROM w WHERE attendance > 1500", -2.464978694176], [" SELECT COUNT(*) FROM w WHERE attendance > 1500", -2.464978694176], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(attendance, 'n/a', '0') AS INT) > 1500", -5.3703706944060015], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(attendance, 'n/a', '0') AS INT) > 1500", -5.370636730916001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(attendance,'n/a','') AS INT) > 1500", -7.347835970586002], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(attendance,'n/a','') AS INT) > 1500", -8.531866967896], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(attendance,',','') AS INT) > 1500", -11.111982344846]]}, "1162": {"question": "what is the total of seats?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]], "1": ["<error>", "<error>"], "2": [[11], [5]], "3": ["<error>", "<error>"], "4": [[5], [4]], "5": ["<error>", "<error>"], "6": [[4], [3]], "7": ["<error>", "<error>"], "8": [[8], [5]], "9": ["<error>", "<error>"], "10": [[3], "<error>"], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT seat) FROM w", -1.5847871464999999], [" SELECT COUNT(DISTINCT seat) FROM w", -1.5847871464999999], [" SELECT COUNT(DISTINCT seat) FROM w", -1.5847871464999999], [" SELECT COUNT(DISTINCT seat) FROM w", -1.5847871464999999], [" SELECT COUNT(*) FROM w", -3.41322385863], [" SELECT COUNT(DISTINCT seat) FROM w", -4.199070729500001], [" SELECT COUNT(DISTINCT seat) FROM w", -4.199070729500001], [" SELECT COUNT(*) FROM w", -6.08534703589], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} lib seats.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'lib'\nQ3: {how many = a3} seats in nsw.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE state = 'nsw'\nQ4: {how many = a4} seats in nsw with majority larger than 0.5.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE state = 'nsw' AND majority > 0.5\nQ5: {how many = a5} seats with majority larger than 0.5.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE majority > 0.5\nQ6: {how many = a6} seats in nsw with majority larger than 0.5 and party is lib.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE state = 'nsw' AND majority > 0.5 AND party = 'lib'\nQ7: {how many = a7} seats with majority larger than 0.5 and party is lib.\nNe", -33.23818250225898], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} seats in nsw.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE state = 'nsw'\nQ3: {how many = a3} seats in nsw with a majority greater than 1.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE state = 'nsw' AND majority > 1\nQ4: {how many = a4} seats in nsw with a majority greater than 1 and a party of lib.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE state = 'nsw' AND majority > 1 AND party = 'lib'\nQ5: {how many = a5} seats in nsw with a majority greater than 1 or a party of lib.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE state = 'nsw' AND (majority > 1 OR party = 'lib')\nQ6: {how many = a6} seats in nsw with a majority greater than 1 and a party of lib or a party of nlp.\nNeuralSQL6: SELECT COUNT(*) FROM", -33.599749123492984]]}, "1199": {"question": "how many of the locomotives were built before 1940?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `year built` < 1940", -3.8928131224499998], [" SELECT COUNT(*) FROM w WHERE `year built` < 1940", -3.89325175245], [" SELECT COUNT(*) FROM w WHERE year built < 1940", -4.4809507556499995], [" SELECT COUNT(*) FROM w WHERE `year built` < 1940", -4.931563080349999], [" SELECT COUNT(*) FROM w WHERE `year built` < 1940", -4.93574590697], [" SELECT COUNT(*) FROM w WHERE `year built` < 1940", -4.93814530358], [" SELECT COUNT(*) FROM w WHERE `year built` < 1940", -4.93814530358], [" SELECT COUNT(*) FROM w WHERE `year built` < 1940", -7.39655170358], [" SELECT COUNT(*) FROM w WHERE year built < 1940", -8.44629493767], [" SELECT COUNT(*) FROM w WHERE year built < 1940", -12.51854325955]]}, "1203": {"question": "how many players are listed as df?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -3.4931756406800005], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -5.249106685759999], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -5.46180298576], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -6.08718968576], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -6.146054685759999], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -6.156723985759999], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -6.7078991857600005], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -7.45749592053], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -8.02911192053], [" SELECT COUNT(*) FROM w WHERE pos. = 'df'", -8.25792222053]]}, "1244": {"question": "what tv network showed the largest number of games during the 2010/2011 season?", "gold_answer": ["ESPN"], "pred_answer": {"0": [["espn"], ["espn"], ["espn", 3], ["espn"], [6], ["espn", 3], [3], [6], [3], [6]]}, "nsql": [[" SELECT tv FROM w GROUP BY tv ORDER BY COUNT(*) DESC LIMIT 1", -3.9874498599899995], [" SELECT tv FROM w GROUP BY tv ORDER BY COUNT(*) DESC LIMIT 1", -3.9874498599899995], [" SELECT tv, COUNT(*) FROM w GROUP BY tv ORDER BY COUNT(*) DESC LIMIT 1", -4.38055673169], [" SELECT tv FROM w GROUP BY tv ORDER BY COUNT(*) DESC LIMIT 1", -5.01818150999], [" SELECT COUNT(DISTINCT tv) FROM w", -5.804245626844001], [" SELECT tv, COUNT(*) FROM w GROUP BY tv ORDER BY COUNT(*) DESC LIMIT 1", -5.884650742569998], [" SELECT COUNT(*) FROM w WHERE tv = 'espn'", -8.3823526317], [" SELECT COUNT(DISTINCT tv) FROM w", -8.405292642284], [" SELECT COUNT(*) FROM w WHERE tv = 'espn'", -9.4343297317], [" SELECT COUNT(DISTINCT tv) FROM w", -10.042351532284]]}, "26": {"question": "how many players come from alabama?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [2], [2], [2], [3], [3], [3], [3], [2], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE hometown LIKE '%alabama%'", -3.1480164674570004], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al, u.s.%'", -3.6616404493199997], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al, u.s.%'", -3.6616404493199997], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al, u.s.%'", -3.6616404493199997], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al%'", -4.678461593319999], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al%'", -4.678461593319999], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al%'", -5.3023278988880005], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al%'", -5.640829798888], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al, u.s.%'", -5.9835582360199995], [" SELECT COUNT(*) FROM w WHERE hometown LIKE '%al%'", -7.091202998888001]]}, "67": {"question": "number of teams above 9 medals", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [4], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total > 9", -1.3191661373499999], [" SELECT COUNT(*) FROM w WHERE total > 9", -1.3191661373499999], [" SELECT COUNT(*) FROM w WHERE total > 9", -1.3191661373499999], [" SELECT COUNT(*) FROM w WHERE total > 9", -1.3191661373499999], [" SELECT COUNT(*) FROM w WHERE total > 9", -1.3191661373499999], [" SELECT COUNT(*) FROM w WHERE total > 9", -1.3191661373499999], [" SELECT COUNT(*) FROM w WHERE total > 9", -1.3191661373499999], [" SELECT COUNT(*) FROM w WHERE total > 9", -1.3191661373499999], [" SELECT COUNT(*) FROM w WHERE total >= 9", -3.04383071135], [" SELECT COUNT(*) FROM w WHERE total > 9\n```", -9.908474315649999]]}, "108": {"question": "in which city did the most operettas premiere?", "gold_answer": ["Vienna"], "pred_answer": {"0": [[25], [25], [25], [25], [25], [25], [1], [25], [25], [25]], "1": [[1], [1], [1], [1], [1], [1], [0], [1], [1], [1]], "2": [[1], [1], [1], [1], [1], [1], [0], [1], [1], [1]], "3": [[1], [1], [1], [1], [1], [0], [0], [1], [1], [1]], "4": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%new york city%'", -4.673095959358001], [" SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%new york city%'", -4.680040502701001], [" SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%new york city%'", -4.680040502701001], [" SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%new york city%'", -4.680042890601001], [" SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%new york city%'", -4.6861672382089985], [" SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE 'vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE 'budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE 'wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE 'new york city%'", -4.740447251477999], [" SELECT COUNT(*) FROM w WHERE `place, theatre` = 'vienna'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` = 'budapest'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` = 'wiesbaden'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` = 'new york city'", -5.007618472601999], [" SELECT COUNT(*) FROM w WHERE place, theatre LIKE '%vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place, theatre LIKE '%budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE place, theatre LIKE '%wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE place, theatre LIKE '%new york city%'", -5.7757125056089995], [" SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%new york city%'\n```", -6.4046504932650015], [" SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%vienna%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%budapest%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%wiesbaden%'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `place, theatre` LIKE '%new york city%'", -9.375877402838002]]}, "149": {"question": "any person can petition matters 2 and 17. true or false?", "gold_answer": ["true"], "pred_answer": {"0": [[3], [5], [2], [2], [1], [3], [3], [3], [3], [3]], "1": [[3], [4], [2], [0], [0], [3], [1], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%any person%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%any person%'", -5.519180105360001], [" SELECT COUNT(*) FROM w WHERE type = 'constitutionality of law'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type = 'constitutionality of draft law'", -5.823096977636], [" SELECT COUNT(DISTINCT matters) FROM w WHERE eligible petitioners = 'any person'\nNeuralSQL2: SELECT COUNT(DISTINCT matters) FROM w WHERE eligible petitioners = 'any person'", -6.638670891241], [" SELECT COUNT(*) FROM w WHERE eligible petitioners = 'any person'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eligible petitioners = 'any person' AND type = 'constitutionality of law'", -7.6308351453900025], [" SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%any person%' AND type = 'constitutionality of law'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%any person%' AND type = 'constitutionality of draft law'", -8.250356467700001], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%any person%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%any person%'", -9.879883459990003], [" SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%any person%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%any person%' AND matters LIKE '%any person%'", -10.481275108530003], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%any person%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%any person%' AND `eligible petitioners` LIKE '%ombudsmen%'", -18.659699408010002], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%any person%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%any person%' AND `eligible petitioners` LIKE '%at least 0.1%'", -18.78793172481], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%any person%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%any person%' AND `eligible petitioners` LIKE '%the prime minister%'", -19.39214070801]]}, "190": {"question": "other than audio, what type of payload types are there?", "gold_answer": ["video"], "pred_answer": {"0": [[4], "<error>", [4], [17], [17], [17], [17], [17], [17], [17]]}, "nsql": [[" SELECT COUNT(DISTINCT type) FROM w WHERE type != 'audio'", -3.5557638859700007], [" SELECT COUNT(DISTINCT(`payload type (pt)`)) FROM w WHERE type != 'audio'", -4.715916576770001], [" SELECT COUNT(DISTINCT type) FROM w WHERE type != 'audio'", -4.793037823970001], [" SELECT COUNT(*) FROM w WHERE type != 'audio'", -6.59792527692], [" SELECT COUNT(*) FROM w WHERE type != 'audio'", -6.59792527692], [" SELECT COUNT(*) FROM w WHERE type != 'audio'", -6.664165675194999], [" SELECT COUNT(*) FROM w WHERE type != 'audio'", -7.322820839619999], [" SELECT COUNT(*) FROM w WHERE type != 'audio'", -7.820566314920001], [" SELECT COUNT(*) FROM w WHERE type != 'audio'", -9.994774514920001], [" SELECT COUNT(*) FROM w WHERE type != 'audio'", -12.66840631492]]}, "231": {"question": "how many racers did not use an aprilia or a honda?", "gold_answer": ["9"], "pred_answer": {"0": [[21], [21], [21], [21], [21], [21], [21], [21], [21], [21]], "1": [[31], [31], [31], [31], [31], [31], [31], [31], [31], [31]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.218376974718], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999], [" SELECT COUNT(*) FROM w WHERE manufacturer != 'aprilia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE manufacturer != 'honda'", -1.2184270016179999]]}, "272": {"question": "how many products have been discontinued?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -1.39954477029], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -1.40689637337], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -1.40689637337], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -1.40689637337], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -1.40689637337], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -1.40689637337], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -1.40689637337], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -1.40689637337], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -2.7559299791700003], [" SELECT COUNT(*) FROM w WHERE availability = 'discontinued'", -2.76735313318]]}, "313": {"question": "what is the total number of districts created in the 1900's?", "gold_answer": ["32"], "pred_answer": {"0": [[32], [32], [32], [32], [32], [32], [32], [32], [0], [32]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `created` LIKE '19%-%-%'", -2.8934880672900003], [" SELECT COUNT(*) FROM w WHERE `created` LIKE '19%-%-%'", -2.8934880672900003], [" SELECT COUNT(*) FROM w WHERE `created` LIKE '19%-%-%'", -2.8934880672900003], [" SELECT COUNT(*) FROM w WHERE `created` LIKE '19%-%-%'", -2.8934880672900003], [" SELECT COUNT(*) FROM w WHERE `created` LIKE '19%-%-%'", -3.58093087729], [" SELECT COUNT(*) FROM w WHERE `created` LIKE '19%-%-%'", -3.58093087729], [" SELECT COUNT(*) FROM w WHERE `created` LIKE '19%-%-%'", -3.58093087729], [" SELECT COUNT(*) FROM w WHERE `created` LIKE '19%-%-%'", -3.58093087729], [" SELECT COUNT(*) FROM w WHERE `created` LIKE '190%-%-%'", -4.01618147689], [" SELECT COUNT(*) FROM w WHERE created LIKE '19%-%-%'", -5.04783977629]]}, "354": {"question": "tell me the total number of votes the female candidates got.", "gold_answer": ["52,277"], "pred_answer": {"0": [[52277], [52277], [52277], [52277], [52277], [52277], [52277], [52277], [52277], [52277]], "1": ["<error>"], "2": [[11]], "3": ["<error>"], "4": [[11465.545454545454]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[5]], "9": ["<error>"], "10": [[4]], "11": ["<error>"], "12": [[0]], "13": ["<error>"]}, "nsql": [[" SELECT SUM(votes) FROM w WHERE gender = 'f'", -3.82992286612], [" SELECT SUM(votes) FROM w WHERE gender = 'f'", -4.487045517823], [" SELECT SUM(votes) FROM w WHERE gender = 'f'", -4.758322633823], [" SELECT SUM(votes) FROM w WHERE gender = 'f'", -4.758322633823], [" SELECT SUM(votes) FROM w WHERE gender = 'f'", -7.729947187594], [" SELECT SUM(votes) FROM w WHERE gender = 'f'", -7.75408271747], [" SELECT SUM(votes) FROM w WHERE gender = 'f'", -7.959888763823001], [" SELECT SUM(votes) FROM w WHERE gender = 'f'", -8.297560763823], [" SELECT SUM(votes) FROM w WHERE gender = 'f'", -8.990608763823001], [" SELECT SUM(votes) FROM w WHERE gender = 'f'\nQ2: the number of candidates is {how many = a2}.\nNeuralSQL2: SELECT COUNT(DISTINCT candidate) FROM w\nQ3: the average votes of the candidates is {how many = a3}.\nNeuralSQL3: SELECT AVG(votes) FROM w\nQ4: the number of candidates with a rank of 1st is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE rank = '1st'\nQ5: the number of candidates with a rank of 2nd is {how many = a5}.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE rank = '2nd'\nQ6: the number of candidates with a rank of 3rd is {how many = a6}.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE rank = '3rd'\nQ7: the number of candidates with a rank of 4th is {how many = a7}.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE rank = '4th'\nQ8", -39.67728838457331]]}, "395": {"question": "how many locomotives were scrapped?", "gold_answer": ["3"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -2.014609627397], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -2.0154609128970002], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -2.0154609128970002], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -2.0154609128970002], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -2.0154609128970002], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -2.0154609128970002], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -3.3535414768970004], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -3.3535414768970004], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'", -4.8721428768970005], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%scrapped%'\nQ2: {how many = a2} locomotives were built in 1888.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1888'\nQ3: {how many = a3} locomotives were built by bagnall and were scrapped.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE builder = 'w.g. bagnall' AND notes LIKE '%scrapped%'\nQ4: {how many = a4} locomotives were built by bagnall and were scrapped and were built in 1888.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE builder = 'w.g. bagnall' AND date = '1888' AND notes LIKE '%scrapped%'\nQ5: {how many = a5} locomotives were built by bagnall and were scrapped and were built in 1888 and were scrapped in 1888.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE builder = 'w.g. bagnall' AND date = '", -41.90604654062799]]}, "436": {"question": "what is the total prize payout for all 13 series?", "gold_answer": ["5050000"], "pred_answer": {"0": [[5050000], [5050000], [5050000], [5050000], [5050000], [5050000], [5050000], [5050000], [5050000], [5050000]]}, "nsql": [[" SELECT SUM(`prize money\\nusd`) FROM w", -1.7398156565899998], [" SELECT SUM(`prize money\\nusd`) FROM w", -1.7404110902000003], [" SELECT SUM(`prize money\\nusd`) FROM w", -1.7404110902000003], [" SELECT SUM(`prize money\\nusd`) FROM w", -1.7404110902000003], [" SELECT SUM(`prize money\\nusd`) FROM w", -1.7404110902000003], [" SELECT SUM(`prize money\\nusd`) FROM w", -1.7404110902000003], [" SELECT SUM(`prize money\\nusd`) FROM w", -1.7404110902000003], [" SELECT SUM(`prize money\\nusd`) FROM w", -1.7404110902000003], [" SELECT SUM(`prize money\\nusd`) FROM w", -3.99418348646], [" SELECT SUM(prize money\\nusd) FROM w", -6.821954348579999]]}, "477": {"question": "which company had the most employees?", "gold_answer": ["PGE SA"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -4.366741794350001], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -4.366871827949999], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -6.919708494249999], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -6.92225436187], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -6.92885919015], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -6.92885919015], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -7.98809616407], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -10.536253140949999], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -10.84140089715], [" SELECT COUNT(*) FROM w WHERE employees = (SELECT MAX(employees) FROM w)", -11.907685364070002]]}, "480": {"question": "how many locations have no photograph?", "gold_answer": ["14"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], "<error>", "<error>", [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE maps = 'none'", -2.6154157884249996], [" SELECT COUNT(*) FROM w WHERE maps = 'none'", -2.6154157884249996], [" SELECT COUNT(*) FROM w WHERE maps = 'none'", -2.6154157884249996], [" SELECT COUNT(*) FROM w WHERE maps = 'none'", -2.6208265629249996], [" SELECT COUNT(*) FROM w WHERE maps = 'none'", -2.623272107425], [" SELECT COUNT(*) FROM w WHERE maps = 'none'", -2.623272107425], [" SELECT COUNT(*) FROM w WHERE maps = 'none'", -3.9467801294250004], [" SELECT COUNT(*) FROM w WHERE photograph = 'none'", -4.3429684734250005], [" SELECT COUNT(*) FROM w WHERE `photograph` = 'no'", -6.8826501197850005], [" SELECT COUNT(*) FROM w WHERE `maps` = 'none'", -7.526204601688999]]}, "501": {"question": "how many films does jennifer tilly do a voice over role in?", "gold_answer": ["5"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE role = 'voice over'", -2.5023456073670003], [" SELECT COUNT(*) FROM w WHERE role = 'voice over'", -2.5023456073670003], [" SELECT COUNT(*) FROM w WHERE role = 'voice over'", -2.5023456073670003], [" SELECT COUNT(*) FROM w WHERE role LIKE 'voice%'", -4.358506247367], [" SELECT COUNT(*) FROM w WHERE role LIKE '%voice%'", -11.007169129457003], [" SELECT COUNT(*) FROM w WHERE role LIKE '%voice over%'", -11.211842091093999], [" SELECT COUNT(*) FROM w WHERE role LIKE '%voice over%'", -12.700778191093999], [" SELECT COUNT(*) FROM w WHERE role = 'voice over role'", -12.782824499677002], [" SELECT COUNT(*) FROM w WHERE role LIKE '%voice%'", -13.408588440467], [" SELECT COUNT(*) FROM w WHERE role LIKE '%voice over%'", -13.721213791094]]}, "518": {"question": "what is the number of people in the liberal party?", "gold_answer": ["19"], "pred_answer": {"0": [[19], [19], [19], [19], [19], [19], [19], [19], [19], [19]], "1": ["<error>"], "2": [[13]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[2]], "9": ["<error>"], "10": [[2]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -3.4254310070850003], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -3.4254310070850003], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -3.4254310070850003], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -3.4254310070850003], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -3.4254310070850003], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -3.4254310070850003], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -3.4254310070850003], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -3.4270846791299996], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'", -4.25126723513], [" SELECT COUNT(*) FROM w WHERE party = 'liberal'\nQ2: there are {how many = a2} people in the labor party.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'labor'\nQ3: there are {how many = a3} people in the south central metropolitan province.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE province = 'south central metropolitan'\nQ4: there are {how many = a4} people in the north-east metropolitan province.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE province = 'north-east metropolitan'\nQ5: there are {how many = a5} people in the lower north province.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE province = 'lower north'\nQ6: there are {how many = a6} people in the metropolitan province.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE province = 'metropolitan'\nQ7: there are {how many = a7} people in the lower west province.\nNeuralSQL7: SELECT COUNT(*) FROM", -14.388571117282]]}, "522": {"question": "what is the number of districts with percentage decadal growth above 15%", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `percentage\\ndecadal\\ngrowth\\n2001-2011` > 15", -2.38992142326], [" SELECT COUNT(*) FROM w WHERE `percentage\\ndecadal\\ngrowth\\n2001-2011` > 15", -2.39103614626], [" SELECT COUNT(*) FROM w WHERE `percentage\\ndecadal\\ngrowth\\n2001-2011` > 15", -2.39345581817], [" SELECT COUNT(*) FROM w WHERE `percentage\\ndecadal\\ngrowth\\n2001-2011` > 15", -2.39345581817], [" SELECT COUNT(*) FROM w WHERE `percentage\\ndecadal\\ngrowth\\n2001-2011` > 15", -2.39345581817], [" SELECT COUNT(*) FROM w WHERE `percentage\\ndecadal\\ngrowth\\n2001-2011` > 15", -3.47012703017], [" SELECT COUNT(*) FROM w WHERE percentage\\ndecadal\\ngrowth\\n2001-2011 > 15.0", -8.01686170074], [" SELECT COUNT(*) FROM w WHERE `percentage\\ndecadal\\ngrowth\\n2001-2011` > 15.0", -11.490997556850003], [" SELECT COUNT(*) FROM w WHERE `percentage decadal growth 2001-2011` > 15.0", -12.08071926616], [" SELECT COUNT(*) FROM w WHERE `percentage decadal growth 2001-2011` > 15", -12.40074849523]]}, "559": {"question": "how many movies has he been from 1941-1949.", "gold_answer": ["23"], "pred_answer": {"0": [[23], [23], [23], [23], [23], [23], [23], [23], [23], [23]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year >= 1941 AND year <= 1949", -4.822502694754], [" SELECT COUNT(*) FROM w WHERE year >= 1941 AND year <= 1949", -6.64263450567], [" SELECT COUNT(*) FROM w WHERE year >= 1941 AND year <= 1949", -6.64263450567], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1941 AND 1949", -7.478993183038001], [" SELECT COUNT(*) FROM w WHERE year >= 1941 AND year <= 1949", -9.79480451567], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1941 AND 1949", -9.897921321538], [" SELECT COUNT(*) FROM w WHERE year >= 1941 AND year <= 1949", -10.013577026704], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1941 AND 1949", -10.716344221538], [" SELECT COUNT(*) FROM w WHERE year >= 1941 AND year <= 1949", -12.476107915670001], [" SELECT COUNT(*) FROM w WHERE year >= 1941 AND year <= 1949", -13.073267315670002]]}, "563": {"question": "what is the number of these stations broadcasting at a frequency of greater than 100 mhz?", "gold_answer": ["2"], "pred_answer": {"0": [[7], [2], [7], [2], [2], [7], [7], [2], [7], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE frequency > 100", -2.9822523318050003], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`frequency`,'mhz','') AS INT) > 100", -3.8659683204450004], [" SELECT COUNT(*) FROM w WHERE frequency > '100'", -4.1513559598050005], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 100", -4.597700328645001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 100", -4.597700328645001], [" SELECT COUNT(*) FROM w WHERE frequency > 100.0", -5.257389836805], [" SELECT COUNT(*) FROM w WHERE frequency > 100", -5.348932296805], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency, 'mhz', '') AS INT) > 100", -5.975172472645001], [" SELECT COUNT(*) FROM w WHERE frequency > 100", -6.068324096805], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(frequency,'mhz','') AS INT) > 100", -7.028006937644999]]}, "604": {"question": "oklahoma state and penn state both have how many cws appearances?", "gold_answer": ["2"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state' AND cws appearances LIKE '%last%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state' AND cws appearances LIKE '%last%'", -8.55007385852], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state' AND `cws appearances` LIKE '%(last:%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state' AND `cws appearances` LIKE '%(last:%'", -8.832916548262], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state' AND cws appearances != '0; (last: none)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state' AND cws appearances != '0; (last: none)'", -10.817595965594002], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state'", -11.74731660078], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state'", -14.139815400674001], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state' AND `cws appearances` LIKE '%last%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state' AND `cws appearances` LIKE '%last%'", -16.210329782889], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state' AND cws appearances LIKE '% (last: %)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state' AND cws appearances LIKE '% (last: %)'", -16.236970599734], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state' AND cws appearances LIKE '% (last: %)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state' AND cws appearances LIKE '% (last: %)'", -16.441993915734002], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state' AND cws appearances LIKE '%(last:%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state' AND cws appearances LIKE '%(last:%'", -18.477303599400994], [" SELECT COUNT(*) FROM w WHERE school = 'oklahoma state' AND `cws appearances` LIKE '%last%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school = 'penn state' AND `cws appearances` LIKE '%last%'", -19.138114007733]]}, "645": {"question": "how many times total did they finish first", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.27339678014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.27339678014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.27339678014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.27339678014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.27339678014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -7.32275775014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -7.32275775014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -8.81252525014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -10.02326465014], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -10.16627765014]]}, "686": {"question": "did 2010/11 or 2011/12 make more in grand total value?", "gold_answer": ["2011/12"], "pred_answer": {"0": [[16990.5], [120443.2], [120443.2], [120443.2], [120443.2], [120443.2], [120443.2], [16990.5], [16990.5], [120443.2]], "1": [[20351], [170519], [170519], [170519], [170519], [170519], [170519], [20351], [20351], [170519]], "2": ["<error>"]}, "nsql": [[" SELECT `2010/11` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - volume (thousand tons)'\nNeuralSQL2: SELECT `2011/12` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - volume (thousand tons)'", -3.7482346543900014], [" SELECT `2010/11` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'\nNeuralSQL2: SELECT `2011/12` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'", -3.7719896537399995], [" SELECT `2010/11` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'\nNeuralSQL2: SELECT `2011/12` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'", -3.8123867677699983], [" SELECT `2010/11` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'\nNeuralSQL2: SELECT `2011/12` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'", -3.8123867677699983], [" SELECT `2010/11` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'\nNeuralSQL2: SELECT `2011/12` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'", -3.8123867677699983], [" SELECT 2010/11 FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'\nNeuralSQL2: SELECT 2011/12 FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'", -3.9574730811399985], [" SELECT 2010/11 FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'\nNeuralSQL2: SELECT 2011/12 FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'", -3.9574730811399985], [" SELECT 2010/11 FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - volume (thousand tons)'\nNeuralSQL2: SELECT 2011/12 FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - volume (thousand tons)'", -7.360836569075], [" SELECT `2010/11` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - volume (thousand tons)'\nNeuralSQL2: SELECT `2011/12` FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - volume (thousand tons)'", -9.724433899064001], [" SELECT 2010/11 FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'\nNeuralSQL2: SELECT 2011/12 FROM w WHERE `ime exchange (including spot, credit and forward transactions)` = 'grand total - value (billion rials)'\n```", -14.48763384485]]}, "727": {"question": "how many flags other than france (the first flag) are represented?", "gold_answer": ["3"], "pred_answer": {"0": [[5], [5], [5], [5], "<error>", "<error>", "<error>", "<error>", [5], [3]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT(driver)) FROM w WHERE driver NOT LIKE '%france%'", -5.273650725202001], [" SELECT COUNT(DISTINCT(driver)) FROM w WHERE driver NOT LIKE '%france%'", -5.286064315149], [" SELECT COUNT(DISTINCT(driver)) FROM w WHERE driver NOT LIKE '%france%'", -5.286064315149], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver NOT LIKE '%france%'", -10.068463108732999], [" SELECT COUNT(DISTINCT(country)) FROM w WHERE country != 'france'", -12.780824390493], [" SELECT COUNT(DISTINCT(country)) FROM w WHERE country NOT IN ('france')", -13.619540870769], [" SELECT COUNT(DISTINCT(country)) FROM w WHERE country != 'france'", -14.307370950493], [" SELECT COUNT(DISTINCT country) FROM w WHERE country <> 'france'", -14.571588526823001], [" SELECT COUNT(DISTINCT SUBSTR(driver, INSTR(driver, ' ') + 1, LENGTH(driver) - (INSTR(driver, ' ') + 1))) FROM w WHERE SUBSTR(driver, INSTR(driver, ' ') + 1, LENGTH(driver) - (INSTR(driver, ' ') + 1)) != 'france'", -19.936859306681], [" SELECT COUNT(DISTINCT SUBSTR(driver, -2, 2)) FROM w WHERE SUBSTR(driver, -2, 2) != 'is'\nQ2: {how many = a2} drivers have the same name as their team.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '% %' AND SUBSTR(driver, INSTR(driver, ' ') + 1, LENGTH(driver) - (INSTR(driver, ' ') + 1)) = team\nQ3: {how many = a3} drivers have a name that begins with the same letter as their team.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver LIKE '% %' AND SUBSTR(driver, 1, 1) = SUBSTR(team, 1, 1)\nQ4: {how many = a4} drivers have a name that begins with the same letter as their team and their team name begins with a vowel.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE driver LIKE '% %' AND SUBSTR(driver, 1, 1) = SUBSTR(team, 1, 1", -64.54271578203401]]}, "768": {"question": "how mans years have ger nos below 900?", "gold_answer": ["2"], "pred_answer": {"0": [[4], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '%9%'", -9.54110456898], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '% - %' AND (CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900)", -11.481966683264998], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '% - %' AND (CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900 OR CAST(SUBSTR(ger nos., INSTR(ger nos., '-') + 1, LENGTH(ger nos.) - (INSTR(ger nos., ' - ') + 1)) AS INT) < 900)", -12.174375558276502], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '% - %' AND (CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900 OR CAST(SUBSTR(ger nos., INSTR(ger nos., '-') + 1, LENGTH(ger nos.) - (INSTR(ger nos., ' - ') + 1)) AS INT) < 900)", -12.180269887605004], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '% - %' AND (CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900 OR CAST(SUBSTR(ger nos., INSTR(ger nos., '-') + 1, LENGTH(ger nos.) - (INSTR(ger nos., ' - ') + 1)) AS INT) < 900)", -12.181313204536501], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '% - %' AND (CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900 OR CAST(SUBSTR(ger nos., INSTR(ger nos., '-') + 1, LENGTH(ger nos.) - (INSTR(ger nos., ' - ') + 1)) AS INT) < 900)", -12.213981610478001], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '%-%' AND CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900", -13.781031394470002], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '% - %' AND (CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900)\n```", -15.083763289064999], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '% - %' AND (CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900)\n```", -15.274552346444999], [" SELECT COUNT(DISTINCT year) FROM w WHERE ger nos. LIKE '% - %' AND (CAST(SUBSTR(ger nos., 1, INSTR(ger nos., '-') - 1) AS INT) < 900 AND CAST(SUBSTR(ger nos., INSTR(ger nos., '-') + 1, LENGTH(ger nos.) - (INSTR(ger nos., ' - ') + 1)) AS INT) < 900)", -15.837521901271996]]}, "809": {"question": "how many credits do you have to spend to get at least 2000 in payout if you had four aces?", "gold_answer": ["5 credits"], "pred_answer": {"0": [[1], [null], [0], [6000], [1600], [1], [1600], [6000], [1600], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE hand = '4 aces' AND `5 credits` = '2000'", -8.387661890992002], [" SELECT SUM(`4 credits`) FROM w WHERE hand = '4 aces' AND `4 credits` >= 2000", -9.131552421681999], [" SELECT SUM(CAST(SUBSTR(`4 credits`, 1, INSTR(`4 credits`, ' ') - 1) AS INT)) FROM w WHERE hand = '4 aces'", -11.247861831829999], [" SELECT SUM(DISTINCT(`1 credit`) + `2 credits` + `3 credits` + `4 credits` + `5 credits`) FROM w WHERE hand = '4 aces'", -13.163857841220002], [" SELECT SUM(CAST(REPLACE(`4 credits`, '*', '') AS INT)) FROM w WHERE hand = '4 aces'", -13.421291785424], [" SELECT COUNT(*) FROM w WHERE hand = '4 aces' AND `5 credits` >= 2000", -14.37742457067], [" SELECT MIN(CAST(REPLACE(`4 credits`,'*','') AS INT)) FROM w WHERE hand = '4 aces'", -14.502547605493998], [" SELECT SUM(DISTINCT(`1 credit`)) + SUM(DISTINCT(`2 credits`)) + SUM(DISTINCT(`3 credits`)) + SUM(DISTINCT(`4 credits`)) + SUM(DISTINCT(`5 credits`)) FROM w WHERE hand = '4 aces' AND `5 credits` >= 2000", -14.840175549203703], [" SELECT SUM(CAST(REPLACE(`4 credits`, '*', '') AS INT)) FROM w WHERE hand = '4 aces'", -14.875129020252], [" SELECT 5 FROM w WHERE hand = '4 aces'", -16.27621142682]]}, "850": {"question": "was chuck bednarik or frank tripucka the first draft pick?", "gold_answer": ["Chuck Bednarik"], "pred_answer": {"0": [[], [], [], [], [], [], [], [], [], []], "1": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.5974346067400003], [" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.5974346067400003], [" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.6056363777400002], [" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.62321932405], [" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.62321932405], [" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.62321932405], [" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.62321932405], [" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.62321932405], [" SELECT pick FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT pick FROM w WHERE player = 'frank tripucka'", -1.62321932405], [" SELECT `pick` FROM w WHERE player = 'chuck bednarik'\nNeuralSQL2: SELECT `pick` FROM w WHERE player = 'frank tripucka'", -7.59787626057]]}, "891": {"question": "what is the number of routes that intersect highway 91?", "gold_answer": ["9"], "pred_answer": {"0": [[6], [9], [9], [9], [9], [9], [6], [9], [9], [9]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `intersecting routes` LIKE 'route %'", -5.425986730580001], [" SELECT COUNT(DISTINCT `intersecting routes`) FROM w", -5.86370574129], [" SELECT COUNT(DISTINCT `intersecting routes`) FROM w", -5.8644120939], [" SELECT COUNT(DISTINCT `intersecting routes`) FROM w", -5.8644120939], [" SELECT COUNT(DISTINCT `intersecting routes`) FROM w", -5.8644120939], [" SELECT COUNT(DISTINCT `intersecting routes`) FROM w\n```", -5.964010169590001], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` LIKE 'route%'", -6.20484183988], [" SELECT COUNT(DISTINCT `intersecting routes`) FROM w", -8.7260446939], [" SELECT COUNT(*) FROM w WHERE `intersecting routes` IS NOT NULL", -9.30539287498], [" SELECT COUNT(*) FROM w", -11.292376440600002]]}, "932": {"question": "how many females live in cuttack?", "gold_answer": ["1,279,555"], "pred_answer": {"0": [[1279555], [1], [1], [1279555], [1279555], [1], [1], [1], [1], [1279555]]}, "nsql": [[" SELECT SUM(females) FROM w WHERE district = 'cuttack'", -3.71561982621], [" SELECT COUNT(*) FROM w WHERE district = 'cuttack'", -3.8591672628900002], [" SELECT COUNT(*) FROM w WHERE district = 'cuttack'", -3.8608623721599997], [" SELECT SUM(females) FROM w WHERE district = 'cuttack'", -4.2699300286], [" SELECT SUM(females) FROM w WHERE district = 'cuttack'", -4.27303481221], [" SELECT COUNT(females) FROM w WHERE district = 'cuttack'", -4.662685850279999], [" SELECT COUNT(*) FROM w WHERE headquarters = 'cuttack'", -4.835759862], [" SELECT COUNT(*) FROM w WHERE district = 'cuttack' AND females > 0", -6.8366055735], [" SELECT COUNT(*) FROM w WHERE district = 'cuttack' AND females > 0", -9.034560842700001], [" SELECT DISTINCT(females) FROM w WHERE district = 'cuttack'", -19.504651388530004]]}, "973": {"question": "how many competitions did he place in the top three?", "gold_answer": ["3"], "pred_answer": {"0": [[2], [0], [2], [3], [2], [2], [2], [2], [3], [2]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[2]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position LIKE '%rd%'", -5.817831846710001], [" SELECT COUNT(*) FROM w WHERE position LIKE '%-%' AND CAST(SUBSTR(position, 1, INSTR(position, '-') - 1) AS INT) <= 3", -8.88082930676], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd'", -10.932418492090001], [" SELECT COUNT(*) FROM w WHERE position LIKE '%st%' OR position LIKE '%nd%' OR position LIKE '%rd%'", -11.1160478407], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd'", -12.38662859209], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd'", -13.38749516209], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd%'", -13.79676415288], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd%'", -13.91794712449], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd%' OR position LIKE '%st%' OR position LIKE '%nd%'", -14.289305186210001], [" SELECT COUNT(*) FROM w WHERE position LIKE '%rd'\nQ2: {how many = a2} competitions did he place in the top three in 2001.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position LIKE '%rd' AND year = '2001'\nQ3: {how many = a3} competitions did he place in the top three in 2001 and 2002.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position LIKE '%rd' AND year IN ('2001', '2002')\nQ4: {how many = a4} competitions did he place in the top three in 2001 or 2002.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE position LIKE '%rd' AND year IN ('2001', '2002')\nQ5: {how many = a5} competitions did he place in the top three in 2001 or 2002 or 2003.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE position LIKE '%rd' AND year IN ('2001', '2002', '2003')\nQ6: {how many = a6} competitions did he place in the top three in 2001 or 2002", -32.81164130407998]]}, "1014": {"question": "what is the number of films directed by david s. ward?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17355010552], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17570809197], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17570809197], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17570809197], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17570809197], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17570809197], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17570809197], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17570809197], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -1.17570809197], [" SELECT COUNT(*) FROM w WHERE director = 'david s. ward'", -2.4165700489699997]]}, "1055": {"question": "how many german racers finished the race?", "gold_answer": ["4"], "pred_answer": {"0": [[32], [0], "<error>", [40], [35], [35], [35], "<error>", [40], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE pos NOT IN ('dns','ret')", -7.509347830795001], [" SELECT COUNT(*) FROM w WHERE rider LIKE '%german%' AND `time/retired` NOT LIKE '%accident%'", -8.592694160165], [" SELECT COUNT(*) FROM w WHERE time/retired NOT LIKE '%retired%' AND country = 'germany'", -10.095183436494997], [" SELECT COUNT(*) FROM w WHERE `time/retired` <> 'none' AND `time/retired` <> 'accident'", -10.829725740705001], [" SELECT COUNT(*) FROM w WHERE `time/retired` NOT LIKE '%ret%'", -13.787807081515002], [" SELECT COUNT(*) FROM w WHERE `time/retired` NOT LIKE '%ret%'", -14.138290981514999], [" SELECT COUNT(*) FROM w WHERE `time/retired` NOT LIKE '%ret%'", -14.280280981515], [" SELECT COUNT(*) FROM w WHERE country = 'germany' AND `time/retired` NOT LIKE '%retired%'", -16.280708043495], [" SELECT COUNT(*) FROM w WHERE `time/retired` NOT LIKE '%accident%' AND `time/retired` NOT LIKE '%none%'", -17.129670491955], [" SELECT COUNT(*) FROM w WHERE country = 'germany' AND `time/retired` NOT LIKE '%retired%'", -18.182452239424997]]}, "1096": {"question": "what's the total number of ties?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'd'", -3.3712694763199993], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -3.37214847642], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -6.51550675596], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -8.247781475959998], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -8.37635601392], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -8.570054750989998], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -10.82620819524], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -11.44034818893], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -11.78834959188], [" SELECT COUNT(*) FROM w WHERE result = 'd'", -12.28724757486]]}, "1137": {"question": "how many of the current state regents have a listed office title?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT office) FROM w WHERE office != 'none'", -8.338581510640001], [" SELECT COUNT(*) FROM w WHERE office != 'none'", -9.6893254993], [" SELECT COUNT(*) FROM w WHERE office != 'none'", -9.6893254993], [" SELECT COUNT(*) FROM w WHERE office != 'none'", -9.915742099300001], [" SELECT COUNT(*) FROM w WHERE office != 'none'", -9.915742099300001], [" SELECT COUNT(*) FROM w WHERE office != 'none'", -10.16548184818], [" SELECT COUNT(*) FROM w WHERE office != 'none'", -10.3294830673], [" SELECT COUNT(*) FROM w WHERE office != 'none'", -11.265244473299997], [" SELECT COUNT(*) FROM w WHERE office <> 'none'", -12.5126624782], [" SELECT COUNT(*) FROM w WHERE office != 'none'", -13.215180687300002]]}, "1140": {"question": "how many of the universities were located in california?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location LIKE '%california%'", -1.8045817292600002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%california%'", -1.8045817292600002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%california%'", -1.8045817292600002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%california%'", -1.8045817292600002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%california%'", -1.8045817292600002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%california%'", -1.8045817292600002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%california%'", -2.91470828417], [" SELECT COUNT(*) FROM w WHERE location LIKE '%california%'", -2.91470828417], [" SELECT COUNT(*) FROM w WHERE location LIKE '% california%'", -5.2047956073699995], [" SELECT COUNT(*) FROM w WHERE location LIKE '% california %'", -5.89121617037]]}, "1161": {"question": "which country had more stage-winners than any other country?", "gold_answer": ["Italy"], "pred_answer": {"0": [[2], [6], "<error>", [0], [2], [6], [0], [0], [20], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY winner ORDER BY COUNT(*) DESC LIMIT 1", -7.5531270286900005], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%(%' GROUP BY SUBSTR(winner, LENGTH(winner) - 3, 4) ORDER BY COUNT(*) DESC LIMIT 1", -12.8906554811], [" SELECT COUNT(*) FROM w GROUP BY winner HAVING COUNT(*) > (SELECT MAX(COUNT(*)) FROM w GROUP BY winner)", -13.35602479029], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%\u00a0(%' AND winner NOT LIKE '%(%'", -13.59746289022], [" SELECT COUNT(*) FROM w GROUP BY winner ORDER BY COUNT(*) DESC LIMIT 1", -13.93700298379], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%(%' AND SUBSTR(winner, INSTR(winner, '(') + 1, INSTR(winner, ')') - (INSTR(winner, '(') + 1)) = (SELECT SUBSTR(winner, INSTR(winner, '(') + 1, INSTR(winner, ')') - (INSTR(winner, '(') + 1)) FROM w GROUP BY SUBSTR(winner, INSTR(winner, '(') + 1, INSTR(winner, ')') - (INSTR(winner, '(') + 1)) ORDER BY COUNT(*) DESC LIMIT 1)", -15.561977120592012], [" SELECT COUNT(*) FROM w WHERE winner LIKE '% ( % )' AND SUBSTR(winner, INSTR(winner, '(') + 1, INSTR(winner, ')') - (INSTR(winner, '(') + 1)) = (SELECT SUBSTR(winner, INSTR(winner, '(') + 1, INSTR(winner, ')') - (INSTR(winner, '(') + 1)) FROM w GROUP BY SUBSTR(winner, INSTR(winner, '(') + 1, INSTR(winner, ')') - (INSTR(winner, '(') + 1)) ORDER BY COUNT(*) DESC LIMIT 1)", -18.197212658115703], [" SELECT COUNT(*) FROM w WHERE winner LIKE '% ( % )' AND SUBSTR(winner, LENGTH(winner) - 2, 3) = (SELECT SUBSTR(winner, LENGTH(winner) - 2, 3) FROM w GROUP BY SUBSTR(winner, LENGTH(winner) - 2, 3) ORDER BY COUNT(*) DESC LIMIT 1)", -18.720397294560012], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%(%' AND winner LIKE '%)' AND (SELECT COUNT(*) FROM w WHERE winner LIKE '%(%' AND winner LIKE '%)' AND winner LIKE '%(%' || SUBSTR(winner, INSTR(winner, '(') + 1, INSTR(winner, ')') - INSTR(winner, '(') - 1) || '%)') > (SELECT COUNT(*) FROM w WHERE winner LIKE '%(%' AND winner LIKE '%)' AND winner NOT LIKE '%(%' || SUBSTR(winner, INSTR(winner, '(') + 1, INSTR(winner, ')') - INSTR(winner, '(') - 1) || '%)')", -31.194582961223002], [" SELECT COUNT(*) FROM w WHERE winner LIKE '% ( % )' AND (SELECT COUNT(*) FROM w WHERE winner LIKE '% ( % )' GROUP BY SUBSTR(winner, INSTR(winner, ' ( ') + 2, INSTR(winner, ' ) ') - (INSTR(winner, ' ( ') + 2))) = (SELECT MAX(c) FROM (SELECT COUNT(*) AS c FROM w WHERE winner LIKE '% ( % )' GROUP BY SUBSTR(winner, INSTR(winner, ' ( ') + 2, INSTR(winner, ' ) ') - (INSTR(winner, ' ( ') + 2))) AS t)", -32.67890280557799]]}, "1178": {"question": "how many times has this athlete not finished in a competition?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notes = 'dnf'", -2.032674154134], [" SELECT COUNT(*) FROM w WHERE notes = 'dnf'", -2.032674154134], [" SELECT COUNT(*) FROM w WHERE notes = 'dnf'", -2.032674154134], [" SELECT COUNT(*) FROM w WHERE notes = 'dnf'", -2.032674154134], [" SELECT COUNT(*) FROM w WHERE notes = 'dnf'", -2.032674154134], [" SELECT COUNT(*) FROM w WHERE notes = 'dnf'", -2.032674154134], [" SELECT COUNT(*) FROM w WHERE position = '\u2013'", -2.763776051484], [" SELECT COUNT(*) FROM w WHERE position = '\u2013'", -2.763776051484], [" SELECT COUNT(*) FROM w WHERE position = '\u2013'", -2.763776051484], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%dnf%'", -6.534648596484001]]}, "1182": {"question": "which tour was the only one to take place in december?", "gold_answer": ["Super Series Masters Finals"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [0], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT tour) FROM w WHERE `date\\nstart` LIKE '%december%'", -5.391138423511001], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%december%'", -6.61432774857], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%december%'", -6.61432774857], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%december%'", -6.61432774857], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%december%'", -6.61432774857], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%-12-%'", -6.762773579079999], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%december%'", -7.06250364857], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%december%'", -7.40221904857], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '%december%'", -7.40221904857], [" SELECT COUNT(*) FROM w WHERE `date\\nstart` LIKE '% december'", -10.453618861569998]]}, "1219": {"question": "what is the total number of teams?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.62234874081], [" SELECT COUNT(*) FROM w", -1.62234874081], [" SELECT COUNT(*) FROM w", -1.62234874081], [" SELECT COUNT(*) FROM w", -1.62234874081], [" SELECT COUNT(DISTINCT team) FROM w", -3.9950869019699997], [" SELECT COUNT(DISTINCT team) FROM w", -7.582212980995], [" SELECT COUNT(DISTINCT team) FROM w", -8.152531649995], [" SELECT COUNT(DISTINCT team) FROM w", -9.021322841995], [" SELECT COUNT(DISTINCT(team)) FROM w", -9.06713371557], [" SELECT COUNT(DISTINCT team) FROM w", -9.503366152995]]}, "1223": {"question": "number of wins during stretch", "gold_answer": ["5"], "pred_answer": {"0": [[28], [28], [28], [28], [28], [28], [28], [0], [0], [28]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE win IS NOT NULL", -3.21252669542], [" SELECT COUNT(*) FROM w WHERE win IS NOT NULL", -3.21252669542], [" SELECT COUNT(*) FROM w WHERE win IS NOT NULL", -3.21252669542], [" SELECT COUNT(*) FROM w WHERE win IS NOT NULL", -3.21252669542], [" SELECT COUNT(*) FROM w WHERE win IS NOT NULL", -3.21252669542], [" SELECT COUNT(*) FROM w WHERE win IS NOT NULL", -3.21252669542], [" SELECT COUNT(*) FROM w WHERE win != 'nan'", -3.48917629842], [" SELECT COUNT(*) FROM w WHERE `date` >= 'august 5' AND `date` <= 'august 30'", -8.549108758420001], [" SELECT COUNT(*) FROM w WHERE `win` LIKE '% ( % - % )'", -9.261188686419999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%august%' AND `date` NOT LIKE '%august%august%' AND `date` NOT LIKE '%august%august%august%'", -17.701663135419995]]}, "1264": {"question": "were there more n31 or e34 ordered?", "gold_answer": ["E34"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [null], [null]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [null], [null]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE order = 'n31'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE order = 'e34'", -3.344022029105999], [" SELECT SUM(quantity) FROM w WHERE order = 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE order = 'e34'", -6.19949694716], [" SELECT SUM(quantity) FROM w WHERE order = 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE order = 'e34'", -6.19949694716], [" SELECT SUM(quantity) FROM w WHERE order = 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE order = 'e34'", -6.19949694716], [" SELECT SUM(quantity) FROM w WHERE order = 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE order = 'e34'", -6.21090914537], [" SELECT SUM(quantity) FROM w WHERE order = 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE order = 'e34'", -7.54685517537], [" SELECT SUM(quantity) FROM w WHERE order = 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE order = 'e34'", -7.54685517537], [" SELECT SUM(quantity) FROM w WHERE order = 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE order = 'e34'\n```", -9.50736927031], [" SELECT SUM(quantity) FROM w WHERE `ger nos.` = 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE `ger nos.` = 'e34'", -10.67730927802], [" SELECT SUM(quantity) FROM w WHERE `ger nos.` LIKE 'n31'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE `ger nos.` LIKE 'e34'", -17.652298366809998]]}, "5": {"question": "which year had the most titles released?", "gold_answer": ["2005"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE release = '2009'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = '2008'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = '2005'", -1.8777858341020006], [" SELECT COUNT(*) FROM w WHERE release = '2009'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = '2008'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = '2005'", -1.8777858341020006], [" SELECT COUNT(*) FROM w WHERE release = '2009'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = '2008'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = '2005'", -1.8814423208889997], [" SELECT COUNT(*) FROM w WHERE release = '2009'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = '2008'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = '2005'", -1.881451470156], [" SELECT COUNT(*) FROM w WHERE release = '2009'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = '2008'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = '2005'", -1.881451470156], [" SELECT COUNT(*) FROM w WHERE release = '2009'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = '2008'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = '2005'", -1.885363307265], [" SELECT COUNT(*) FROM w WHERE release = '2009'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = '2008'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = '2005'", -1.885363307265], [" SELECT COUNT(*) FROM w WHERE release = 2009\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = 2005", -9.439371805666], [" SELECT COUNT(*) FROM w WHERE release = 2009\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = 2005", -9.972314621044001], [" SELECT COUNT(*) FROM w WHERE release = 2009\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE release = 2008\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE release = 2005", -11.030238913907]]}, "46": {"question": "how many more general acute care hospitals are there in california than rehabilitation hospitals?", "gold_answer": ["33"], "pred_answer": {"0": [[34], [34], [34], [34], [34], [34], [34], [34], [34], [34]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type of hospital = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type of hospital = 'rehabilitation'", -2.457727102046], [" SELECT COUNT(*) FROM w WHERE type of hospital = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type of hospital = 'rehabilitation'", -2.457727102046], [" SELECT COUNT(*) FROM w WHERE type of hospital = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE type of hospital = 'rehabilitation'", -2.457727102046], [" SELECT COUNT(*) FROM w WHERE `type of hospital` = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type of hospital` = 'rehabilitation'", -5.0279592416400005], [" SELECT COUNT(*) FROM w WHERE `type of hospital` = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type of hospital` = 'rehabilitation'", -5.0279592416400005], [" SELECT COUNT(*) FROM w WHERE `type of hospital` = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type of hospital` = 'rehabilitation'", -5.0279592416400005], [" SELECT COUNT(*) FROM w WHERE `type of hospital` = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type of hospital` = 'rehabilitation'", -5.0279592416400005], [" SELECT COUNT(*) FROM w WHERE `type of hospital` = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type of hospital` = 'rehabilitation'", -5.0279592416400005], [" SELECT COUNT(*) FROM w WHERE `type of hospital` = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type of hospital` = 'rehabilitation'", -5.0279592416400005], [" SELECT COUNT(*) FROM w WHERE `type of hospital` = 'general acute care'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type of hospital` = 'rehabilitation'", -5.0279592416400005]]}, "87": {"question": "jimmy johnson won how many consecutive espy awards?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>", "<error>"], "2": [[17]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[4]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver = 'jimmie johnson'", -1.825088770744], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmie johnson'", -1.825088770744], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmie johnson'", -1.825088770744], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmie johnson'", -1.825088770744], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmy johnson'", -2.2008805836640004], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmy johnson'", -3.876329178664], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmy johnson'", -3.876329178664], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmie johnson'", -3.966679747244], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmy johnson'\n```", -14.717842352064], [" SELECT COUNT(*) FROM w WHERE driver = 'jimmie johnson'\nQ2: {how many = a2} espy awards were won by drivers from the united states.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation of citizenship = 'united states'\nQ3: {how many = a3} espy awards were won by drivers from the united kingdom.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nation of citizenship = 'united kingdom'\nQ4: {how many = a4} espy awards were won by drivers from germany.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE nation of citizenship = 'germany'\nQ5: {how many = a5} espy awards were won by drivers from germany and the united kingdom.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE nation of citizenship IN ('germany', 'united kingdom')\nQ6: {how many = a6} espy awards were won by drivers from germany or the united kingdom.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE nation of citizenship", -31.481773181963003]]}, "128": {"question": "how many different countries are listed?", "gold_answer": ["6"], "pred_answer": {"0": [[22], [22], "<error>", "<error>", "<error>", [22], [22], [22], [22], "<error>"], "1": ["<error>"], "2": [[22]], "3": ["<error>"], "4": ["<error>"], "5": ["<error>"], "6": ["<error>"], "7": ["<error>"], "8": ["<error>"], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT `company (country)`) FROM w", -3.233442887316999], [" SELECT COUNT(DISTINCT `company (country)`) FROM w", -3.233442887316999], [" SELECT COUNT(DISTINCT(company)) FROM w", -4.154493075817], [" SELECT COUNT(DISTINCT company) FROM w", -4.6026270738170005], [" SELECT COUNT(DISTINCT(company)) FROM w", -6.329525589516999], [" SELECT COUNT(DISTINCT(company (country))) FROM w", -6.512484898316999], [" SELECT COUNT(DISTINCT(company (country))) FROM w", -6.660766919347], [" SELECT COUNT(DISTINCT SUBSTR(`company (country)`, INSTR(`company (country)`, '(') + 1, LENGTH(`company (country)`) - (INSTR(`company (country)`, '(') + 1))) FROM w", -7.706255103587002], [" SELECT COUNT(DISTINCT(company (country))) FROM w", -7.870654420266998], [" SELECT COUNT(DISTINCT(company)) FROM w\nQ2: {how many = a2} companies are listed.\nNeuralSQL2: SELECT COUNT(*) FROM w\nQ3: {how many = a3} companies are from us.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE company LIKE '%(us)%'\nQ4: {how many = a4} companies are from us and have a rank larger than 10.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE company LIKE '%(us)%' AND 2011 rank > 10\nQ5: {how many = a5} companies are from us and have a rank larger than 10 and have a rank smaller than 20.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE company LIKE '%(us)%' AND 2011 rank > 10 AND 2011 rank < 20\nQ6: {how many = a6} companies are from us and have a rank larger than 10 and have a rank smaller than 20 and have a rank smaller than 15.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE company LIKE '%", -56.184971743343056]]}, "169": {"question": "how many provinces have pashto as one of their languages", "gold_answer": ["20"], "pred_answer": {"0": [[20], [20], [20], [20], [20], [20], [20], [20], [20], [20]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -1.8524666051999998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -1.8524666051999998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -1.8524666051999998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -1.8524666051999998], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -1.85882551853], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -1.8595264117699999], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -2.5955187981999996], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -2.5955187981999996], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'", -2.59557595457], [" SELECT COUNT(*) FROM w WHERE language LIKE '%pashto%'\n```", -15.882609897950001]]}, "210": {"question": "who is the only player to have denmark listed as their nationality?", "gold_answer": ["Jannik Hansen (RW)"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -3.330006579285], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -3.330006579285], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -5.344867105624999], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -5.642287064925], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -5.642287064925], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -6.029063832925001], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -6.029063832925001], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -6.620436418925001], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -7.9429862959249995], [" SELECT COUNT(*) FROM w WHERE nationality = 'denmark'", -9.738123996925]]}, "251": {"question": "how many games did the team win while not at home?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [0], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND site NOT LIKE '%autzen stadium%'", -4.489525654860001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND site NOT LIKE '%autzen stadium%'", -4.489525654860001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND site NOT LIKE '%autzen stadium%'", -4.507151550559999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND site NOT LIKE '%autzen stadium%'", -4.507151550559999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND site NOT LIKE '%autzen stadium%'", -4.507375020559999], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND site NOT LIKE '%autzen stadium%'", -5.320460583676999], [" SELECT COUNT(*) FROM w WHERE site NOT LIKE '%autzen stadium%' AND result LIKE 'w%'", -5.33930435136], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND site NOT LIKE '%autzen%'", -5.408162420012001], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%' AND site NOT LIKE '%autzen stadium%'", -5.75362068106], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND site NOT LIKE '%autzen stadium%'\n```", -13.53712128856]]}, "292": {"question": "how many are on the cbs network?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.5324937647600003], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.5324937647600003], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.53623161656], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.53623161656], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.53623161656], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.53623161656], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.53623161656], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -2.53623161656], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -3.1386572039399994], [" SELECT COUNT(*) FROM w WHERE network = 'cbs'", -3.1386572039399994]]}, "333": {"question": "how many cities are in the united states?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'united states'", -2.95555910831], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -2.95555910831], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -2.95555910831], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -2.95555910831], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -2.95555910831], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -2.95555910831], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -3.6185989005599994], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -3.6185989005599994], [" SELECT COUNT(DISTINCT metropolitan area) FROM w WHERE country = 'united states'", -6.0395856737699996], [" SELECT COUNT(*) FROM w WHERE country = 'united states'\nQ2: there are {how many = a2} cities in the united states with a rank less than 20.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states' AND rank < 20\nQ3: there are {how many = a3} cities in the united states with a rank less than 20 and a population larger than 5000000.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states' AND rank < 20 AND (official population > 5000000 OR official population = 'none')\nQ4: there are {how many = a4} cities in the united states with a rank less than 20 and a population larger than 5000000 and a population larger than 5000000.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE country = 'united states' AND rank < 20 AND (official population > 5000000 OR official population = 'none') AND (official population > 5000000 OR official population = 'none')\nQ5: there are {how many = a5} cities in the united states with a rank less than 20 and", -46.18360938417197]]}, "374": {"question": "how many episodes was charmaine sheh on in the variety show super trio 2: movie buff champions", "gold_answer": ["18"], "pred_answer": {"0": [[1], [1], [0], [1], [1], [0], [0], [0], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name of show = 'super trio series 2: movie buff championship' AND winner(s) LIKE '%charmaine sheh%'", -6.22235715233], [" SELECT COUNT(*) FROM w WHERE name of show = 'super trio series 2: movie buff championship' AND winner(s) LIKE '%charmaine sheh%'", -6.22235715233], [" SELECT COUNT(*) FROM w WHERE name of show = 'super trio series 2: movie buff championship' AND episodes LIKE '%charmaine sheh%'", -6.529719503905], [" SELECT COUNT(*) FROM w WHERE name of show = 'super trio 2: movie buff champions' AND winner(s) LIKE '%charmaine sheh%'", -6.66704266968], [" SELECT COUNT(*) FROM w WHERE name of show = 'super trio series 2: movie buff championship'", -7.0300513255000014], [" SELECT COUNT(*) FROM w WHERE name of show = 'super trio series 2: movie buff championship' AND other guests LIKE '%charmaine sheh%'", -8.467373772470001], [" SELECT COUNT(*) FROM w WHERE name of show = 'super trio 2: movie buff champions' AND episodes LIKE '%charmaine sheh%'", -8.992834433999999], [" SELECT COUNT(*) FROM w WHERE name of show = 'super trio 2: movie buff champions' AND episodes LIKE '%charmaine sheh%'", -10.405930436539998], [" SELECT COUNT(*) FROM w WHERE name of show = 'super trio 2: movie buff champions' AND episodes LIKE '%charmaine sheh%'", -10.98751134586], [" SELECT COUNT(DISTINCT episodes) FROM w WHERE name of show = 'super trio 2: movie buff champions' AND winner(s) LIKE '%charmaine sheh%'", -13.340525612106301]]}, "415": {"question": "in how many indy 500 races, has jones been flagged?", "gold_answer": ["1"], "pred_answer": {"0": [[0], [7], [1], [1], [1], [0], [1], [1], [1], [1]], "1": ["<error>"], "2": [[492]], "3": ["<error>"], "4": [[492]], "5": ["<error>"], "6": [[492]], "7": ["<error>"], "8": [[492]], "9": ["<error>"], "10": [[492]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w WHERE finish = 'flagged'", -6.692161943854001], [" SELECT COUNT(*) FROM w WHERE year != 'totals' AND finish != 'running'", -8.456501149700001], [" SELECT COUNT(*) FROM w WHERE retired = 'flagged'", -11.94328892925], [" SELECT COUNT(*) FROM w WHERE retired = 'flagged'", -12.89884308399], [" SELECT COUNT(*) FROM w WHERE `year` = '1967'", -14.451271055150002], [" SELECT COUNT(*) FROM w WHERE year LIKE '%-%'", -14.935256973729999], [" SELECT COUNT(*) FROM w WHERE `year` = '1967'", -15.976693955150001], [" SELECT COUNT(*) FROM w WHERE year LIKE '%5'", -16.48248494257], [" SELECT COUNT(*) FROM w WHERE year LIKE '%5'", -16.70336849788], [" SELECT COUNT(*) FROM w WHERE `year` = '1967'\nQ2: jones has led {how many = a2} laps in his career.\nNeuralSQL2: SELECT SUM(led) FROM w WHERE `year` = 'totals'\nQ3: jones has led {how many = a3} laps in his career.\nNeuralSQL3: SELECT SUM(led) FROM w WHERE `year` = 'totals'\nQ4: jones has led {how many = a4} laps in his career.\nNeuralSQL4: SELECT SUM(led) FROM w WHERE `year` = 'totals'\nQ5: jones has led {how many = a5} laps in his career.\nNeuralSQL5: SELECT SUM(led) FROM w WHERE `year` = 'totals'\nQ6: jones has led {how many = a6} laps in his career.\nNeuralSQL6: SELECT SUM(led) FROM w WHERE `year` = 'totals'\nQ7: jones has led {how many = a7} laps in his career", -32.307726768748005]]}, "456": {"question": "besides rihaae, in what other show did gauri tejwani cameo in 2005?", "gold_answer": ["Jassi Jaisi Koi Nahin"], "pred_answer": {"0": [[0], [4], [0], [4], [0], [0], [0], [0], [4], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT show) FROM w WHERE role = 'cameo'", -3.0666482695000004], [" SELECT COUNT(DISTINCT show) FROM w WHERE notes = 'cameo'", -3.7071144126299997], [" SELECT COUNT(*) FROM w WHERE role = 'cameo'", -4.9969765522100005], [" SELECT COUNT(*) FROM w WHERE notes = 'cameo'", -5.510597059120001], [" SELECT COUNT(*) FROM w WHERE role = 'cameo'", -6.58669684906], [" SELECT COUNT(*) FROM w WHERE role = 'cameo'", -8.82544985606], [" SELECT COUNT(*) FROM w WHERE role = 'cameo'", -8.93401015606], [" SELECT COUNT(*) FROM w WHERE role = 'cameo'", -9.075066556060001], [" SELECT COUNT(*) FROM w WHERE notes = 'cameo'", -10.56743219027], [" SELECT COUNT(*) FROM w WHERE notes = 'cameo'", -11.566484557559999]]}, "497": {"question": "which nationality has the most people associated with it?", "gold_answer": ["American"], "pred_answer": {"0": [["american", 25], ["american", 25], ["american", 25], ["american", 25], ["american", 25], ["american", 25], ["american", 25], ["american", 25], ["american", 25], ["american"]]}, "nsql": [[" SELECT nationality, COUNT(*) FROM w GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1", -3.6084030968770007], [" SELECT nationality, COUNT(*) FROM w GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1", -3.6084030968770007], [" SELECT nationality, COUNT(*) FROM w GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1", -3.6084030968770007], [" SELECT nationality, COUNT(*) FROM w GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1", -3.6084030968770007], [" SELECT nationality, COUNT(*) FROM w GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1", -3.6084030968770007], [" SELECT nationality, COUNT(DISTINCT name) FROM w GROUP BY nationality ORDER BY COUNT(DISTINCT name) DESC LIMIT 1", -4.719251062095], [" SELECT nationality, COUNT(*) AS num FROM w GROUP BY nationality ORDER BY num DESC LIMIT 1", -7.294026681470001], [" SELECT nationality, COUNT(*) FROM w GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1", -7.63776318152], [" SELECT nationality, COUNT(*) as c FROM w GROUP BY nationality ORDER BY c DESC LIMIT 1", -9.653750641130001], [" SELECT nationality FROM w GROUP BY nationality HAVING COUNT(DISTINCT name) = (SELECT COUNT(DISTINCT name) FROM w GROUP BY nationality ORDER BY COUNT(DISTINCT name) DESC LIMIT 1)", -11.194636053153499]]}, "500": {"question": "what is the total number of members whose term expires in 1989?", "gold_answer": ["9"], "pred_answer": {"0": [[18], [18], [18], [18], [18], [18], [18], [18], [18], [18]], "1": ["<error>"], "2": [[9]], "3": ["<error>"], "4": [[7]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `term expires` = '1989'", -2.7516811146499998], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989", -3.58369921529], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989", -3.8136840915449994], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989", -3.8136840915449994], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989", -3.8136840915449994], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989", -3.8136840915449994], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989", -3.8136840915449994], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989", -3.8136840915449994], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989", -4.438022196045], [" SELECT COUNT(*) FROM w WHERE `term expires` = 1989\nQ2: there are {how many = a2} members whose term expires in 1989 and their party is liberal.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `term expires` = 1989 AND party = 'liberal'\nQ3: there are {how many = a3} members whose term expires in 1989 and their party is labor.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `term expires` = 1989 AND party = 'labor'\nQ4: there are {how many = a4} members whose term expires in 1989 and their province is lower west.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `term expires` = 1989 AND province = 'lower west'\nQ5: there are {how many = a5} members whose term expires in 1989 and their province is lower central.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `term expires` = 1989 AND province = 'lower central'\nQ6: there are {how many = a6} members whose term expires in 1989 and their province is west.\n", -26.72833583782701]]}, "521": {"question": "number of super chinese world games released", "gold_answer": ["3"], "pred_answer": {"0": [[12], [12], [12], [0], [12], [12], [12], [12], [12], [3]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE japanese title LIKE '%super chinese%'", -6.0630837367899995], [" SELECT COUNT(*) FROM w WHERE japanese title LIKE '%super chinese%'", -6.0650516332299995], [" SELECT COUNT(*) FROM w WHERE japanese title LIKE 'super chinese%'", -6.16076841249], [" SELECT COUNT(DISTINCT(western title)) FROM w WHERE western title LIKE 'super chinese%'", -7.5291276389115005], [" SELECT COUNT(DISTINCT(japanese title)) FROM w WHERE japanese title LIKE '%super chinese%'", -8.034260404441502], [" SELECT COUNT(*) FROM w WHERE `japanese title` LIKE '%super chinese%'", -10.684610548714002], [" SELECT COUNT(*) FROM w WHERE japanese title LIKE '%super chinese%'", -12.055554616159998], [" SELECT COUNT(*) FROM w WHERE japanese title LIKE '%super chinese%'", -12.6309889792], [" SELECT COUNT(*) FROM w WHERE japanese title LIKE '%super chinese%'", -12.81691887324], [" SELECT COUNT(*) FROM w WHERE japanese title LIKE 'super chinese world%'\nQ2: {how many = a2} super chinese world games released in 1991.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE japanese title LIKE 'super chinese world%' AND release = 1991\nQ3: {how many = a3} super chinese world games released in 1991 on the arcade platform.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE japanese title LIKE 'super chinese world%' AND release = 1991 AND `platform(s)` = 'arcade'\nQ4: {how many = a4} super chinese world games released in 1991 on the arcade platform and is a role-playing game.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE japanese title LIKE 'super chinese world%' AND release = 1991 AND `platform(s)` = 'arcade' AND genre = 'role-playing'\nQ5: {how many = a5} super chinese world games released in 1991 on the arcade platform and is a role-playing game and is", -43.766168949203006]]}, "538": {"question": "how many times has anthony browne won an kurt maschler award for illustration?", "gold_answer": ["3"], "pred_answer": {"0": [[2], [1], [1], [1], [1], [2], [2], [1], [1], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE author = 'anthony browne'", -2.1888528110939998], [" SELECT COUNT(*) FROM w WHERE illustrator = 'anthony browne'", -2.230085312664], [" SELECT COUNT(*) FROM w WHERE illustrator = 'anthony browne'", -2.230085312664], [" SELECT COUNT(*) FROM w WHERE illustrator = 'anthony browne'", -4.257392379664], [" SELECT COUNT(*) FROM w WHERE illustrator = 'anthony browne'", -4.257392379664], [" SELECT COUNT(*) FROM w WHERE author = 'anthony browne'", -4.376766434664], [" SELECT COUNT(*) FROM w WHERE author = 'anthony browne'", -4.376766434664], [" SELECT COUNT(*) FROM w WHERE illustrator = 'anthony browne'", -4.677873179664], [" SELECT COUNT(*) FROM w WHERE illustrator = 'anthony browne'", -4.677873179664], [" SELECT COUNT(DISTINCT year) FROM w WHERE illustrator = 'browne'", -13.296967375494003]]}, "542": {"question": "how many portions are lo?cated in netanya", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location LIKE '%netanya%'", -2.431428868225], [" SELECT COUNT(*) FROM w WHERE location LIKE '%netanya%'", -2.431428868225], [" SELECT COUNT(*) FROM w WHERE location LIKE '%netanya%'", -2.431428868225], [" SELECT COUNT(*) FROM w WHERE location LIKE '%netanya%'", -4.418602632930001], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -5.07490461463], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -5.07490461463], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -5.07490461463], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -5.07490461463], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -5.07490461463], [" SELECT COUNT(*) FROM w WHERE location = 'netanya'", -6.397283514630001]]}, "579": {"question": "how many more total appearances did shigeo yaegashi have than mitsuo kamata?", "gold_answer": ["5"], "pred_answer": {"0": [["45(11)"], ["45(11)"], ["45(11)"], ["45(11)"], ["45(11)"], ["45(11)"], ["45(11)"], ["45(11)"], [4511], [4511]], "1": [["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], ["40(2)"], [402], [402]], "2": ["<error>"]}, "nsql": [[" SELECT `total` FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT `total` FROM w WHERE player = 'mitsuo kamata'", -3.0434694068900012], [" SELECT `total` FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT `total` FROM w WHERE player = 'mitsuo kamata'", -3.04635810809], [" SELECT `total` FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT `total` FROM w WHERE player = 'mitsuo kamata'", -3.0469370539000002], [" SELECT total FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT total FROM w WHERE player = 'mitsuo kamata'", -9.24734018211], [" SELECT total FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT total FROM w WHERE player = 'mitsuo kamata'", -9.25164847563], [" SELECT total FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT total FROM w WHERE player = 'mitsuo kamata'", -9.81153217308], [" SELECT total FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT total FROM w WHERE player = 'mitsuo kamata'", -11.067304825110002], [" SELECT total FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT total FROM w WHERE player = 'mitsuo kamata'\n```", -12.229636114939998], [" SELECT SUM(CAST(REPLACE(total,'(','') AS INT)) FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(total,'(','') AS INT)) FROM w WHERE player = 'mitsuo kamata'", -14.168540812090002], [" SELECT SUM(CAST(REPLACE(total, '(', '') AS INT)) FROM w WHERE player = 'shigeo yaegashi'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(total, '(', '') AS INT)) FROM w WHERE player = 'mitsuo kamata'", -14.970385128506003]]}, "583": {"question": "what is the difference between the total amount of medals won by qatar and indonesia?", "gold_answer": ["1"], "pred_answer": {"0": [[null], [null], [null], [null], [null], [5], [5], [5], [null], []], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'qatar'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'indonesia'", -3.217240908252], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'qatar'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'indonesia'", -3.217240908252], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'qatar'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'indonesia'", -3.217240908252], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'qatar'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'indonesia'", -3.224804750434], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'qatar'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'indonesia'", -3.41772273554], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'qatar\u00a0(qat)'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'indonesia\u00a0(ina)'", -4.775118808522], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'qatar\u00a0(qat)'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'indonesia\u00a0(ina)'", -5.086476988269998], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'qatar\u00a0(qat)'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'indonesia\u00a0(ina)'", -6.425857160987], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'qatar'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'indonesia'", -7.379596397345], [" SELECT gold + silver + bronze FROM w WHERE nation = 'qatar'\nNeuralSQL2: SELECT gold + silver + bronze FROM w WHERE nation = 'indonesia'", -12.88051724273]]}, "624": {"question": "how many total years did golding compete?", "gold_answer": ["3"], "pred_answer": {"0": [[7], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w", -4.0554080012460005], [" SELECT COUNT(DISTINCT year) FROM w", -8.898277405472001], [" SELECT COUNT(DISTINCT year) FROM w", -8.898277405472001], [" SELECT COUNT(DISTINCT year) FROM w", -8.898277405472001], [" SELECT COUNT(DISTINCT year) FROM w", -9.606907755472001], [" SELECT COUNT(DISTINCT year) FROM w", -9.858002625472], [" SELECT COUNT(DISTINCT year) FROM w", -10.79148237175], [" SELECT COUNT(DISTINCT year) FROM w", -10.975096140472], [" SELECT COUNT(DISTINCT year) FROM w", -11.41234796485], [" SELECT COUNT(DISTINCT year) FROM w", -11.699195306794]]}, "665": {"question": "how many locomotives were built before the 1900s?", "gold_answer": ["5"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date < 1900", -1.40264245209], [" SELECT COUNT(*) FROM w WHERE date < 1900", -1.40264245209], [" SELECT COUNT(*) FROM w WHERE date < 1900", -1.40264245209], [" SELECT COUNT(*) FROM w WHERE date < 1900", -1.40264245209], [" SELECT COUNT(*) FROM w WHERE date < 1900", -1.40264245209], [" SELECT COUNT(*) FROM w WHERE date < 1900", -1.40264245209], [" SELECT COUNT(*) FROM w WHERE date < 1900", -1.40264245209], [" SELECT COUNT(*) FROM w WHERE date < 1900", -3.9395115666900002], [" SELECT COUNT(*) FROM w WHERE date < 1900", -3.93968429779], [" SELECT COUNT(*) FROM w WHERE date < 1900\nQ2: {how many = a2} locomotives were built by manning wardle.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'manning wardle'\nQ3: {how many = a3} locomotives were built by manning wardle before the 1900s.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE builder = 'manning wardle' AND date < 1900\nQ4: {how many = a4} locomotives were built by manning wardle before the 1900s and have a works number.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE builder = 'manning wardle' AND date < 1900 AND works number IS NOT NULL\nQ5: {how many = a5} locomotives were built by manning wardle before the 1900s and have a works number and are not scrapped.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE builder = 'manning wardle' AND date < 1900 AND works number IS NOT NULL AND notes NOT LIKE '%scrapped%'", -36.74392722735099]]}, "706": {"question": "is german above or below russia in the number of people who speak that language?", "gold_answer": ["below"], "pred_answer": {"0": [[77160], [77160], [77160], [77160], [77160], [77160], [77160], [77160], [77160], [77160]], "1": [[87850], [87850], [87850], [87850], [87850], [87850], [87850], [87850], [87850], [87850]]}, "nsql": [[" SELECT `number` FROM w WHERE language = 'german'\nNeuralSQL2: SELECT `number` FROM w WHERE language = 'russian'", -2.7183479115899996], [" SELECT `number` FROM w WHERE language = 'german'\nNeuralSQL2: SELECT `number` FROM w WHERE language = 'russian'", -2.7183479115899996], [" SELECT `number` FROM w WHERE language = 'german'\nNeuralSQL2: SELECT `number` FROM w WHERE language = 'russian'", -2.7183479115899996], [" SELECT `number` FROM w WHERE language = 'german'\nNeuralSQL2: SELECT `number` FROM w WHERE language = 'russian'", -2.7208137606399996], [" SELECT `number` FROM w WHERE language = 'german'\nNeuralSQL2: SELECT `number` FROM w WHERE language = 'russian'", -2.72253923459], [" SELECT `number` FROM w WHERE language = 'german'\nNeuralSQL2: SELECT `number` FROM w WHERE language = 'russia'", -3.60847219991], [" SELECT SUM(number) FROM w WHERE language = 'german'\nNeuralSQL2: SELECT SUM(number) FROM w WHERE language = 'russian'", -4.3404402513700004], [" SELECT number FROM w WHERE language = 'german'\nNeuralSQL2: SELECT number FROM w WHERE language = 'russian'", -7.363767947379999], [" SELECT number FROM w WHERE language = 'german'\nNeuralSQL2: SELECT number FROM w WHERE language = 'russia'", -11.409529411389999], [" SELECT number FROM w WHERE language = 'german'\nNeuralSQL2: SELECT number FROM w WHERE language = 'russian'", -11.93273368987]]}, "747": {"question": "only team to have more than 30 medals", "gold_answer": ["Cuba"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -1.11330035186], [" SELECT COUNT(*) FROM w WHERE total > 30", -13.08169308334]]}, "788": {"question": "what is the total number of locations in the city of algonac?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -1.640230095654], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -1.640230095654], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -1.6431319394039998], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -1.6431319394039998], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -1.6431319394039998], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -1.6431319394039998], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -1.6431319394039998], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -1.6431319394039998], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -3.3721676878299998], [" SELECT COUNT(*) FROM w WHERE city = 'algonac'", -3.37491630315]]}, "829": {"question": "how many affiliates does galavision have?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE network name = 'galavision'", -3.30042549773], [" SELECT COUNT(*) FROM w WHERE network name = 'galavision'", -3.30042549773], [" SELECT COUNT(*) FROM w WHERE network name = 'galavision'", -3.30042549773], [" SELECT COUNT(*) FROM w WHERE network name = 'galavision'", -3.30042549773], [" SELECT COUNT(*) FROM w WHERE `network name` = 'galavision'", -3.398992971530001], [" SELECT COUNT(*) FROM w WHERE `network name` = 'galavision'", -3.398992971530001], [" SELECT COUNT(*) FROM w WHERE network name = 'galavision'", -5.62589419873], [" SELECT COUNT(*) FROM w WHERE network name = 'galavision'", -5.62589419873], [" SELECT affiliates FROM w WHERE network name = 'galavision'", -5.63039719288], [" SELECT COUNT(*) FROM w WHERE `network name` = 'galavision'\nQ2: there are {how many = a2} stations with a programming type of news.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `programming type` = 'news'\nQ3: {how many = a3} stations have a programming type of news or sports.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `programming type` = 'news' OR `programming type` = 'sports'", -32.09288041854201]]}, "870": {"question": "how many silver medals did turkey win?", "gold_answer": ["0"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -1.1604157686], [" SELECT silver FROM w WHERE nation = 'turkey'", -10.91476673134]]}, "911": {"question": "what are the total number of pillow pals on this chart?", "gold_answer": ["30"], "pred_answer": {"0": [[30], [30], [30], [30], [30], [30], [30], [30], [30], [30]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.28774603144], [" SELECT COUNT(*) FROM w", -1.28774603144], [" SELECT COUNT(*) FROM w", -1.28774603144], [" SELECT COUNT(*) FROM w", -1.28774603144], [" SELECT COUNT(*) FROM w", -1.28774603144], [" SELECT COUNT(*) FROM w", -1.28774603144], [" SELECT COUNT(*) FROM w", -1.28774603144], [" SELECT COUNT(*) FROM w", -2.89043606152], [" SELECT COUNT(*) FROM w", -2.89043606152], [" SELECT COUNT(*) FROM w\n```", -3.64438194492]]}, "952": {"question": "how many race car drivers out of the 43 listed drove toyotas?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -3.859274837498], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -3.859274837498], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -3.859274837498], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -3.9756345374979993], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -3.9756345374979993], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -3.9756345374979993], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -3.9756345374979993], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -3.9756345374979993], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -4.983127337498], [" SELECT COUNT(*) FROM w WHERE make = 'toyota'", -5.242766750818]]}, "993": {"question": "who was the only person elected in 1871?", "gold_answer": ["John T. Jordan"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [0], [1]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"], "10": [[1]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871-%-%'", -3.85836760572], [" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871-%-%'", -3.85836760572], [" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871-%-%'", -3.85836760572], [" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871-%-%'", -3.85836760572], [" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871-%-%'", -3.85836760572], [" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871%'", -5.22481851078], [" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871%'", -5.22481851078], [" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871-%-%'", -5.8925194659999995], [" SELECT COUNT(*) FROM w WHERE elected = '1871'", -9.1266755387], [" SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1871%'\nQ2: {how many = a2} was the only person elected in 1872.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1872%'\nQ3: {how many = a3} was the only person elected in 1873.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1873%'\nQ4: {how many = a4} was the only person elected in 1874.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1874%'\nQ5: {how many = a5} was the only person elected in 1875.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1875%'\nQ6: {how many = a6} was the only person elected in 1876.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE elected LIKE 'elected 1876%'\nQ7: {how many = a7} was the only person elected in 1877.\nNeural", -15.559505494505196]]}, "1034": {"question": "how many networks show soap operas?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT network name) FROM w WHERE programming type LIKE '%soap operas%'", -3.3049452088733], [" SELECT COUNT(DISTINCT network name) FROM w WHERE programming type LIKE '%soap operas%'", -3.3049452088733], [" SELECT COUNT(DISTINCT network name) FROM w WHERE programming type LIKE '%soap operas%'", -3.3049452088733], [" SELECT COUNT(DISTINCT network name) FROM w WHERE programming type LIKE '%soap operas%'", -3.3049452088733], [" SELECT COUNT(*) FROM w WHERE `programming type` LIKE '%soap operas%'", -5.87803188869], [" SELECT COUNT(*) FROM w WHERE `programming type` LIKE '%soap operas%'", -5.87803188869], [" SELECT COUNT(*) FROM w WHERE `programming type` LIKE '%soap operas%'", -5.87803188869], [" SELECT COUNT(*) FROM w WHERE programming type LIKE '%soap operas%'", -5.977939727764], [" SELECT COUNT(*) FROM w WHERE `programming type` LIKE '%soap operas%'", -6.62437558869], [" SELECT COUNT(DISTINCT network name) FROM w WHERE `programming type` LIKE '%soap operas%'", -12.861175344293303]]}, "1075": {"question": "how many ranked swimmers were from the united states?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank IS NOT NULL", -3.71858995902], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank IS NOT NULL", -3.71858995902], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank IS NOT NULL", -3.71858995902], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank IS NOT NULL", -3.71858995902], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL AND nationality = 'united states'", -3.8598189117199997], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank NOT NULL", -6.39735626482], [" SELECT COUNT(*) FROM w WHERE rank IS NOT NULL AND nationality = 'united states'", -8.115201607809997], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank != 'nan'", -11.65397562615], [" SELECT COUNT(*) FROM w WHERE rank != 'nan' AND nationality = 'united states'", -11.842877084454999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND rank IS NOT NULL", -12.73552884889]]}, "1116": {"question": "how many ships were built after ardent?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [2], "<error>", [1], [2], [1]], "1": ["<error>", "<error>", "<error>", "<error>"], "2": ["<error>", [7], [4], [7]], "3": ["<error>", "<error>", "<error>", "<error>"], "4": ["<error>", [5], [4], [0]], "5": ["<error>", "<error>", "<error>", "<error>"], "6": ["<error>", [0], [4], [3]], "7": ["<error>", "<error>", "<error>", "<error>"], "8": ["<error>", "<error>", "<error>", "<error>"], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `laid down` > (SELECT `laid down` FROM w WHERE name = 'ardent')", -4.810995696769999], [" SELECT COUNT(*) FROM w WHERE `laid down` > (SELECT `laid down` FROM w WHERE name = 'ardent')", -4.84521754779], [" SELECT COUNT(*) FROM w WHERE laid down > (SELECT laid down FROM w WHERE name = 'ardent')", -4.960503999700001], [" SELECT COUNT(*) FROM w WHERE `commissioned` > (SELECT `commissioned` FROM w WHERE name = 'ardent')", -5.64439756445], [" SELECT COUNT(*) FROM w WHERE `laid down` > (SELECT `laid down` FROM w WHERE pennant = 'f184')", -6.12191732742], [" SELECT COUNT(*) FROM w WHERE `laid down` > '1974-02-26'", -8.604392110459997], [" SELECT COUNT(*) FROM w WHERE laid_down > (SELECT laid_down FROM w WHERE name = 'ardent')\nQ2: {how many = a2} ships were built before ardent.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laid_down < (SELECT laid_down FROM w WHERE name = 'ardent')\nQ3: {how many = a3} ships were built after active.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE laid_down > (SELECT laid_down FROM w WHERE name = 'active')\nQ4: {how many = a4} ships were built before active.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE laid_down < (SELECT laid_down FROM w WHERE name = 'active')\nQ5: {how many = a5} ships were built after alacrity.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE laid_down > (SELECT laid_down FROM w WHERE name = 'alacrity')\nQ6: {how many = a6} ships were built before alacrity.\nNeuralSQL6: SELECT", -20.121472365878997], [" SELECT COUNT(*) FROM w WHERE `laid down` > (SELECT `laid down` FROM w WHERE name = 'ardent')\nQ2: {how many = a2} ships were built before avenger.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `laid down` < (SELECT `laid down` FROM w WHERE name = 'avenger')\nQ3: {how many = a3} ships were built before alacrity.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `laid down` < (SELECT `laid down` FROM w WHERE name = 'alacrity')\nQ4: {how many = a4} ships were built before alacrity and after ardent.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `laid down` > (SELECT `laid down` FROM w WHERE name = 'ardent') AND `laid down` < (SELECT `laid down` FROM w WHERE name = 'alacrity')\nQ5: {how many = a5} ships were built after alacrity and before avenger.\nNeuralSQL", -30.104134713028685], [" SELECT COUNT(*) FROM w WHERE `laid down` > '1974-02-26'\nQ2: {how many = a2} ships were built between active and ardent.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `laid down` > '1971-07-21' AND `laid down` < '1974-02-26'\nQ3: {how many = a3} ships were built after active and before ardent.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `laid down` > '1971-07-21' AND `laid down` < '1974-02-26'\nQ4: {how many = a4} ships were built after active and before ardent.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `laid down` > '1971-07-21' AND `laid down` < '1974-02-26'\nQ5: {how many = a5} ships were built after active and before ardent.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `laid down` > '1971-07-21", -30.408696586855225], [" SELECT COUNT(*) FROM w WHERE `laid down` > '1974-02-26 00:00:00'\nQ2: {how many = a2} ships were built before avenger.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `laid down` < '1974-10-30 00:00:00'\nQ3: {how many = a3} ships were built before active and after alacrity.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `laid down` > '1973-03-05 00:00:00' AND `laid down` < '1971-07-21 00:00:00'\nQ4: {how many = a4} ships were built in 1971.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `laid down` LIKE '1971-%-%'\nQ5: {how many = a5} ships were built in 1971 and 1972.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `laid down` LIKE '1971-%-%' OR `laid down` LIKE '1972-%-%", -34.90584775189299]]}, "1157": {"question": "how many total goals has jones kusi-asare scored?", "gold_answer": ["58"], "pred_answer": {"0": [[116], [116], [116], [58], [58], [58], [58], "<error>", "<error>", [3]]}, "nsql": [[" SELECT SUM(goals) FROM w", -2.170344550666], [" SELECT SUM(goals) FROM w", -2.170344550666], [" SELECT SUM(goals) FROM w", -2.170344550666], [" SELECT goals FROM w WHERE season = 'total'", -2.9305088515360005], [" SELECT goals FROM w WHERE season = 'total'", -2.9305088515360005], [" SELECT goals FROM w WHERE season = 'total'", -2.9305088515360005], [" SELECT goals FROM w WHERE season = 'total'", -6.277189291936], [" SELECT goals FROM w WHERE player = 'jones kusi-asare' AND season = 'total'", -6.6412216888860005], [" SELECT SUM(goals) FROM w WHERE player = 'jones kusi-asare'", -9.460135699456], [" SELECT goals FROM w WHERE row_id = 1", -16.435097186866]]}, "1160": {"question": "how many gold medals did italy receive?", "gold_answer": ["0"], "pred_answer": {"0": [[], [], [], [], [], [], [], [], [], []], "1": ["<error>"], "2": [[10]], "3": ["<error>"], "4": [[21]], "5": ["<error>"], "6": [[10]], "7": ["<error>"], "8": [[3]], "9": ["<error>"], "10": [[0]], "11": ["<error>"]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'italy'", -2.11780973036], [" SELECT gold FROM w WHERE nation = 'italy'", -2.1180565154299997], [" SELECT gold FROM w WHERE nation = 'italy'", -2.1180565154299997], [" SELECT gold FROM w WHERE nation = 'italy'", -2.1180565154299997], [" SELECT gold FROM w WHERE nation = 'italy'", -2.1190680163399995], [" SELECT gold FROM w WHERE nation = 'italy'", -3.5108729206199993], [" SELECT gold FROM w WHERE nation = 'italy'", -3.5108729206199993], [" SELECT gold FROM w WHERE nation = 'italy'", -3.5108729206199993], [" SELECT gold FROM w WHERE nation = 'italy'", -5.35799049132], [" SELECT gold FROM w WHERE nation = 'italy'\nQ2: {how many = a2} nations received at least one gold medal.\nNeuralSQL2: SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 0\nQ3: {how many = a3} nations received at least one medal.\nNeuralSQL3: SELECT COUNT(DISTINCT nation) FROM w WHERE gold + silver + bronze > 0\nQ4: {how many = a4} nations received more than one medal.\nNeuralSQL4: SELECT COUNT(DISTINCT nation) FROM w WHERE gold + silver + bronze > 1\nQ5: {how many = a5} nations received more than one gold medal.\nNeuralSQL5: SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 1\nQ6: {how many = a6} nations received more medals than italy.\nNeuralSQL6: SELECT COUNT(DISTINCT nation) FROM w WHERE gold + silver + bronze > (SELECT gold + silver + bronze FROM w WHERE nation = 'italy')\nQ7: {how many =", -37.657928443829014]]}, "1181": {"question": "how many total honda engines were there?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [1], [1], [1], [4], [1], [1], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE engine = 'honda'", -3.4561679278699997], [" SELECT COUNT(*) FROM w WHERE engine = 'honda'", -3.4561679278699997], [" SELECT COUNT(*) FROM w WHERE engine = 'honda'", -3.4561679278699997], [" SELECT COUNT(DISTINCT engine) FROM w WHERE engine = 'honda'", -4.955843605251], [" SELECT COUNT(DISTINCT engine) FROM w WHERE engine LIKE '%honda%'", -5.322974980050999], [" SELECT COUNT(DISTINCT engine) FROM w WHERE engine LIKE '%honda%'", -5.322974980050999], [" SELECT COUNT(*) FROM w WHERE engine = 'honda'", -6.41061557994], [" SELECT COUNT(DISTINCT(engine)) FROM w WHERE engine LIKE '%honda%'", -8.613996971300999], [" SELECT COUNT(DISTINCT engine) FROM w WHERE engine LIKE 'honda%'", -11.420609125001], [" SELECT COUNT(DISTINCT engine) FROM w", -11.632572664441001]]}, "1198": {"question": "most prevalent school", "gold_answer": ["Pennsylvania"], "pred_answer": {"0": [[22], [22], [22], [22], [22], [22], [22], [22], [22], [22]]}, "nsql": [[" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -1.0507200190739998], [" SELECT COUNT(DISTINCT school) FROM w", -15.192093123613999]]}, "1202": {"question": "how many caps did guy basquet accrue during his career?", "gold_answer": ["33"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [33], [33], [11]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[9]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[10]], "9": ["<error>"]}, "nsql": [[" SELECT caps FROM w WHERE player = 'guy basquet'", -2.55040982754], [" SELECT SUM(caps) FROM w WHERE player = 'guy basquet'", -4.178070747099999], [" SELECT SUM(caps) FROM w WHERE player = 'guy basquet'", -4.17878238902], [" SELECT SUM(caps) FROM w WHERE player = 'guy basquet'", -4.1832056797999995], [" SELECT SUM(caps) FROM w WHERE player = 'guy basquet'", -4.1832056797999995], [" SELECT SUM(caps) FROM w WHERE player = 'guy basquet'", -4.1832056797999995], [" SELECT SUM(caps) FROM w WHERE player = 'guy basquet'", -4.184151276990001], [" SELECT `total caps` FROM w WHERE player = 'guy basquet'", -4.56930564639], [" SELECT total caps FROM w WHERE player = 'guy basquet'", -6.8039189220199985], [" SELECT SUM(caps) FROM w WHERE player = 'guy basquet'\nQ2: {how many = a2} players have a win rate less than 50%.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `win\u00a0%` < '50%'\nQ3: {how many = a3} players have a win rate greater than 50%.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `win\u00a0%` > '50%'\nQ4: {how many = a4} players have a win rate greater than 50% and less than 60%.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `win\u00a0%` > '50%' AND `win\u00a0%` < '60%'\nQ5: {how many = a5} players have a win rate greater than 50% or less than 60%.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `win\u00a0%` > '50%' OR `win\u00a0%` < '60%'\nQ6: {how many = a6} players have a win rate greater than 50% and less than 60% and", -40.565092956375985]]}, "1239": {"question": "how many teams are in the east region.", "gold_answer": ["16"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE region = 'east'", -2.9448294712139997], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -2.9448294712139997], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -2.9448294712139997], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -2.9448294712139997], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -7.248662706594], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -7.610087406594], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -8.129633276594], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -8.407937136594], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -8.794615476594], [" SELECT COUNT(*) FROM w WHERE region = 'east'", -9.782063836594]]}, "1243": {"question": "what is the total number of schools listed in the table?", "gold_answer": ["28"], "pred_answer": {"0": [[28], [28], [28], [28], [28], [28], [28], [28], [28], [28]]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.97470983008], [" SELECT COUNT(*) FROM w", -2.97470983008], [" SELECT COUNT(*) FROM w", -2.97470983008], [" SELECT COUNT(*) FROM w", -2.97470983008], [" SELECT COUNT(*) FROM w", -2.97470983008], [" SELECT COUNT(*) FROM w", -2.97470983008], [" SELECT COUNT(*) FROM w", -3.05861483846], [" SELECT COUNT(*) FROM w", -3.0592377189599995], [" SELECT COUNT(*) FROM w", -3.0592377189599995], [" SELECT COUNT(*) FROM w", -4.21630601896]]}, "25": {"question": "are there at least 2 nationalities on the chart?", "gold_answer": ["yes"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT nationality) FROM w", -6.950288157437999], [" SELECT COUNT(DISTINCT nationality) FROM w", -7.043828015438001], [" SELECT COUNT(DISTINCT nationality) FROM w", -7.220630069438], [" SELECT COUNT(DISTINCT nationality) FROM w", -7.3198657176849995], [" SELECT COUNT(DISTINCT nationality) FROM w", -7.3198657176849995], [" SELECT COUNT(DISTINCT nationality) FROM w", -7.3198657176849995], [" SELECT COUNT(DISTINCT nationality) FROM w", -9.732189364438], [" SELECT COUNT(DISTINCT nationality) FROM w", -9.849557877437999], [" SELECT COUNT(DISTINCT nationality) FROM w", -9.984282824438], [" SELECT COUNT(DISTINCT nationality) FROM w", -11.595722724438]]}, "66": {"question": "which building has 8 floors and is 240 ft tall?", "gold_answer": ["Industrial Exposition Building"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` = '240 (73)'", -2.8397323954999996], [" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` = '240 (73)'", -2.8529289208360002], [" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` = '240 (73)'", -2.8529289208360002], [" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` = '240 (73)'", -2.8529289208360002], [" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` = '240 (73)'", -2.8600942248699996], [" SELECT COUNT(*) FROM w WHERE `height\\nft (m)` = '240 (73)' AND floors = 8", -3.60805443042], [" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` = '240 (73)'", -4.742605554516], [" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` LIKE '240%'", -5.117647588994], [" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` = '240 (73)'", -6.607616604516], [" SELECT COUNT(*) FROM w WHERE floors = 8 AND `height\\nft (m)` LIKE '240 (73)'", -9.26865978868]]}, "107": {"question": "what was the total number of matches played from 2001 to 2014?", "gold_answer": ["37"], "pred_answer": {"0": [[427], [427], [3], [0], [42], [0], [0], [4], [4], [3]], "1": [[440], [440], [3], [0], [44], [0], [0], [4], [4], [3]], "2": [[371], [371], [3], [0], "<error>", [0], [0], [4], [4], [3]], "3": [[219], [219], [3], [0], [0], [0], [4], [4], [3]], "4": [[142], [142], [3], [0], [0], [0], [4], [4], [3]], "5": [[149], [149], [4], [1], [2], [1], [3], [3], [4]]}, "nsql": [[" SELECT SUM(CAST(REPLACE(`2001`,'\u2013','') AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`2002`,'\u2013','') AS INT)) FROM w\nNeuralSQL3: SELECT SUM(CAST(REPLACE(`2003`,'\u2013','') AS INT)) FROM w\nNeuralSQL4: SELECT SUM(CAST(REPLACE(`2004`,'\u2013','') AS INT)) FROM w\nNeuralSQL5: SELECT SUM(CAST(REPLACE(`2005`,'\u2013','') AS INT)) FROM w\nNeuralSQL6: SELECT SUM(CAST(REPLACE(`2006`,'\u2013','') AS INT)) FROM w", -6.123419284874995], [" SELECT SUM(CAST(REPLACE(`2001`,'\u2013','') AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`2002`,'\u2013','') AS INT)) FROM w\nNeuralSQL3: SELECT SUM(CAST(REPLACE(`2003`,'\u2013','') AS INT)) FROM w\nNeuralSQL4: SELECT SUM(CAST(REPLACE(`2004`,'\u2013','') AS INT)) FROM w\nNeuralSQL5: SELECT SUM(CAST(REPLACE(`2005`,'\u2013','') AS INT)) FROM w\nNeuralSQL6: SELECT SUM(CAST(REPLACE(`2006`,'\u2013','') AS INT)) FROM w", -6.129762163315996], [" SELECT COUNT(*) FROM w WHERE `2001` != 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `2002` != 'a'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `2003` != 'a'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `2004` != 'a'\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `2005` != 'a'\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `2006` != 'a'", -6.494929372632999], [" SELECT COUNT(*) FROM w WHERE 2001 LIKE '%r'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 2002 LIKE '%r'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE 2003 LIKE '%r'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE 2004 LIKE '%r'\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE 2005 LIKE '%r'\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE 2006 LIKE '%r'", -6.914968176936001], [" SELECT SUM(CAST(SUBSTR(`2001`, 1, INSTR(`2001`, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(`2001`, INSTR(`2001`, '-') + 1, LENGTH(`2001`) - (INSTR(`2001`, ' - ') + 1)) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`2002`, 1, INSTR(`2002`, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(`2002`, INSTR(`2002`, '-') + 1, LENGTH(`2002`) - (INSTR(`2002`, ' - ') + 1)) AS INT)) FROM w\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(`2003`, 1, INSTR(`2003`, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(`2003`, INSTR(`2003`, '-') + 1, LENGTH(`2003`) - (INSTR(`2003`, ' - ') + 1)) AS INT", -7.742127011113942], [" SELECT SUM(CAST(REPLACE(`2001`, 'a', '0') AS INT)) FROM w WHERE tournament = 'win\u2013loss'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`2002`, 'a', '0') AS INT)) FROM w WHERE tournament = 'win\u2013loss'\nNeuralSQL3: SELECT SUM(CAST(REPLACE(`2003`, 'a', '0') AS INT)) FROM w WHERE tournament = 'win\u2013loss'\nNeuralSQL4: SELECT SUM(CAST(REPLACE(`2004`, 'a', '0') AS INT)) FROM w WHERE tournament = 'win\u2013loss'\nNeuralSQL5: SELECT SUM(CAST(REPLACE(`2005`, 'a', '0') AS INT)) FROM w WHERE tournament = 'win\u2013loss'\nNeuralSQL6: SELECT SUM(CAST(REPLACE(`2006`, 'a', '0') AS INT)) FROM w WHERE tournament = 'win\u2013loss'", -11.27055607156549], [" SELECT COUNT(*) FROM w WHERE 2001 LIKE '%r' OR 2001 LIKE '%q'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 2002 LIKE '%r' OR 2002 LIKE '%q'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE 2003 LIKE '%r' OR 2003 LIKE '%q'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE 2004 LIKE '%r' OR 2004 LIKE '%q'\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE 2005 LIKE '%r' OR 2005 LIKE '%q'\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE 2006 LIKE '%r' OR 2006 LIKE '%q'", -14.170449446282001], [" SELECT COUNT(*) FROM w WHERE 2001 = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 2002 = 'a'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE 2003 = 'a'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE 2004 = 'a'\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE 2005 = 'a'\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE 2006 = 'a'", -14.617614324652004], [" SELECT COUNT(*) FROM w WHERE 2001 = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 2002 = 'a'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE 2003 = 'a'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE 2004 = 'a'\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE 2005 = 'a'\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE 2006 = 'a'", -14.651724995025198], [" SELECT COUNT(*) FROM w WHERE 2001 != 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 2002 != 'a'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE 2003 != 'a'\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE 2004 != 'a'\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE 2005 != 'a'\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE 2006 != 'a'", -15.057224663725]]}, "148": {"question": "how many candidates were from halifax?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE residence LIKE '%halifax%'", -4.238019531759999], [" SELECT COUNT(*) FROM w WHERE residence LIKE '%halifax%'", -4.238019531759999], [" SELECT COUNT(*) FROM w WHERE residence LIKE '%halifax%'", -4.23871106276], [" SELECT COUNT(*) FROM w WHERE residence = 'halifax'", -5.136364239837], [" SELECT COUNT(*) FROM w WHERE residence = 'halifax'", -5.181994856674001], [" SELECT COUNT(*) FROM w WHERE residence = 'halifax'", -5.182120597374], [" SELECT COUNT(*) FROM w WHERE residence = 'halifax'", -5.5667417408199995], [" SELECT COUNT(*) FROM w WHERE residence = 'halifax'", -5.971558939837001], [" SELECT COUNT(*) FROM w WHERE residence = 'halifax'", -6.0172484194599996], [" SELECT COUNT(*) FROM w WHERE residence = 'halifax'\n```", -6.0817589950599995]]}, "189": {"question": "which player lost the least?", "gold_answer": ["Co Stomp\u00e9", "Andy Smith", "Jelle Klaasen", "Wes Newton", "Michael van Gerwen", "Andy Hamilton", "Wayne Jones", "Peter Wright", "Colin Osborne", "Dennis Priestley", "Robert Thornton", "Mark Dudbridge", "Jamie Caven", "John Part", "Tony Eccles", "Andy Jenkins"], "pred_answer": {"0": [[28], [28], [28], [28], [28], [28], [28], [28], [28], [28]], "1": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "2": [[21], [21], [21], [21], [21], [21], [21], [21], [21], [21]]}, "nsql": [[" SELECT SUM(`legs lost`) FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT SUM(`legs lost`) FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT SUM(`legs lost`) FROM w WHERE player = 'alan tabern'", -3.644790485554], [" SELECT SUM(`legs lost`) FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT SUM(`legs lost`) FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT SUM(`legs lost`) FROM w WHERE player = 'alan tabern'", -3.651946394356999], [" SELECT `legs lost` FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT `legs lost` FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT `legs lost` FROM w WHERE player = 'alan tabern'", -4.3503539480310005], [" SELECT `legs lost` FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT `legs lost` FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT `legs lost` FROM w WHERE player = 'alan tabern'", -4.3693581176239995], [" SELECT `legs lost` FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT `legs lost` FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT `legs lost` FROM w WHERE player = 'alan tabern'", -4.371311222951], [" SELECT `legs lost` FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT `legs lost` FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT `legs lost` FROM w WHERE player = 'alan tabern'", -4.496894450178], [" SELECT `legs lost` FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT `legs lost` FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT `legs lost` FROM w WHERE player = 'alan tabern'", -4.496894450178], [" SELECT legs lost FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT legs lost FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT legs lost FROM w WHERE player = 'alan tabern'", -6.308243574922001], [" SELECT legs lost FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT legs lost FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT legs lost FROM w WHERE player = 'alan tabern'", -6.81115648088], [" SELECT `legs lost` FROM w WHERE player = 'adrian lewis'\nNeuralSQL2: SELECT `legs lost` FROM w WHERE player = 'peter wright'\nNeuralSQL3: SELECT `legs lost` FROM w WHERE player = 'alan tabern'", -6.971822564437]]}, "230": {"question": "what was the most years a show lasted?", "gold_answer": ["4"], "pred_answer": {"0": [["1998", "2001\u20132002", "2003", "2004\u20132008", "2005", "2006", "2008", "2009"], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT DISTINCT year FROM w", -3.157338706274001], [" SELECT COUNT(DISTINCT year) FROM w", -4.326239305469999], [" SELECT COUNT(DISTINCT year) FROM w", -4.326239305469999], [" SELECT COUNT(DISTINCT(year)) FROM w", -6.669300436264999], [" SELECT COUNT(DISTINCT year) FROM w", -7.9379271358659995], [" SELECT COUNT(DISTINCT year) FROM w", -7.9379271358659995], [" SELECT COUNT(DISTINCT year) FROM w", -10.743885105866], [" SELECT COUNT(DISTINCT year) FROM w", -11.598783461023], [" SELECT COUNT(DISTINCT year) FROM w", -11.701826235866001], [" SELECT COUNT(DISTINCT year) FROM w", -12.094500935865998]]}, "271": {"question": "which country or region had the most releases?", "gold_answer": ["Worldwide"], "pred_answer": {"0": [[16], [16], [16], [16], [16], [16], [16], [16], [16], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.3942631714300002], [" SELECT COUNT(*) FROM w", -1.3942631714300002], [" SELECT COUNT(*) FROM w", -1.3942631714300002], [" SELECT COUNT(*) FROM w", -2.3451554040700002], [" SELECT COUNT(*) FROM w", -2.3451554040700002], [" SELECT COUNT(*) FROM w", -2.3451554040700002], [" SELECT COUNT(*) FROM w", -2.3451554040700002], [" SELECT COUNT(*) FROM w", -2.3451554040700002], [" SELECT COUNT(*) FROM w", -2.35107955507], [" SELECT COUNT(DISTINCT catalog) FROM w", -10.592548265583]]}, "312": {"question": "how many losses during stretch?", "gold_answer": ["7"], "pred_answer": {"0": [[28], [28], [28], [28], [28], [28], [28], [28], [0], [28]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE loss IS NOT NULL", -3.3103686981799996], [" SELECT COUNT(*) FROM w WHERE loss IS NOT NULL", -3.3189390857800003], [" SELECT COUNT(*) FROM w WHERE loss IS NOT NULL", -3.3189390857800003], [" SELECT COUNT(*) FROM w WHERE loss IS NOT NULL", -3.3189390857800003], [" SELECT COUNT(*) FROM w WHERE loss IS NOT NULL", -3.3189390857800003], [" SELECT COUNT(*) FROM w WHERE loss IS NOT NULL", -3.3189390857800003], [" SELECT COUNT(*) FROM w WHERE loss != 'none'", -4.26025819578], [" SELECT COUNT(*) FROM w WHERE loss IS NOT NULL", -5.33770279378], [" SELECT COUNT(*) FROM w WHERE win = 'loss'", -5.6260320107799995], [" SELECT COUNT(*) FROM w WHERE loss IS NOT NULL", -5.63324729378]]}, "353": {"question": "which month is listed the least on this chart?", "gold_answer": ["January"], "pred_answer": {"0": [[12], [4], "<error>", [0], ["january 1"], ["january 1"], [1], "<error>", [1, "january"], [12]], "1": [[4], "<error>"], "2": [[3], [11]], "3": ["<error>"], "4": [[12]], "5": ["<error>"], "6": [[12]], "7": ["<error>"], "8": [[12]], "9": ["<error>"], "10": [[12]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -7.892881344879999], [" SELECT COUNT(*) FROM w WHERE date LIKE '%october%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '%september%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE '%november%'", -10.84229484838], [" SELECT MIN(month) FROM (SELECT COUNT(*) AS month FROM w GROUP BY month)", -11.08361681198], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - % - %'", -11.81057161288], [" SELECT MIN(date) FROM w", -11.93461658007], [" SELECT MIN(date) FROM w", -12.44833788007], [" SELECT COUNT(*) FROM (SELECT COUNT(*) AS cnt, SUBSTR(date, 1, INSTR(date, ' ') - 1) AS month FROM w GROUP BY month ORDER BY cnt ASC LIMIT 1)", -15.369028760259999], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -17.313401041674], [" SELECT COUNT(*) AS count, SUBSTR(date, 1, INSTR(date, ' ') - 1) AS month FROM w GROUP BY month ORDER BY count LIMIT 1", -22.44711256017001], [" SELECT COUNT(*) FROM w WHERE date LIKE '%'\nQ2: {how many = a2} records have a attendance larger than 50000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance > 50000\nQ3: {how many = a3} records have a opponent# larger than #10.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE opponent# > '#10'\nQ4: {how many = a4} records have a opponent# larger than #10.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE opponent# > '#10'\nQ5: {how many = a5} records have a opponent# larger than #10.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE opponent# > '#10'\nQ6: {how many = a6} records have a opponent# larger than #10.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE opponent# > '#10'\nQ7: {how many = a7} records have a opponent# larger than #10.\nNeuralSQL7: SELECT COUNT", -45.99450728277401]]}, "394": {"question": "what was the first census that saw a russian population of over 2,000?", "gold_answer": ["1939 census"], "pred_answer": {"0": [[7], [0], [1], [1], [1], [1], [1], [1], [1], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `1939 census` > 2000 OR `1959 census` > 2000 OR `1970 census` > 2000 OR `1979 census` > 2000 OR `1989 census` > 2000", -5.66146779684], [" SELECT COUNT(*) FROM w WHERE ethnicity = 'russians' AND (`1926 census` LIKE '%2000%' OR `1939 census` LIKE '%2000%' OR `1959 census` LIKE '%2000%' OR `1970 census` LIKE '%2000%' OR `1979 census` LIKE '%2000%' OR `1989 census` LIKE '%2000%' OR `2007 estimate` LIKE '%2000%')", -7.507917610190001], [" SELECT COUNT(*) FROM w WHERE ethnicity = 'russians' AND (`1926 census` LIKE '% (2%)' OR `1939 census` LIKE '% (2%)' OR `1959 census` LIKE '% (2%)' OR `1970 census` LIKE '% (2%)' OR `1979 census` LIKE '% (2%)' OR `1989 census` LIKE '% (2%)')", -8.06137146083], [" SELECT COUNT(*) FROM w WHERE ethnicity = 'russians' AND (`1939 census` > '2000' OR `1959 census` > '2000' OR `1970 census` > '2000' OR `1979 census` > '2000' OR `1989 census` > '2000')", -11.496723236940001], [" SELECT COUNT(*) FROM w WHERE (`1939 census` LIKE '%(2%)%' OR `1959 census` LIKE '%(2.5%)%' OR `1970 census` LIKE '%(1.6%)%' OR `1979 census` LIKE '%(2.1%)%' OR `1989 census` LIKE '%(2.1%)%') AND ethnicity = 'russians'", -12.995461214959999], [" SELECT COUNT(*) FROM w WHERE ethnicity = 'russians' AND (`1926 census` LIKE '% (2%' OR `1939 census` LIKE '% (2%' OR `1959 census` LIKE '% (2%' OR `1970 census` LIKE '% (2%' OR `1979 census` LIKE '% (2%' OR `1989 census` LIKE '% (2%' OR `2007 estimate` LIKE '% (2%')", -13.71725697698], [" SELECT COUNT(*) FROM w WHERE (`1939 census` LIKE '%2111%' OR `1959 census` LIKE '%2380%') AND ethnicity = 'russians'", -13.79715213376], [" SELECT COUNT(*) FROM w WHERE (ethnicity = 'russians' AND `1926 census` > '2000 (2%)') OR (ethnicity = 'russians' AND `1939 census` > '2000 (2%)') OR (ethnicity = 'russians' AND `1959 census` > '2000 (2%)') OR (ethnicity = 'russians' AND `1970 census` > '2000 (2%)') OR (ethnicity = 'russians' AND `1979 census` > '2000 (2%)') OR (ethnicity = 'russians' AND `1989 census` > '2000 (2%)') OR (ethnicity = 'russians' AND `2007 estimate` > '2000 (2%)')", -14.17897248151301], [" SELECT COUNT(*) FROM w WHERE (`1939 census` > '2000 (2%)' OR `1959 census` > '2000 (2%)' OR `1970 census` > '2000 (2%)' OR `1979 census` > '2000 (2%)' OR `1989 census` > '2000 (2%)') AND ethnicity = 'russians'", -18.067585148230005], [" SELECT COUNT(*) FROM w WHERE ethnicity = 'russians' AND (`1926 census` LIKE '%2000%' OR `1939 census` LIKE '%2000%' OR `1959 census` LIKE '%2000%' OR `1970 census` LIKE '%2000%' OR `1979 census` LIKE '%2000%' OR `1989 census` LIKE '%2000%')\nQ2: {how many = a2} census saw a russian population of over 2,000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE ethnicity = 'russians' AND (`1926 census` LIKE '%2000%' OR `1939 census` LIKE '%2000%' OR `1959 census` LIKE '%2000%' OR `1970 census` LIKE '%2000%' OR `1979 census` LIKE '%2000%' OR `1989 census` LIKE '%2000%' OR `2007 estimate` LIKE '%2000%')\nQ3: {how many = a3} census saw a russian population of over 2,000.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE ethnicity = 'r", -24.48063486846399]]}, "435": {"question": "how many representatives come from the green wind party?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [], []]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE party LIKE '%green wind party%'", -3.73340920206], [" SELECT COUNT(*) FROM w WHERE party LIKE '%green wind party%'", -3.73340920206], [" SELECT COUNT(*) FROM w WHERE party LIKE '%green wind party%'", -3.73340920206], [" SELECT COUNT(*) FROM w WHERE party LIKE '%green wind party%'", -3.73340920206], [" SELECT COUNT(*) FROM w WHERE party LIKE '%green wind party%'", -3.73627116206], [" SELECT COUNT(*) FROM w WHERE party LIKE '%green wind party%'", -4.7590155760599995], [" SELECT COUNT(*) FROM w WHERE party LIKE '%green wind party%'", -4.7590155760599995], [" SELECT COUNT(*) FROM w WHERE party LIKE '%green wind party%'", -4.759263886059999], [" SELECT `diet representation\\nrepresentatives` FROM w WHERE party LIKE '%green wind party%'", -5.242421660260001], [" SELECT `diet representation\\nrepresentatives` FROM w WHERE party LIKE '%green wind party%'", -5.24647916126]]}, "476": {"question": "total number of members from lawton and oklahoma city", "gold_answer": ["3"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.0143087200420002], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.0143087200420002], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.0143087200420002], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.0143087200420002], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.0143087200420002], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.015147879642], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.015147879642], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.015147879642], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -1.015147879642], [" SELECT COUNT(*) FROM w WHERE hometown = 'lawton'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE hometown = 'oklahoma city'", -3.5314678490420004]]}, "517": {"question": "what is the difference between the nation with the most medals and the nation with the least amount of medals?", "gold_answer": ["193"], "pred_answer": {"0": [["india"], ["india"], ["india"], ["india"], ["india"], ["india"], ["india"], ["india"], [197], ["india"]], "1": [["maldives"], ["maldives"], ["maldives"], ["maldives"], ["maldives"], ["maldives"], ["maldives"], ["maldives"], [4], ["maldives"]]}, "nsql": [[" SELECT nation FROM w WHERE total = (SELECT MAX(total) FROM w)\nNeuralSQL2: SELECT nation FROM w WHERE total = (SELECT MIN(total) FROM w)", -6.60923640616], [" SELECT nation FROM w WHERE total = (SELECT MAX(total) FROM w)\nNeuralSQL2: SELECT nation FROM w WHERE total = (SELECT MIN(total) FROM w)", -6.905802578024], [" SELECT nation FROM w WHERE total = (SELECT MAX(total) FROM w)\nNeuralSQL2: SELECT nation FROM w WHERE total = (SELECT MIN(total) FROM w)", -6.9101702480239995], [" SELECT nation FROM w WHERE total = (SELECT MAX(total) FROM w)\nNeuralSQL2: SELECT nation FROM w WHERE total = (SELECT MIN(total) FROM w)", -7.0585415480239995], [" SELECT nation FROM w WHERE total = (SELECT MAX(total) FROM w)\nNeuralSQL2: SELECT nation FROM w WHERE total = (SELECT MIN(total) FROM w)", -7.0585415480239995], [" SELECT nation FROM w WHERE total = (SELECT MAX(total) FROM w)\nNeuralSQL2: SELECT nation FROM w WHERE total = (SELECT MIN(total) FROM w)", -7.258767548024], [" SELECT nation FROM w WHERE total = (SELECT MAX(total) FROM w)\nNeuralSQL2: SELECT nation FROM w WHERE total = (SELECT MIN(total) FROM w)", -7.330736132444], [" SELECT nation FROM w WHERE total = (SELECT MAX(total) FROM w)\nNeuralSQL2: SELECT nation FROM w WHERE total = (SELECT MIN(total) FROM w)", -7.877179048023999], [" SELECT MAX(total) FROM w\nNeuralSQL2: SELECT MIN(total) FROM w", -9.52683411298], [" SELECT nation FROM w ORDER BY total DESC LIMIT 1\nNeuralSQL2: SELECT nation FROM w ORDER BY total ASC LIMIT 1", -11.414414023844]]}, "520": {"question": "which year between 1893 and 1898 was there not an order?", "gold_answer": ["1895"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "3": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "4": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "5": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -1.9248892921064003], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -1.9249410486743996], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -1.9746169338359998], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -1.9746169338359998], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -1.9751082868459995], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -3.9542151373272993], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -3.9958934600884994], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -4.326584543497299], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898", -4.479081562518499], [" SELECT COUNT(*) FROM w WHERE year = 1893\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1894\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1895\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1896\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1897\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 1898\n```", -13.198150380288501]]}, "541": {"question": "what is the sum of the cup total and the europa league total?", "gold_answer": ["27"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": [[44], [44], [44], [44], [44], [44], [44], [44], [44], [44]]}, "nsql": [[" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(`europa league`) FROM w", -1.31568474242], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(`europa league`) FROM w", -1.31568474242], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(`europa league`) FROM w", -1.3160351693499996], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(`europa league`) FROM w", -1.3160351693499996], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(`europa league`) FROM w", -1.31697589543], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(`europa league`) FROM w", -1.31697589543], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(`europa league`) FROM w", -1.31697589543], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(`europa league`) FROM w", -3.49849570767], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(europa league) FROM w", -6.010471581574], [" SELECT SUM(cup) FROM w\nNeuralSQL2: SELECT SUM(europa league) FROM w", -6.014589106519999]]}, "558": {"question": "how many consecutive wins did bob senneker have?", "gold_answer": ["5"], "pred_answer": {"0": [[7], [7], [8], [8], [7], [7], [7], [8], [8], [8]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'bob senneker'", -3.4798776283599997], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%bob senneker%'", -5.03113235764], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%senneker%'", -5.089307987000001], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%senneker%'", -5.089307987000001], [" SELECT COUNT(*) FROM w WHERE winner = 'bob senneker'", -5.114423722020001], [" SELECT COUNT(*) FROM w WHERE winner = 'bob senneker'", -5.114423722020001], [" SELECT COUNT(*) FROM w WHERE winner LIKE 'bob senneker'", -5.210347656354], [" SELECT COUNT(*) FROM w WHERE winner LIKE '% senneker'", -6.037616851109999], [" SELECT COUNT(*) FROM w WHERE winner LIKE '% senneker%'", -6.416148671467], [" SELECT COUNT(*) FROM w WHERE winner LIKE '% senneker'\n```", -9.931788517340003]]}, "562": {"question": "did american car company or w.l. holman car company build cars that were 44' in length?", "gold_answer": ["W. L. Holman Car Company"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [0], [0], "<error>", [0]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [8], [8], "<error>", [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44'''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w.l. holman car company' AND length = '44'''", -7.997148489810001], [" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44'''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w.l. holman car company' AND length = '44'''", -8.27654998981], [" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44'''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w.l. holman car company' AND length = '44'''", -8.770172789810001], [" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44'''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w.l. holman car company' AND length = '44'''", -8.955706489810002], [" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w.l. holman car company' AND length = '44''", -11.72561791488], [" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w. l. holman car company' AND length = '44''", -11.763491389090001], [" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w.l. holman car company' AND length = '44'", -11.902865960676], [" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w.l. holman car company' AND length = '44'", -12.697062460675998], [" SELECT COUNT(*) FROM w WHERE builder = 'american car company' AND length = '44''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'w.l. holman car company' AND length = '44''", -13.435815614880001], [" SELECT COUNT(*) FROM w WHERE length = '44' AND builder = 'american car company'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE length = '44' AND builder = 'w.l. holman car company'", -15.090356938389998]]}, "599": {"question": "how many games had four total points scored or more?", "gold_answer": ["5"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) >= 4", -7.390573275192999], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) >= 4", -8.254178075192998], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) >= 4", -8.538402181283], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) >= 4", -9.872177989323403], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) >= 4", -9.872177989323403], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) >= 4", -9.886332389323403], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 3", -10.183386628633], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) >= 4", -10.608641998457], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) >= 4", -10.768859425893998], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) >= 4", -11.377283125894001]]}, "603": {"question": "what is the average number of tackles this player has had over his career?", "gold_answer": ["45"], "pred_answer": {"0": [[1170], [1170], [1170], [1170], [1170], [1170], [1170], [1170], [1170], [1170]], "1": ["<error>"]}, "nsql": [[" SELECT SUM(tackles) FROM w", -1.34375591721], [" SELECT SUM(tackles) FROM w", -1.34375591721], [" SELECT SUM(tackles) FROM w", -1.34375591721], [" SELECT SUM(tackles) FROM w", -1.34375591721], [" SELECT SUM(tackles) FROM w", -1.34375591721], [" SELECT SUM(tackles) FROM w", -1.34375591721], [" SELECT SUM(tackles) FROM w", -1.34375591721], [" SELECT SUM(tackles) FROM w", -1.34375591721], [" SELECT SUM(tackles) FROM w", -2.43448558321], [" SELECT SUM(tackles) FROM w\n```", -12.15938675878]]}, "644": {"question": "how many more gold medals has nepal won than pakistan?", "gold_answer": ["22"], "pred_answer": {"0": [[32], [32], [32], [32], [32], [32], [32], [32], [32], [32]], "1": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -4.572731269969999], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -7.6529171239060005], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -8.30106933809], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -8.65436273809], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -8.683856538090001], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -9.014945823906], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -9.56129243809], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -9.82028093809], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -10.100224723906], [" SELECT gold FROM w WHERE nation = 'nepal'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'pakistan'", -10.248144023906]]}, "685": {"question": "how many swimmers were from the us?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.0316443813440004], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.289347500424], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.289347500424], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.290875998174], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.290875998174], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.290875998174], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.290875998174], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.290875998174], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.2909829407939997], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -3.291696338154]]}, "726": {"question": "how many championships does nippon sport science university have", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[2]]}, "nsql": [[" SELECT SUM(winner) FROM w WHERE university = 'nippon sport science university'", -2.11256184795], [" SELECT SUM(winner) FROM w WHERE university = 'nippon sport science university'", -2.11256184795], [" SELECT SUM(winner) FROM w WHERE university = 'nippon sport science university'", -2.11256184795], [" SELECT winner FROM w WHERE university = 'nippon sport science university'", -2.69585687356], [" SELECT winner FROM w WHERE university = 'nippon sport science university'", -2.69585687356], [" SELECT SUM(winner) FROM w WHERE university = 'nippon sport science university'", -3.0815804019499997], [" SELECT SUM(winner) FROM w WHERE university = 'nippon sport science university'", -3.0815804019499997], [" SELECT SUM(winner) FROM w WHERE university = 'nippon sport science university'", -3.0815804019499997], [" SELECT winner FROM w WHERE university = 'nippon sport science university'", -3.79753410909], [" SELECT winner FROM w WHERE university = 'nippon sport science university'\nQ2: {how many = a2} universities have 0 championships.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 0\nQ3: {how many = a3} universities have more than 10 championships.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winner > 10", -20.426385213626997]]}, "767": {"question": "how many positions are held by canada?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver LIKE '%canada%'", -3.574141482985], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%canada%'", -3.5762480032160004], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%canada%'", -4.907052534620001], [" SELECT COUNT(*) FROM w WHERE driver LIKE '%canada%'", -4.907052534620001], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% canada%'", -4.928097979120001], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% canada%'", -6.083014575620001], [" SELECT COUNT(*) FROM w WHERE driver = 'canada'", -7.1145455677500005], [" SELECT COUNT(*) FROM w WHERE driver = 'canada'", -7.119302567750001], [" SELECT COUNT(DISTINCT pos) FROM w WHERE driver LIKE '%canada%'", -10.831109209369002], [" SELECT COUNT(DISTINCT pos) FROM w WHERE driver LIKE '% canada%'", -13.027999199491]]}, "808": {"question": "how many matters have political party as their \"type\"?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type = 'political party'", -3.3246596061500004], [" SELECT COUNT(*) FROM w WHERE type = 'political party'", -3.4667467106500007], [" SELECT COUNT(*) FROM w WHERE type = 'political party'", -5.24495814405], [" SELECT COUNT(*) FROM w WHERE type = 'political party'", -5.24601615852], [" SELECT COUNT(*) FROM w WHERE type = 'political party'", -5.82183755852], [" SELECT COUNT(*) FROM w WHERE type = 'political party'", -5.98325995852], [" SELECT COUNT(*) FROM w WHERE type = 'political party'", -6.08448855852], [" SELECT COUNT(*) FROM w WHERE type = 'political party'", -6.96782895852], [" SELECT COUNT(*) FROM w WHERE type = 'political party'", -7.150585958520001], [" SELECT COUNT(*) FROM w WHERE type = \"political party\"", -7.2519191592]]}, "849": {"question": "how many games were credited with a creative director?", "gold_answer": ["11"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `credited with` = 'creative director'", -2.165496004845], [" SELECT COUNT(*) FROM w WHERE `credited with` = 'creative director'", -2.165496004845], [" SELECT COUNT(*) FROM w WHERE `credited with` = 'creative director'", -2.165496004845], [" SELECT COUNT(*) FROM w WHERE `credited with` = 'creative director'", -2.168163104435], [" SELECT COUNT(*) FROM w WHERE credited with = 'creative director'", -2.345314614505], [" SELECT COUNT(*) FROM w WHERE credited with = 'creative director'", -2.345314614505], [" SELECT COUNT(*) FROM w WHERE credited with = 'creative director'", -3.709526188015], [" SELECT COUNT(*) FROM w WHERE `credited with` = 'creative director'", -4.261144951935001], [" SELECT COUNT(*) FROM w WHERE credited with = \"creative director\"", -5.605785059665], [" SELECT COUNT(*) FROM w WHERE `credited with` LIKE '%creative director%'", -11.236205691395]]}, "890": {"question": "which province has the most districts?", "gold_answer": ["Badakhshan"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [23], [23], "<error>", "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT province FROM w WHERE districts = (SELECT MAX(districts) FROM w)", -4.451365322470001], [" SELECT province FROM w WHERE districts = (SELECT MAX(districts) FROM w)", -4.451365322470001], [" SELECT COUNT(*) FROM w WHERE districts = (SELECT MAX(districts) FROM w)", -5.087080157359999], [" SELECT COUNT(*) FROM w WHERE districts = (SELECT MAX(districts) FROM w)", -5.087080157359999], [" SELECT province FROM w WHERE districts = (SELECT MAX(districts) FROM w)", -5.855598028560001], [" SELECT COUNT(*) FROM w WHERE `districts` = (SELECT MAX(`districts`) FROM w)", -8.21190757806], [" SELECT MAX(CAST(SUBSTR(notes, 1, INSTR(notes, 'districts') - 1) AS INT)) FROM w", -10.710346432541998], [" SELECT MAX(CAST(SUBSTR(notes, 1, INSTR(notes, 'districts') - 1) AS INT)) FROM w", -10.710537230567999], [" SELECT COUNT(DISTINCT province) FROM w WHERE district = (SELECT MAX(district) FROM w)", -11.357625875449997], [" SELECT province FROM w WHERE districts = (SELECT MAX(districts) FROM w)\n```", -20.99208476996]]}, "931": {"question": "tell me the number of districts with an area over 5000.", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -1.44335910714], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -1.44335910714], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -1.44335910714], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -1.44335910714], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -1.44335910714], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -1.44335910714], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -1.44335910714], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -1.44335910714], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -3.3231117753099992], [" SELECT COUNT(*) FROM w WHERE `area (km\u00b2)` > 5000", -3.3231117753099992]]}, "972": {"question": "how many historic sites were listed before 1965?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01 00:00:00'", -2.510249426334], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01 00:00:00'", -2.510249426334], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01 00:00:00'", -2.510249426334], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01 00:00:00'", -2.511461704734], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01'", -4.772171821214], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01'", -4.786370342354], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01 00:00:00'", -4.810298365334], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01'", -6.7483971320239995], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01 00:00:00'", -7.263174012734], [" SELECT COUNT(*) FROM w WHERE `listing date` < '1965-01-01 00:00:00'\n```", -15.253995960324]]}, "1013": {"question": "did cromer, chipperfield or cheshunt have the most windmills?", "gold_answer": ["Cheshunt"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.386723233593], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.387205298736], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.3872099828130002], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.3873034937360003], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.3873034937360003], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.3873034937360003], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.3873034937360003], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.3873034937360003], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.3873171475589998], [" SELECT COUNT(*) FROM w WHERE location = 'cromer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'chipperfield'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -1.3914066372229998]]}, "1054": {"question": "how many number of 1 acts were there?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '1 act'", -2.82768451068], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '1 act'", -2.840255812220001], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '1 act'", -2.840255812220001], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '1 act'", -2.840420448220001], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '1 act'", -3.1937588748600003], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '1 act'", -3.2055751492200004], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '1 act'", -3.208500818220001], [" SELECT COUNT(*) FROM w WHERE sub\u00addivisions = '1 act'", -3.77819116908], [" SELECT COUNT(*) FROM w WHERE `sub\u00addivisions` = '1 acts'", -4.378337898220001], [" SELECT COUNT(*) FROM w WHERE `sub-divisions` = '1 act'", -4.9345207353200005]]}, "1095": {"question": "how many times was the porsche rs spyder used in competition?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE car = 'porsche rs spyder'", -1.9235368539320001], [" SELECT COUNT(*) FROM w WHERE car = 'porsche rs spyder'", -1.9235368539320001], [" SELECT COUNT(*) FROM w WHERE car = 'porsche rs spyder'", -1.9235368539320001], [" SELECT COUNT(*) FROM w WHERE car = 'porsche rs spyder'", -1.9235368539320001], [" SELECT COUNT(*) FROM w WHERE car = 'porsche rs spyder'", -1.9235368539320001], [" SELECT COUNT(*) FROM w WHERE car = 'porsche rs spyder'", -1.925510084902], [" SELECT COUNT(*) FROM w WHERE car = 'porsche rs spyder evo'", -2.8771671354720003], [" SELECT COUNT(*) FROM w WHERE car = 'porsche rs spyder'", -3.5274642159320004], [" SELECT COUNT(DISTINCT(year)) FROM w WHERE car = 'porsche rs spyder'", -4.447645875960998], [" SELECT COUNT(*) FROM w WHERE car LIKE '%porsche rs spyder%'", -4.476369359332]]}, "1136": {"question": "which country had the most competitors ranked in the top three in the event?", "gold_answer": ["China"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "3": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3", -6.147854408232001], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3", -6.495459047575], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3", -6.495526980028999], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank < 4", -6.910684614594999], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3", -7.94444059929], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3", -9.32138834929], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3\n```", -10.000099214965003], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3", -10.84185750929], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3", -11.276858930028999], [" SELECT COUNT(*) FROM w WHERE nationality = 'chinese taipei' AND rank <= 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'japan' AND rank <= 3\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'kazakhstan' AND rank <= 3", -12.666426462008001]]}, "1177": {"question": "how many diekirch districts also have diekirch as their canton?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE canton = 'diekirch' AND district = 'diekirch'", -2.05235816477], [" SELECT COUNT(*) FROM w WHERE canton = 'diekirch' AND district = 'diekirch'", -2.05235816477], [" SELECT COUNT(*) FROM w WHERE canton = 'diekirch' AND district = 'diekirch'", -2.05235816477], [" SELECT COUNT(*) FROM w WHERE district = 'diekirch' AND canton = 'diekirch'", -2.130263143005], [" SELECT COUNT(*) FROM w WHERE district = 'diekirch' AND canton = 'diekirch'", -2.130263143005], [" SELECT COUNT(*) FROM w WHERE district = 'diekirch' AND canton = 'diekirch'", -2.130263143005], [" SELECT COUNT(*) FROM w WHERE district = 'diekirch' AND canton = 'diekirch'", -2.130263143005], [" SELECT COUNT(*) FROM w WHERE district = 'diekirch' AND canton = 'diekirch'", -2.130263143005], [" SELECT COUNT(*) FROM w WHERE district = 'diekirch' AND canton = 'diekirch'", -2.130263143005], [" SELECT COUNT(*) FROM w WHERE canton = district AND district = 'diekirch'", -4.98593821314]]}, "1180": {"question": "how many consecutive years was there a hard surface at the championship?", "gold_answer": ["9"], "pred_answer": {"0": [[6], "<error>", [3], [4], [1], [1], [1], "<error>", [2], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT(year)) FROM w WHERE surface = 'hard'", -4.724681002513], [" SELECT COUNT(*) FROM w WHERE surface = 'hard' AND year - LAG(year, 1) OVER (ORDER BY year) = 1", -9.64401238997], [" SELECT COUNT(*) FROM w WHERE surface = 'hard' AND (year - row_id) = (SELECT MIN(year - row_id) FROM w WHERE surface = 'hard')", -10.747356829374997], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard' AND year BETWEEN 2003 AND 2006", -10.929862785605], [" SELECT COUNT(*) FROM w WHERE surface = 'hard' AND (year - row_id) = 2003", -12.458501324020002], [" SELECT COUNT(*) FROM w WHERE surface = 'hard' AND (year - row_id = 2003)", -13.287478533020002], [" SELECT COUNT(*) FROM w WHERE surface = 'hard' AND year = (SELECT year FROM w WHERE surface = 'hard' AND year = (SELECT year FROM w WHERE surface = 'hard'))", -14.462413182620002], [" SELECT COUNT(DISTINCT year) FROM w WHERE surface = 'hard' AND year - LAG(year, 1, 0) OVER (ORDER BY year) = 1", -16.633363724543003], [" SELECT COUNT(*) FROM w WHERE surface = 'hard' AND (year - (SELECT MIN(year) FROM w WHERE surface = 'hard')) = (SELECT MAX(year) FROM w WHERE surface = 'hard') - (SELECT MIN(year) FROM w WHERE surface = 'hard')", -21.503247088909994], [" SELECT COUNT(*) FROM w WHERE surface = 'hard' AND year - row_id = (SELECT MIN(year) FROM w WHERE surface = 'hard') AND year - row_id < (SELECT MAX(year) FROM w WHERE surface = 'hard') - (SELECT COUNT(*) FROM w WHERE surface = 'hard') + 1", -22.670393517020006]]}, "1201": {"question": "the total amount of riders who did not qualify", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -3.3892984758200004], [" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -3.3892984758200004], [" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -3.3892984758200004], [" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -3.3892984758200004], [" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -3.3892984758200004], [" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -3.3892984758200004], [" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -3.3892984758200004], [" SELECT COUNT(*) FROM w WHERE `pos` = 'dnq'", -4.459964961000001], [" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -5.17003022547], [" SELECT COUNT(*) FROM w WHERE pos = 'dnq'", -5.83861947582]]}, "1218": {"question": "from 2005-2012, in the team speedway junior world championship, how many more first place wins than all other teams put together?", "gold_answer": ["Poland"], "pred_answer": {"0": [[6], [1], [9], [0], [8], [7], [8], [8], [0], [0]], "1": [[3], [8], [9], [0], [8], [18], [1], [926], [null], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winners LIKE '%poland%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winners NOT LIKE '%poland%'", -6.193923881414], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%winners%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winners NOT LIKE '%winners%'", -8.163719390564001], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winners != 'poland'", -8.878048187403998], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%first place%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winners LIKE '%all other teams put together%'", -9.342327876924], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%(% pts)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE runner-up LIKE '%(% pts)%' OR `3rd place` LIKE '%(% pts)%'", -9.469258667203995], [" SELECT COUNT(DISTINCT winners) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT runner-up) + COUNT(DISTINCT `3rd place`) FROM w", -10.6550835633094], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%(% pts)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winners NOT LIKE '%(% pts)'", -14.173784296684], [" SELECT COUNT(*) FROM w WHERE winners LIKE '%(%pts%)'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, 'pts') - (INSTR(winners, '(') + 1)) AS INT)) + SUM(CAST(SUBSTR(runner-up, INSTR(runner-up, '(') + 1, INSTR(runner-up, 'pts') - (INSTR(runner-up, '(') + 1)) AS INT)) + SUM(CAST(SUBSTR(`3rd place`, INSTR(`3rd place`, '(') + 1, INSTR(`3rd place`, 'pts') - (INSTR(`3rd place`, '(') + 1)) AS INT)) FROM w", -17.157390480319798], [" SELECT COUNT(*) FROM w WHERE winners LIKE '% ( % pts)%'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(winners, INSTR(winners, '(') + 1, INSTR(winners, 'pts') - (INSTR(winners, '(') + 1)) AS INT)) + SUM(CAST(SUBSTR(runner-up, INSTR(runner-up, '(') + 1, INSTR(runner-up, 'pts') - (INSTR(runner-up, '(') + 1)) AS INT)) + SUM(CAST(SUBSTR(`3rd place`, INSTR(`3rd place`, '(') + 1, INSTR(`3rd place`, 'pts') - (INSTR(`3rd place`, '(') + 1)) AS INT)) FROM w WHERE winners LIKE '% ( % pts)%'", -19.6760546590126], [" SELECT COUNT(*) FROM w WHERE winners LIKE '% ( % pts)%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE runner-up LIKE '% ( % pts)%' OR `3rd place` LIKE '% ( % pts)%'", -22.182854717644002]]}, "1222": {"question": "how man \"c\" windmills have there been?", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [15], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location LIKE '%c%'", -2.94823534497], [" SELECT COUNT(*) FROM w WHERE location LIKE '%c%'", -2.94823534497], [" SELECT COUNT(*) FROM w WHERE location LIKE 'c%'", -5.07018352403], [" SELECT COUNT(*) FROM w WHERE location LIKE 'c%'", -5.07018352403], [" SELECT COUNT(*) FROM w WHERE location LIKE 'c%'", -5.07018352403], [" SELECT COUNT(*) FROM w WHERE name of mill and\\ngrid reference LIKE '%c%'", -5.276977535964999], [" SELECT COUNT(*) FROM w WHERE name of mill and\\ngrid reference LIKE '%c%'", -5.276977535964999], [" SELECT COUNT(*) FROM w WHERE name of mill and\\ngrid reference LIKE '%c%'", -6.27485255287], [" SELECT COUNT(*) FROM w WHERE name of mill and\\ngrid reference LIKE '%c%'", -7.119220835964999], [" SELECT COUNT(*) FROM w WHERE name of mill and\\ngrid reference LIKE 'c%'", -7.31740109387]]}, "1259": {"question": "were there more than four episodes that featured cynthia?", "gold_answer": ["Yes"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -3.5075496841700002], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -3.5097051926700003], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -3.5097051926700003], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -4.04462588685], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -7.39754593308], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -8.87716433344], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -10.99413718678], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -11.79690973108], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -11.86106903838], [" SELECT COUNT(*) FROM w WHERE character = 'cynthia'", -14.575904255122]]}, "1263": {"question": "which countries won at least 3 silver medals?", "gold_answer": ["United States"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE silver >= 3", -1.26596721578], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -1.26596721578], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -1.26596721578], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -1.26596721578], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -1.26658837488], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -1.26658837488], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -1.26658837488], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -4.39806715872], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -6.870431291969999], [" SELECT COUNT(*) FROM w WHERE silver >= 3", -8.29317339878]]}, "4": {"question": "what is the number of tv shows that charmaine sheh has appeared on?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [6], [6], [6], [6], [6], [0], [6], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT(`name of show`)) FROM w", -3.7282080335720003], [" SELECT COUNT(DISTINCT name of show) FROM w", -5.178681949172001], [" SELECT COUNT(DISTINCT name of show) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -8.987694777674], [" SELECT COUNT(DISTINCT name of show) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -8.987694777674], [" SELECT COUNT(DISTINCT name of show) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -8.996049095026999], [" SELECT COUNT(DISTINCT name of show) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -9.875357264027], [" SELECT COUNT(DISTINCT name of show) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -11.426717601322], [" SELECT COUNT(DISTINCT name of show) FROM w WHERE name of show LIKE '%charmaine sheh%'", -13.735056821162003], [" SELECT COUNT(DISTINCT name of show) FROM w WHERE winner(s) LIKE '%charmaine sheh%'", -15.692737663922001], [" SELECT COUNT(DISTINCT name of show) FROM w WHERE name of show LIKE '%charmaine sheh%'", -18.988854585302]]}, "45": {"question": "how many times was waterford the opposition?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -3.7017639611599997], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -5.68477679921], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -7.24897027722], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -7.822364631739999], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -7.93877659574], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -7.9400010212100005], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -7.94086623722], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -8.14368898721], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -8.71913012922], [" SELECT COUNT(*) FROM w WHERE opposition = 'waterford'", -13.679802032080001]]}, "86": {"question": "which was the only album to be released by b'in music in an even-numbered year?", "gold_answer": ["Kissing The Future of Love"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [1], "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE label = 'b'in music' AND EXTRACT(YEAR FROM `release date`) % 2 = 0", -6.42677658871], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music' AND (CAST(SUBSTR(`release date`, 1, 4) AS INT) % 2) = 0", -8.33942774316], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music' AND (CAST(SUBSTR(`release date`, 1, 4) AS INT) % 2) = 0", -8.33942774316], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music' AND (CAST(SUBSTR(`release date`, 1, 4) AS INT) % 2 = 0)", -8.672656147979998], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music' AND (CAST(SUBSTR(`release date`, 1, 4) AS INT) % 2 = 0)", -8.672656147979998], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music' AND CAST(SUBSTR(`release date`, 1, 4) AS INT) % 2 = 0", -8.943201171690001], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music' AND (CAST(SUBSTR(`release date`, 1, 4) AS INT) % 2) = 0", -10.621232030439996], [" SELECT COUNT(DISTINCT album#) FROM w WHERE release date LIKE '%00-%'", -11.738566656614001], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music' AND YEAR(`release date`) % 2 = 0", -14.727100115340003], [" SELECT COUNT(*) FROM w WHERE label = \"b'in music\" AND YEAR(`release date`) % 2 = 0", -18.46032294527]]}, "127": {"question": "how many times did brazil score during the game on november 6th?", "gold_answer": ["2"], "pred_answer": {"0": [[1], [1], [1], [2], [1], [1], [21], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE '1968-11-06%'", -4.78001979646], [" SELECT COUNT(*) FROM w WHERE date LIKE '1968-11-06%'", -4.794286673459999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1968-11-06%'", -7.780623177659999], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE `date` LIKE '1968-11-06%'", -7.958476859860002], [" SELECT COUNT(*) FROM w WHERE date = '1968-11-06 00:00:00'", -7.98461137752], [" SELECT COUNT(*) FROM w WHERE date = '1968-11-06 00:00:00'", -7.98461137752], [" SELECT SUM(CAST(REPLACE(`score`, '-', '') AS INT)) FROM w WHERE `date` LIKE '1968-11-06%'", -11.043352245750002], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1968-11-06%'", -11.65317158779], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1968-11-06%'", -13.52010418919], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1968-11-06%'", -14.05450323919]]}, "168": {"question": "how many matters require at least one tenth of the existing representatives or senators?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [0], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[3]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%at least 0.1 of the existing representatives or senators%'", -5.783073134165001], [" SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%at least 0.1 of the existing representatives or senators%'", -5.801041201005002], [" SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%one tenth of the existing representatives or senators%'", -6.088895783815], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%at least 0.1 of the existing representatives or senators%'", -6.166586057505001], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%at least 0.1%'", -8.223489893835001], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%at least 0.1%'", -10.437239093835], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%at least 0.1 of the existing representatives or senators%'", -11.786247603785], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%at least 0.1 of the existing representatives or senators%'", -12.424180323785], [" SELECT COUNT(*) FROM w WHERE `eligible petitioners` LIKE '%at least 0.1 of the existing representatives or senators%'", -13.680406652784999], [" SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%at least 0.1%'\nQ2: {how many = a2} matters require the representative in question.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%the representative in question%'\nQ3: {how many = a3} matters require any person whose constitutionally recognised right or freedom has been violated.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%any person whose constitutionally recognised right or freedom has been violated%'\nQ4: {how many = a4} matters require a party to such case.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%a party to such case%'\nQ5: {how many = a5} matters require the prime minister.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%the prime minister%'\nQ6: {how many = a6} matters require the representative in question.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE eligible petitioners LIKE '%", -25.618808970744013]]}, "209": {"question": "name the only pillow pal that is a dalmatian.", "gold_answer": ["Spotty"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE animal type = 'dalmatian'", -1.8163733462700002], [" SELECT COUNT(*) FROM w WHERE animal type = 'dalmatian'", -1.8163733462700002], [" SELECT COUNT(*) FROM w WHERE animal type = 'dalmatian'", -1.8163733462700002], [" SELECT COUNT(*) FROM w WHERE animal type = 'dalmatian'", -1.81647970322], [" SELECT COUNT(*) FROM w WHERE animal type = 'dalmatian'", -1.81647970322], [" SELECT COUNT(*) FROM w WHERE animal type = 'dalmatian'", -1.81647970322], [" SELECT COUNT(*) FROM w WHERE `animal type` = 'dalmatian'", -1.9722572123599997], [" SELECT COUNT(*) FROM w WHERE `animal type` = 'dalmatian'", -1.9729376696599998], [" SELECT COUNT(*) FROM w WHERE animal type = 'dalmatian'", -3.30630083886], [" SELECT COUNT(*) FROM w WHERE animal type = 'dalmatian'", -3.3093863586600003]]}, "250": {"question": "which total is higher, the europa league total or the league total?", "gold_answer": ["League"], "pred_answer": {"0": [[44], [44], [44], [44], [44], [44], [44], [44], [44], [44]], "1": [[116], [116], [116], [116], [116], [116], [116], [116], [116], [116]]}, "nsql": [[" SELECT SUM(`europa league`) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -2.15592861982], [" SELECT SUM(`europa league`) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -2.15592861982], [" SELECT SUM(`europa league`) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -2.15592861982], [" SELECT SUM(europa league) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -4.377466495829999], [" SELECT SUM(europa league) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -4.377466495829999], [" SELECT SUM(europa league) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -4.377466495829999], [" SELECT SUM(`europa league`) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -5.009480351930001], [" SELECT SUM(europa league) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -5.15403413092], [" SELECT SUM(europa league) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -5.1639426749899995], [" SELECT SUM(europa league) FROM w\nNeuralSQL2: SELECT SUM(league) FROM w", -5.536330264204]]}, "291": {"question": "what are the number of titles with a date of november?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [0], [0], "<error>", [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE '%-11-%'", -2.59090930981], [" SELECT COUNT(*) FROM w WHERE date LIKE '%-11-%'", -2.59090930981], [" SELECT COUNT(*) FROM w WHERE date LIKE '%-11-%'", -2.5966078513000004], [" SELECT COUNT(*) FROM w WHERE date LIKE '%-11-%'", -2.5966078513000004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%-11-%'", -2.983845559314], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%-11-%'", -2.983845559314], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 11 - %'", -3.731872792314], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 11 - %'", -3.7401557593140002], [" SELECT COUNT(*) FROM w WHERE DATE_FORMAT(date, '%M') = 'November'", -6.003444192453999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 11 - %'\nQ2: there are {how many = a2} dates with a title of english translation.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `title (english translation)` LIKE '% - %'\nQ3: there are {how many = a3} titles with a date of november.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 11 - %'\nQ4: there are {how many = a4} dates with a title of english translation.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `title (english translation)` LIKE '% - %'\nQ5: there are {how many = a5} dates with a title of english translation.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `title (english translation)` LIKE '% - %'\nQ6: there are {how many = a6} dates with a title of english translation.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `title (english", -38.590759275383]]}, "332": {"question": "what are the number of matches that happened in japan?", "gold_answer": ["5"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'tokyo, japan'", -4.053034714820001], [" SELECT COUNT(*) FROM w WHERE location = 'japan'", -4.31627561632], [" SELECT COUNT(*) FROM w WHERE location LIKE '%japan%'", -4.94656121796], [" SELECT COUNT(*) FROM w WHERE location LIKE '%japan%'", -5.58913550856], [" SELECT COUNT(*) FROM w WHERE location = 'japan'", -5.791010968659999], [" SELECT COUNT(*) FROM w WHERE location = 'japan'", -5.791010968659999], [" SELECT COUNT(*) FROM w WHERE location = 'japan'", -5.791010968659999], [" SELECT COUNT(*) FROM w WHERE location = 'japan'", -5.791010968659999], [" SELECT COUNT(*) FROM w WHERE location = 'japan'", -5.791010968659999], [" SELECT COUNT(*) FROM w WHERE location = 'japan'", -5.791010968659999]]}, "373": {"question": "how many games did spicy horse develop in total?", "gold_answer": ["5"], "pred_answer": {"0": [[8], [8], [8], [8], [5], [8], [8], [5], [5], [8]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[2]], "9": ["<error>"], "10": [[0]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.9223123884700004], [" SELECT COUNT(*) FROM w", -2.9256998346600005], [" SELECT COUNT(*) FROM w", -2.9256998346600005], [" SELECT COUNT(*) FROM w", -2.9256998346600005], [" SELECT COUNT(*) FROM w WHERE developer = 'spicy horse'", -3.54710391457], [" SELECT COUNT(DISTINCT title) FROM w", -4.695878233134801], [" SELECT COUNT(DISTINCT title) FROM w", -7.366424960242599], [" SELECT COUNT(DISTINCT title) FROM w WHERE developer = 'spicy horse'", -9.2409197059926], [" SELECT COUNT(DISTINCT title) FROM w WHERE developer = 'spicy horse'", -10.589785815866], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} games did spicy horse develop in 2011.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2011\nQ3: {how many = a3} games did spicy horse develop on pc.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE platforms LIKE '%pc%'\nQ4: {how many = a4} games did spicy horse develop on ios.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE platforms LIKE '%ios%'\nQ5: {how many = a5} games did spicy horse develop on ios or pc.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE platforms LIKE '%ios%' OR platforms LIKE '%pc%'\nQ6: {how many = a6} games did spicy horse develop on ios and pc.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE platforms LIKE '%ios%' AND platforms LIKE '%pc%'\nQ7: {how many = a7} games did spicy horse develop on ios, but not on", -37.12280383514702]]}, "414": {"question": "how many consecutive seasons has he played sixteen games?", "gold_answer": ["10"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE games = 16", -2.9590400257], [" SELECT COUNT(*) FROM w WHERE games = 16", -2.9590400257], [" SELECT COUNT(*) FROM w WHERE games = 16", -2.9590400257], [" SELECT COUNT(*) FROM w WHERE games = 16", -2.9590400257], [" SELECT COUNT(*) FROM w WHERE games = 16", -2.9590400257], [" SELECT COUNT(*) FROM w WHERE games = 16", -4.778541441900001], [" SELECT COUNT(*) FROM w WHERE games = 16", -4.7885916558], [" SELECT COUNT(*) FROM w WHERE games = 16", -4.7885916558], [" SELECT COUNT(*) FROM w WHERE games = 16", -4.7885916558], [" SELECT COUNT(*) FROM w WHERE games = 16", -9.9878721017]]}, "455": {"question": "who held the title the most times, the super destroyers or the dudley boyz?", "gold_answer": ["The Dudley Boyz"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.8363326882310016], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.836560511861], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.836626704540999], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.836626704540999], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.836626704540999], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.836626704540999], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.8366438551409994], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.837700517624], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.8378501586920013], [" SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%super destroyers%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestlers LIKE '%dudley boyz%'", -2.838016301692001]]}, "496": {"question": "how many speakers (of any language) are represented on the table ?", "gold_answer": ["553 633"], "pred_answer": {"0": [[1107263], [1107263], [1107263], [1107263], [1107263], [1107263], [1107263], [1107263], [1107263], [1107263]]}, "nsql": [[" SELECT SUM(number) FROM w", -1.1433058520600001], [" SELECT SUM(number) FROM w", -1.1433058520600001], [" SELECT SUM(number) FROM w", -1.1433058520600001], [" SELECT SUM(number) FROM w", -1.1433058520600001], [" SELECT SUM(number) FROM w", -1.1433058520600001], [" SELECT SUM(number) FROM w", -1.1433058520600001], [" SELECT SUM(number) FROM w", -1.1433058520600001], [" SELECT SUM(number) FROM w", -1.14330728436], [" SELECT SUM(number) FROM w", -1.14330728436], [" SELECT SUM(number) FROM w", -3.5146424378399996]]}, "537": {"question": "how many representatives were appointed by theodore roosevelt?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE appointed by = 'theodore roosevelt'", -1.6786771165299998], [" SELECT COUNT(*) FROM w WHERE appointed by = 'theodore roosevelt'", -1.6786771165299998], [" SELECT COUNT(*) FROM w WHERE appointed by = 'theodore roosevelt'", -1.6786771165299998], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'theodore roosevelt'", -3.9938313652300006], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'theodore roosevelt'", -3.9948886918299995], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'theodore roosevelt'", -5.98037053527], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'theodore roosevelt'", -8.188760735654], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'theodore roosevelt'", -9.970061735654], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'theodore roosevelt'", -10.093235380654], [" SELECT COUNT(*) FROM w WHERE `appointed by` = 'theodore roosevelt'", -10.842330796654]]}, "540": {"question": "what number of members were inducted before 2009?", "gold_answer": ["14"], "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]], "1": ["<error>"], "2": [[7]], "3": ["<error>"], "4": [[15]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year < 2009", -1.0864832309299999], [" SELECT COUNT(*) FROM w WHERE year < 2009", -1.0864832309299999], [" SELECT COUNT(*) FROM w WHERE year < 2009", -1.0864832309299999], [" SELECT COUNT(*) FROM w WHERE year < 2009", -1.0864832309299999], [" SELECT COUNT(*) FROM w WHERE year < 2009", -1.0864832309299999], [" SELECT COUNT(*) FROM w WHERE year < 2009", -1.0864832309299999], [" SELECT COUNT(*) FROM w WHERE year < 2009", -1.0864832309299999], [" SELECT COUNT(*) FROM w WHERE year < 2009", -3.0245074305300004], [" SELECT COUNT(*) FROM w WHERE year < 2009", -3.0245074305300004], [" SELECT COUNT(*) FROM w WHERE year < 2009\nQ2: {how many = a2} members were inducted in 2008.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nQ3: {how many = a3} members were inducted for wrestling.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling'\nQ4: {how many = a4} members were inducted for wrestling and promoting.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and promoting'\nQ5: {how many = a5} members were inducted for wrestling and promoting and won the nwa world tag team championship (central states version) (1 time) and nwa southern tag team championship (mid-atlantic version) (3 times).\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `inducted for` = 'wrestling and promoting' AND notes LIKE '%won the nwa world tag team championship (central states version) (1 time) and nwa southern tag team championship (mid-", -26.57732571995498]]}, "561": {"question": "how many swimmers finished in less than 1:55?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [3], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE time < '01:55:00'", -3.6895981572499994], [" SELECT COUNT(*) FROM w WHERE time < '01:55:00'", -3.69116362425], [" SELECT COUNT(*) FROM w WHERE time < '01:55:00'", -3.6923161502499995], [" SELECT COUNT(*) FROM w WHERE time < '01:55:00'", -3.6923161502499995], [" SELECT COUNT(*) FROM w WHERE time < '01:55:00'", -3.6923161502499995], [" SELECT COUNT(*) FROM w WHERE time < '2023-02-20 01:55:00'", -4.0110268451960005], [" SELECT COUNT(*) FROM w WHERE time < '01:55:00'", -5.54204162125], [" SELECT COUNT(*) FROM w WHERE time < '01:55:00'", -6.04096212125], [" SELECT COUNT(*) FROM w WHERE `time` < '01:55:00'", -6.80981161465], [" SELECT COUNT(*) FROM w WHERE time < '1:55:00'", -7.328093937249999]]}, "578": {"question": "how many routes have below 100 km total?", "gold_answer": ["4"], "pred_answer": {"0": [[0], [4], [4], [4], [4], [21], [21], [21], [21], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE length < 100", -5.850871613870001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, 'km', '') AS INT) < 100", -6.276767909480001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, ' km', '') AS INT) < 100", -6.9577858898899985], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, ' km', '') AS INT) < 100", -6.971037190450001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(length, 'km', '') AS INT) < 100", -8.168514604890001], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) < 100", -8.63915610942], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) < 100", -10.6253166463], [" SELECT COUNT(*) FROM w WHERE LENGTH(length) < 100", -10.72021473207], [" SELECT COUNT(*) FROM w WHERE LENGTH(`length`) < 100", -11.909368247869999], [" SELECT COUNT(*) FROM w WHERE length LIKE '%km (%-%mi)' AND CAST(REPLACE(SUBSTR(length, 1, INSTR(length, 'km') - 1), '.', '') AS INT) < 100", -23.65081383099]]}, "582": {"question": "how many districts does punia have?", "gold_answer": ["6"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `name of kingdom` = 'punia'", -3.55249454383], [" SELECT COUNT(DISTINCT `names of districts`) FROM w WHERE `name of kingdom` = 'punia'", -4.38763167299], [" SELECT COUNT(DISTINCT `names of districts`) FROM w WHERE `name of kingdom` = 'punia'", -4.38763167299], [" SELECT COUNT(DISTINCT(`names of districts`)) FROM w WHERE `name of kingdom` = 'punia'", -5.26368026482], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'punia'", -5.56478686883], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'punia'", -5.56478686883], [" SELECT COUNT(DISTINCT `names of districts`) FROM w WHERE `name of kingdom` = 'punia'", -5.79729726086], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'punia'", -6.656239160829999], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'punia'", -7.2094980689699995], [" SELECT COUNT(*) FROM w WHERE name of kingdom = 'punia'", -10.95277131897]]}, "619": {"question": "how many episodes are listed?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.3780008152699998], [" SELECT COUNT(*) FROM w", -1.3780008152699998], [" SELECT COUNT(*) FROM w", -1.3780008152699998], [" SELECT COUNT(*) FROM w", -1.3780008152699998], [" SELECT COUNT(*) FROM w", -1.3780008152699998], [" SELECT COUNT(*) FROM w", -1.3780008152699998], [" SELECT COUNT(*) FROM w", -1.3780008152699998], [" SELECT COUNT(*) FROM w", -1.3780008152699998], [" SELECT COUNT(*) FROM w", -1.3781097813499998], [" SELECT COUNT(*) FROM w", -2.04616621621]]}, "623": {"question": "which suture can remain to at most 42 days", "gold_answer": ["Polydioxanone (PDS)"], "pred_answer": {"0": [[0], [0], [1], "<error>", [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE plain catgut LIKE '%42 days%' OR chromic catgut LIKE '%42 days%' OR `polyglycolide\\n(p.g.a.)` LIKE '%42 days%' OR `polydioxanone (pds)` LIKE '%42 days%'", -6.7995829043889975], [" SELECT COUNT(*) FROM w WHERE `filledcolumnname` = 'description' AND `plain catgut` LIKE '%42 days%'", -9.875705587687998], [" SELECT COUNT(*) FROM w WHERE `chromic catgut` LIKE '%roughly twice the stitch-holding time of plain catgut%'", -10.048215640314], [" SELECT COUNT(*) FROM w WHERE description LIKE '%absorbable%' AND description LIKE '%42%'", -10.553646446814], [" SELECT COUNT(*) FROM w WHERE `chromic catgut` LIKE '%42 days%'", -11.692109589401], [" SELECT COUNT(*) FROM w WHERE `plain catgut` LIKE '%42 days%' OR `chromic catgut` LIKE '%42 days%' OR `polyglycolide\\n(p.g.a.)` LIKE '%42 days%' OR `polydioxanone (pds)` LIKE '%42 days%'", -13.020567805486], [" SELECT COUNT(*) FROM w WHERE `plain catgut` LIKE '%42 days%' OR `chromic catgut` LIKE '%42 days%' OR `polyglycolide\\n(p.g.a.)` LIKE '%42 days%' OR `polydioxanone (pds)` LIKE '%42 days%'", -13.551195405485998], [" SELECT COUNT(*) FROM w WHERE `polyglycolide\\n(p.g.a.)` LIKE '%42 days%'", -14.144399900718001], [" SELECT COUNT(*) FROM w WHERE `chromic catgut` LIKE '% 42 days%'", -14.771985401983999], [" SELECT COUNT(*) FROM w WHERE `filledcolumnname` = 'description' AND (`plain catgut` LIKE '%42%' OR `chromic catgut` LIKE '%42%' OR `polyglycolide\\n(p.g.a.)` LIKE '%42%' OR `polydioxanone (pds)` LIKE '%42%')", -18.224872214837003]]}, "664": {"question": "other than soko, tell me a player who is not from the us.", "gold_answer": ["Beas Hamga"], "pred_answer": {"0": [[2], [2], [2], [2], [13], [2], [2], [13], [2], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name != 'soko' AND hometown NOT LIKE '%u.s.%'", -5.00544097067], [" SELECT COUNT(*) FROM w WHERE name != 'soko' AND hometown NOT LIKE '% u.s.%'", -5.47111389001], [" SELECT COUNT(*) FROM w WHERE name != 'soko' AND hometown NOT LIKE '% u.s.%'", -5.4802361599700005], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%u.s.%' AND name != 'soko'", -5.69691355747], [" SELECT COUNT(*) FROM w WHERE name != 'soko' AND hometown NOT LIKE '% , u.s.%'", -6.30239953312], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '% u.s.%' AND name != 'soko'", -6.35448537897], [" SELECT COUNT(*) FROM w WHERE name != 'soko' AND hometown NOT LIKE '% u.s.%'", -6.54443110201], [" SELECT COUNT(*) FROM w WHERE name != 'soko' AND hometown NOT LIKE '%us%'", -8.705253757610002], [" SELECT COUNT(*) FROM w WHERE (hometown NOT LIKE '%u.s.%' OR hometown IS NULL) AND name != 'soko'", -9.791117278020002], [" SELECT COUNT(*) FROM w WHERE name <> 'soko' AND hometown <> 'nashville, tn, u.s.'", -10.64515167088]]}, "705": {"question": "who ruled longer, ali saibou or mamadou tandja?", "gold_answer": ["Mamadou Tandja"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [5], [6], [6]], "1": [[11], [11], [11], [11], [11], [11], [11], [10], [11], [11]]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(DISTINCT year) FROM w WHERE president = 'mamadou tandja'", -2.744301929603499], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(DISTINCT year) FROM w WHERE president = 'mamadou tandja'", -2.744301929603499], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(DISTINCT year) FROM w WHERE president = 'mamadou tandja'", -2.755682968102501], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(DISTINCT year) FROM w WHERE president = 'mamadou tandja'", -2.755682968102501], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(DISTINCT year) FROM w WHERE president = 'mamadou tandja'", -2.755682968102501], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(DISTINCT year) FROM w WHERE president = 'mamadou tandja'", -2.755682968102501], [" SELECT COUNT(DISTINCT year) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(DISTINCT year) FROM w WHERE president = 'mamadou tandja'", -2.755682968102501], [" SELECT MAX(year) - MIN(year) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT MAX(year) - MIN(year) FROM w WHERE president = 'mamadou tandja'", -3.353767281877999], [" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE president = 'mamadou tandja'", -5.433998374194999], [" SELECT COUNT(*) FROM w WHERE president = 'ali saibou'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE president = 'mamadou tandja'", -5.433998374194999]]}, "746": {"question": "what is the total number of nations that participated in the beach games of 2012?", "gold_answer": ["23"], "pred_answer": {"0": [[24], [24], [24], [24], [24], [24], [24], [24], [24], [24]]}, "nsql": [[" SELECT COUNT(DISTINCT nation) FROM w", -4.630867435786], [" SELECT COUNT(DISTINCT nation) FROM w", -7.138713297856], [" SELECT COUNT(DISTINCT nation) FROM w", -7.144651010001001], [" SELECT COUNT(DISTINCT nation) FROM w", -7.144651010001001], [" SELECT COUNT(DISTINCT(nation)) FROM w", -8.730816891692001], [" SELECT COUNT(DISTINCT nation) FROM w", -9.840650807855999], [" SELECT COUNT(DISTINCT nation) FROM w", -11.375158622001], [" SELECT COUNT(DISTINCT nation) FROM w", -11.421647385856], [" SELECT COUNT(DISTINCT nation) FROM w", -11.655753370001001], [" SELECT COUNT(DISTINCT nation) FROM w", -12.658027570001]]}, "787": {"question": "how many luxembourg cities had a date of law of feb 24, 1843?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [1], [1], [1], [1], [1], [1], [1], [1], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00'", -3.0349337218700003], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00' AND canton = 'luxembourg'", -3.23936340544], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00' AND canton = 'luxembourg'", -3.2408006248400008], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00' AND canton = 'luxembourg'", -3.2408006248400008], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00' AND canton = 'luxembourg'", -3.2408006248400008], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00' AND canton = 'luxembourg'", -3.2408006248400008], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00' AND canton = 'luxembourg'", -3.2408006248400008], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00' AND canton = 'luxembourg'", -3.2408006248400008], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00' AND canton = 'luxembourg'", -3.2447120969900003], [" SELECT COUNT(*) FROM w WHERE `date of law` = '1843-02-24 00:00:00'\n```", -13.20395761124]]}, "828": {"question": "which venue is listed the most?", "gold_answer": ["Athens, Greece"], "pred_answer": {"0": [["tokyo, japan"], ["tokyo, japan", 2], ["tokyo, japan", 2], ["tokyo, japan", 2], ["tokyo, japan", 2], ["tokyo, japan", 2], ["tokyo, japan", 2], ["tokyo, japan"], ["tokyo, japan", 2], ["tokyo, japan", 2, "sydney, australia", 2, "helsinki, finland", 2, "barcelona, spain", 2, "atlanta, united states", 2, "athens, greece", 2, "toronto, canada", 1, "stuttgart, germany", 1, "split, yugoslavia", 1, "seville, spain", 1, "paris, france", 1, "m\u00e9zidon-canon, france", 1, "munich, germany", 1, "gothenburg, sweden", 1, "eisenh\u00fcttenstadt, germany", 1, "edmonton, canada", 1, "budapest, hungary", 1, "brisbane, australia", 1, "birmingham, united kingdom", 1]], "1": ["<error>"]}, "nsql": [[" SELECT venue FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1", -3.5483747058499997], [" SELECT venue, COUNT(*) FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1", -3.6569446641830003], [" SELECT venue, COUNT(*) FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1", -3.6569446641830003], [" SELECT venue, COUNT(*) FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1", -3.6569446641830003], [" SELECT venue, COUNT(*) FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1", -3.6569446641830003], [" SELECT venue, COUNT(*) FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1", -3.6583771571340002], [" SELECT venue, COUNT(*) FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1", -3.682613666714001], [" SELECT venue FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1", -4.4520945399], [" SELECT venue, COUNT(*) FROM w GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 1\n```", -6.3357739836], [" SELECT venue, COUNT(*) FROM w GROUP BY venue ORDER BY COUNT(*) DESC", -14.375430536790002]]}, "869": {"question": "how many floors does the tallest building have?", "gold_answer": ["20"], "pred_answer": {"0": [[20.0], [20.0], [20.0], [20.0], [20.0], [20.0], [20.0], [20.0], [20.0], [20.0]], "1": ["<error>"], "2": [["zions bank building; ; ; ; ; zions bank building in downtown boise, idaho"]], "3": ["<error>"], "4": [[9]], "5": ["<error>"], "6": [[6]]}, "nsql": [[" SELECT MAX(floors) FROM w", -2.560161223024], [" SELECT MAX(floors) FROM w", -2.560161223024], [" SELECT MAX(floors) FROM w", -2.560161223024], [" SELECT MAX(floors) FROM w", -2.560161223024], [" SELECT MAX(floors) FROM w", -2.560161223024], [" SELECT MAX(`floors`) FROM w", -3.69269822838], [" SELECT MAX(`floors`) FROM w", -4.29032983738], [" SELECT MAX(`floors`) FROM w", -4.29032983738], [" SELECT floors FROM w ORDER BY height DESC LIMIT 1", -8.216997066720001], [" SELECT MAX(floors) FROM w\nQ2: the name of the tallest building is {how many = a2}.\nNeuralSQL2: SELECT name FROM w WHERE floors = (SELECT MAX(floors) FROM w)\nQ3: there are {how many = a3} buildings with a height larger than 180 ft.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE height > '180 ft'\nQ4: {how many = a4} buildings were built before 1980.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year < 1980", -40.24750669696499]]}, "910": {"question": "how many number of titles are listed for the year 1991?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1991", -1.49351620089], [" SELECT COUNT(*) FROM w WHERE year = 1991", -1.49351620089], [" SELECT COUNT(*) FROM w WHERE year = 1991", -1.49351620089], [" SELECT COUNT(*) FROM w WHERE year = 1991", -1.49364152529], [" SELECT COUNT(*) FROM w WHERE year = 1991", -1.51378904459], [" SELECT COUNT(*) FROM w WHERE year = 1991", -1.51378904459], [" SELECT COUNT(DISTINCT title) FROM w WHERE year = 1991", -3.2897637411160003], [" SELECT COUNT(*) FROM w WHERE year = 1991", -3.8097077504899994], [" SELECT COUNT(*) FROM w WHERE year = 1991", -3.8098956146900003], [" SELECT COUNT(DISTINCT title) FROM w WHERE year = 1991", -4.680629978526]]}, "951": {"question": "how many consecutive years did rathnure win?", "gold_answer": ["2"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'rathnure'", -2.90057346839], [" SELECT COUNT(*) FROM w WHERE winner = 'rathnure'", -2.90057346839], [" SELECT COUNT(*) FROM w WHERE winner = 'rathnure'", -2.90057346839], [" SELECT COUNT(*) FROM w WHERE winner = 'rathnure'", -2.90057346839], [" SELECT COUNT(*) FROM w WHERE winner = 'rathnure'", -2.9007647252899997], [" SELECT COUNT(*) FROM w WHERE winner = 'rathnure'", -2.9007647252899997], [" SELECT COUNT(*) FROM w WHERE winner = 'rathnure'", -2.9007647252899997], [" SELECT COUNT(*) FROM w WHERE winner = 'rathnure'", -4.59082985189], [" SELECT COUNT(*) FROM (SELECT DISTINCT year FROM w WHERE winner = 'rathnure') AS t", -11.841897015437], [" SELECT COUNT(*) FROM w WHERE winner = 'rathnure' AND (year = '1956-57' OR year = '1955-56' OR year = '1954-55' OR year = '1953-54' OR year = '1952-53' OR year = '1951-52' OR year = '1950-51' OR year = '1949-50' OR year = '1948-49')", -20.084831018590002]]}, "992": {"question": "how many buildings have at least ten floors?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE floors >= 10", -1.21214198195], [" SELECT COUNT(*) FROM w WHERE floors >= 10", -1.21723626295], [" SELECT COUNT(*) FROM w WHERE floors >= 10", -1.21723626295], [" SELECT COUNT(*) FROM w WHERE floors >= 10", -1.21723626295], [" SELECT COUNT(*) FROM w WHERE floors >= 10", -1.21723626295], [" SELECT COUNT(*) FROM w WHERE floors >= 10", -3.2326101833500003], [" SELECT COUNT(*) FROM w WHERE floors >= 10", -3.2326101833500003], [" SELECT COUNT(*) FROM w WHERE floors >= 10", -3.2326101833500003], [" SELECT COUNT(*) FROM w WHERE `floors` >= 10", -4.926619765769999], [" SELECT COUNT(*) FROM w WHERE floors >= 10\n```", -8.70903637992]]}, "1033": {"question": "which year had the most stamps issued?", "gold_answer": ["1973"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [345200], [4], [4]], "1": [[5], [5], [5], [5], [5], [5], [5], [213430], [5], [5]], "2": [[4], [4], [4], [4], [4], [4], [4], [192930], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -2.4395590433090004], [" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -2.4395590433090004], [" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -2.4436803344310007], [" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -2.443784176871001], [" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -2.4468072562140004], [" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -2.4471710287560002], [" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975%-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974%-%-%'", -3.356248494084999], [" SELECT SUM(`qty. issued`) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT SUM(`qty. issued`) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT SUM(`qty. issued`) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -4.7248434043315], [" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -10.150125492626001], [" SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1973-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1975-%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `stamp issue date` LIKE '1974-%-%'", -11.276570316309002]]}, "1074": {"question": "how many albums sold for than 50,000 copies this year?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE sales > 50000", -1.08464784846], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -1.08464784846], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -1.08464784846], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -1.08464784846], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -1.08464784846], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -1.08464784846], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -1.08669141186], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -1.08767853306], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -4.538935679080001], [" SELECT COUNT(*) FROM w WHERE sales > 50000", -4.88790057448]]}, "1115": {"question": "which language did only .42% of people in the imperial census of 1897 speak in the p&#322;ock governorate?", "gold_answer": ["Ukrainian"], "pred_answer": {"0": [[1], [1], [1], [1], "<error>", "<error>", "<error>", [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `percentage (%)` = '0.42'", -3.0488943718399995], [" SELECT COUNT(*) FROM w WHERE `percentage (%)` = '0.42'", -3.0488943718399995], [" SELECT COUNT(*) FROM w WHERE `percentage (%)` = '0.42'", -3.0488943718399995], [" SELECT COUNT(*) FROM w WHERE `percentage (%)` = '0.42'", -3.0488943718399995], [" SELECT COUNT(*) FROM w WHERE percentage = '0.42'", -3.85371218821], [" SELECT COUNT(*) FROM w WHERE percentage = '0.42'", -3.85371218821], [" SELECT COUNT(*) FROM w WHERE percentage = '0.42'", -3.85371218821], [" SELECT COUNT(DISTINCT language) FROM w WHERE `percentage (%)` = '0.42'", -4.2292729626000005], [" SELECT COUNT(DISTINCT language) FROM w WHERE `percentage (%)` = '0.42'", -4.2292729626000005], [" SELECT COUNT(*) FROM w WHERE percentage (%) = '0.42'", -4.4889648296499995]]}, "1156": {"question": "which athlete is the only american to be ranked in the 20km?", "gold_answer": ["Trevor Barron"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT athlete) FROM w WHERE nationality = 'american'", -3.960458790559], [" SELECT COUNT(*) FROM w WHERE nationality = 'american' AND rank IS NOT NULL", -5.62364819315], [" SELECT COUNT(*) FROM w WHERE nationality = 'american' AND rank IS NOT NULL", -5.62364819315], [" SELECT COUNT(*) FROM w WHERE nationality = 'american' AND rank IS NOT NULL", -5.62364819315], [" SELECT COUNT(*) FROM w WHERE nationality = 'american' AND rank IS NOT NULL", -5.62364819315], [" SELECT COUNT(*) FROM w WHERE nationality = 'american' AND rank IS NOT NULL", -5.62364819315], [" SELECT COUNT(*) FROM w WHERE nationality = 'american'", -5.996492741414], [" SELECT COUNT(*) FROM w WHERE nationality = 'american' AND rank = '20km'", -8.864965835150002], [" SELECT COUNT(*) FROM w WHERE nationality = 'american' AND rank = (SELECT MAX(rank) FROM w WHERE nationality = 'american')", -11.875453540856], [" SELECT COUNT(*) FROM w WHERE nationality = 'american'", -12.533537618414]]}, "1197": {"question": "which genre is featured the most in this chart?", "gold_answer": ["Operette"], "pred_answer": {"0": [["operette", 23], ["operette", 23], ["operette", 23], ["operette", 23], [3], [23], ["operette", 23], ["operette", 23], ["operette", 23], ["operette", 23]]}, "nsql": [[" SELECT genre, COUNT(*) FROM w GROUP BY genre ORDER BY COUNT(*) DESC LIMIT 1", -3.9564295251], [" SELECT genre, COUNT(*) FROM w GROUP BY genre ORDER BY COUNT(*) DESC LIMIT 1", -3.9564295251], [" SELECT genre, COUNT(*) FROM w GROUP BY genre ORDER BY COUNT(*) DESC LIMIT 1", -3.956742154439999], [" SELECT genre, COUNT(*) FROM w GROUP BY genre ORDER BY COUNT(*) DESC LIMIT 1", -3.956742154439999], [" SELECT COUNT(*) FROM w WHERE genre = 'burleske-operette'", -6.468126386629], [" SELECT COUNT(*) FROM w GROUP BY genre ORDER BY COUNT(*) DESC LIMIT 1", -6.6987099069300005], [" SELECT genre, COUNT(*) AS c FROM w GROUP BY genre ORDER BY c DESC LIMIT 1", -7.15694171264], [" SELECT genre, COUNT(*) AS c FROM w GROUP BY genre ORDER BY c DESC LIMIT 1", -7.1588987053599995], [" SELECT genre, COUNT(*) AS c FROM w GROUP BY genre ORDER BY c DESC LIMIT 1", -7.474510121939999], [" SELECT DISTINCT genre, COUNT(*) FROM w GROUP BY genre ORDER BY COUNT(*) DESC LIMIT 1", -7.5461028078200005]]}, "1200": {"question": "what are the number of times an ipad was used as a platform?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -2.983189820134], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -2.986964812634], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -2.986964812634], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -2.986964812634], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -2.986964812634], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -2.986964812634], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -2.986964812634], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -5.88272834368], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'", -7.4319950102079995], [" SELECT COUNT(*) FROM w WHERE platforms LIKE '%ipad%'\n```", -13.277031655134]]}, "1221": {"question": "how many teams won only 1 match?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE won = 1", -1.09050607508], [" SELECT COUNT(*) FROM w WHERE won = 1", -1.09050607508], [" SELECT COUNT(*) FROM w WHERE won = 1", -1.09050607508], [" SELECT COUNT(*) FROM w WHERE won = 1", -1.09050607508], [" SELECT COUNT(*) FROM w WHERE won = 1", -1.1045357305799999], [" SELECT COUNT(*) FROM w WHERE won = 1", -1.1045357305799999], [" SELECT COUNT(*) FROM w WHERE won = 1", -1.1045357305799999], [" SELECT COUNT(*) FROM w WHERE won = 1", -1.1045357305799999], [" SELECT COUNT(*) FROM w WHERE won = 1", -1.1045357305799999], [" SELECT COUNT(*) FROM w WHERE won = 1", -3.8070634542799997]]}, "1238": {"question": "what are the number of territories that have a wine consumption above 10.0?", "gold_answer": ["5"], "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE wine > 10.0", -1.66928285725], [" SELECT COUNT(*) FROM w WHERE wine > 10.0", -1.66928285725], [" SELECT COUNT(*) FROM w WHERE wine > 10.0", -1.66928285725], [" SELECT COUNT(*) FROM w WHERE wine > 10.0", -1.66928285725], [" SELECT COUNT(*) FROM w WHERE wine > 10.0", -1.66928285725], [" SELECT COUNT(*) FROM w WHERE wine > 10.0", -1.66928285725], [" SELECT COUNT(*) FROM w WHERE wine > 10.0", -1.66928285725], [" SELECT COUNT(*) FROM w WHERE wine > 10.0", -3.02801444525], [" SELECT COUNT(*) FROM w WHERE wine > 10.0", -3.02801444525], [" SELECT COUNT(*) FROM w WHERE wine > '10.0'", -11.262116300390002]]}, "1242": {"question": "how many wins does greystones have?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT wins FROM w WHERE team = 'greystones'", -1.60885410179], [" SELECT wins FROM w WHERE team = 'greystones'", -1.6158653914899999], [" SELECT wins FROM w WHERE team = 'greystones'", -1.6158653914899999], [" SELECT wins FROM w WHERE team = 'greystones'", -1.6158653914899999], [" SELECT wins FROM w WHERE team = 'greystones'", -1.6158653914899999], [" SELECT wins FROM w WHERE team = 'greystones'", -1.6158653914899999], [" SELECT SUM(wins) FROM w WHERE team = 'greystones'", -3.37318630335], [" SELECT wins FROM w WHERE team = 'greystones'", -11.70768228823], [" SELECT wins FROM w WHERE team = 'greystones'", -12.11510042213], [" SELECT wins FROM w WHERE team = 'greystones'", -15.77157726052]]}, "1279": {"question": "how many russians finished at least 3rd in the 20km walk?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -2.36149530913], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -2.3620960711000003], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -2.36623413932], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -2.36623413932], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -2.36623413932], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -2.36623413932], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -2.36623413932], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -2.36623413932], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3", -3.6374582151299997], [" SELECT COUNT(*) FROM w WHERE nationality = 'russia' AND rank <= 3.0", -7.229892914403002]]}, "24": {"question": "true or false. the television show \"the two ronnies\" featured more than 10 episodes in a season.", "gold_answer": ["false"], "pred_answer": {"0": [["96"], [197.0], [197.0], [197.0], [11.588235294117647], ["96"], ["96"], [11.588235294117647], [6], [197.0]], "1": ["<error>"], "2": [[17]], "3": ["<error>"], "4": [[17]], "5": ["<error>"], "6": [[17]], "7": ["<error>"], "8": [[17]], "9": ["<error>"], "10": [[17]], "11": ["<error>"]}, "nsql": [[" SELECT MAX(`no. of ep.`) FROM w", -2.35489661019], [" SELECT SUM(`no. of ep.`) FROM w", -2.71366559389], [" SELECT SUM(`no. of ep.`) FROM w", -2.71366559389], [" SELECT SUM(`no. of ep.`) FROM w", -2.71366559389], [" SELECT AVG(`no. of ep.`) FROM w", -3.1450251409900005], [" SELECT MAX(`no. of ep.`) FROM w", -6.2250398861899985], [" SELECT MAX(`no. of ep.`) FROM w", -6.228520808189999], [" SELECT AVG(`no. of ep.`) FROM w", -7.110207580990001], [" SELECT COUNT(DISTINCT(`no. of ep.`)) FROM w", -9.50068887599], [" SELECT SUM(`no. of ep.`) FROM w\nQ2: the television show \"the two ronnies\" featured {how many = a2} seasons.\nNeuralSQL2: SELECT COUNT(DISTINCT(year)) FROM w\nQ3: the television show \"the two ronnies\" featured {how many = a3} seasons.\nNeuralSQL3: SELECT COUNT(DISTINCT(year)) FROM w\nQ4: the television show \"the two ronnies\" featured {how many = a4} season.\nNeuralSQL4: SELECT COUNT(DISTINCT(year)) FROM w\nQ5: the television show \"the two ronnies\" featured {how many = a5} seasons.\nNeuralSQL5: SELECT COUNT(DISTINCT(year)) FROM w\nQ6: the television show \"the two ronnies\" featured {how many = a6} seasons.\nNeuralSQL6: SELECT COUNT(DISTINCT(year)) FROM w\nQ7: the television show \"the two ronnies\" featured", -25.864324003141714]]}, "65": {"question": "how many total games did they win?", "gold_answer": ["22"], "pred_answer": {"0": [[0], [0], [0], [1246], [0], [1246], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -5.214170500364496], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -5.214170500364496], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -5.2188211866715], [" SELECT SUM(pts) FROM w WHERE pts > 0", -5.91403127731], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT))", -6.296920243563998], [" SELECT SUM(pts) FROM w", -8.053019068340001], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -11.117079376848999], [" SELECT COUNT(*) FROM w WHERE SUBSTR(score, 1, INSTR(score, '-') - 1) > SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1))", -12.085946905389997], [" SELECT COUNT(*) FROM w WHERE `score` LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -12.795242170961501], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -14.142089750547001]]}, "106": {"question": "in the 1992-1993 premier league, what was the total number of hat tricks scored by all players?", "gold_answer": ["14"], "pred_answer": {"0": [[14], [14], [14], [14], [14], [13], [14], [14], [14], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE for >= 3", -4.1930823880200006], [" SELECT COUNT(*) FROM w WHERE for >= 3", -4.1930823880200006], [" SELECT COUNT(*) FROM w WHERE for > 2", -4.9541524380199995], [" SELECT COUNT(*) FROM w WHERE for > 2", -4.9541524380199995], [" SELECT COUNT(*) FROM w WHERE for > 3", -4.98119053802], [" SELECT COUNT(DISTINCT player) FROM w WHERE for >= 3", -6.3277815562490005], [" SELECT COUNT(*) FROM w WHERE for >= 3", -6.58469902572], [" SELECT COUNT(*) FROM w WHERE `for` >= 3", -7.467962292020001], [" SELECT COUNT(*) FROM w WHERE `for` >= 3", -9.092511185465], [" SELECT COUNT(*) FROM w WHERE ((for = 3 AND against = 0) OR (for = 4 AND against = 0) OR (for = 5 AND against = 0))", -15.85041852639]]}, "147": {"question": "how many areas have at least 5 stations?", "gold_answer": ["6"], "pred_answer": {"0": [[7, 5, 5, 10, 8, 8], [7, 5, 5, 10, 8, 8], [7, 5, 5, 10, 8, 8], "<error>", [42], "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>"], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY area served HAVING COUNT(*) >= 5", -3.8374782196800004], [" SELECT COUNT(*) FROM w GROUP BY area served HAVING COUNT(*) >= 5", -3.8374782196800004], [" SELECT COUNT(*) FROM w GROUP BY area served HAVING COUNT(*) >= 5", -3.8374782196800004], [" SELECT COUNT(*) FROM w GROUP BY area_served HAVING COUNT(*) >= 5", -4.47703452519], [" SELECT COUNT(*) FROM w WHERE vc > 5", -6.85038476151], [" SELECT COUNT(*) FROM w GROUP BY area_served HAVING COUNT(*) >= 5", -7.5126075093899995], [" SELECT COUNT(*) FROM (SELECT area_served, COUNT(*) FROM w GROUP BY area_served HAVING COUNT(*) >= 5)", -9.962772988289998], [" SELECT COUNT(DISTINCT area) FROM w WHERE COUNT(DISTINCT area) >= 5", -10.4428045977], [" SELECT COUNT(DISTINCT area) FROM w WHERE COUNT(DISTINCT callsign) >= 5", -11.06521080626], [" SELECT COUNT(*) FROM w WHERE area served IN (\n\tSELECT area served FROM w GROUP BY area served HAVING COUNT(*) >= 5\n)", -15.289015746950007]]}, "188": {"question": "which had more ger numbers, 1898 or 1893?", "gold_answer": ["1898"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [20], [2], [20]], "1": [[2], [2], [2], [2], [2], [2], [2], [11], [2], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1898\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1893", -2.4443619083559995], [" SELECT COUNT(*) FROM w WHERE year = 1898\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1893", -2.447087893636], [" SELECT COUNT(*) FROM w WHERE year = 1898\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1893", -2.447087893636], [" SELECT COUNT(*) FROM w WHERE year = 1898\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1893", -2.447588660636], [" SELECT COUNT(*) FROM w WHERE year = 1898\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1893", -2.447588660636], [" SELECT COUNT(*) FROM w WHERE year = 1898\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1893", -2.447588660636], [" SELECT COUNT(*) FROM w WHERE year = 1898\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1893", -2.447588660636], [" SELECT SUM(quantity) FROM w WHERE year = '1898'\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE year = '1893'", -4.142552481336], [" SELECT COUNT(DISTINCT ger nos.) FROM w WHERE year = 1898\nNeuralSQL2: SELECT COUNT(DISTINCT ger nos.) FROM w WHERE year = 1893", -8.5154381584224], [" SELECT SUM(quantity) FROM w WHERE year = 1898\nNeuralSQL2: SELECT SUM(quantity) FROM w WHERE year = 1893", -15.206485339626]]}, "229": {"question": "how many times has the position of 1st been achieved?", "gold_answer": ["12"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = '1st'", -8.20332204625], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -9.037129406250001], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -9.404309796250002], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -9.42942410625], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -9.63091911924], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -9.63805636825], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -10.00470547074], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -11.31833007722], [" SELECT COUNT(*) FROM w WHERE position = '1st'", -12.701730076250001], [" SELECT COUNT(*) FROM w WHERE position = '1st'\nQ2: the number of times the position of 1st has been achieved in the year of 2009 is {how many = a2}.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2009 AND position = '1st'\nQ3: the number of times the position of 1st has been achieved in the year of 2009 and the competition is central american championships is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2009 AND competition = 'central american championships' AND position = '1st'\nQ4: the number of times the position of 1st has been achieved in the year of 2009 and the competition is central american championships and the event is 5000 m is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 2009 AND competition = 'central american championships' AND position = '1st' AND event = '5000 m'\nQ5: the number of times the position of 1st has been achieved in the year of 2009 and the competition is central american championships", -43.28933552906201]]}, "270": {"question": "how many total districts are there in this area?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]], "1": ["<error>"], "2": [[7]], "3": ["<error>"], "4": [[6]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.5446678554], [" SELECT COUNT(*) FROM w", -1.5446678554], [" SELECT COUNT(*) FROM w", -1.5446678554], [" SELECT COUNT(*) FROM w", -1.5446678554], [" SELECT COUNT(*) FROM w", -1.54566745528], [" SELECT COUNT(*) FROM w", -2.9092645943499997], [" SELECT COUNT(*) FROM w", -2.9107728173500003], [" SELECT COUNT(*) FROM w", -2.9107728173500003], [" SELECT COUNT(*) FROM w", -3.6609330403299998], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} districts have a population more than 500,000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `population (as of 2011)` > 500000\nQ3: {how many = a3} districts have a population less than 500,000.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `population (as of 2011)` < 500000\nQ4: {how many = a4} districts have a population more than 500,000 and less than 600,000.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `population (as of 2011)` > 500000 AND `population (as of 2011)` < 600000\nQ5: the number of districts with a population more than 500,000 and less than 600,000 is {how many = a5}.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `population (as of 2011)` > 500000 AND `population (as of 2011)` < 600000\nQ6: the number of districts with a population more than 500,000 and less than", -42.033362933496015]]}, "311": {"question": "does adele or chisu have the highest number of sales?", "gold_answer": ["Adele"], "pred_answer": {"0": [[44297], [44297], [44297], [44297], [44297], [44297], [44297], [44297], [44297], [44297]], "1": [[31541], [31541], [31541], [31541], [31541], [31541], [31541], [31541], [31541], [31541]]}, "nsql": [[" SELECT sales FROM w WHERE artist(s) = 'adele'\nNeuralSQL2: SELECT sales FROM w WHERE artist(s) = 'chisu'", -2.091522211390001], [" SELECT sales FROM w WHERE artist(s) = 'adele'\nNeuralSQL2: SELECT sales FROM w WHERE artist(s) = 'chisu'", -2.091522211390001], [" SELECT sales FROM w WHERE artist(s) = 'adele'\nNeuralSQL2: SELECT sales FROM w WHERE artist(s) = 'chisu'", -2.09352735175], [" SELECT sales FROM w WHERE artist(s) = 'adele'\nNeuralSQL2: SELECT sales FROM w WHERE artist(s) = 'chisu'", -2.09352735175], [" SELECT sales FROM w WHERE artist(s) = 'adele'\nNeuralSQL2: SELECT sales FROM w WHERE artist(s) = 'chisu'", -2.09352735175], [" SELECT sales FROM w WHERE artist(s) = 'adele'\nNeuralSQL2: SELECT sales FROM w WHERE artist(s) = 'chisu'", -2.09352735175], [" SELECT SUM(sales) FROM w WHERE artist(s) = 'adele'\nNeuralSQL2: SELECT SUM(sales) FROM w WHERE artist(s) = 'chisu'", -3.507928785978699], [" SELECT sales FROM w WHERE album = '21'\nNeuralSQL2: SELECT sales FROM w WHERE album = 'kun valaistun'", -5.2420345038130005], [" SELECT sales FROM w WHERE album = '21'\nNeuralSQL2: SELECT sales FROM w WHERE album = 'kun valaistun'", -5.2420345038130005], [" SELECT SUM(sales) FROM w WHERE `artist(s)` = 'adele'\nNeuralSQL2: SELECT SUM(sales) FROM w WHERE `artist(s)` = 'chisu'", -7.895546920707501]]}, "352": {"question": "what were the number of times the venue was located in the united states?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9635222612499998], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9635222612499998], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9635222612499998], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9661298102700002], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9661298102700002], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9661298102700002], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9661298102700002], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9661298102700002], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%united states%'", -1.9688443949499999], [" SELECT COUNT(*) FROM w WHERE venue LIKE '% united states %'", -4.082192318090001]]}, "393": {"question": "how many stamp sets had at least 50,000 issued?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `qty. issued` >= 50000", -2.3889323913900005], [" SELECT COUNT(*) FROM w WHERE `qty. issued` >= 50000", -2.3889323913900005], [" SELECT COUNT(*) FROM w WHERE `qty. issued` >= 50000", -2.3889323913900005], [" SELECT COUNT(*) FROM w WHERE `qty. issued` >= 50000", -2.3889323913900005], [" SELECT COUNT(*) FROM w WHERE `qty. issued` >= 50000", -2.3889323913900005], [" SELECT COUNT(*) FROM w WHERE `qty. issued` > 50000", -3.59975238072], [" SELECT COUNT(DISTINCT `stamp set`) FROM w WHERE `qty. issued` >= 50000", -3.6394358324800002], [" SELECT COUNT(*) FROM w WHERE `qty. issued` >= 50000", -4.56873386268], [" SELECT COUNT(DISTINCT(`stamp set`)) FROM w WHERE `qty. issued` >= 50000", -4.6262994319], [" SELECT COUNT(DISTINCT(stamp set)) FROM w WHERE `qty. issued` > 50000", -6.0088144322999995]]}, "434": {"question": "which other author, besides lewis carroll, has won the kurt maschler award twice?", "gold_answer": ["Anthony Browne"], "pred_answer": {"0": [[2], [2], [2], [4], [2], [2], [2], [4], [4], "<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT author) FROM w WHERE author IN (SELECT author FROM w GROUP BY author HAVING COUNT(*) > 1)", -5.574489098919999], [" SELECT COUNT(DISTINCT author) FROM w WHERE author IN (SELECT author FROM w GROUP BY author HAVING COUNT(*) = 2)", -5.80378713552], [" SELECT COUNT(DISTINCT author) FROM w WHERE author IN (SELECT author FROM w GROUP BY author HAVING COUNT(author) > 1)", -7.56944607152], [" SELECT COUNT(*) FROM w WHERE author IN (SELECT author FROM w GROUP BY author HAVING COUNT(*) > 1)", -8.313460875545001], [" SELECT COUNT(DISTINCT author) FROM w WHERE author IN (SELECT author FROM w GROUP BY author HAVING COUNT(*) = 2)", -8.58621360452], [" SELECT COUNT(*) FROM (SELECT author, COUNT(*) AS c FROM w GROUP BY author) WHERE c = 2", -9.395871057210002], [" SELECT COUNT(DISTINCT author) FROM w WHERE year IN (SELECT year FROM w WHERE author IN (SELECT author FROM w GROUP BY author HAVING COUNT(*) > 1))", -9.965968708788], [" SELECT COUNT(*) FROM w WHERE author IN (SELECT author FROM w GROUP BY author HAVING COUNT(*) = 2)", -14.271168482254], [" SELECT COUNT(*) FROM w WHERE author IN (SELECT author FROM w GROUP BY author HAVING COUNT(*) >= 2)", -15.182439554505], [" SELECT COUNT(*) FROM (SELECT author, COUNT(*) FROM w GROUP BY author) WHERE COUNT(*) = 2", -18.99117028533]]}, "475": {"question": "how many captains played 11 capped matches?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE caps = 11", -1.4705621504400002], [" SELECT COUNT(*) FROM w WHERE caps = 11", -1.47266872844], [" SELECT COUNT(*) FROM w WHERE caps = 11", -1.47266872844], [" SELECT COUNT(*) FROM w WHERE caps = 11", -1.47266872844], [" SELECT COUNT(*) FROM w WHERE caps = 11", -1.47266872844], [" SELECT COUNT(*) FROM w WHERE caps = 11", -1.47266872844], [" SELECT COUNT(*) FROM w WHERE caps = 11", -4.16030866968], [" SELECT COUNT(*) FROM w WHERE caps = 11", -4.16030866968], [" SELECT COUNT(*) FROM w WHERE caps = 11", -4.16030866968], [" SELECT COUNT(*) FROM w WHERE caps = 11", -4.16030866968]]}, "516": {"question": "who has spent more time as nwa world heavyyweight champion, gene kiniski or ric flair?", "gold_answer": ["Ric Flair"], "pred_answer": {"0": [[1131], [1131], [1131], ["1131"], ["1131"], ["1131"], [1], ["1131"], ["1131"], ["1131"]], "1": [[3103], [3103], [3103], ["3103"], ["3103"], ["3103"], [1], ["3103"], ["3103"], ["3103"]], "2": ["<error>"]}, "nsql": [[" SELECT SUM(combined days) FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT SUM(combined days) FROM w WHERE wrestler = 'ric flair'", -3.0661205502759996], [" SELECT SUM(combined days) FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT SUM(combined days) FROM w WHERE wrestler = 'ric flair'", -3.0701502431199996], [" SELECT SUM(combined days) FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT SUM(combined days) FROM w WHERE wrestler = 'ric flair'", -3.0701502431199996], [" SELECT `combined days` FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT `combined days` FROM w WHERE wrestler = 'ric flair'", -3.7132912680799994], [" SELECT `combined days` FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT `combined days` FROM w WHERE wrestler = 'ric flair'", -3.715634304359999], [" SELECT `combined days` FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT `combined days` FROM w WHERE wrestler = 'ric flair'", -3.715634304359999], [" SELECT COUNT(*) FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wrestler = 'ric flair'", -5.54111768741], [" SELECT `combined days` FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT `combined days` FROM w WHERE wrestler = 'ric flair'", -5.6235531694], [" SELECT combined days FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT combined days FROM w WHERE wrestler = 'ric flair'", -6.990369732016001], [" SELECT `combined days` FROM w WHERE wrestler = 'gene kiniski'\nNeuralSQL2: SELECT `combined days` FROM w WHERE wrestler = 'ric flair'\n```", -14.40130588185]]}, "557": {"question": "what year was the only year were a tie occurred?", "gold_answer": ["2010"], "pred_answer": {"0": [[0], [2000, 2004, 2007, 2008], [4], [4], [4], [0], [4], [4], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner(s) LIKE '% - %'", -5.66196211698], [" SELECT DISTINCT year FROM w WHERE winner(s) LIKE '%,%'", -5.973668750799999], [" SELECT COUNT(DISTINCT year) FROM w WHERE winner(s) LIKE '%, %'", -7.40929505605], [" SELECT COUNT(DISTINCT year) FROM w WHERE winner(s) LIKE '%,%'", -8.51423535055], [" SELECT COUNT(DISTINCT year) FROM w WHERE winner(s) LIKE '%,%'\n```", -10.384732423990002], [" SELECT COUNT(DISTINCT year) FROM w WHERE winner(s) LIKE '% - %'", -11.811519469096], [" SELECT COUNT(DISTINCT year) FROM w WHERE winner(s) LIKE '%,%'", -12.58739680467], [" SELECT COUNT(DISTINCT year) FROM w WHERE winner(s) LIKE '%,%'", -12.683530456669999], [" SELECT COUNT(DISTINCT year) FROM w WHERE winner(s) LIKE '% , %'", -13.087489959903998], [" SELECT COUNT(DISTINCT year) FROM w WHERE winner(s) LIKE '% - %'", -13.266661069096]]}, "560": {"question": "what is the number of mayors with the first name of john?", "gold_answer": ["6"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.5226362722900006], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.5226362722900006], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.5226362722900006], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.5226362722900006], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.5226362722900006], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.5226362722900006], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.5226362722900006], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.674292962989999], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -3.674292962989999], [" SELECT COUNT(*) FROM w WHERE name LIKE 'john%'", -5.12490292299]]}, "581": {"question": "how many runner-ups at most are listed?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.5083884541500003], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.5083884541500003], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.5083884541500003], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.5083884541500003], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.5083884541500003], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'\n```", -5.703232261909999], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -6.319486219292999], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -6.319486219292999], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -6.6720737192929995], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -7.115435719293]]}, "598": {"question": "what was the number of encyclopedias that had subjects relating specifically to children?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -1.734020180834], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -1.734020180834], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -1.734020180834], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -1.734020180834], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -1.734020180834], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -1.734020180834], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -1.734020180834], [" SELECT COUNT(*) FROM w WHERE `subject` LIKE '%children%'", -3.4849871513700004], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -3.8151956509600002], [" SELECT COUNT(*) FROM w WHERE subject LIKE '%children%'", -3.8288406023699997]]}, "602": {"question": "what is the number of albums released with the artist rimi natsukawa?", "gold_answer": ["8"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [8], [8], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT album) FROM w WHERE artist = 'rimi natsukawa'", -2.234069134406], [" SELECT COUNT(DISTINCT album) FROM w WHERE artist = 'rimi natsukawa'", -2.234069134406], [" SELECT COUNT(DISTINCT album) FROM w WHERE artist = 'rimi natsukawa'", -2.234069134406], [" SELECT COUNT(DISTINCT album) FROM w WHERE artist = 'rimi natsukawa'", -2.234069134406], [" SELECT COUNT(DISTINCT album) FROM w WHERE artist = 'rimi natsukawa'", -2.234069134406], [" SELECT COUNT(DISTINCT album) FROM w WHERE artist = 'rimi natsukawa'", -2.234069134406], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa'", -2.7920928499700004], [" SELECT COUNT(DISTINCT album) FROM w WHERE artist LIKE '%rimi natsukawa%'", -3.1480804203460004], [" SELECT COUNT(DISTINCT album) FROM w WHERE artist LIKE '%rimi natsukawa%'", -3.1480804203460004], [" SELECT COUNT(DISTINCT album) FROM w WHERE artist = 'rimi natsukawa'", -3.664545331576]]}, "639": {"question": "did kurt thomas play more or less than 2126 minutes?", "gold_answer": ["less"], "pred_answer": {"0": [[2125], [2125], [2125], [2125], [2125], [2125], [2125], [2125], [2125], [2125]]}, "nsql": [[" SELECT `minutes played` FROM w WHERE player = 'kurt thomas'", -2.0643070570525], [" SELECT `minutes played` FROM w WHERE player = 'kurt thomas'", -2.0643070570525], [" SELECT `minutes played` FROM w WHERE player = 'kurt thomas'", -2.0688653517524997], [" SELECT `minutes played` FROM w WHERE player = 'kurt thomas'", -2.7176449897525], [" SELECT `minutes played` FROM w WHERE player = 'kurt thomas'", -2.720977500379], [" SELECT `minutes played` FROM w WHERE player = 'kurt thomas'", -2.7211204730525], [" SELECT SUM(minutes played) FROM w WHERE player = 'kurt thomas'", -3.8027165129550005], [" SELECT minutes played FROM w WHERE player = 'kurt thomas'", -4.743864521412], [" SELECT minutes played FROM w WHERE player = 'kurt thomas'", -4.931889721822], [" SELECT minutes played FROM w WHERE player = 'kurt thomas'", -6.363704139402001]]}, "643": {"question": "how many secretaries of state had the last name bouchard?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '% bouchard'", -2.37332132491], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '% bouchard'", -2.37474659841], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '% bouchard'", -2.37474659841], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '% bouchard'", -2.37474659841], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '%bouchard%'", -2.46448275862], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '%bouchard%'", -2.46483391562], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '% bouchard'", -3.58366246841], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '%bouchard%'", -5.276594746019999], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '%bouchard%'", -5.276594746019999], [" SELECT COUNT(*) FROM w WHERE secretary of state LIKE '% bouchard'\n```", -10.72409352681]]}, "684": {"question": "how many games did he score but his team lost?", "gold_answer": ["1"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE goal > 0 AND result LIKE '%-%'", -3.515971817345], [" SELECT COUNT(*) FROM w WHERE goal > 0 AND result LIKE '%-%'", -3.515971817345], [" SELECT COUNT(*) FROM w WHERE goal > 0 AND result LIKE '%-%'", -4.572815175345], [" SELECT COUNT(*) FROM w WHERE goal > 0 AND result LIKE '%-%'", -4.572815175345], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND goal > 0", -6.249079479344999], [" SELECT COUNT(*) FROM w WHERE goal > 0 AND result LIKE '%-%' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) < CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)", -7.296971579158501], [" SELECT COUNT(*) FROM w WHERE goal > 0 AND result LIKE '%-%' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) < CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT))", -7.309088640490501], [" SELECT COUNT(*) FROM w WHERE goal > 0 AND result LIKE '%-%' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) < CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)", -9.6775820521045], [" SELECT COUNT(*) FROM w WHERE result NOT LIKE '% - %' AND goal > 0", -11.099590637084999], [" SELECT COUNT(*) FROM w WHERE goal > 0 AND result NOT LIKE '% - %'", -15.428571173239]]}, "725": {"question": "how many races were in 2010?", "gold_answer": ["5"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE season = 2010", -1.304982345055], [" SELECT COUNT(*) FROM w WHERE season = 2010", -1.304982345055], [" SELECT COUNT(*) FROM w WHERE season = 2010", -1.3074590180549999], [" SELECT COUNT(*) FROM w WHERE season = 2010", -1.3074590180549999], [" SELECT COUNT(*) FROM w WHERE season = 2010", -1.3074590180549999], [" SELECT COUNT(*) FROM w WHERE season = 2010", -1.3074590180549999], [" SELECT COUNT(*) FROM w WHERE season = 2010", -1.307783089055], [" SELECT COUNT(*) FROM w WHERE season = 2010", -3.0665035782549994], [" SELECT COUNT(*) FROM w WHERE season = 2010", -3.069630804155], [" SELECT COUNT(*) FROM w WHERE season = 2010", -4.924173592085]]}, "766": {"question": "which is the only company to have under 10% arms sales as share of company's total sales?", "gold_answer": ["General Electric"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 10", -2.18152855389], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 10", -2.18152855389], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 10", -2.18152855389], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 10", -2.18152855389], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 10", -2.1837698696400003], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company\u2019s total sales (%)` < 10", -4.75949373954], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company's total sales (%)` < 10", -4.8711808542899995], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company's total sales (%)` < 10", -4.87388645073], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company's total sales (%)` < 10", -4.87388645073], [" SELECT COUNT(*) FROM w WHERE `arms sales as share of company's total sales (%)` < 10", -7.00174938623]]}, "807": {"question": "how many laps does v10 kleber have?", "gold_answer": ["5"], "pred_answer": {"0": [[], [], [], [0], [], [], [], [], [], []], "1": ["<error>"]}, "nsql": [[" SELECT laps FROM w WHERE drivers = 'v10 kleber'", -6.92171881815], [" SELECT laps FROM w WHERE engine = 'v10 kleber'", -7.253979327669999], [" SELECT laps FROM w WHERE drivers LIKE '%v10 kleber%'", -8.294962834246], [" SELECT COUNT(*) FROM w WHERE drivers LIKE '%kleber%' AND engine LIKE '%v10%'", -8.712884289220002], [" SELECT laps FROM w WHERE drivers LIKE '%kleber%' AND engine LIKE '%v10%'", -9.76830161925], [" SELECT laps FROM w WHERE drivers LIKE '%kleber%'\n```", -11.03634450025], [" SELECT laps FROM w WHERE engine = 'v10 kleber'", -12.466165904830001], [" SELECT laps FROM w WHERE engine = 'v10 kleber'", -12.710971672969999], [" SELECT laps FROM w WHERE drivers LIKE '%v10 kleber%'", -12.830866842759999], [" SELECT laps FROM w WHERE drivers = 'v10 kleber'", -14.57032726715]]}, "848": {"question": "what were the number of innings albert clapp had?", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]], "1": ["<error>", "<error>"], "2": [[5], [38.79]], "3": ["<error>", "<error>"], "4": [[23.57375], [8]], "5": ["<error>"], "6": [[33.965]], "7": ["<error>"], "8": [[32.220000000000006]], "9": ["<error>"], "10": [[31.067500000000003]], "11": ["<error>"], "12": [[28.940000000000005]], "13": ["<error>"]}, "nsql": [[" SELECT innings FROM w WHERE player = 'albert clapp'", -4.230172768949999], [" SELECT innings FROM w WHERE player = 'albert clapp'", -4.230172768949999], [" SELECT innings FROM w WHERE player = 'albert clapp'", -4.230172768949999], [" SELECT innings FROM w WHERE player = 'albert clapp'", -4.7067767192700005], [" SELECT innings FROM w WHERE player = 'albert clapp'", -4.831672780269999], [" SELECT innings FROM w WHERE player = 'albert clapp'", -8.99245432027], [" SELECT innings FROM w WHERE player = 'albert clapp'", -9.74659272027], [" SELECT innings FROM w WHERE player = 'albert clapp'", -10.09761742027], [" SELECT innings FROM w WHERE player = 'albert clapp'\nQ2: there are {how many = a2} players with an average of over 20.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 20\nQ3: the average of all averages is {how many = a3}.\nNeuralSQL3: SELECT AVG(average) FROM w", -24.475193780370006], [" SELECT innings FROM w WHERE player = 'albert clapp'\nQ2: the average of the first row is {how many = a2}.\nNeuralSQL2: SELECT average FROM w WHERE row_id = 0\nQ3: the total number of 50s is {how many = a3}.\nNeuralSQL3: SELECT SUM(50s) FROM w\nQ4: the average of the first 2 rows is {how many = a4}.\nNeuralSQL4: SELECT AVG(average) FROM w WHERE row_id <= 1\nQ5: the average of the first 3 rows is {how many = a5}.\nNeuralSQL5: SELECT AVG(average) FROM w WHERE row_id <= 2\nQ6: the average of the first 4 rows is {how many = a6}.\nNeuralSQL6: SELECT AVG(average) FROM w WHERE row_id <= 3\nQ7: the average of the first 5 rows is {how many = a7}.\nNeuralSQL7: SELECT AVG(average) FROM w WHERE row_id <= 4\nQ8: the total number of 100s is {how many = a8}.", -47.282363185727974]]}, "889": {"question": "what is the total number of mills named cheshunt?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>", "<error>"], "2": [[2]], "3": ["<error>"], "4": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -4.24666600005], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -4.24666600005], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -4.395519321035], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -4.395519321035], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -4.395519321035], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -4.395519321035], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -4.395519321035], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'", -7.230767308049999], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'\n```", -10.06421545045], [" SELECT COUNT(*) FROM w WHERE location = 'cheshunt'\nQ2: there are {how many = a2} mills built in the 18th century.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '17%'\nQ3: there are {how many = a3} mills built in the 18th century with a type of tower.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `first mention or built` LIKE '17%' AND type = 'tower'", -28.201498135250016]]}, "930": {"question": "were more competitions played in april or december?", "gold_answer": ["April"], "pred_answer": {"0": [[5], [1], [13], [1], [1], [5], [5], [5], [5], [5]], "1": [[3], [1], [4], [1], [1], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2009-12-%'", -4.959633245919998], [" SELECT COUNT(DISTINCT competition) FROM w WHERE date LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(DISTINCT competition) FROM w WHERE date LIKE '2009-12-%'", -5.108178494031799], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%-04-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '%-12-%'", -5.12846605485], [" SELECT COUNT(DISTINCT competition) FROM w WHERE `date` LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(DISTINCT competition) FROM w WHERE `date` LIKE '2009-12-%'", -8.7501167389822], [" SELECT COUNT(DISTINCT competition) FROM w WHERE `date` LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(DISTINCT competition) FROM w WHERE `date` LIKE '2009-12-%'", -9.2104647752995], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-12-%'", -12.211434275384999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-12-%'", -13.240297395385001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-12-%'", -13.975828205385001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-12-%'", -14.682697651944999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2008-04-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-12-%'", -16.231871685405004]]}, "971": {"question": "which country won more total medals than tue french, but less than the germans in the 1994 winter olympic biathlon?", "gold_answer": ["Russia"], "pred_answer": {"0": [[0], [0], [0], [1], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'france') AND total < (SELECT total FROM w WHERE nation = 'germany')", -4.932020621459999], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'france') AND total < (SELECT total FROM w WHERE nation = 'germany')", -4.932020621459999], [" SELECT COUNT(*) FROM w WHERE nation != 'total' AND total > (SELECT total FROM w WHERE nation = 'france') AND total < (SELECT total FROM w WHERE nation = 'germany')", -8.63074772116], [" SELECT COUNT(*) FROM w WHERE total < (SELECT total FROM w WHERE nation = 'germany (ger)') AND total > (SELECT total FROM w WHERE nation = 'france (fra)')", -8.70131518576], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'france') AND total < (SELECT total FROM w WHERE nation = 'germany') AND nation != 'total'", -8.935392881459997], [" SELECT COUNT(*) FROM w WHERE nation != 'total' AND total > (SELECT total FROM w WHERE nation = 'france') AND total < (SELECT total FROM w WHERE nation = 'germany')", -9.38064192116], [" SELECT COUNT(*) FROM w WHERE (total > (SELECT total FROM w WHERE nation = 'france') AND total < (SELECT total FROM w WHERE nation = 'germany'))", -12.303718067589996], [" SELECT COUNT(*) FROM w WHERE nation != 'total' AND (total > (SELECT total FROM w WHERE nation = 'france')) AND (total < (SELECT total FROM w WHERE nation = 'germany'))", -13.668196475450003], [" SELECT COUNT(*) FROM w WHERE nation != 'total' AND total > (SELECT total FROM w WHERE nation = 'france' AND rank IS NOT NULL) AND total < (SELECT total FROM w WHERE nation = 'germany' AND rank IS NOT NULL)", -15.128076492179998], [" SELECT COUNT(*) FROM w WHERE total > (SELECT total FROM w WHERE nation = 'france') AND total < (SELECT total FROM w WHERE nation = 'germany')", -17.99610250195]]}, "1012": {"question": "how many members in total?", "gold_answer": ["13"], "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(DISTINCT member) FROM w", -1.7243264546], [" SELECT COUNT(DISTINCT member) FROM w", -1.7243264546], [" SELECT COUNT(DISTINCT member) FROM w", -1.7243264546], [" SELECT COUNT(DISTINCT member) FROM w", -1.7243264546], [" SELECT COUNT(DISTINCT member) FROM w", -1.7243264546], [" SELECT COUNT(DISTINCT member) FROM w", -1.7243264546], [" SELECT COUNT(DISTINCT member) FROM w", -1.7243264546], [" SELECT COUNT(*) FROM w", -9.20013933988], [" SELECT COUNT(*) FROM w", -9.20244823238], [" SELECT COUNT(*) FROM w", -9.53426293988]]}, "1053": {"question": "how many stamp sets were released in the year 1975?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(DISTINCT(stamp set)) FROM w WHERE `stamp issue date` LIKE '1975-%-%'", -4.563553290212001], [" SELECT COUNT(DISTINCT(stamp set)) FROM w WHERE `stamp issue date` LIKE '1975-%-%'", -4.563553290212001], [" SELECT COUNT(DISTINCT stamp set) FROM w WHERE `stamp issue date` LIKE '1975%-%-%'", -5.002503612812001], [" SELECT COUNT(DISTINCT(stamp set)) FROM w WHERE `stamp issue date` LIKE '1975%-%-%'", -5.1815635772120014], [" SELECT COUNT(DISTINCT `stamp set`) FROM w WHERE `stamp issue date` LIKE '1975-%-%'", -5.596954437711999], [" SELECT COUNT(DISTINCT(`stamp set`)) FROM w WHERE `stamp issue date` LIKE '1975-%-%'", -10.221456737081999], [" SELECT COUNT(DISTINCT stamp set) FROM w WHERE stamp issue date LIKE '1975-%-%'", -10.300217421612], [" SELECT COUNT(DISTINCT stamp set) FROM w WHERE stamp issue date LIKE '1975-%-%'", -10.646744921612001], [" SELECT COUNT(DISTINCT stamp set) FROM w WHERE stamp issue date LIKE '1975%-%-%'", -12.728398764451999], [" SELECT COUNT(DISTINCT `stamp set`) FROM w WHERE `stamp issue date` LIKE '1975-%-%'", -18.145364470342]]}, "1094": {"question": "how many players scored during the 1983 ofc championship competition?", "gold_answer": ["9"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition = '1983 ofc championship' AND scorers != 'none'", -3.675088978466], [" SELECT COUNT(*) FROM w WHERE competition = '1983 ofc championship' AND scorers != 'none'", -3.675088978466], [" SELECT COUNT(*) FROM w WHERE competition = '1983 ofc championship' AND scorers != 'none'", -3.675088978466], [" SELECT COUNT(*) FROM w WHERE competition = '1983 ofc championship' AND scorers != 'none'", -3.675088978466], [" SELECT COUNT(DISTINCT(scorers)) FROM w WHERE competition = '1983 ofc championship'", -4.22859576791], [" SELECT COUNT(*) FROM w WHERE competition = '1983 ofc championship' AND scorers <> 'none'", -4.668977256580001], [" SELECT COUNT(DISTINCT(scorers)) FROM w WHERE competition = '1983 ofc championship'", -5.971322449099999], [" SELECT COUNT(*) FROM w WHERE competition = '1983 ofc championship' AND scorers <> 'none'", -6.3319384989700005], [" SELECT COUNT(DISTINCT scorers) FROM w WHERE competition = '1983 ofc championship'", -7.675729052585], [" SELECT COUNT(*) FROM w WHERE competition = '1983 ofc championship' AND scorers IS NOT NULL", -10.798816413544]]}, "1135": {"question": "what is the total number of laps performed by rider imre toth?", "gold_answer": ["25"], "pred_answer": {"0": [[25.0], [25.0], [25.0], [25.0], [25.0], [25.0], [25.0], [25.0], [25.0], [25.0]], "1": ["<error>"], "2": [[12]], "3": ["<error>"], "4": [[9.333333333333334]], "5": ["<error>"], "6": [[25.0]], "7": ["<error>"], "8": [[1.0]], "9": ["<error>"], "10": [[15]], "11": ["<error>"], "12": [[22]], "13": ["<error>"]}, "nsql": [[" SELECT laps FROM w WHERE rider = 'imre toth'", -1.0640536746999998], [" SELECT laps FROM w WHERE rider = 'imre toth'", -1.0640536746999998], [" SELECT laps FROM w WHERE rider = 'imre toth'", -1.0640536746999998], [" SELECT laps FROM w WHERE rider = 'imre toth'", -1.0640536746999998], [" SELECT laps FROM w WHERE rider = 'imre toth'", -1.0640536746999998], [" SELECT laps FROM w WHERE rider = 'imre toth'", -1.0640536746999998], [" SELECT laps FROM w WHERE rider = 'imre toth'", -1.0640536746999998], [" SELECT laps FROM w WHERE rider = 'imre toth'", -7.9079545177], [" SELECT laps FROM w WHERE rider = 'imre toth'", -8.04733183426], [" SELECT laps FROM w WHERE rider = 'imre toth'\nQ2: there are {how many = a2} riders from aprilia.\nNeuralSQL2: SELECT COUNT(DISTINCT rider) FROM w WHERE manufacturer = 'aprilia'\nQ3: the average points of all riders is {how many = a3}.\nNeuralSQL3: SELECT AVG(points) FROM w\nQ4: the maximum points of all riders is {how many = a4}.\nNeuralSQL4: SELECT MAX(points) FROM w\nQ5: the minimum points of all riders is {how many = a5}.\nNeuralSQL5: SELECT MIN(points) FROM w\nQ6: the number of riders who have the same points is {how many = a6}.\nNeuralSQL6: SELECT COUNT(DISTINCT points) FROM w\nQ7: the number of riders who have the same grid is {how many = a7}.\nNeuralSQL7: SELECT COUNT(DISTINCT grid) FROM w\nQ8: the number of riders who have the same time is {how many = a8}.", -45.646250595584014]]}, "1176": {"question": "how many models used the redtop engine?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT car) FROM w WHERE engine = 'redtop'", -1.8114202363810001], [" SELECT COUNT(DISTINCT car) FROM w WHERE engine = 'redtop'", -1.8114202363810001], [" SELECT COUNT(DISTINCT car) FROM w WHERE engine = 'redtop'", -1.8114202363810001], [" SELECT COUNT(DISTINCT car) FROM w WHERE engine = 'redtop'", -1.8114202363810001], [" SELECT COUNT(DISTINCT car) FROM w WHERE engine = 'redtop'", -1.811654503781], [" SELECT COUNT(DISTINCT car) FROM w WHERE engine = 'redtop'", -1.8141879854009997], [" SELECT COUNT(DISTINCT car) FROM w WHERE engine = 'redtop'", -1.8141879854009997], [" SELECT COUNT(*) FROM w WHERE engine = 'redtop'", -3.2026496083500002], [" SELECT COUNT(*) FROM w WHERE engine = 'redtop'", -3.2026496083500002], [" SELECT COUNT(*) FROM w WHERE engine = 'redtop'", -3.2026496083500002]]}, "1217": {"question": "did the philippines or kazakhstan have a higher number of total medals?", "gold_answer": ["Philippines"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT total FROM w WHERE nation = 'philippines'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'kazakhstan'", -2.470800546090001], [" SELECT total FROM w WHERE nation = 'philippines'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'kazakhstan'", -2.470800546090001], [" SELECT total FROM w WHERE nation = 'philippines'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'kazakhstan'", -2.470800546090001], [" SELECT total FROM w WHERE nation = 'philippines'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'kazakhstan'", -2.4875983875], [" SELECT total FROM w WHERE nation = 'philippines'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'kazakhstan'", -2.4875983875], [" SELECT total FROM w WHERE nation = 'philippines'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'kazakhstan'", -2.4875983875], [" SELECT total FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL2: SELECT total FROM w WHERE nation LIKE '%kazakhstan%'", -2.8798441173200007], [" SELECT total FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL2: SELECT total FROM w WHERE nation LIKE '%kazakhstan%'", -2.8798441173200007], [" SELECT total FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL2: SELECT total FROM w WHERE nation LIKE '%kazakhstan%'", -2.8798441173200007], [" SELECT total FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL2: SELECT total FROM w WHERE nation LIKE '%kazakhstan%'", -2.8816757721699995]]}, "1220": {"question": "what was the total points that canada earned together?", "gold_answer": ["62"], "pred_answer": {"0": [[null], [null], [null], [null], [null], [null], [null], [null], [null], [null]], "1": ["<error>"], "2": [[76]], "3": ["<error>"], "4": [[76]], "5": ["<error>"], "6": [[17]], "7": ["<error>"], "8": [[76]], "9": ["<error>"], "10": [[76]], "11": ["<error>"], "12": [[76]], "13": ["<error>"], "14": ["<error>"]}, "nsql": [[" SELECT SUM(points) FROM w WHERE driver LIKE '%canada%'", -5.311375571869999], [" SELECT SUM(points) FROM w WHERE driver LIKE '%canada%'", -5.95130838446], [" SELECT SUM(points) FROM w WHERE driver LIKE '%canada%'", -8.578821594249998], [" SELECT SUM(points) FROM w WHERE driver LIKE '%canada%'", -8.59711734271], [" SELECT SUM(points) FROM w WHERE driver LIKE '%canada%'", -8.859158694249999], [" SELECT SUM(points) FROM w WHERE driver LIKE '%canada%'", -10.031685036544001], [" SELECT SUM(points) FROM w WHERE driver LIKE '% canada %'", -10.980255835984], [" SELECT SUM(points) FROM w WHERE driver LIKE '% canada %'", -11.075280735984], [" SELECT SUM(points) FROM w WHERE driver LIKE '%canada%'", -11.874072236544], [" SELECT SUM(points) FROM w WHERE driver LIKE '%canada%'\nQ2: the number of laps in the race is {how many = a2}.\nNeuralSQL2: SELECT MAX(laps) FROM w\nQ3: the number of laps in the race is {how many = a3}.\nNeuralSQL3: SELECT MAX(laps) FROM w\nQ4: there are {how many = a4} drivers in the race.\nNeuralSQL4: SELECT COUNT(DISTINCT driver) FROM w\nQ5: the number of laps in the race is {how many = a5}.\nNeuralSQL5: SELECT MAX(laps) FROM w\nQ6: the number of laps in the race is {how many = a6}.\nNeuralSQL6: SELECT MAX(laps) FROM w\nQ7: the number of laps in the race is {how many = a7}.\nNeuralSQL7: SELECT MAX(laps) FROM w\nQ8: the number of laps in the race is {how many = a8}.\nNeuralSQL8: SELECT MAX(laps) FROM", -36.20820948012997]]}, "1241": {"question": "how many drivers ended the race early because of engine problems?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `time/retired` = 'engine'", -1.9263059279999997], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'engine'", -1.9263059279999997], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'engine'", -1.9263061645399997], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'engine'", -1.9263061645399997], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%engine%'", -2.71694826357], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%engine%'", -2.71694826357], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE '%engine%'", -2.71694826357], [" SELECT COUNT(*) FROM w WHERE `time/retired` LIKE 'engine%'", -3.793102050355], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'engine'", -4.19019340501], [" SELECT COUNT(*) FROM w WHERE `time/retired` = 'engine'", -4.19019340501]]}, "1258": {"question": "how many locomotives were built for the construction of the ashworth moor reservoir?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [3], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notes LIKE '%built for the construction of the ashworth moor reservoir%'", -3.3980539733590005], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%built for the construction of the ashworth moor reservoir%'", -3.3980539733590005], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%built for the construction of the ashworth moor reservoir%'", -3.4033524515280003], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%ashworth moor reservoir%'", -4.83143401097], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%ashworth moor reservoir%'", -4.83143401097], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%ashworth moor reservoir%'", -4.83143401097], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%built for the construction of the ashworth moor reservoir%'", -5.1967891854740005], [" SELECT COUNT(*) FROM w WHERE notes LIKE '%the construction of the ashworth moor reservoir%'", -11.76071756208], [" SELECT COUNT(*) FROM w WHERE `works number` IS NULL", -13.948750426910001], [" SELECT COUNT(*) FROM w WHERE `works number` IS NOT NULL AND `works number` != '' AND `works number` != 'nan'", -18.344285635496]]}, "1262": {"question": "how many nations won no gold medals?", "gold_answer": ["12"], "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 0", -1.32384257433], [" SELECT COUNT(*) FROM w WHERE gold = 0", -1.32384257433], [" SELECT COUNT(*) FROM w WHERE gold = 0", -1.32384257433], [" SELECT COUNT(*) FROM w WHERE gold = 0", -1.32384257433], [" SELECT COUNT(*) FROM w WHERE gold = 0", -1.32384257433], [" SELECT COUNT(*) FROM w WHERE gold = 0", -1.32384257433], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold = 0", -3.1060519196950005], [" SELECT COUNT(DISTINCT(nation)) FROM w WHERE gold = 0", -4.014273247666001], [" SELECT COUNT(*) FROM w WHERE gold = 0", -4.1465845436699995], [" SELECT COUNT(*) FROM w WHERE gold = 0\n```", -10.57408684498]]}, "3": {"question": "how many districts are there in virginia?", "gold_answer": ["22"], "pred_answer": {"0": [[22], [22], [22], [22], [22], [22], [22], [22], [22], [22]], "1": ["<error>"], "2": [[22]], "3": ["<error>"], "4": [[22]], "5": ["<error>"], "6": [[22]], "7": ["<error>"], "8": [[22]], "9": ["<error>"], "10": [[22]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia %'", -5.5489731636499995], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia%'", -5.71106044465], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia %'", -5.984408642300001], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia%'", -6.094578357594001], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia %'", -6.19578957465], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia %'", -6.19578957465], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia %'", -6.3000721403], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE '%virginia%'", -7.430951242166], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia %'", -9.6476064513], [" SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia%'\nQ2: there are {how many = a2} districts in virginia.\nNeuralSQL2: SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia%'\nQ3: there are {how many = a3} districts in virginia.\nNeuralSQL3: SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia%'\nQ4: there are {how many = a4} districts in virginia.\nNeuralSQL4: SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia%'\nQ5: there are {how many = a5} districts in virginia.\nNeuralSQL5: SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia%'\nQ6: there are {how many = a6} districts in virginia.\nNeuralSQL6: SELECT COUNT(DISTINCT district) FROM w WHERE district LIKE 'virginia%'\nQ7", -14.466813117241513]]}, "44": {"question": "how many total events will occur in all?", "gold_answer": ["46"], "pred_answer": {"0": [[46], [46], [46], [46], [46], [46], [46], [46], [46], [46]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.2028636664660002], [" SELECT COUNT(*) FROM w", -1.2028636664660002], [" SELECT COUNT(*) FROM w", -1.2042780266359998], [" SELECT COUNT(*) FROM w", -1.2042780266359998], [" SELECT COUNT(*) FROM w", -1.2042780266359998], [" SELECT COUNT(*) FROM w", -1.2042780266359998], [" SELECT COUNT(*) FROM w", -1.2042780266359998], [" SELECT COUNT(*) FROM w", -2.4406773936660002], [" SELECT COUNT(*) FROM w", -2.4437878116659997], [" SELECT COUNT(*) FROM w\n```", -3.731546756166]]}, "85": {"question": "number of losses", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>"], "2": [[4]], "3": ["<error>"], "4": [[3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'l'", -2.6929588887700007], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -2.6929588887700007], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -2.6929588887700007], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -2.6929588887700007], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -2.6929588887700007], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -6.640878077200001], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -7.3861038772], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -7.3861038772], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -10.2634511772], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nQ2: {how many = a2} records with a score of 2-0.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score = '2 - 0'\nQ3: {how many = a3} records with a score of 2-0 and a competition of international friendly.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE score = '2 - 0' AND competition = 'international friendly'", -37.912651507750006]]}, "126": {"question": "how many times did the single \"butterfly\" rank as 1 in the chart?", "gold_answer": ["5"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND `peak chart positions\\nus` = '1'", -3.96917873696], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (`peak chart positions\\nus` = '1' OR `peak chart positions\\nus\\nalt.` = '1')", -6.49990004712], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (peak chart positions\\nus = 1 OR peak chart positions\\nus\\nalt. = 1 OR peak chart positions\\nus\\nmain. rock = 1 OR peak chart positions\\naus = 1 OR peak chart positions\\naut = 1 OR peak chart positions\\nfin = 1 OR peak chart positions\\nger = 1 OR peak chart positions\\nnld = 1 OR peak chart positions\\nswi = 1 OR peak chart positions\\nuk = 1)", -6.802448477275998], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (`peak chart positions\\nus` = 1 OR `peak chart positions\\nus\\nalt.` = 1 OR `peak chart positions\\nus\\nmain. rock` = 1)", -7.225016880499999], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (peak chart positions\\nus = '1' OR peak chart positions\\nus\\nalt. = '1' OR peak chart positions\\nus\\nmain. rock = '1' OR peak chart positions\\naus = '1' OR peak chart positions\\naut = '1' OR peak chart positions\\nfin = '1' OR peak chart positions\\nger = '1' OR peak chart positions\\nnld = '1' OR peak chart positions\\nswi = '1' OR peak chart positions\\nuk = '1')", -10.551142759455997], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (`peak chart positions\\nus` = '1' OR `peak chart positions\\nus\\nalt.` = '1' OR `peak chart positions\\nus\\nmain. rock` = '1')", -12.119080715739997], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (`peak chart positions\\nus` = '1' OR `peak chart positions\\nus\\nalt.` = '1' OR `peak chart positions\\nus\\nmain. rock` = '1')", -12.30213538112], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (`peak chart positions\\nus` = '1' OR `peak chart positions\\nus\\nalt.` = '1' OR `peak chart positions\\nus\\nmain. rock` = '1')", -12.475798299480001], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (`peak chart positions\\nus` = '1' OR `peak chart positions\\nus\\nalt.` = '1' OR `peak chart positions\\nus\\nmain. rock` = '1')", -12.625867299480001], [" SELECT COUNT(*) FROM w WHERE title = 'butterfly' AND (`peak chart positions\\nus` = '1' OR `peak chart positions\\nus\\nalt.` = '1' OR `peak chart positions\\nus\\nmain. rock` = '1')", -13.507485771799999]]}, "167": {"question": "what was the position that most of the players had?", "gold_answer": ["Back"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -1.152967516589], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -1.152967516589], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -1.152967516589], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -1.152967516589], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -1.152967516589], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -1.152967516589], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -1.152967516589], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -1.152967516589], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -3.7745803225890002], [" SELECT COUNT(*) FROM w WHERE position = 'end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'center'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE position = 'guard'", -4.137295922589]]}, "208": {"question": "how many times does philanthropist appear in the position column on this chart?", "gold_answer": ["9"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"], "2": [[7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -4.1690440055], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -5.42185822957], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -5.42185822957], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -5.42185822957], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -6.164620359070001], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -6.48413708957], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -6.48413708957], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -7.754487549569999], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -12.94433254957], [" SELECT COUNT(*) FROM w WHERE position = 'philanthropist'\nQ2: {how many = a2} times does philanthropist appear in the position column on this chart.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'philanthropist'", -13.155150935992996]]}, "249": {"question": "how many games had no points scored?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [0], [0], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score = '0\u20130'", -2.66813898873], [" SELECT COUNT(*) FROM w WHERE score = '0\u20130'", -2.66813898873], [" SELECT COUNT(*) FROM w WHERE score = '0\u20130'", -2.66813898873], [" SELECT COUNT(*) FROM w WHERE score = '0\u20130'", -2.66813898873], [" SELECT COUNT(*) FROM w WHERE score = '0\u20130'", -2.66813898873], [" SELECT COUNT(*) FROM w WHERE score = '0 - 0'", -3.0080950129999997], [" SELECT COUNT(*) FROM w WHERE score = '0-0'", -3.0372885203099997], [" SELECT COUNT(*) FROM w WHERE score = '0\u20130'", -4.43438536526], [" SELECT COUNT(*) FROM w WHERE score = '0\u20130'", -4.44967410396], [" SELECT COUNT(*) FROM w WHERE score = '0\u20130'", -4.46729561708]]}, "290": {"question": "what is the number of michael w smith albums that made it to the top 25 of the charts?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `peak\\nus` <= 25", -3.0959053299000003], [" SELECT COUNT(*) FROM w WHERE `peak\\nus` <= 25", -3.0959053299000003], [" SELECT COUNT(*) FROM w WHERE `peak\\nus` < 26", -3.5614961916000003], [" SELECT COUNT(*) FROM w WHERE `peak\\nus` < 26", -3.5614961916000003], [" SELECT COUNT(*) FROM w WHERE `peak\\nus` < 25", -3.64916319351], [" SELECT COUNT(*) FROM w WHERE peak\\nus <= 25", -5.701281023889999], [" SELECT COUNT(*) FROM w WHERE peak\\nus <= 25", -5.701281023889999], [" SELECT COUNT(*) FROM w WHERE `peak\\nus` <= 25", -6.37448343594], [" SELECT COUNT(*) FROM w WHERE peak\\nus <= 25", -6.764308285019999], [" SELECT COUNT(*) FROM w WHERE peak\\nus <= 25", -7.541638585019999]]}, "331": {"question": "how many nations received more than 5 gold medals?", "gold_answer": ["4"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold > 5", -0.912238266015], [" SELECT COUNT(*) FROM w WHERE gold > 5", -0.912238266015], [" SELECT COUNT(*) FROM w WHERE gold > 5", -0.912238266015], [" SELECT COUNT(*) FROM w WHERE gold > 5", -0.912238266015], [" SELECT COUNT(*) FROM w WHERE gold > 5", -0.912238266015], [" SELECT COUNT(*) FROM w WHERE gold > 5", -0.912238266015], [" SELECT COUNT(*) FROM w WHERE gold > 5", -0.912238266015], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold > 5", -3.115980641947], [" SELECT COUNT(*) FROM w WHERE gold > 5", -3.9726991341149995], [" SELECT COUNT(*) FROM w WHERE gold > 5", -3.9726991341149995]]}, "372": {"question": "how many gold medals did the us and jamaica win combined?", "gold_answer": ["9"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'jamaica'", -2.23547228782], [" SELECT gold FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'jamaica'", -2.23555616248], [" SELECT gold FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'jamaica'", -2.23555616248], [" SELECT gold FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'jamaica'", -2.23555616248], [" SELECT gold FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'jamaica'", -2.23555616248], [" SELECT gold FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'jamaica'", -2.23555616248], [" SELECT gold FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'jamaica'", -2.23555616248], [" SELECT SUM(gold) FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation = 'jamaica'", -2.6907821124949995], [" SELECT `gold` FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT `gold` FROM w WHERE nation = 'jamaica'", -6.638602247203], [" SELECT `gold` FROM w WHERE nation = 'united states'\nNeuralSQL2: SELECT `gold` FROM w WHERE nation = 'jamaica'", -7.154228947203]]}, "413": {"question": "how many buildings do not have an image listed?", "gold_answer": ["11"], "pred_answer": {"0": ["<error>", "<error>", [50], "<error>", [50], [50], "<error>", "<error>", "<error>", "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE image = ''", -4.02513562399], [" SELECT COUNT(*) FROM w WHERE image = 'no image listed'", -6.352484013050001], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` NOT LIKE '%image%'", -6.811870729289999], [" SELECT COUNT(*) FROM w WHERE image = ''", -7.07369556809], [" SELECT COUNT(*) FROM w WHERE name NOT LIKE '%image listed%'", -7.25814404899], [" SELECT COUNT(*) FROM w WHERE `year of listing & ref(s)` NOT LIKE '%image listed%'", -7.63229105829], [" SELECT COUNT(*) FROM w WHERE image = 'no'", -7.898634223296], [" SELECT COUNT(*) FROM w WHERE image = 'no'", -8.03090730299], [" SELECT COUNT(*) FROM w WHERE image = 'no'", -8.03090730299], [" SELECT COUNT(*) FROM w WHERE `image listed` IS NULL\n```", -15.066970521190001]]}, "454": {"question": "which party was elected the least?", "gold_answer": ["Country"], "pred_answer": {"0": [[4], [4], [7], [7], ["alp/alp (a-c)", 7], [7], ["alp/alp (a-c)", 7], ["alp/alp (a-c)", 7], ["alp/alp (a-c)", 7], [51]]}, "nsql": [[" SELECT COUNT(DISTINCT party) FROM w", -5.63553983332], [" SELECT COUNT(DISTINCT party) FROM w", -5.63553983332], [" SELECT COUNT(*) FROM w GROUP BY party ORDER BY COUNT(*) ASC LIMIT 1", -6.666511139633998], [" SELECT COUNT(*) FROM w GROUP BY party ORDER BY COUNT(*) ASC LIMIT 1", -6.666511139633998], [" SELECT party, COUNT(*) FROM w GROUP BY party ORDER BY COUNT(*) LIMIT 1", -7.63897643751], [" SELECT COUNT(*) FROM w GROUP BY party ORDER BY COUNT(*) ASC LIMIT 1", -8.807760557], [" SELECT party, COUNT(*) FROM w GROUP BY party ORDER BY COUNT(*) ASC LIMIT 1", -9.16880972596], [" SELECT party, COUNT(*) FROM w GROUP BY party ORDER BY COUNT(*) ASC LIMIT 1", -9.215581657309999], [" SELECT party, COUNT(*) AS num FROM w GROUP BY party ORDER BY num ASC LIMIT 1", -9.732390336129999], [" SELECT COUNT(*) FROM w WHERE party = 'alp'", -9.76743366602]]}, "495": {"question": "what is the number of wins for each team", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT wins FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT wins FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT wins FROM w WHERE team = 'wolfe tones'", -1.6277333437260002], [" SELECT wins FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT wins FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT wins FROM w WHERE team = 'wolfe tones'", -1.6277333437260002], [" SELECT wins FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT wins FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT wins FROM w WHERE team = 'wolfe tones'", -1.6277333437260002], [" SELECT wins FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT wins FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT wins FROM w WHERE team = 'wolfe tones'", -1.6277333437260002], [" SELECT wins FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT wins FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT wins FROM w WHERE team = 'wolfe tones'", -1.6277333437260002], [" SELECT wins FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT wins FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT wins FROM w WHERE team = 'wolfe tones'", -1.6277333437260002], [" SELECT wins FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT wins FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT wins FROM w WHERE team = 'wolfe tones'", -1.7011409120550003], [" SELECT COUNT(*) FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team = 'wolfe tones'", -2.32599230555], [" SELECT COUNT(*) FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team = 'wolfe tones'", -2.327059238634], [" SELECT COUNT(*) FROM w WHERE team = 'ballyroan abbey'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'greystones'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team = 'wolfe tones'", -2.327059238634]]}, "536": {"question": "the complete collection has 96 episodes, but the christmas specials only has how many episodes?", "gold_answer": ["4"], "pred_answer": {"0": [[197.0], [197.0], [197.0], [197.0], [197.0], [96], [96], [96], [96], [96]], "1": [["4"], ["4"], ["4"], ["4"], ["4"], ["4"], [4], ["4"], ["4"], ["4"]], "2": ["<error>"]}, "nsql": [[" SELECT SUM(`no. of ep.`) FROM w\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE `dvd title` = 'the christmas specials'", -2.96355416075], [" SELECT SUM(`no. of ep.`) FROM w\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE `dvd title` = 'the christmas specials'", -2.96355416075], [" SELECT SUM(`no. of ep.`) FROM w\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE `dvd title` = 'the christmas specials'", -2.96355416075], [" SELECT SUM(`no. of ep.`) FROM w\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE `dvd title` = 'the christmas specials'", -2.9636154185500003], [" SELECT SUM(`no. of ep.`) FROM w\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE `dvd title` = 'the christmas specials'", -2.9636388185500007], [" SELECT SUM(`no. of ep.`) FROM w WHERE `dvd title` LIKE '%complete collection%'\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE `dvd title` = 'the christmas specials'", -6.087134474460003], [" SELECT SUM(no. of ep.) FROM w WHERE dvd title LIKE '%complete collection%'\nNeuralSQL2: SELECT SUM(no. of ep.) FROM w WHERE dvd title = 'the christmas specials'", -7.46629521423], [" SELECT SUM(`no. of ep.`) FROM w WHERE `dvd title` = 'complete collection'\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE `dvd title` = 'the christmas specials'", -8.19375044685], [" SELECT SUM(`no. of ep.`) FROM w WHERE dvd title = 'complete collection'\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE dvd title = 'the christmas specials'\n```", -16.109915198499998], [" SELECT SUM(`no. of ep.`) FROM w WHERE dvd title LIKE '%complete collection%'\nNeuralSQL2: SELECT `no. of ep.` FROM w WHERE dvd title = 'the christmas specials'", -16.416451849104995]]}, "577": {"question": "what was there top ranked position of the season?", "gold_answer": ["#14"], "pred_answer": {"0": [[10], [10], [13], [10], [3], [0], [10], [10], [4], [0]], "1": ["<error>", "<error>"], "2": [[4], [455301]], "3": ["<error>", "<error>"], "4": [[4], [6]], "5": ["<error>", "<error>"], "6": [[4], [6]], "7": ["<error>", "<error>"], "8": [[4], [6]], "9": ["<error>", "<error>"], "10": [[4], [6]], "11": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank# != 'none'", -4.04132593977], [" SELECT COUNT(*) FROM w WHERE rank# != 'none'", -4.04132593977], [" SELECT COUNT(*) FROM w WHERE rank# IS NOT NULL", -4.04386498437], [" SELECT COUNT(*) FROM w WHERE `rank#` != 'none'", -7.41776913807], [" SELECT COUNT(*) FROM w WHERE rank# = 'none'", -7.50406005947], [" SELECT COUNT(*) FROM w WHERE `rank#` = '#1'", -7.765848482069999], [" SELECT COUNT(*) FROM w WHERE `rank#` != 'none'", -11.83374486976], [" SELECT COUNT(*) FROM w WHERE `rank#` != 'none'", -12.12911056976], [" SELECT COUNT(*) FROM w WHERE `rank#` = '#22'\nQ2: {how many = a2} was there top ranked position of the season.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `rank#` = '#22'\nQ3: {how many = a3} was there top ranked position of the season.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `rank#` = '#22'\nQ4: {how many = a4} was there top ranked position of the season.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `rank#` = '#22'\nQ5: {how many = a5} was there top ranked position of the season.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `rank#` = '#22'\nQ6: {how many = a6} was there top ranked position of the season.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `rank#` = '#22'\nQ7: {how many = a7} was there top ranked position of", -19.05672284136753], [" SELECT COUNT(*) FROM w WHERE rank# = '#1'\nQ2: the average attendance of the season is {how many = a2}.\nNeuralSQL2: SELECT SUM(attendance) FROM w\nQ3: {how many = a3} of the season was played at home.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%'\nQ4: {how many = a4} of the season was played at home on tv.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%' AND tv != 'none'\nQ5: {how many = a5} of the season was played at home on tv.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%' AND tv != 'none'\nQ6: {how many = a6} of the season was played at home on tv.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE site LIKE '%bronco stadium%' AND tv != 'none'\nQ7: {", -55.89407655632]]}, "580": {"question": "what is the total number of games played?", "gold_answer": ["66"], "pred_answer": {"0": [[66], [66], [66], [66], [66], [66], [66], [66], [66], [66]]}, "nsql": [[" SELECT COUNT(*) FROM w", -3.1650169135899997], [" SELECT COUNT(*) FROM w", -3.1650169135899997], [" SELECT COUNT(*) FROM w", -4.223461501047], [" SELECT COUNT(*) FROM w", -4.23023359896], [" SELECT COUNT(*) FROM w", -4.23023359896], [" SELECT COUNT(*) FROM w", -4.23023359896], [" SELECT COUNT(*) FROM w", -4.23023359896], [" SELECT COUNT(*) FROM w", -5.56237399896], [" SELECT COUNT(*) FROM w", -6.35542999896], [" SELECT COUNT(*) FROM w", -7.77427799896]]}, "601": {"question": "what is the total number of stations serving the the cape girardeau area?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `area served` = 'cape girardeau'", -2.558104799924], [" SELECT COUNT(*) FROM w WHERE `area served` = 'cape girardeau'", -2.558104799924], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -3.62313205154], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -3.62313205154], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -3.62313205154], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -3.62313205154], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -4.15889591294], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -4.15889591294], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -4.15889591294], [" SELECT COUNT(*) FROM w WHERE area served = 'cape girardeau'", -6.0615570515399995]]}, "618": {"question": "how many total games took place in 1999?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[6]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": [[6]], "9": ["<error>"], "10": [[6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999-%-%'", -2.69434520438], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999-%-%'", -2.69434520438], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999-%-%'", -2.69434520438], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999%-%-%'", -2.96687390938], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999-%-%'", -3.2858713333800003], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999-%-%'", -3.2858713333800003], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999-%-%'", -3.2858713333800003], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999%-%-%'", -3.61564624388], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999%-%-%'", -3.61564624388], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1999%-%-%'\nQ2: {how many = a2} games took place in the venue of bazaly.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'bazaly'\nQ3: {how many = a3} games were played in the venue of na st\u00ednadlech.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE venue = 'na st\u00ednadlech'\nQ4: {how many = a4} games took place in the venue of na st\u00ednadlech.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE venue = 'na st\u00ednadlech'\nQ5: {how many = a5} games took place in the venue of na st\u00ednadlech.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE venue = 'na st\u00ednadlech'\nQ6: {how many = a6} games took place in the venue of na st\u00ednadlech.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE venue = 'na st\u00ednadlech'", -40.452968492162974]]}, "622": {"question": "what is the total point difference between the driver who received the most points and the driver who received the least?", "gold_answer": ["30"], "pred_answer": {"0": [[34], [34], [34], [34], [34], [34], [34], [34], [34], [34]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -4.486894434719999], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -6.36983664768], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -6.36983664768], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -7.343893997009999], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -8.80234449055], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -9.09565479045], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -9.52926777426], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -9.73770360045], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -10.007637645259999], [" SELECT MAX(points) FROM w\nNeuralSQL2: SELECT MIN(points) FROM w", -10.40217227526]]}, "659": {"question": "tell me the number of products that give you 12 months of whiteness.", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -1.61480533183], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -1.6174373057300002], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -1.6174373057300002], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -2.60153699499], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -2.60602158383], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -2.60847645693], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -2.60945746243], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -2.60959466043], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` = 'p12m'", -2.60962619417], [" SELECT COUNT(*) FROM w WHERE `last of whiteness` LIKE 'p12m'", -3.11613728333]]}, "663": {"question": "what were the total number of \"ties\" (people who finished with the exact same time?)", "gold_answer": ["2"], "pred_answer": {"0": [[58], [58], [58], [58], [58], [58], [58], [58], [58], [58]], "1": ["<error>"], "2": [[58]], "3": ["<error>"], "4": [[58]], "5": ["<error>"], "6": [[58]], "7": ["<error>"], "8": [[58]], "9": ["<error>"], "10": [[58]], "11": ["<error>"], "12": [[58]], "13": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT time) FROM w", -8.262312681504], [" SELECT COUNT(DISTINCT time) FROM w", -8.262312681504], [" SELECT COUNT(DISTINCT time) FROM w", -9.369803498504002], [" SELECT COUNT(DISTINCT time) FROM w", -9.372988511504], [" SELECT COUNT(DISTINCT(time)) FROM w", -10.129322582077], [" SELECT COUNT(DISTINCT(time)) FROM w", -10.709810840527], [" SELECT COUNT(DISTINCT time) FROM w", -10.847369281504], [" SELECT COUNT(DISTINCT time) FROM w", -11.222023655504001], [" SELECT COUNT(DISTINCT time) FROM w WHERE time NOT LIKE '%+%'", -16.262869633745], [" SELECT COUNT(DISTINCT time) FROM w\nQ2: {how many = a2} people finished with the exact same time.\nNeuralSQL2: SELECT COUNT(DISTINCT time) FROM w\nQ3: {how many = a3} people finished with the exact same time.\nNeuralSQL3: SELECT COUNT(DISTINCT time) FROM w\nQ4: {how many = a4} people finished with the exact same time.\nNeuralSQL4: SELECT COUNT(DISTINCT time) FROM w\nQ5: {how many = a5} people finished with the exact same time.\nNeuralSQL5: SELECT COUNT(DISTINCT time) FROM w\nQ6: {how many = a6} people finished with the exact same time.\nNeuralSQL6: SELECT COUNT(DISTINCT time) FROM w\nQ7: {how many = a7} people finished with the exact same time.\nNeuralSQL7: SELECT COUNT(DISTINCT time) FROM w\nQ8: {how many = a8} people finished with the", -17.76677259923549]]}, "704": {"question": "how many shows had at least 10 million viewers?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `viewers (m)` >= 10", -1.9385283928100001], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` >= 10", -1.9385283928100001], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` >= 10", -1.9385283928100001], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` >= 10", -1.9385283928100001], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` >= 10", -1.9385283928100001], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` >= 10", -1.9385283928100001], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` >= 10", -1.9385283928100001], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` > 10", -2.8162170538099995], [" SELECT COUNT(*) FROM w WHERE `viewers (m)` >= 10", -3.30834273481], [" SELECT COUNT(*) FROM w WHERE viewers (m) >= 10", -6.561836634841999]]}, "745": {"question": "how many seasons had average attendance of at least 15,000 at the stadio ennio tardini?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE average >= 15000", -6.564592373494], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -6.564592373494], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -8.911854030334], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -9.365172630334001], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -9.434228060334], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -9.683657605334], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -9.690451205334], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -10.508656905334], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -10.625727205334], [" SELECT COUNT(*) FROM w WHERE average >= 15000", -12.491355650334]]}, "786": {"question": "which decade is the only one to have fewer years in its row than the others?", "gold_answer": ["2010s"], "pred_answer": {"0": [[14], [0], [0], [0], [14], [0], [1], [0], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE LENGTH(`2010s`) < 10", -7.523143683500001], [" SELECT COUNT(*) FROM w WHERE filledcolumnname IS NULL", -7.963734271540001], [" SELECT COUNT(*) FROM w WHERE LENGTH(`2010s`) < 4", -8.1061351505], [" SELECT COUNT(*) FROM w WHERE (2010 + 2011 + 2012 + 2013 + 2014 + 2015 + 2016 + 2017 + 2018 + filledcolumnname) < 100", -8.886297770699999], [" SELECT COUNT(*) FROM w WHERE LENGTH(2010s) < 6", -10.340680484539998], [" SELECT COUNT(*) FROM w WHERE LENGTH(2010s) < LENGTH(2010)", -12.1939334563], [" SELECT COUNT(*) FROM w WHERE (2010 + 2011 + 2012 + 2013 + 2014 + 2015 + 2016 + 2017 + 2018 + filledcolumnname) < (1880 + 1881 + 1882 + 1883 + 1884 + 1885 + 1886 + 1887 + 1888 + 1889)", -15.043615260080005], [" SELECT COUNT(*) FROM w WHERE (2010 = 0 OR 2011 = 0 OR 2012 = 0 OR 2013 = 0 OR 2014 = 0 OR 2015 = 0 OR 2016 = 0 OR 2017 = 0 OR 2018 = 0 OR filledcolumnname = 0)", -16.7076117066], [" SELECT COUNT(*) FROM w WHERE LENGTH(2010s) < 5\n```", -17.613075245], [" SELECT COUNT(*) FROM w WHERE (2010s LIKE '%-%' AND 2010s NOT LIKE '% - %') OR (2010s LIKE '% - %' AND 2010s NOT LIKE '%-%')", -18.949341458930004]]}, "827": {"question": "how many names are listed?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(DISTINCT name) FROM w", -1.4855433977599999], [" SELECT COUNT(DISTINCT name) FROM w", -1.4855433977599999], [" SELECT COUNT(DISTINCT name) FROM w", -1.4855433977599999], [" SELECT COUNT(DISTINCT name) FROM w", -1.4855433977599999], [" SELECT COUNT(DISTINCT name) FROM w", -2.61439784176], [" SELECT COUNT(DISTINCT name) FROM w", -2.61439784176], [" SELECT COUNT(*) FROM w", -4.083195781530001], [" SELECT COUNT(*) FROM w", -4.083195781530001], [" SELECT COUNT(*) FROM w", -4.083195781530001], [" SELECT COUNT(*) FROM w", -4.083195781530001]]}, "868": {"question": "how sheriffs has suffolk county had in total?", "gold_answer": ["76"], "pred_answer": {"0": [[20], [20], [20], [26], [20], [26], [26], [26], [26], [26]]}, "nsql": [[" SELECT COUNT(DISTINCT sheriff) FROM w", -2.88944466306], [" SELECT COUNT(DISTINCT sheriff) FROM w", -2.88944466306], [" SELECT COUNT(DISTINCT sheriff) FROM w", -4.43174593306], [" SELECT COUNT(*) FROM w", -4.64261463495], [" SELECT COUNT(DISTINCT sheriff) FROM w", -5.63961848306], [" SELECT COUNT(*) FROM w", -9.34651762559], [" SELECT COUNT(*) FROM w", -9.713583625590001], [" SELECT COUNT(*) FROM w", -9.96608997559], [" SELECT COUNT(*) FROM w", -10.99356641959], [" SELECT COUNT(*) FROM w", -12.043440825589999]]}, "909": {"question": "what was the only game published by electronic arts?", "gold_answer": ["Alice: Madness Returns"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[2]], "7": ["<error>"], "8": [[5]], "9": ["<error>"], "10": [[3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -1.2263953109899999], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -1.2263953109899999], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -1.2263953109899999], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -1.2263953109899999], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -1.2263953109899999], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -1.2263953109899999], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -1.2263953109899999], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -1.2263953109899999], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'", -2.64846661465], [" SELECT COUNT(*) FROM w WHERE publisher = 'electronic arts'\nQ2: there are {how many = a2} game developed by spicy pony.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE developer = 'spicy pony'\nQ3: there are {how many = a3} game published in 2012.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2012\nQ4: there are {how many = a4} game published in 2012 and developed by spicy horse.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 2012 AND developer = 'spicy horse'\nQ5: there are {how many = a5} game published in 2012 or developed by spicy horse.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 2012 OR developer = 'spicy horse'\nQ6: there are {how many = a6} game published in 2012 and developed by spicy horse or published by electronic arts.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE (year = 2012 AND developer = 'spicy horse') OR publisher = 'electronic arts'\n", -34.01385521632001]]}, "950": {"question": "number of different teams listed on the chart", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [8], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT opponent) FROM w", -3.688298879864], [" SELECT COUNT(DISTINCT(opponent)) FROM w", -4.588642690963999], [" SELECT COUNT(*) FROM w", -4.798164154289998], [" SELECT COUNT(DISTINCT opponent) FROM w", -7.1227760307259995], [" SELECT COUNT(DISTINCT opponent) FROM w", -8.51906921853], [" SELECT COUNT(DISTINCT opponent) FROM w", -10.100818573726], [" SELECT COUNT(DISTINCT opponent) FROM w", -10.96723023853], [" SELECT COUNT(DISTINCT opponent) FROM w", -11.038024613725998], [" SELECT COUNT(DISTINCT opponent) FROM w", -11.408239538530001], [" SELECT COUNT(DISTINCT opponent) FROM w", -11.484211913726]]}, "991": {"question": "name a year with more than one game listed.", "gold_answer": ["2013"], "pred_answer": {"0": [[2, 2], [2], [2], [2], [2], [2], [5], [2], [5], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY year HAVING COUNT(*) > 1", -3.505429566974], [" SELECT COUNT(DISTINCT year) FROM w WHERE year IN (SELECT year FROM w GROUP BY year HAVING COUNT(*) > 1)", -5.326895339803999], [" SELECT COUNT(DISTINCT year) FROM w WHERE year IN (SELECT year FROM w GROUP BY year HAVING COUNT(*) > 1)", -5.327410426834], [" SELECT COUNT(DISTINCT year) FROM w WHERE year IN (SELECT year FROM w GROUP BY year HAVING COUNT(*) > 1)", -5.327410426834], [" SELECT COUNT(DISTINCT year) FROM w WHERE year IN (SELECT year FROM w GROUP BY year HAVING COUNT(*) > 1)", -5.327410426834], [" SELECT COUNT(DISTINCT year) FROM w WHERE year IN (SELECT year FROM w GROUP BY year HAVING COUNT(*) > 1)", -5.327410426834], [" SELECT COUNT(DISTINCT year) FROM w WHERE year > 1", -5.413639933223999], [" SELECT COUNT(DISTINCT year) FROM w WHERE year IN (SELECT year FROM w GROUP BY year HAVING COUNT(*) > 1)", -7.378877737834], [" SELECT COUNT(DISTINCT year) FROM w", -11.177301763134], [" SELECT COUNT(*) FROM (SELECT DISTINCT year FROM w GROUP BY year HAVING COUNT(*) > 1)", -11.441523800424998]]}, "1032": {"question": "which country had the larger death tole?", "gold_answer": ["Poland"], "pred_answer": {"0": [[13178603.0], [13178603.0], [13178603.0], [10330], [14356], [13178603.0], [14356], [14356], [13178603.0], [14356]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT SUM(poland) FROM w\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w", -3.3243004188749996], [" SELECT SUM(poland) FROM w\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w", -3.3243004188749996], [" SELECT SUM(poland) FROM w\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w", -3.33185474671], [" SELECT SUM(poland) FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'suicides'", -6.192451878938999], [" SELECT SUM(total) FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'suicides'", -6.608210988487003], [" SELECT SUM(poland) FROM w\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w", -11.262393148489998], [" SELECT SUM(total) FROM w WHERE description = 'suicides' AND poland != 'none'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'suicides' AND `baltic states(resettled in poland during war)` != 'none'", -11.462414105256], [" SELECT SUM(total) FROM w WHERE description = 'suicides' AND poland != 'none'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'suicides' AND `baltic states(resettled in poland during war)` != 'none'", -11.462414105256], [" SELECT SUM(poland) FROM w\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w", -12.277617348489999], [" SELECT SUM(total) FROM w WHERE description = 'suicides'\nNeuralSQL2: SELECT SUM(`baltic states(resettled in poland during war)`) FROM w WHERE description = 'suicides'", -12.507115836751003]]}, "1073": {"question": "how many subjects are there?", "gold_answer": ["38"], "pred_answer": {"0": [[36], [36], [36], [36], [36], [36], [36], [36], [36], [36]]}, "nsql": [[" SELECT COUNT(DISTINCT(subject)) FROM w", -4.410380759833], [" SELECT COUNT(DISTINCT subject) FROM w", -5.372584933128], [" SELECT COUNT(DISTINCT subject) FROM w", -5.454854258158], [" SELECT COUNT(DISTINCT subject) FROM w", -5.454854258158], [" SELECT COUNT(DISTINCT subject) FROM w", -5.454854258158], [" SELECT COUNT(DISTINCT subject) FROM w", -5.454854258158], [" SELECT COUNT(DISTINCT subject) FROM w", -5.454854258158], [" SELECT COUNT(DISTINCT subject) FROM w", -5.454854258158], [" SELECT COUNT(DISTINCT subject) FROM w", -5.960483674758001], [" SELECT COUNT(DISTINCT subject) FROM w", -7.351369258158]]}, "1114": {"question": "how many captains are listed?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT captain) FROM w", -3.725104384319], [" SELECT COUNT(DISTINCT captain) FROM w", -3.725104384319], [" SELECT COUNT(DISTINCT captain) FROM w", -3.725104384319], [" SELECT COUNT(DISTINCT captain) FROM w", -3.725104384319], [" SELECT COUNT(DISTINCT captain) FROM w", -7.242999683319001], [" SELECT COUNT(DISTINCT captain) FROM w", -8.989268273258999], [" SELECT COUNT(DISTINCT captain) FROM w", -9.962544713259], [" SELECT COUNT(DISTINCT captain) FROM w", -10.334736113259002], [" SELECT COUNT(DISTINCT captain) FROM w", -11.096907713259], [" SELECT COUNT(DISTINCT captain) FROM w", -11.733113123259]]}, "1155": {"question": "how many players had a 8 points?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `\u03c3 points` = 8.0", -3.1046221610250004], [" SELECT COUNT(*) FROM w WHERE \u03c3 points = 8.0", -3.448983477025], [" SELECT COUNT(DISTINCT player) FROM w WHERE `\u03c3 points` = 8", -4.468874920785], [" SELECT COUNT(*) FROM w WHERE `\u03c3 points` = 8", -5.505918870215], [" SELECT COUNT(*) FROM w WHERE \u03c3 points = 8", -6.046747681769999], [" SELECT COUNT(*) FROM w WHERE \u03c3 points = 8", -6.190330621769999], [" SELECT COUNT(*) FROM w WHERE `\u03c3 points` = 8", -6.569657270215], [" SELECT COUNT(*) FROM w WHERE `\u03c3 points` = 8", -6.681467170215], [" SELECT COUNT(*) FROM w WHERE `\u03c3 points` = 8", -8.084264547405], [" SELECT COUNT(*) FROM w WHERE `\u03c3 points` = 8", -8.436490170215]]}, "1196": {"question": "how many models have 1.6ghz?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `model 01` = '1.6ghz' OR `model 01+` = '1.6ghz' OR `model 02` = '1.6ghz' OR `model e2` = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz'", -5.127813777635], [" SELECT COUNT(*) FROM w WHERE `model 01` = '1.6ghz' OR `model 01+` = '1.6ghz' OR `model 02` = '1.6ghz' OR `model e2` = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz'", -5.127813777635], [" SELECT COUNT(*) FROM w WHERE `model 01` = '1.6ghz' OR `model 01+` = '1.6ghz' OR `model 02` = '1.6ghz' OR `model e2` = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz'", -5.127813777635], [" SELECT COUNT(*) FROM w WHERE `model 01` = '1.6ghz' OR `model 01+` = '1.6ghz' OR `model 02` = '1.6ghz' OR `model e2` = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz'", -6.03148381633], [" SELECT COUNT(*) FROM w WHERE `model 01` = '1.6ghz' OR `model 01+` = '1.6ghz' OR `model 02` = '1.6ghz' OR `model e2` = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz'", -6.034003740635], [" SELECT COUNT(*) FROM w WHERE `model 01` = '1.6ghz' OR `model 01+` = '1.6ghz' OR `model 02` = '1.6ghz' OR `model e2` = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz'", -6.034003740635], [" SELECT COUNT(*) FROM w WHERE model 01 = '1.6ghz' OR model 01+ = '1.6ghz' OR model 02 = '1.6ghz' OR model e2 = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz'", -6.674625792374], [" SELECT COUNT(*) FROM w WHERE (model 01 = '1.6ghz' OR model 01+ = '1.6ghz' OR model 02 = '1.6ghz' OR model e2 = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz')", -7.389001296744], [" SELECT COUNT(*) FROM w WHERE component = 'cpu' AND (model 01 = '1.6ghz' OR model 01+ = '1.6ghz' OR model 02 = '1.6ghz' OR model e2 = '1.6ghz' OR `model 2+ (pre-production)` = '1.6ghz' OR `model 03 (china copy)` = '1.6ghz')", -9.651967849360002], [" SELECT COUNT(*) FROM w WHERE model 01 = '1.6ghz' OR model 01+ = '1.6ghz' OR model 02 = '1.6ghz' OR model e2 = '1.6ghz' OR model 2+ (pre-production) = '1.6ghz' OR model 03 (china copy) = '1.6ghz'", -11.472530109150002]]}, "1237": {"question": "how many of the current state regents will be in office until at least 2016?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [3], [4], [4], [3], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `term expires` >= 2016", -5.2820004027000005], [" SELECT COUNT(*) FROM w WHERE `term expires` >= 2016", -5.2820004027000005], [" SELECT COUNT(*) FROM w WHERE `term expires` >= 2016", -5.2820004027000005], [" SELECT COUNT(*) FROM w WHERE `term expires` >= 2016", -6.6422232027], [" SELECT COUNT(*) FROM w WHERE `term expires` > 2016", -7.009457201790001], [" SELECT COUNT(*) FROM w WHERE `term expires` >= 2016", -7.077061902700001], [" SELECT COUNT(*) FROM w WHERE `term expires` >= 2016", -8.10393791533], [" SELECT COUNT(*) FROM w WHERE `term expires` > 2016", -8.263363944510001], [" SELECT COUNT(*) FROM w WHERE term expires >= 2016", -9.957910862690001], [" SELECT COUNT(*) FROM w WHERE term expires >= 2016", -10.936627397690001]]}, "1240": {"question": "what is the total number of rider?", "gold_answer": ["24"], "pred_answer": {"0": [[24], [24], [24], [24], [24], [24], [24], [24], [24], [24]], "1": ["<error>"], "2": [[24]], "3": ["<error>"], "4": [[24]], "5": ["<error>"], "6": [[24]], "7": ["<error>"], "8": [[24]], "9": ["<error>"], "10": [[24]], "11": ["<error>"], "12": [[24]], "13": ["<error>"], "14": [[24]], "15": ["<error>"], "16": [[24]], "17": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT rider) FROM w", -1.347515340358], [" SELECT COUNT(DISTINCT rider) FROM w", -1.347515340358], [" SELECT COUNT(DISTINCT rider) FROM w", -1.347515340358], [" SELECT COUNT(DISTINCT rider) FROM w", -1.347515340358], [" SELECT COUNT(DISTINCT rider) FROM w", -2.514976936358], [" SELECT COUNT(DISTINCT rider) FROM w", -2.514976936358], [" SELECT COUNT(DISTINCT rider) FROM w", -2.514976936358], [" SELECT COUNT(*) FROM w", -5.905029656079999], [" SELECT COUNT(*) FROM w", -7.36018663774], [" SELECT COUNT(rider) FROM w\nQ2: {how many = a2} rider.\nNeuralSQL2: SELECT COUNT(DISTINCT rider) FROM w\nQ3: {how many = a3} rider.\nNeuralSQL3: SELECT COUNT(DISTINCT rider) FROM w\nQ4: {how many = a4} rider.\nNeuralSQL4: SELECT COUNT(DISTINCT rider) FROM w\nQ5: {how many = a5} rider.\nNeuralSQL5: SELECT COUNT(DISTINCT rider) FROM w\nQ6: {how many = a6} rider.\nNeuralSQL6: SELECT COUNT(rider) FROM w\nQ7: {how many = a7} rider.\nNeuralSQL7: SELECT COUNT(rider) FROM w\nQ8: {how many = a8} rider.\nNeuralSQL8: SELECT COUNT(rider) FROM w\nQ9: {how many = a9} rider.\nNeuralSQL9: SELECT COUNT(rider) FROM w\nQ10: {how many = a", -22.44879252483999]]}, "1261": {"question": "how many times did kansas state not score at all against kansas from 1902-1968?", "gold_answer": ["23"], "pred_answer": {"0": [[0], "<error>", [9], [0], [0], [0], [0], [0], [17], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE site = 'lawrence' AND winning team = 'kansas state' AND losing team = 'kansas'", -9.200353971099997], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas' AND `losing team` = 'kansas state' AND score = 0", -9.35197870816], [" SELECT COUNT(*) FROM w WHERE winning team LIKE 'kansas state %' AND losing team LIKE 'kansas %' AND site = 'lawrence'", -13.15685288286], [" SELECT COUNT(*) FROM w WHERE site = 'manhattan' AND year BETWEEN 1902 AND 1968 AND `winning team` LIKE 'kansas state 0'", -13.890771683314998], [" SELECT COUNT(*) FROM w WHERE (winning team = 'kansas state' OR losing team = 'kansas state') AND (winning team = 'kansas' OR losing team = 'kansas') AND (CAST(SUBSTR(winning team, 1, INSTR(winning team, ' ') - 1) AS INT) = 0 OR CAST(SUBSTR(losing team, 1, INSTR(losing team, ' ') - 1) AS INT) = 0)", -15.337220983791994], [" SELECT COUNT(*) FROM w WHERE losing team = 'kansas state' AND site = 'lawrence' AND year BETWEEN 1902 AND 1968 AND winning team LIKE '% - 0'", -15.52646627517], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas state' AND `losing team` = 'kansas' AND `winning team` LIKE '% 0' AND `losing team` LIKE '% 0' AND year BETWEEN 1902 AND 1968", -17.678675698489997], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'kansas state' AND `losing team` = 'kansas' AND `series` LIKE '% - %' AND CAST(SUBSTR(`series`, 1, INSTR(`series`, '-') - 1) AS INT) = 0", -18.787581540393997], [" SELECT COUNT(*) FROM w WHERE winning team LIKE 'kansas state %' AND losing team LIKE 'kansas %' AND (year BETWEEN 1902 AND 1968) AND winning team NOT LIKE '% - %'", -21.577198467269998], [" SELECT COUNT(*) FROM w WHERE (year BETWEEN 1902 AND 1968) AND (losing team = 'kansas state') AND (site = 'lawrence') AND (winning team LIKE 'kansas %') AND (CAST(SUBSTR(winning team, INSTR(winning team, ' ') + 1, LENGTH(winning team) - (INSTR(winning team, ' ') + 1)) AS INT) = 0)", -24.922937330380005]]}, "1278": {"question": "what songs were on b'in music or universal music?", "gold_answer": ["Kissing The Future of Love", "j'Adore", "Fall in Love & Songs", "What Love Songs Didn't Tell You", "Love in Heart"], "pred_answer": {"0": ["<error>", "<error>", [3], [3], "<error>", "<error>", "<error>", "<error>", "<error>", [3]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE label = 'b'in music'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -6.051928662643999], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -7.355887952463999], [" SELECT COUNT(*) FROM w WHERE label = \"b'in music\"\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = \"universal music\"", -7.520375937168001], [" SELECT COUNT(*) FROM w WHERE label = \"b'in music\"\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -8.087567663069], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -8.691412194463998], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -10.558173362723998], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -10.827494394463999], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -10.875139962723999], [" SELECT COUNT(*) FROM w WHERE label = 'b'in music'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -11.031037204174], [" SELECT COUNT(*) FROM w WHERE label = \"b'in music\"\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE label = 'universal music'", -12.108737947948]]}, "19": {"question": "how many ships were launched in the year 1944?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[4]], "5": ["<error>"], "6": [[6]], "7": ["<error>"], "8": [[0]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE launched LIKE '1944-%-%'", -3.52607714844], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944%'", -3.89264249644], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944%'", -3.89264249644], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944-%-%'", -4.53956649704], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944-%-%'", -4.53956649704], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944-%-%'", -4.53956649704], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944-%-%'", -9.950133356734002], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944-%-%'", -10.273998956734001], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944-%-%'", -10.934575856734], [" SELECT COUNT(*) FROM w WHERE `launched` LIKE '1944-%-%'\nQ2: {how many = a2} ships were built by sir j. laing & sons ltd.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE builder = 'sir j. laing & sons ltd'\nQ3: {how many = a3} ships were scrapped in the year 1960.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE fate LIKE 'scrapped in 1960'\nQ4: {how many = a4} ships were scrapped in the year 1960 or 1963.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE fate LIKE 'scrapped in 1960' OR fate LIKE 'scrapped in 1963'\nQ5: {how many = a5} ships were built by sir j. laing & sons ltd and scrapped in the year 1960.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE builder = 'sir j. laing & sons ltd' AND fate LIKE 'scrapped in 1960'\nQ6: {how many = a6}", -31.402807900048977]]}, "23": {"question": "how many historic sites are listed in coldwater?", "gold_answer": ["15"], "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.889899700924], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.889899700924], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.889899700924], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.889899700924], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.890641865944], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.890641865944], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -1.890641865944], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -3.542921987024], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -3.542921987024], [" SELECT COUNT(*) FROM w WHERE city = 'coldwater'", -4.105253989874]]}, "64": {"question": "south korea has how many more medals that north korea?", "gold_answer": ["10"], "pred_answer": {"0": [[22], [22], [22], [22], [22], [22], [22], [22], [22], [22]], "1": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'", -1.65044076495], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'", -1.65044076495], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'", -1.65044076495], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'", -1.65044076495], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'", -1.65044076495], [" SELECT SUM(total) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'north korea'", -1.65044076495], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'north korea'", -3.3652802385610006], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'north korea'", -3.3652802385610006], [" SELECT total FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'north korea'", -9.635284911260001], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'south korea'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'north korea'", -14.668223781561002]]}, "105": {"question": "what is the total number of candidates?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w", -3.1334643914800004], [" SELECT COUNT(*) FROM w", -3.13722361548], [" SELECT COUNT(*) FROM w", -3.96720990648], [" SELECT COUNT(*) FROM w", -4.678937723280001], [" SELECT COUNT(*) FROM w", -4.68238788913], [" SELECT COUNT(*) FROM w", -7.70866339528], [" SELECT COUNT(*) FROM w", -7.933385895280001], [" SELECT COUNT(*) FROM w", -7.95361485363], [" SELECT COUNT(*) FROM w", -8.45222197613], [" SELECT COUNT(*) FROM w", -9.630568576129999]]}, "146": {"question": "of the third division, how many were in section3?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [0], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND division = 'kolmonen (third division)' AND section = 'section 3'", -3.5292798535969996], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND section = 'section 3'", -6.9875313245470005], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND section = 'section 3'", -7.670284465547001], [" SELECT COUNT(*) FROM w WHERE level = 'tier 3' AND section = 'section 3'", -8.149070764627], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND section = 'section 3'", -9.676395931547], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND section = 'section 3'", -10.515457131547], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND section = 'section 3'", -10.575885731547], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND section = 'section 3'", -10.717158045925], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND section = 'section 3'", -10.804368831547], [" SELECT COUNT(*) FROM w WHERE level = 'tier 4' AND section = 'section 3'", -12.036583331547]]}, "187": {"question": "which locomotive builder built a locomotive after 1888 and built the locomotive as a 2ft gauge locomotive?", "gold_answer": ["Hunslet"], "pred_answer": {"0": [[3], [3], [4], [3], [3], [3], [3], [3], [3], [3]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type = '2ft gauge locomotive'", -5.9060258517443005], [" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type = '2ft gauge locomotive'", -5.954005147347301], [" SELECT COUNT(*) FROM w WHERE `date` > '1888'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type` LIKE '%2ft%'", -8.378171335260003], [" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type LIKE '%2ft%'", -9.7218322484925], [" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type LIKE '%2ft%'", -9.7218322484925], [" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type LIKE '%2ft%'", -9.7376712762573], [" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type LIKE '%2ft%'", -9.7376712762573], [" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type LIKE '%ft%'", -10.9000795827173], [" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type LIKE '%2ft%'\n```", -14.2562008919345], [" SELECT COUNT(DISTINCT builder) FROM w WHERE date > '1888'\nNeuralSQL2: SELECT COUNT(DISTINCT builder) FROM w WHERE type LIKE '2ft gauge'", -18.955625896517297]]}, "228": {"question": "what is the number of sheriff's with the last name smith?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% smith' OR sheriff_2 LIKE '% smith' OR sheriff_3 LIKE '% smith'", -2.4908233857599997], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% smith' OR sheriff_2 LIKE '% smith' OR sheriff_3 LIKE '% smith'", -2.4908233857599997], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% smith' OR sheriff_2 LIKE '% smith' OR sheriff_3 LIKE '% smith'", -2.4908233857599997], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% smith' OR sheriff_2 LIKE '% smith' OR sheriff_3 LIKE '% smith'", -2.4908233857599997], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% smith' OR sheriff_2 LIKE '% smith' OR sheriff_3 LIKE '% smith'", -2.4990821160599994], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '%smith' OR sheriff_2 LIKE '%smith' OR sheriff_3 LIKE '%smith'", -3.25851751095], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '%smith' OR sheriff_2 LIKE '%smith' OR sheriff_3 LIKE '%smith'", -3.25851751095], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '%smith' OR sheriff_2 LIKE '%smith' OR sheriff_3 LIKE '%smith'", -3.2632510804099994], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '%smith' OR sheriff_2 LIKE '%smith' OR sheriff_3 LIKE '%smith'", -3.2632510804099994], [" SELECT COUNT(*) FROM w WHERE sheriff LIKE '% smith' OR sheriff_2 LIKE '% smith' OR sheriff_3 LIKE '% smith'", -5.54359107706]]}, "269": {"question": "how many times was carlow the runner-up?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `runners-up` = 'carlow'", -3.13306857147], [" SELECT COUNT(*) FROM w WHERE `runners-up` = 'carlow'", -3.1352149374700002], [" SELECT COUNT(*) FROM w WHERE runners-up = 'carlow'", -3.6525225804100003], [" SELECT COUNT(*) FROM w WHERE runners-up = 'carlow'", -3.6525225804100003], [" SELECT COUNT(*) FROM w WHERE runners-up = 'carlow'", -3.6525225804100003], [" SELECT COUNT(*) FROM w WHERE runners-up = 'carlow'", -3.6525225804100003], [" SELECT COUNT(*) FROM w WHERE runners-up = 'carlow'", -3.6525225804100003], [" SELECT COUNT(*) FROM w WHERE runners-up = 'carlow'", -3.6537047864100005], [" SELECT COUNT(*) FROM w WHERE runners-up = 'carlow'", -5.52736177233], [" SELECT COUNT(*) FROM w WHERE runners-up = 'carlow'", -5.52736177233]]}, "310": {"question": "how many battles resulted between 3,000 and 4,200 estimated americans killed?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>", "<error>"], "2": [[6]], "3": ["<error>"], "4": [[6]], "5": ["<error>"], "6": [[6]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `estimated number of americans killed` BETWEEN 3000 AND 4200", -3.7381131293], [" SELECT COUNT(*) FROM w WHERE `estimated number of americans killed` BETWEEN 3000 AND 4200", -5.5771605849400006], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`estimated number of americans killed`,' killed','') AS INT) BETWEEN 3000 AND 4200", -5.967980656790002], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`estimated number of americans killed`, ' killed', '') AS INT) BETWEEN 3000 AND 4200", -6.5416889739199995], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`estimated number of americans killed`, ' killed', '') AS INT) BETWEEN 3000 AND 4200", -6.6096114835040005], [" SELECT COUNT(*) FROM w WHERE `estimated number of americans killed` LIKE '%killed%' AND CAST(REPLACE(`estimated number of americans killed`,'killed','') AS INT) BETWEEN 3000 AND 4200", -8.795787697], [" SELECT COUNT(*) FROM w WHERE `estimated number of americans killed` > 3000 AND `estimated number of americans killed` < 4200\n\"\"\"", -9.35510610886], [" SELECT COUNT(*) FROM w WHERE `estimated number of americans killed` LIKE '%killed%' AND (CAST(REPLACE(`estimated number of americans killed`,'killed','') AS INT) BETWEEN 3000 AND 4200)", -9.692704805860004], [" SELECT COUNT(*) FROM w WHERE `estimated number of americans killed` LIKE '%killed%' AND (CAST(REPLACE(`estimated number of americans killed`, 'killed', '') AS INT) BETWEEN 3000 AND 4200)", -9.906499914609997], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`estimated number of americans killed`,' killed','') AS INT) BETWEEN 3000 AND 4200\nQ2: {how many = a2} battles resulted in more than 7,000 estimated americans killed.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`estimated number of americans killed`,' killed','') AS INT) > 7000\nQ3: {how many = a3} battles resulted in more than 7,000 estimated americans killed.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`estimated number of americans killed`,' killed','') AS INT) > 7000\nQ4: {how many = a4} battles resulted in more than 7,000 estimated americans killed.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`estimated number of americans killed`,' killed','') AS INT) > 7000\nQ5: {how many = a5} battles resulted in more than 7,", -26.958392291550005]]}, "351": {"question": "what are the number of times nc appears under the comp column?", "gold_answer": ["32"], "pred_answer": {"0": [[31], [31], [31], [31], [31], [31], [31], [31], [31], [31]], "1": ["<error>", "<error>"], "2": [[2], [36]], "3": ["<error>", "<error>"], "4": [[1], [72]], "5": ["<error>", "<error>"], "6": [[1], [25]], "7": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE comp = 'nc'", -2.4510406943300005], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'", -2.4510406943300005], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'", -2.4510406943300005], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'", -2.4510406943300005], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'", -2.4510406943300005], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'", -2.78764445773], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'", -2.78764445773], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'", -2.78764445773], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'\nQ2: {how many = a2} times the score is larger than 5.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > 5\nQ3: {how many = a3} times the score is larger than 5 and the venue is copenhagen.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > 5 AND venue LIKE '%copenhagen%'\nQ4: {how many = a4} times the score is larger than 5 and the venue is copenhagen and the comp is nc.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > 5 AND venue LIKE '%copenhagen%' AND comp = 'nc'\nQ5: {how many = a5", -36.12659005690013], [" SELECT COUNT(*) FROM w WHERE comp = 'nc'\nQ2: {how many = a2} records have a venue that contains the word \u2018(h)\u2019.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue LIKE '%(h)%'\nQ3: {how many = a3} records have a score that contains the word \u2018-\u2019.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE score LIKE '%-%'\nQ4: {how many = a4} records have a score that contains the word \u2018-\u2019 and the first number is larger than the second number.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0\nQ5: {how many = a5} records have a score", -44.21086956834298]]}, "392": {"question": "number of incumbents who retired or lost re-election", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [22], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE '%retired%' OR result LIKE '%lost%'", -4.326137138809999], [" SELECT COUNT(*) FROM w WHERE result LIKE '%retired%' OR result LIKE '%lost%'", -4.326137138809999], [" SELECT COUNT(*) FROM w WHERE result LIKE '%retired%' OR result LIKE '%lost%'", -4.326137138809999], [" SELECT COUNT(*) FROM w WHERE result LIKE '%retired%' OR result LIKE '%lost%'", -4.326137138809999], [" SELECT COUNT(*) FROM w WHERE result LIKE '%retired%' OR result LIKE '%lost%'", -4.33440324356], [" SELECT COUNT(*) FROM w WHERE result LIKE '%retired%' OR result LIKE '%lost%'", -6.77291648721], [" SELECT COUNT(*) FROM w WHERE `first\\nelected` NOT LIKE '%re-elected%'", -7.485448880260002], [" SELECT COUNT(*) FROM w WHERE (result LIKE '%retired%' OR result LIKE '%lost%') AND incumbent != 'vacant'", -10.643591482310002], [" SELECT COUNT(*) FROM w WHERE (result LIKE '%retired%' OR result LIKE '%lost%') AND incumbent IS NOT NULL", -13.902361994495003], [" SELECT COUNT(*) FROM w WHERE (result LIKE '%retired%' OR result LIKE '%lost%') AND result NOT LIKE '%re-elected%'", -17.61569069504]]}, "433": {"question": "how many episodes only had one performer?", "gold_answer": ["16"], "pred_answer": {"0": [[16], [16], [16], [16], [16], [16], [16], [16], [16], [16]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -1.23543589296], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -1.23543589296], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -1.23543589296], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -1.23543589296], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -1.23967116753], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -1.2418055564700001], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -4.7893031837599995], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'\n```", -9.3506879198], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -11.06708368916], [" SELECT COUNT(*) FROM w WHERE appearance = 'only'", -11.45040493305]]}, "474": {"question": "what was the total penalty minutes that dave brown had on the 1993-1994 flyers?", "gold_answer": ["137"], "pred_answer": {"0": ["<error>", [null], [59], "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [0]]}, "nsql": [[" SELECT SUM(penalty minutes) FROM w WHERE player = 'dave brown'", -4.23103034186], [" SELECT SUM(points) FROM w WHERE opponent = 'dave brown'", -5.0714441064999995], [" SELECT SUM(CAST(SUBSTR(score, INSTR(score, ' - ') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w", -8.169205156770001], [" SELECT SUM(`total penalty minutes`) FROM w WHERE `player name` = 'dave brown'", -8.85524314461], [" SELECT SUM(`total penalty minutes`) FROM w WHERE `player name` = 'dave brown'", -8.974624687750001], [" SELECT SUM(`penalty minutes`) FROM w WHERE `player name` = 'dave brown'", -9.015417675110001], [" SELECT SUM(`penalty minutes`) FROM w WHERE `player name` = 'dave brown'", -9.211635494350002], [" SELECT SUM(CAST(REPLACE(`penalty minutes`, 'pm', '') AS INT)) FROM w WHERE player = 'dave brown'", -9.633924293536], [" SELECT SUM(`total penalty minutes`) FROM w WHERE `player` = 'dave brown'", -11.3652092218], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w", -13.52345508526]]}, "515": {"question": "what is the total number of children listed?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [0], [1], [0], [0], [4], [0], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w", -3.22608870424], [" SELECT COUNT(*) FROM w", -3.22608870424], [" SELECT COUNT(*) FROM w WHERE name LIKE '%children%'", -5.42799051544], [" SELECT COUNT(*) FROM w WHERE `brief biography` LIKE '%children%'", -5.709039036399999], [" SELECT COUNT(*) FROM w WHERE name LIKE '%child%'", -6.364003342739999], [" SELECT COUNT(*) FROM w WHERE name LIKE '%children%'", -6.368487799239999], [" SELECT COUNT(*) FROM w WHERE name LIKE '%(later%'", -6.668505444237999], [" SELECT COUNT(*) FROM w WHERE name LIKE '%child%'", -7.4938062063099995], [" SELECT COUNT(*) FROM w WHERE name LIKE '% (later %'", -8.40441662124], [" SELECT COUNT(*) FROM w WHERE name LIKE '%(%'", -8.63924972124]]}, "556": {"question": "did marco simoncelli or alvaro bautista held rank 1?", "gold_answer": ["Marco Simoncelli"], "pred_answer": {"0": [["1"], ["1"], ["1"], ["1"], ["1"], ["1"], ["1"], ["1"], ["1"], ["1"]], "1": [["2"], ["2"], ["2"], ["2"], ["2"], ["2"], ["2"], ["2"], ["2"], ["2"]]}, "nsql": [[" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.330206168], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997], [" SELECT pos FROM w WHERE rider = 'marco simoncelli'\nNeuralSQL2: SELECT pos FROM w WHERE rider = 'alvaro bautista'", -1.3314453128799997]]}, "597": {"question": "how many countries have at least 10 gold medals in the asian youth games?", "gold_answer": ["5"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold >= 10", -1.496494388205], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -1.496494388205], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -1.496494388205], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -1.496494388205], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -3.1109677442049994], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -3.1109677442049994], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -3.1109677442049994], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -3.1109677442049994], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -3.6658199722050004], [" SELECT COUNT(*) FROM w WHERE gold >= 10", -3.6687325996049998]]}, "600": {"question": "how many games played by sunderland are listed here?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -2.29147034767], [" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -2.29147034767], [" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -2.29147034767], [" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -2.29147034767], [" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -2.29147034767], [" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -2.29147034767], [" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -2.29147034767], [" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -2.29147034767], [" SELECT COUNT(*) FROM w WHERE home team = 'sunderland' OR away team = 'sunderland'", -5.13075664417], [" SELECT COUNT(*) FROM w WHERE `home team` = 'sunderland' OR `away team` = 'sunderland'", -11.421738825337]]}, "621": {"question": "which county had the most number of wins?", "gold_answer": ["Kildare"], "pred_answer": {"0": [[6], [6], [6], [3], [9], ["kildare"], ["kildare"], [1], ["kildare", 3], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT county) FROM w WHERE wins = (SELECT MAX(wins) FROM w)", -3.275709062765001], [" SELECT COUNT(DISTINCT county) FROM w WHERE wins = (SELECT MAX(wins) FROM w)", -3.275709062765001], [" SELECT COUNT(DISTINCT county) FROM w WHERE wins = (SELECT MAX(wins) FROM w)", -3.275709062765001], [" SELECT COUNT(*) FROM w GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1", -4.77804381212], [" SELECT COUNT(*) FROM w WHERE wins = (SELECT MAX(wins) FROM w)", -5.735222897199999], [" SELECT county FROM w GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1", -7.028841601439999], [" SELECT county FROM w GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1", -7.028841601439999], [" SELECT MAX(wins) FROM w", -8.923819439259999], [" SELECT county, COUNT(*) FROM w GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1", -9.200634117869999], [" SELECT COUNT(*) FROM (SELECT county, COUNT(*) AS cnt FROM w GROUP BY county ORDER BY cnt DESC LIMIT 1)", -13.131346604834002]]}, "638": {"question": "what was the most the university of florida won by?", "gold_answer": ["41 points"], "pred_answer": {"0": [[642777], [8], [8], [8], [642777], [8], [8], [null], [6349], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT SUM(attendance) FROM w WHERE result LIKE 'w%'", -5.15830329498], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -5.5795926728200005], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -5.5795926728200005], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -6.5270268728200005], [" SELECT SUM(attendance) FROM w WHERE result LIKE '%w%'", -6.540108395210001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -7.35733297282], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -7.4437000728200005], [" SELECT SUM(CAST(SUBSTR(result, 3, INSTR(result, '-') - 3) AS INT)) FROM w WHERE result LIKE 'w\u00a0%-%'", -15.476966281529998], [" SELECT SUM(CAST(REPLACE(SUBSTR(result, INSTR(result, '\u00a0') + 1, LENGTH(result) - (INSTR(result, '\u00a0') + 1)), '\u2013', '') AS INT)) FROM w WHERE result LIKE 'w\u00a0%'", -17.195222281740005], [" SELECT SUM(CAST(REPLACE(SUBSTR(result, 2, INSTR(result, '-') - 2), 'w', '') AS INT)) FROM w\nQ2: the university of florida lost by {how many = a2}.\nNeuralSQL2: SELECT SUM(CAST(REPLACE(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)), 'l', '') AS INT)) FROM w\nQ3: the university of florida won by {how many = a3} in ben hill griffin stadium.\nNeuralSQL3: SELECT SUM(CAST(REPLACE(SUBSTR(result, 2, INSTR(result, '-') - 2), 'w', '') AS INT)) FROM w WHERE site LIKE '%ben hill griffin stadium%'\nQ4: the university of florida lost by {how many = a4} in ben hill griffin stadium.\nNeuralSQL4: SELECT SUM(CAST(REPLACE(SUBSTR(result, INSTR", -32.1336825278373]]}, "642": {"question": "how many names do not have a description?", "gold_answer": ["2"], "pred_answer": {"0": [[0], [0], [0], [0], [2], [2], [2], [2], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE description IS NULL", -1.7685134380440002], [" SELECT COUNT(*) FROM w WHERE description IS NULL", -1.7685134380440002], [" SELECT COUNT(*) FROM w WHERE description IS NULL", -1.7685134380440002], [" SELECT COUNT(*) FROM w WHERE description IS NULL", -1.7685134380440002], [" SELECT COUNT(*) FROM w WHERE description = 'none'", -4.346896961314], [" SELECT COUNT(*) FROM w WHERE description = 'none'", -4.346896961314], [" SELECT COUNT(*) FROM w WHERE description = 'none'", -4.347974657484], [" SELECT COUNT(*) FROM w WHERE description = 'none'", -4.347974657484], [" SELECT COUNT(*) FROM w WHERE description IS NULL", -5.9300386279540005], [" SELECT COUNT(*) FROM w WHERE description IS NULL", -12.635244334703998]]}, "679": {"question": "how many teams failed to finish the race after 2 laps?", "gold_answer": ["4"], "pred_answer": {"0": [[10], [10], [10], [10], [14], [10], [0], [10], [10], [14]], "1": ["<error>", "<error>"], "2": [[17]], "3": ["<error>"], "4": [[7]], "5": ["<error>"], "6": [[7]], "7": ["<error>"], "8": [[7]], "9": ["<error>"], "10": [[7]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps < 2", -2.840480117688], [" SELECT COUNT(*) FROM w WHERE laps < 2", -2.840480117688], [" SELECT COUNT(*) FROM w WHERE laps < 2", -2.840480117688], [" SELECT COUNT(DISTINCT team) FROM w WHERE laps < 2", -3.426540087019], [" SELECT COUNT(*) FROM w WHERE laps < 3", -3.6474262088879996], [" SELECT COUNT(*) FROM w WHERE laps < 2", -6.891323474287999], [" SELECT COUNT(*) FROM w WHERE laps = 0 AND no = 2", -7.936667294763001], [" SELECT COUNT(*) FROM w WHERE laps < 2", -11.442665166607998], [" SELECT COUNT(*) FROM w WHERE laps < 2\n```", -11.536421857088], [" SELECT COUNT(*) FROM w WHERE laps < 3\nQ2: {how many = a2} teams finished the race.\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE laps > 0\nQ3: the number of teams that finished the race after {how many = a3} laps.\nNeuralSQL3: SELECT COUNT(DISTINCT team) FROM w WHERE laps > 3\nQ4: {how many = a4} teams finished the race after 3 laps.\nNeuralSQL4: SELECT COUNT(DISTINCT team) FROM w WHERE laps > 3\nQ5: {how many = a5} teams finished the race after 3 laps.\nNeuralSQL5: SELECT COUNT(DISTINCT team) FROM w WHERE laps > 3\nQ6: {how many = a6} teams finished the race after 3 laps.\nNeuralSQL6: SELECT COUNT(DISTINCT team) FROM w WHERE laps > 3\nQ7: {how many = a7} teams finished the race after 3 laps.\nNeuralSQL7: SELECT COUNT(DISTINCT", -46.016185718646014]]}, "683": {"question": "how many candidates were there for virginia 17 district?", "gold_answer": ["5"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE district = 'virginia 17'", -1.916193040392], [" SELECT COUNT(*) FROM w WHERE district = 'virginia 17'", -1.916193040392], [" SELECT COUNT(*) FROM w WHERE district = 'virginia 17'", -1.916193040392], [" SELECT COUNT(*) FROM w WHERE district = 'virginia 17'", -1.9173637094219997], [" SELECT COUNT(*) FROM w WHERE district = 'virginia 17'", -1.926295999476], [" SELECT COUNT(*) FROM w WHERE district = 'virginia 17'", -3.5146775943599997], [" SELECT COUNT(*) FROM w WHERE district = 'virginia 17'", -3.5146775943599997], [" SELECT COUNT(*) FROM w WHERE district = 'virginia 17'", -3.5146775943599997], [" SELECT COUNT(DISTINCT candidates) FROM w WHERE district = 'virginia 17'", -5.211150181496], [" SELECT COUNT(DISTINCT candidates) FROM w WHERE district = 'virginia 17'", -6.0345918723]]}, "724": {"question": "home many times did a single country win both the men's and women's bupa great south run?", "gold_answer": ["4"], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT SUBSTR(`men's winner`, INSTR(`men's winner`, '(') + 1, INSTR(`men's winner`, ')') - INSTR(`men's winner`, '(') - 1)) FROM w WHERE SUBSTR(`men's winner`, INSTR(`men's winner`, '(') + 1, INSTR(`men's winner`, ')') - INSTR(`men's winner`, '(') - 1) = SUBSTR(`women's winner`, INSTR(`women's winner`, '(') + 1, INSTR(`women's winner`, ')') - INSTR(`women's winner`, '(') - 1)", -8.435512730878996], [" SELECT COUNT(*) FROM w WHERE SUBSTR(men's winner, INSTR(men's winner, '(') + 1, INSTR(men's winner, ')') - (INSTR(men's winner, '(') + 1)) = SUBSTR(women's winner, INSTR(women's winner, '(') + 1, INSTR(women's winner, ')') - (INSTR(women's winner, '(') + 1))", -8.68869814722], [" SELECT COUNT(DISTINCT SUBSTR(`men's winner`, INSTR(`men's winner`, '(') + 1, 2)) FROM w WHERE SUBSTR(`men's winner`, INSTR(`men's winner`, '(') + 1, 2) = SUBSTR(`women's winner`, INSTR(`women's winner`, '(') + 1, 2)", -8.991542122337], [" SELECT COUNT(*) FROM w WHERE men's winner LIKE '%(%' AND women's winner LIKE '%(%' AND SUBSTR(men's winner, LENGTH(men's winner) - 1, 1) = SUBSTR(women's winner, LENGTH(women's winner) - 1, 1)", -10.725360283049998], [" SELECT COUNT(DISTINCT SUBSTR(`men's winner`, INSTR(`men's winner`, '(') + 1, INSTR(`men's winner`, ')') - (INSTR(`men's winner`, '(') + 1))) FROM w WHERE SUBSTR(`men's winner`, INSTR(`men's winner`, '(') + 1, INSTR(`men's winner`, ')') - (INSTR(`men's winner`, '(') + 1)) = SUBSTR(`women's winner`, INSTR(`women's winner`, '(') + 1, INSTR(`women's winner`, ')') - (INSTR(`women's winner`, '(') + 1))", -12.195291977978], [" SELECT COUNT(*) FROM w WHERE `men's winner` LIKE '%(%' AND `women's winner` LIKE '%(%' AND SUBSTR(`men's winner`, LENGTH(`men's winner`) - 2, 3) = SUBSTR(`women's winner`, LENGTH(`women's winner`) - 2, 3)", -12.682350896918003], [" SELECT COUNT(*) FROM w WHERE (men's winner LIKE '%(%' AND women's winner LIKE '%(%') AND SUBSTR(men's winner, LENGTH(men's winner) - 2, 3) = SUBSTR(women's winner, LENGTH(women's winner) - 2, 3)", -13.040415963150007], [" SELECT COUNT(*) FROM w WHERE `men's winner` LIKE '%ken%' AND `women's winner` LIKE '%ken%'", -13.879681400269998], [" SELECT COUNT(*) FROM w WHERE (SELECT COUNT(*) FROM w WHERE men's winner LIKE '%(%') = (SELECT COUNT(*) FROM w WHERE women's winner LIKE '%(%')\n```", -20.946683921499996], [" SELECT COUNT(*) FROM w WHERE `men's winner` LIKE '%(%' AND `women's winner` LIKE '%(%' AND SUBSTR(`men's winner`, LENGTH(`men's winner`) - 2, 3) = SUBSTR(`women's winner`, LENGTH(`women's winner`) - 2, 3)", -21.49147833671]]}, "765": {"question": "which year had more venues, 2007 or 2012?", "gold_answer": ["2012"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = '2007'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = '2012'", -3.8258263260700005], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -8.65359317396], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -9.761554881260002], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -10.34191455426], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -10.885643764260001], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -11.54619946631], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -11.90827165126], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -12.569359679090002], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -13.420265529969999], [" SELECT COUNT(*) FROM w WHERE year = 2007\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2012", -15.770958936044]]}, "806": {"question": "this table shows the difference between how many transliterations?", "gold_answer": ["3"], "pred_answer": {"0": [[8], [9], [9], [8], [8], [9], [9], [9], [8], [8]]}, "nsql": [[" SELECT COUNT(DISTINCT devanagari) FROM w", -3.75547044098], [" SELECT COUNT(DISTINCT(iso 15919)) FROM w", -4.14617331403], [" SELECT COUNT(DISTINCT(iso 15919)) FROM w", -4.14617331403], [" SELECT COUNT(DISTINCT(devanagari)) FROM w", -4.967467034489999], [" SELECT COUNT(DISTINCT(devanagari)) FROM w", -4.967467034489999], [" SELECT COUNT(DISTINCT(iso 15919)) FROM w", -6.838858349429999], [" SELECT COUNT(DISTINCT iso 15919) FROM w", -7.135697278210001], [" SELECT COUNT(DISTINCT iso 15919) FROM w", -7.596075129890001], [" SELECT COUNT(DISTINCT unrsgn) FROM w", -9.58155525563], [" SELECT COUNT(DISTINCT comment) FROM w", -11.47569213133]]}, "847": {"question": "what was the number of times czech republic played against germany?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -1.2414034859299998], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -1.2414034859299998], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -1.2414034859299998], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -1.2414034859299998], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -1.2414034859299998], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -1.2414034859299998], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -1.2444892514500001], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -1.2444892514500001], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -4.153219126329999], [" SELECT COUNT(*) FROM w WHERE opponent = 'germany'", -5.281217612929999]]}, "888": {"question": "how many judges served as chief total?", "gold_answer": ["8"], "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [52]], "1": ["<error>", "<error>"], "2": [[34]], "3": ["<error>"], "4": [[32]], "5": ["<error>"], "6": [[3]], "7": ["<error>"], "8": [[2]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE chief != '\u2014\u2014'", -5.036853552019999], [" SELECT COUNT(*) FROM w WHERE chief != '\u2014\u2014'", -5.036853552019999], [" SELECT COUNT(*) FROM w WHERE chief != '\u2014\u2014'", -5.996686099413], [" SELECT COUNT(*) FROM w WHERE chief <> '\u2014\u2014'", -6.883587911725999], [" SELECT COUNT(*) FROM w WHERE chief != '\u2014\u2014'", -9.284881535413], [" SELECT COUNT(*) FROM w WHERE chief != '\u2014\u2014'", -9.796956235412999], [" SELECT COUNT(*) FROM w WHERE chief != '\u2014\u2014'", -9.810597435413], [" SELECT COUNT(*) FROM w WHERE chief != \"\u2014\u2014\"", -13.057508060854998], [" SELECT COUNT(*) FROM w WHERE chief != '\u2014\u2014'\n```", -14.61674602429], [" SELECT COUNT(*) FROM w WHERE chief = '\u2014\u2014'\nQ2: {how many = a2} judges served as senior total.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE senior = '\u2014\u2014'\nQ3: {how many = a3} judges served as chief and senior total.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE chief = '\u2014\u2014' AND senior = '\u2014\u2014'\nQ4: {how many = a4} judges appointed by reagan.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `appointed by` = 'reagan'\nQ5: {how many = a5} judges appointed by reagan and died.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `appointed by` = 'reagan' AND `reason for\\ntermination` = 'death'\nQ6: {how many = a6} judges appointed by reagan and died and served as chief.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE `appointed by` = 'reagan' AND `reason for\\ntermination` = 'death' AND chief = '", -35.68993953427601]]}, "929": {"question": "which whitworth size is the only one with 5 threads per inch?", "gold_answer": ["1 3/4"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -2.0557730693300003], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -2.0557730693300003], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -2.0557730693300003], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -2.0557730693300003], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -2.0557730693300003], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -2.0584082301300004], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -2.0584082301300004], [" SELECT COUNT(*) FROM w WHERE `threads per inch` = 5", -2.8242443893599996], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -3.8839458251300005], [" SELECT COUNT(*) FROM w WHERE `threads per\u00a0inch` = 5", -3.8839458251300005]]}, "970": {"question": "which country performed better during the 1951 world ice hockey championships, switzerland or great britain?", "gold_answer": ["Switzerland"], "pred_answer": {"0": [[1], [6], [4], [6], [6], [1], [6], [6], [6], [1]], "1": [[1], [6], [1], [6], [6], [1], [6], [6], [6], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'great britain'", -2.5582767032200016], [" SELECT SUM(won + drawn + lost) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT SUM(won + drawn + lost) FROM w WHERE team = 'great britain'", -4.470294604940002], [" SELECT SUM(won) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT SUM(won) FROM w WHERE team = 'great britain'", -4.604243150359997], [" SELECT SUM(won) + SUM(drawn) + SUM(lost) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT SUM(won) + SUM(drawn) + SUM(lost) FROM w WHERE team = 'great britain'", -4.604505097991002], [" SELECT SUM(won) + SUM(drawn) + SUM(lost) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT SUM(won) + SUM(drawn) + SUM(lost) FROM w WHERE team = 'great britain'", -4.605541256548], [" SELECT COUNT(*) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'great britain'", -6.569069190020002], [" SELECT matches FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT matches FROM w WHERE team = 'great britain'", -7.29216392323], [" SELECT SUM(matches) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT SUM(matches) FROM w WHERE team = 'great britain'", -7.436078391909999], [" SELECT SUM(matches) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT SUM(matches) FROM w WHERE team = 'great britain'", -10.571482595909998], [" SELECT COUNT(*) FROM w WHERE team = 'switzerland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'great britain'", -12.699297167590002]]}, "1011": {"question": "how many times was the political rights listed as seven?", "gold_answer": ["18"], "pred_answer": {"0": [[18], [18], [18], [18], [18], [18], [18], [18], [18], [18]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[2]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -3.799783651729999], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -3.799783651729999], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -3.799783651729999], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -8.284533835984], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -8.737250335984001], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -8.748729035984], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -9.063800335984], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -9.248170635984], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7", -10.044455835984], [" SELECT COUNT(*) FROM w WHERE `political rights` = 7\nQ2: {how many = a2} times was the political rights listed as seven and the civil liberties listed as five.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `political rights` = 7 AND `civil liberties` = 5\nQ3: {how many = a3} times was the political rights listed as seven and the civil liberties listed as five and the status listed as not free.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `political rights` = 7 AND `civil liberties` = 5 AND status = 'not free'\nQ4: {how many = a4} times was the political rights listed as seven and the civil liberties listed as five and the status listed as not free and the president was ibrahim bar\u00e9 ma\u00efnassara.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `political rights` = 7 AND `civil liberties` = 5 AND status = 'not free' AND president = 'ibrahim bar\u00e9 ma\u00efnassara'\nQ5: {how many = a5} times was the political rights listed as", -26.168220133025994]]}, "1052": {"question": "how many episodes had a consecutive rating over 11%?", "gold_answer": ["7"], "pred_answer": {"0": [[10], [10], [2], [10], [6], [0], [10], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE ratings > 11", -4.2623419356], [" SELECT COUNT(*) FROM w WHERE ratings > 11", -4.2623419356], [" SELECT COUNT(*) FROM w WHERE ratings LIKE '11%'", -7.954884965600001], [" SELECT COUNT(*) FROM w WHERE ratings > '11%'", -8.0037639076], [" SELECT COUNT(*) FROM w WHERE ratings > '11' AND ratings < '13'", -10.1119482096], [" SELECT COUNT(*) FROM w WHERE ratings > '11%' AND row_id > 0 AND ratings > (SELECT ratings FROM w WHERE row_id = row_id - 1)", -10.52348405488], [" SELECT COUNT(*) FROM w WHERE (ratings > 11 AND ratings > 11)", -11.47148843194], [" SELECT COUNT(*) FROM w WHERE ratings > 11 AND ratings > (SELECT ratings FROM w WHERE row_id = row_id - 1)", -13.901914295260003], [" SELECT COUNT(*) FROM w WHERE ratings LIKE '% - %' AND (CAST(SUBSTR(ratings, 1, INSTR(ratings, '-') - 1) AS INT) - CAST(SUBSTR(ratings, INSTR(ratings, '-') + 1, LENGTH(ratings) - (INSTR(ratings, ' - ') + 1)) AS INT)) > 0", -21.088641145748802], [" SELECT COUNT(*) FROM w WHERE ratings LIKE '% %' AND (CAST(REPLACE(SUBSTR(ratings, 1, INSTR(ratings, ' ') - 1),'%','') AS INT) - CAST(REPLACE(SUBSTR(ratings, INSTR(ratings, ' ') + 1, LENGTH(ratings) - (INSTR(ratings, ' ') + 1)),'%','') AS INT)) > 0", -23.340761126526004]]}, "1093": {"question": "how many members of estonia's men's national volleyball team were born in 1988?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [0], [2], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '1988%'", -3.5050763710300004], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '1988-%-%'", -3.97286198135], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '1988-%-%'", -3.97286198135], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '1988-%-%'", -3.97286198135], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '1988-%'", -5.589821842389999], [" SELECT COUNT(*) FROM w WHERE `birth date` LIKE '1988%-%-%'", -7.048659051349999], [" SELECT COUNT(*) FROM w WHERE SUBSTR(`birth date`, INSTR(`birth date`, '(') - 5, 4) = '1988'", -7.7414231107400004], [" SELECT COUNT(*) FROM w WHERE birth date LIKE '%1988%'", -9.375195172400002], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`birth date`, INSTR(`birth date`, '(') - 4, 4) AS INT) = 1988", -9.750648827870002], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`birth date`, INSTR(`birth date`, '(') + 1, 4) AS INT) = 1988", -11.249050328290002]]}, "1134": {"question": "how many points did robbie mcewen and cristian moreni score together?", "gold_answer": ["404"], "pred_answer": {"0": [[288], [288], [288], [288], [288], [288], [288], [288], [288], [288]], "1": [[116], [116], [116], [116], [116], [116], [116], [116], [116], [116]]}, "nsql": [[" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider = 'robbie mcewen'\nNeuralSQL2: SELECT points FROM w WHERE rider = 'cristian moreni'", -1.6217121286029996], [" SELECT points FROM w WHERE rider LIKE '%robbie mcewen%'\nNeuralSQL2: SELECT points FROM w WHERE rider LIKE '%cristian moreni%'", -7.418183394813999]]}, "1175": {"question": "szalai scored only one more international goal against all other countries put together than he did against what one country?", "gold_answer": ["San Marino"], "pred_answer": {"0": [[6], [6], [22.0], [4], [22.0], [22.0], [6], [4], [4], [22.0]], "1": [[1], ["san marino", "san marino", "san marino", "bulgaria", "andorra", "turkey"], [6.0], [3], [6.0], [6.0], [3], [3], [3], [6.0]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent != 'finland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'finland'", -6.541085952900001], [" SELECT COUNT(*) FROM w WHERE opponent != 'finland'\nNeuralSQL2: SELECT opponent FROM w WHERE opponent != 'finland'", -9.994308250685998], [" SELECT SUM(goal) FROM w WHERE opponent != 'san marino'\nNeuralSQL2: SELECT SUM(goal) FROM w WHERE opponent = 'san marino'", -11.566860531763], [" SELECT COUNT(*) FROM w WHERE opponent != 'san marino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'san marino'", -11.884652722390001], [" SELECT SUM(goal) FROM w WHERE opponent != 'san marino'\nNeuralSQL2: SELECT SUM(goal) FROM w WHERE opponent = 'san marino'", -13.979739173662999], [" SELECT SUM(goal) FROM w WHERE opponent != 'san marino'\nNeuralSQL2: SELECT SUM(goal) FROM w WHERE opponent = 'san marino'", -14.082416116873002], [" SELECT COUNT(*) FROM w WHERE opponent != 'finland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent != 'finland' AND opponent = 'san marino'", -14.145262570190003], [" SELECT COUNT(*) FROM w WHERE opponent != 'san marino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'san marino'", -14.688952205897001], [" SELECT COUNT(*) FROM w WHERE opponent != 'san marino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'san marino'\n```", -14.748456112450002], [" SELECT SUM(goal) FROM w WHERE opponent != 'san marino'\nNeuralSQL2: SELECT SUM(goal) FROM w WHERE opponent = 'san marino'", -15.07083340293]]}, "1216": {"question": "what is the total number of translations?", "gold_answer": ["8"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [8], [9], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.5159141939299998], [" SELECT COUNT(*) FROM w", -1.5159141939299998], [" SELECT COUNT(*) FROM w", -1.5164582136199998], [" SELECT COUNT(*) FROM w", -1.5164582136199998], [" SELECT COUNT(*) FROM w", -1.5164582136199998], [" SELECT COUNT(*) FROM w", -1.5164582136199998], [" SELECT COUNT(*) FROM w", -3.66931804246], [" SELECT COUNT(DISTINCT devanagari) FROM w", -4.1326196178500005], [" SELECT COUNT(DISTINCT(iso 15919)) FROM w", -4.975549365049999], [" SELECT COUNT(DISTINCT unrsgn) FROM w", -9.36755400431]]}, "1257": {"question": "tell me the number of ships that went to pakistan.", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -2.33128426246], [" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -2.33128426246], [" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -2.3322769814599997], [" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -2.99617971546], [" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -3.00241457346], [" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -3.00241457346], [" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -3.0054773945599997], [" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -3.0054773945599997], [" SELECT COUNT(*) FROM w WHERE fate LIKE 'to pakistan%'", -3.0058918545599997], [" SELECT COUNT(DISTINCT name) FROM w WHERE fate LIKE 'to pakistan%'", -8.595604055517502]]}, "1260": {"question": "how many drivers earned no bonus for this race?", "gold_answer": ["23"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE bonus = 0", -1.0960287028139999], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -1.0960287028139999], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -1.0960287028139999], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -1.0960287028139999], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -1.0960287028139999], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -1.0960287028139999], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -1.0960287028139999], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -1.0960287028139999], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -3.0387350398699997], [" SELECT COUNT(*) FROM w WHERE bonus = 0", -3.0387350398699997]]}, "1281": {"question": "how many districts have a population density of at lest 1000.0?", "gold_answer": ["31"], "pred_answer": {"0": [[31], [31], [31], [31], [31], [31], [31], [31], [31], [31]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0", -2.05895594138], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0", -2.059030537], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0", -2.06044895399], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0", -2.06065279292], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0", -2.0628517348999997], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0", -2.0659805457400005], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0", -4.0427728619], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0", -4.0427728619], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` >= 1000.0\n```", -4.766187563550001], [" SELECT COUNT(*) FROM w WHERE `population density\\n(/km\u00b2)` > 1000", -6.30486057252]]}, "2": {"question": "what is the total number of pylons listed?", "gold_answer": ["17"], "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -4.394616888824], [" SELECT COUNT(*) FROM w", -4.394616888824], [" SELECT COUNT(*) FROM w", -4.397446667154], [" SELECT COUNT(*) FROM w", -4.397446667154], [" SELECT COUNT(*) FROM w", -4.397446667154], [" SELECT COUNT(*) FROM w", -4.397446667154], [" SELECT COUNT(*) FROM w", -4.397446667154], [" SELECT COUNT(*) FROM w", -4.414597792484], [" SELECT COUNT(*) FROM w", -6.673722536154], [" SELECT COUNT(*) FROM w\nQ2: {how many = a2} pylons are in the usa.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'usa'\nQ3: {how many = a3} pylons are in new york city.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE town = 'new york city'\nQ4: {how many = a4} pylons are in the usa and in new york city.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE country = 'usa' AND town = 'new york city'\nQ5: {how many = a5} pylons are in the usa and in new york city and in 1972.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE country = 'usa' AND town = 'new york city' AND year built = 1972.0\nQ6: {how many = a6} pylons are in the usa and in new york city and in 1972 and have a height of 76 m.\nNeuralSQL6:", -39.60173141231602]]}, "39": {"question": "what is the number of children sarah churchill had?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name LIKE '%churchill%'", -3.54432098635], [" SELECT COUNT(*) FROM w WHERE name LIKE '%churchill%'", -3.54432098635], [" SELECT COUNT(*) FROM w WHERE name LIKE '%churchill%'", -3.54432098635], [" SELECT COUNT(*) FROM w WHERE name LIKE '%churchill%'", -3.54432098635], [" SELECT COUNT(*) FROM w WHERE name LIKE '%churchill%'", -3.54432098635], [" SELECT COUNT(*) FROM w WHERE name LIKE '%churchill%'", -4.71375341273], [" SELECT COUNT(*) FROM w WHERE name LIKE '%churchill%'", -4.71375341273], [" SELECT COUNT(*) FROM w", -5.09360083673], [" SELECT COUNT(*) FROM w WHERE name LIKE '% churchill%'", -5.520961258390001], [" SELECT COUNT(DISTINCT name) FROM w WHERE name LIKE '%churchill%'\nQ2: sarah churchill had {how many = a2} daughters.\nNeuralSQL2: SELECT COUNT(DISTINCT name) FROM w WHERE name LIKE '%churchill%' AND name LIKE '%sarah%' AND name LIKE '%daughter%'\nQ3: sarah churchill had {how many = a3} sons.\nNeuralSQL3: SELECT COUNT(DISTINCT name) FROM w WHERE name LIKE '%churchill%' AND name LIKE '%sarah%' AND name LIKE '%son%'\nQ4: sarah churchill had {how many = a4} grandchildren.\nNeuralSQL4: SELECT COUNT(DISTINCT name) FROM w WHERE name LIKE '%churchill%' AND name LIKE '%sarah%' AND name LIKE '%grandchild%'\nQ5: sarah churchill had {how many = a5} grandchildren.\nNeuralSQL5: SELECT COUNT(DISTINCT name) FROM w WHERE name LIKE '%", -30.175996233768814]]}, "43": {"question": "how many countries won at least 2 medals in sailing?", "gold_answer": ["9"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [3], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total >= 2", -2.47190494447], [" SELECT COUNT(*) FROM w WHERE total >= 2", -2.50780235604], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze >= 2", -3.21603068237], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze >= 2", -3.21603068237], [" SELECT COUNT(*) FROM w WHERE total > 1", -3.70977552304], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze > 2", -5.072409444185], [" SELECT COUNT(*) FROM w WHERE total >= 2", -5.726516524970001], [" SELECT COUNT(DISTINCT nation) FROM w WHERE gold + silver + bronze >= 2", -10.427790502707], [" SELECT COUNT(*) FROM w WHERE total >= 2", -11.56083045109], [" SELECT COUNT(*) FROM w WHERE total >= 2", -13.785009031089999]]}, "84": {"question": "how many points does the artist rita have?", "gold_answer": ["43"], "pred_answer": {"0": [[43], [43], [43], [43], [43], [43], [43], [43], [43], [43]]}, "nsql": [[" SELECT points FROM w WHERE artist = 'rita'", -1.13765326738], [" SELECT points FROM w WHERE artist = 'rita'", -1.13765326738], [" SELECT points FROM w WHERE artist = 'rita'", -1.13765326738], [" SELECT points FROM w WHERE artist = 'rita'", -1.13765326738], [" SELECT points FROM w WHERE artist = 'rita'", -1.13765326738], [" SELECT points FROM w WHERE artist = 'rita'", -1.13765326738], [" SELECT points FROM w WHERE artist = 'rita'", -3.0918748500299995], [" SELECT points FROM w WHERE artist = 'rita'", -3.0918748500299995], [" SELECT points FROM w WHERE artist = 'rita'", -3.3059030679], [" SELECT points FROM w WHERE artist = 'rita'", -3.3059030679]]}, "125": {"question": "how many titles have only one artist?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [1], [1], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa'", -3.49644236395], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa'", -3.4982907219], [" SELECT COUNT(DISTINCT title) FROM w WHERE artist = 'rimi natsukawa'", -4.144415011957], [" SELECT COUNT(DISTINCT title) FROM w WHERE artist = 'rimi natsukawa'", -4.149147466393001], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa'", -4.32227487995], [" SELECT COUNT(DISTINCT title) FROM w WHERE artist = 'rimi natsukawa'", -5.412163500303], [" SELECT COUNT(*) FROM w WHERE artist LIKE '%feat.%'", -6.517434390939999], [" SELECT COUNT(*) FROM w WHERE artist LIKE '%feat.%'", -6.51918054216], [" SELECT COUNT(*) FROM w WHERE artist LIKE '% %'", -9.41051595413], [" SELECT COUNT(*) FROM w WHERE artist LIKE '% %'", -9.979930154129999]]}, "166": {"question": "does der liebeswalzer or man\u00f6verkinder contain more acts?", "gold_answer": ["Der Liebeswalzer"], "pred_answer": {"0": [["3 acts"], ["3 acts"], ["3 acts"], ["3 acts"], ["3 acts"], ["3 acts"], ["3 acts"], ["3 acts"], ["3 acts"], ["3 acts"]], "1": [["2 acts"], ["2 acts"], ["2 acts"], ["2 acts"], ["2 acts"], ["2 acts"], ["2 acts"], ["2 acts"], ["2 acts"], ["2 acts"]]}, "nsql": [[" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -6.011353907552001], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -6.012013204741], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -6.012013204741], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -6.012013204741], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -6.012013204741], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -6.012013204741], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -6.012013204741], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -6.012061267532], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -9.076657050267], [" SELECT `sub\u00addivisions` FROM w WHERE title = 'der liebeswalzer'\nNeuralSQL2: SELECT `sub\u00addivisions` FROM w WHERE title = 'man\u00f6verkinder'", -14.253879931937]]}, "207": {"question": "which nation was the only one to receive 3 medals?", "gold_answer": ["Spain (ESP)"], "pred_answer": {"0": [[0], [0], [0], [0], [1], [1], [1], [1], [0], [0]], "1": ["<error>"], "2": [[17]], "3": ["<error>"], "4": [[4]], "5": ["<error>"], "6": [[7]], "7": ["<error>"], "8": [[2]], "9": ["<error>"], "10": [[7]], "11": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 1 AND silver = 1 AND bronze = 1", -3.13361879942], [" SELECT COUNT(*) FROM w WHERE gold = 1 AND silver = 1 AND bronze = 1", -3.13361879942], [" SELECT COUNT(*) FROM w WHERE gold = 1 AND silver = 1 AND bronze = 1", -3.13361879942], [" SELECT COUNT(*) FROM w WHERE gold = 1 AND silver = 1 AND bronze = 1", -3.13361879942], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze = 3", -3.39965895009], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze = 3", -5.29618321482], [" SELECT COUNT(DISTINCT nation) FROM w WHERE total = 3", -6.324007016239999], [" SELECT COUNT(*) FROM w WHERE total = 3", -6.89926758222], [" SELECT COUNT(*) FROM w WHERE gold = 1 AND silver = 1 AND bronze = 1", -13.775175870210001], [" SELECT COUNT(*) FROM w WHERE gold = 1 AND silver = 1 AND bronze = 1\nQ2: {how many = a2} nation was the only one to receive 1 medal.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold = 1 OR silver = 1 OR bronze = 1\nQ3: {how many = a3} nation was the only one to receive 2 medals.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE gold = 1 AND (silver = 1 OR bronze = 1) OR silver = 1 AND bronze = 1\nQ4: {how many = a4} nation was the only one to receive 1 gold medal.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE gold = 1\nQ5: {how many = a5} nation was the only one to receive 2 gold medals.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE gold = 2\nQ6: {how many = a6} nation was the only one to receive 1 silver medal.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE silver = 1\nQ7: {how many = a7}", -31.034303616636002]]}, "248": {"question": "how many players hometowns are outside of california?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [13], [13], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%ca%'", -2.7334534434050006], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%ca%'", -2.7334537982250007], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%ca%'", -2.7334537982250007], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%ca%'", -2.7334537982250007], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%ca%'", -2.7457269793809997], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%ca%'", -2.7457269793809997], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '% ca %'", -5.906202459185001], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '% , ca , %'", -5.9407267021850005], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%ca, u.s.%'", -7.163546255885001], [" SELECT COUNT(*) FROM w WHERE hometown NOT LIKE '%, ca, u.s.'", -12.087590724145]]}, "289": {"question": "how many medals did senegal win?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [1], [7], [1], [7], [7], [7]]}, "nsql": [[" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'senegal'", -3.9810498297099994], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'senegal'", -3.9827184279599996], [" SELECT SUM(total) FROM w WHERE nation = 'senegal'", -8.185115838720002], [" SELECT SUM(total) FROM w WHERE nation = 'senegal'", -8.19232869872], [" SELECT COUNT(*) FROM w WHERE nation = 'senegal'", -8.91374032791], [" SELECT SUM(total) FROM w WHERE nation = 'senegal'", -9.22955806182], [" SELECT COUNT(*) FROM w WHERE nation = 'senegal'", -9.35309821791], [" SELECT SUM(total) FROM w WHERE nation = 'senegal'", -10.844872008720001], [" SELECT SUM(total) FROM w WHERE nation = 'senegal'", -11.020578738720001], [" SELECT SUM(total) FROM w WHERE nation = 'senegal'", -11.06751852872]]}, "330": {"question": "the number of flush wins at one credit to equal one flush win at 5 credits.", "gold_answer": ["5"], "pred_answer": {"0": [["5"], ["5"], ["5"], ["5"], ["5"], ["5"], ["5"], ["5"], ["5"], ["5"]], "1": [["25"], ["25"], ["25"], ["25"], ["25"], ["25"], ["25"], ["25"], ["25"], ["25"]], "2": ["<error>"]}, "nsql": [[" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'", -1.6714537156949998], [" SELECT `1 credit` FROM w WHERE hand = 'flush'\nNeuralSQL2: SELECT `5 credits` FROM w WHERE hand = 'flush'\n```", -17.024620858855]]}, "371": {"question": "what is the total number of teams that qualified?", "gold_answer": ["10"], "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w", -2.33013771296], [" SELECT COUNT(DISTINCT team) FROM w WHERE qualified IS NOT NULL", -3.975208399244], [" SELECT COUNT(DISTINCT team) FROM w WHERE qualified IS NOT NULL", -3.975208399244], [" SELECT COUNT(*) FROM w\n```", -4.64209261706], [" SELECT COUNT(DISTINCT team) FROM w", -7.465215888374001], [" SELECT COUNT(DISTINCT team) FROM w", -8.324903570424], [" SELECT COUNT(DISTINCT team) FROM w", -8.809461158374], [" SELECT COUNT(DISTINCT(team)) FROM w", -9.080219496794001], [" SELECT COUNT(DISTINCT team) FROM w", -10.939408025374], [" SELECT COUNT(DISTINCT team) FROM w WHERE qualified IS NOT NULL\n```", -13.802929009044]]}, "412": {"question": "how many consecutive times was south africa the host country?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [0], [2], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE host country = 'south africa'", -2.9467070575700003], [" SELECT COUNT(*) FROM w WHERE host country = 'south africa'", -2.9467070575700003], [" SELECT COUNT(*) FROM w WHERE host country = 'south africa'", -2.9467070575700003], [" SELECT COUNT(*) FROM w WHERE host country = 'south africa'", -2.9467070575700003], [" SELECT COUNT(*) FROM w WHERE host country = 'south africa'", -2.9467070575700003], [" SELECT COUNT(*) FROM w WHERE `host country` = 'south africa'", -4.061415553109999], [" SELECT COUNT(*) FROM w WHERE host country = 'south africa'", -5.49953079224], [" SELECT COUNT(*) FROM w WHERE host country = 'south africa' AND dates LIKE '%-%-%'", -9.31557768841], [" SELECT COUNT(*) FROM w WHERE (host country = 'south africa' AND row_id = 0) OR (host country = 'south africa' AND row_id = 1)", -11.958494792329999], [" SELECT COUNT(*) FROM w WHERE `host country` = 'south africa' AND `dates` LIKE '% - %' AND (CAST(SUBSTR(`dates`, 1, INSTR(`dates`, '-') - 1) AS INT) - CAST(SUBSTR(`dates`, INSTR(`dates`, '-') + 1, LENGTH(`dates`) - (INSTR(`dates`, ' - ') + 1)) AS INT)) = 1", -14.540098337561005]]}, "453": {"question": "what is the number of networks that are owned by televisa?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE owner = 'televisa'", -1.4052404401840004], [" SELECT COUNT(*) FROM w WHERE owner = 'televisa'", -1.4052404401840004], [" SELECT COUNT(*) FROM w WHERE owner = 'televisa'", -1.4052404401840004], [" SELECT COUNT(*) FROM w WHERE owner = 'televisa'", -1.4052404401840004], [" SELECT COUNT(*) FROM w WHERE owner = 'televisa'", -1.4052404401840004], [" SELECT COUNT(*) FROM w WHERE owner = 'televisa'", -1.4077075395900003], [" SELECT COUNT(*) FROM w WHERE owner = 'televisa'", -3.8262197379600003], [" SELECT COUNT(DISTINCT(network name)) FROM w WHERE owner = 'televisa'", -6.848649070141], [" SELECT COUNT(DISTINCT(network name)) FROM w WHERE owner = 'televisa'", -6.848649070141], [" SELECT COUNT(DISTINCT network name) FROM w WHERE owner = 'televisa'", -10.756900148089002]]}, "494": {"question": "how many countries have one more than 10 gold medals?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold > 10", -1.16423770474], [" SELECT COUNT(*) FROM w WHERE gold > 10", -1.16425875294], [" SELECT COUNT(*) FROM w WHERE gold > 10", -1.16425875294], [" SELECT COUNT(*) FROM w WHERE gold > 10", -1.16595099594], [" SELECT COUNT(*) FROM w WHERE gold > 10", -1.16595099594], [" SELECT COUNT(*) FROM w WHERE gold > 10", -1.16595099594], [" SELECT COUNT(*) FROM w WHERE gold > 10", -1.16595099594], [" SELECT COUNT(*) FROM w WHERE gold > 10", -1.16595099594], [" SELECT COUNT(*) FROM w WHERE gold > 10", -4.096332791639999], [" SELECT COUNT(*) FROM w WHERE gold > 10", -11.03663834684]]}, "535": {"question": "what is the number of bird sanctuary landmarks?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -4.635404934468999], [" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -4.636360660494001], [" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -4.637489707887], [" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -4.6435663406789995], [" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -4.6435663406789995], [" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -4.6435663406789995], [" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -4.6435663406789995], [" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -4.9379726326540005], [" SELECT COUNT(*) FROM w WHERE description = 'bird sanctuary'", -6.653520022484002], [" SELECT COUNT(*) FROM w WHERE `description` = 'bird sanctuary'\n```", -6.817742374953999]]}, "576": {"question": "how many dollars on average did brazil receive per tourist in 2009?", "gold_answer": ["1,147"], "pred_answer": {"0": [["1147"], ["1147"], [1147], ["1147"], [1147], [1147], [1147], ["1147"], [1147], [1147]]}, "nsql": [[" SELECT `average receipt per visitor 2009 (usd/turista)` FROM w WHERE `selected latin american countries` = 'brazil'", -5.655606150240001], [" SELECT `average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -7.54779321603], [" SELECT CAST(REPLACE(`average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)`,'n/d', '0') AS INT) FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -8.398433088958004], [" SELECT `average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -9.50754049338], [" SELECT CAST(REPLACE(`average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)`,'n/d','') AS INT) FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -9.637444293314001], [" SELECT CAST(REPLACE(`average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)`,'n/d','') AS INT) FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -10.63340123756], [" SELECT CAST(REPLACE(`average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)`,'n/d','') AS INT) FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -11.251804592614], [" SELECT `average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)` FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -11.39026239967], [" SELECT CAST(REPLACE(`average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)`,'usd','') AS INT) FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -12.882273481777002], [" SELECT CAST(REPLACE(`average\\nreceipt\\nper visitor\\n2009\\n(usd/turista)`,'usd','') AS INT) FROM w WHERE `selected\\nlatin american\\ncountries` = 'brazil'", -15.456786034914002]]}, "617": {"question": "which university had the most years won?", "gold_answer": ["Waseda University"], "pred_answer": {"0": [[1], [1], [1], [1], [15], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [3], [1], [1], [1], [1], [1]], "2": [[0], [0], [0], [0], [0], [1], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND years won != 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND years won != 'none'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND years won != 'none'", -4.368786140157002], [" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND years won != 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND years won != 'none'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND years won != 'none'", -4.368786140157002], [" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND years won != 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND years won != 'none'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND years won != 'none'", -4.369673544053], [" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND years won != 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND years won != 'none'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND years won != 'none'", -4.380043983968999], [" SELECT SUM(winner) FROM w WHERE university = 'waseda university'\nNeuralSQL2: SELECT SUM(winner) FROM w WHERE university = 'keio university'\nNeuralSQL3: SELECT SUM(winner) FROM w WHERE university = 'tenri university'", -5.00380865385], [" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND `years won` IS NOT NULL\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND `years won` IS NOT NULL\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND `years won` IS NOT NULL", -5.8585207916940005], [" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND `years won` <> 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND `years won` <> 'none'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND `years won` <> 'none'", -6.2175045623], [" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND years won != 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND years won != 'none'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND years won != 'none'", -7.668553842967], [" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND years won != 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND years won != 'none'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND years won != 'none'", -7.7098295039470015], [" SELECT COUNT(*) FROM w WHERE university = 'waseda university' AND years won != 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE university = 'keio university' AND years won != 'none'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE university = 'tenri university' AND years won != 'none'", -8.245961517715998]]}, "620": {"question": "how many times was korzeniowski disqualified from a competition?", "gold_answer": ["5"], "pred_answer": {"0": [[0], [0], [7], [7], [5], [7], [0], [0], [7], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'dq'", -2.61214962866], [" SELECT COUNT(*) FROM w WHERE position = 'dq'", -2.63268672269], [" SELECT COUNT(*) FROM w WHERE position = '\u2013'", -2.64102910666], [" SELECT COUNT(*) FROM w WHERE position = '\u2013'", -2.64102910666], [" SELECT COUNT(*) FROM w WHERE notes = 'dq'", -2.8231336366600006], [" SELECT COUNT(*) FROM w WHERE position = '\u2013'", -7.19153405286], [" SELECT COUNT(*) FROM w WHERE position LIKE '%dq%'", -9.54028823369], [" SELECT COUNT(*) FROM w WHERE position = 'dq'\n```", -10.95711198446], [" SELECT COUNT(*) FROM w WHERE position = '\u2013'", -12.82796269428], [" SELECT COUNT(*) FROM w WHERE position = '\u2013'", -13.73319920453]]}, "641": {"question": "how many times was the world artistic gymnastics championships held in the united states?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -2.5513597272500004], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -2.5513597272500004], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -2.5513597272500004], [" SELECT COUNT(*) FROM w WHERE location LIKE '%united states%'", -2.5513597272500004], [" SELECT COUNT(*) FROM w WHERE location LIKE '% united states %'", -4.19099981815], [" SELECT COUNT(*) FROM w WHERE location = 'united states'", -4.66947764808], [" SELECT COUNT(*) FROM w WHERE location = 'united states'", -4.678464501540001], [" SELECT COUNT(*) FROM w WHERE location = 'united states'", -4.98244104808], [" SELECT COUNT(*) FROM w WHERE location = 'united states'", -4.98244104808], [" SELECT COUNT(*) FROM w WHERE location = 'united states'", -4.98244104808]]}, "658": {"question": "was the total goals scored on june 14, 1982 more than 6?", "gold_answer": ["no"], "pred_answer": {"0": [[2], [3], [2], [2], [0], [3], [2], [2], [3], [2]], "1": ["<error>", "<error>"], "2": [[3], [2]], "3": ["<error>", "<error>"], "4": ["<error>", [31]], "5": ["<error>"], "6": [[31]], "7": ["<error>"]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE DATE(date) = '1982-06-14'", -6.903474894879999], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE date = '1982-06-14 00:00:00'", -6.91015690207932], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE `date` LIKE '1982-06-14%'", -7.206517475680004], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date LIKE '1982-06-14%'", -7.728259198979999], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT)) FROM w WHERE date LIKE '1982-06-14%'", -9.06359548198], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE DATE(date) = '1982-06-14'", -11.713030859689319], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date = '1982-06-14 00:00:00'", -12.19986711562], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date = '1982-06-14 00:00:00'", -16.61511617419], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE `date` = '1982-06-14 00:00:00'\nQ2: the total goals scored on june 14, 1982 {how many = a2}.\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE `date` = '1982-06-14 00:00:00'\nQ3: the total goals scored on june 14, 1982 {how many = a3}.\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(score, 1, INSTR", -19.82974332461689], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date = '1982-06-14 00:00:00'\nQ2: the total goals scored by brazil on june 14, 1982 {how many = a2}.\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date = '1982-06-14 00:00:00'\nQ3: the total goals scored by brazil in 1982 {how many = a3}.\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date LIKE '1982%-%-%'\nQ4: the total goals scored by brazil in 1982 {how many = a4}.\nNeuralSQL4: SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) FROM w WHERE date LIKE '1982%-%-%'\nQ5", -30.16271150238098]]}, "662": {"question": "how many goals were scored at the euro 2012 qualifying competition?", "gold_answer": ["12"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -3.6514226788640003], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -5.6423803318440005], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -6.264380170844], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -6.264380170844], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -7.536276450844001], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -7.7142850508439995], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -7.957520850844], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -8.254980850844], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -9.681747850844001], [" SELECT COUNT(*) FROM w WHERE competition = 'euro 2012 qualifying'", -11.082712850844]]}, "699": {"question": "how many days during the week does the show fbn live air?", "gold_answer": ["5"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT days available) FROM w WHERE program = 'fbn live'", -2.58167666667], [" SELECT COUNT(DISTINCT days available) FROM w WHERE program = 'fbn live'", -2.58167666667], [" SELECT COUNT(DISTINCT days available) FROM w WHERE program = 'fbn live'", -2.58167666667], [" SELECT COUNT(DISTINCT days available) FROM w WHERE program = 'fbn live'", -2.58167666667], [" SELECT COUNT(DISTINCT days available) FROM w WHERE program = 'fbn live'", -2.5816784116700005], [" SELECT COUNT(DISTINCT days available) FROM w WHERE program = 'fbn live'", -2.5816784116700005], [" SELECT COUNT(DISTINCT days available) FROM w WHERE program = 'fbn live'", -5.898486360670001], [" SELECT LENGTH(days available) - LENGTH(REPLACE(days available, ',', '')) + 1 FROM w WHERE program = 'fbn live'", -7.482537956069], [" SELECT COUNT(DISTINCT(days available)) FROM w WHERE program = 'fbn live'", -7.80014891577], [" SELECT COUNT(DISTINCT SUBSTR(days available, 1, INSTR(days available, ',') - 1)) FROM w WHERE program = 'fbn live'", -10.808668464483]]}, "703": {"question": "how many times has the wager been hair?", "gold_answer": ["16"], "pred_answer": {"0": [[16], [16], [16], [16], [16], [16], [16], [16], [16], [16]], "1": ["<error>"], "2": [[8]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -5.748768158714], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -5.748768158714], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -6.21789210489], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -6.409186158714], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -6.693564658714], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -6.92255005201], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -7.170388158714], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -7.84392295201], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'", -8.237526158714001], [" SELECT COUNT(*) FROM w WHERE wager = 'hair'\nQ2: {how many = a2} times has the wager been hair and the winner been gran cochisse.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wager = 'hair' AND winner = 'gran cochisse'\nQ3: {how many = a3} times has the wager been hair and the winner been gran cochisse and the loser been el nazi.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE wager = 'hair' AND winner = 'gran cochisse' AND loser = 'el nazi'\nQ4: {how many = a4} times has the wager been hair and the winner been gran cochisse and the loser been el nazi and the location been mexico city, mexico.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE wager = 'hair' AND winner = 'gran cochisse' AND loser = 'el nazi' AND location = 'mexico city, mexico'\nQ5: {how many = a5} times", -22.509120190556988]]}, "744": {"question": "what was the number of weeks that julie covington's single \" don't cry for me argentinia,\" was at number 1 in 1977?", "gold_answer": ["7"], "pred_answer": {"0": [[], "<error>", "<error>", "<error>", [null], "<error>", [null], "<error>", "<error>", [null]], "1": ["<error>"]}, "nsql": [[" SELECT `weeks at no. 1` FROM w WHERE title = \"don't cry for me argentinia\" AND artist = 'julie covington'", -6.7314096059500015], [" SELECT COUNT(*) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentinia'", -8.158712441273], [" SELECT COUNT(*) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentinia'", -8.161012656698002], [" SELECT COUNT(*) FROM w WHERE title = 'don't cry for me argentinia' AND artist = 'julie covington'", -8.929628661170002], [" SELECT SUM(`weeks at no. 1`) FROM w WHERE title = \"don't cry for me argentinia\" AND artist = \"julie covington\"", -11.018451254820002], [" SELECT SUM(`weeks at no. 1`) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentinia,'", -11.398642272726004], [" SELECT SUM(`weeks at no. 1`) FROM w WHERE title = \"don't cry for me argentinia\" AND artist = 'julie covington'", -11.597674455709999], [" SELECT `weeks at no. 1` FROM w WHERE artist = 'julie covington' AND title = 'don' 't cry for me argentinia,'", -12.229329248078], [" SELECT COUNT(*) FROM w WHERE artist = 'julie covington' AND title = 'don't cry for me argentinia,' AND `weeks at no. 1` > 0", -13.323164705257996], [" SELECT SUM(weeks at no. 1) FROM w WHERE artist = 'julie covington' AND title = \"don't cry for me argentinia\"\n```", -17.588086954356]]}, "785": {"question": "what is the total number of teams to have 4 total wins?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[7]], "9": ["<error>"], "10": [[0]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE won = 4", -2.98048094643], [" SELECT COUNT(*) FROM w WHERE (won + drawn + lost) = 4", -3.08909128743], [" SELECT COUNT(*) FROM w WHERE (won + drawn + lost) = 4", -3.08909128743], [" SELECT COUNT(*) FROM w WHERE (won + drawn + lost) = 4", -3.08909255693], [" SELECT COUNT(*) FROM w WHERE (won + drawn + lost) = 4", -3.08909255693], [" SELECT COUNT(*) FROM w WHERE won + drawn + lost = 4", -3.3925324003899995], [" SELECT COUNT(*) FROM w WHERE won + drawn + lost = 4", -3.3925324003899995], [" SELECT COUNT(*) FROM w WHERE (won + lost) = 4", -4.827248509099999], [" SELECT COUNT(*) FROM w WHERE matches = 4", -5.43018374413], [" SELECT COUNT(*) FROM w WHERE won + drawn + lost = 4\nQ2: there are {how many = a2} teams to have 2 total wins.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE won + drawn + lost = 2\nQ3: there are {how many = a3} teams to have 3 total wins.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE won + drawn + lost = 3\nQ4: there are {how many = a4} teams to have 5 total wins.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE won + drawn + lost = 5\nQ5: there are {how many = a5} teams to have 6 total wins.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE won + drawn + lost = 6\nQ6: there are {how many = a6} teams to have 1 total wins.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE won + drawn + lost = 1\nQ7: there are {how many = a7} teams to have 7 total wins.\nNeuralSQL7: SELECT COUNT", -25.33699220200819]]}, "826": {"question": "how many trains were discontinued in 1958?", "gold_answer": ["4"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [4], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `year discontinued` = 1958.0", -2.837904022115], [" SELECT COUNT(*) FROM w WHERE `year discontinued` = 1958.0", -2.837904022115], [" SELECT COUNT(*) FROM w WHERE `year discontinued` = 1958.0", -2.837904022115], [" SELECT COUNT(*) FROM w WHERE `year discontinued` = 1958.0", -2.837904022115], [" SELECT COUNT(*) FROM w WHERE year discontinued = '1958.0'", -4.016323223615], [" SELECT COUNT(*) FROM w WHERE `year discontinued` = 1958.0", -4.206047994865], [" SELECT COUNT(*) FROM w WHERE CAST(`year discontinued` AS INT) = 1958", -6.909043848485001], [" SELECT COUNT(*) FROM w WHERE `year discontinued` = 1958", -7.0336718691949995], [" SELECT COUNT(*) FROM w WHERE year discontinued = 1958.0", -7.359960089625], [" SELECT COUNT(*) FROM w WHERE `year discontinued` = 1958", -11.633128454194999]]}, "867": {"question": "which tier was ud alzira a part of the least?", "gold_answer": ["2"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT tier) FROM w", -1.1810162336000003], [" SELECT COUNT(DISTINCT tier) FROM w", -1.1810162336000003], [" SELECT COUNT(DISTINCT tier) FROM w", -1.1810162336000003], [" SELECT COUNT(DISTINCT tier) FROM w", -1.1810162336000003], [" SELECT COUNT(DISTINCT tier) FROM w", -1.1810162336000003], [" SELECT COUNT(DISTINCT tier) FROM w", -1.1810162336000003], [" SELECT COUNT(DISTINCT tier) FROM w", -1.1810162336000003], [" SELECT COUNT(DISTINCT tier) FROM w", -1.1810162336000003], [" SELECT COUNT(DISTINCT tier) FROM w", -2.2139469826], [" SELECT COUNT(DISTINCT(tier)) FROM w", -2.8163787510000002]]}, "908": {"question": "how many neutral site games resulted in overtime (ot)?", "gold_answer": ["4"], "pred_answer": {"0": [[26], [26], [26], [14], [0], [14], "<error>", [0], [1], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE ot = 'ot'", -3.66259598221], [" SELECT COUNT(*) FROM w WHERE ot = 'ot'", -3.66259598221], [" SELECT COUNT(*) FROM w WHERE `ot` = 'ot'", -7.70135946421], [" SELECT COUNT(*) FROM w WHERE ot = 'ot' AND city != 'cleveland' AND city != 'phoenix' AND city != 'hamilton'", -10.883280513205998], [" SELECT COUNT(*) FROM w WHERE ot = 'ot' AND city NOT IN (SELECT city FROM w GROUP BY city HAVING COUNT(*) > 1)", -11.033452759719998], [" SELECT COUNT(*) FROM w WHERE ot = 'ot' AND city != 'phoenix' AND city != 'cleveland' AND city != 'hamilton'", -11.393620268689999], [" SELECT COUNT(*) FROM w WHERE `ot` = 'ot' AND `city` != `losing team` AND `city` != `winning team`", -12.400939981510001], [" SELECT COUNT(*) FROM w WHERE ot = '(ot)' AND city NOT IN (SELECT DISTINCT(city) FROM w WHERE ot = 'none')", -14.614699625395001], [" SELECT COUNT(*) FROM w WHERE ot = '(ot)' AND state/province = 'az'", -15.232372656550002], [" SELECT COUNT(*) FROM w WHERE ot LIKE '%(ot)%' AND city != 'hamilton' AND city != 'phoenix'", -18.24441492271]]}, "949": {"question": "what school has 3 football classes but only has 638 student enrollment?", "gold_answer": ["Chillicothe High School (Missouri)"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE enrollment (2010-11 & 2011\u201312) = 638 AND football class = 3", -3.55102201375], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` = 638 AND `football class` = 3", -4.102109489085], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` = 638 AND `football class` = 3", -4.102109489085], [" SELECT COUNT(*) FROM w WHERE enrollment (2010-11 & 2011\u201312) = 638 AND football class = 3", -4.59163222475], [" SELECT COUNT(*) FROM w WHERE football class = 3 AND enrollment (2010-11 & 2011\u201312) = 638", -4.816333848949999], [" SELECT COUNT(*) FROM w WHERE football class = 3 AND enrollment (2010-11 & 2011\u201312) = 638", -4.816333848949999], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` = 638 AND `football class` = 3", -6.004371224150001], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` = 638 AND `football class` = 3", -6.004371224150001], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` = 638 AND football class = 3", -6.44248962925], [" SELECT COUNT(*) FROM w WHERE `enrollment (2010-11 & 2011\u201312)` = 638 AND football class = 3", -10.489782532900001]]}, "990": {"question": "how many games had at least 10,000 people in attendance?", "gold_answer": ["11"], "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -1.183499051015], [" SELECT COUNT(*) FROM w WHERE attendance >= 10000", -3.6019042891149997]]}, "1031": {"question": "how many are or were journalists?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [0], [0], [0], "<error>", [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position LIKE '%journalist%' OR position_2 LIKE '%journalist%'", -3.6286186082400005], [" SELECT COUNT(*) FROM w WHERE position LIKE '%journalist%' OR position_2 LIKE '%journalist%'", -3.6286186082400005], [" SELECT COUNT(*) FROM w WHERE position LIKE '%journalist%' OR position_2 LIKE '%journalist%'", -3.6572589016399992], [" SELECT COUNT(*) FROM w WHERE position LIKE '%journalist%' OR position_2 LIKE '%journalist%'", -3.6572589016399992], [" SELECT COUNT(*) FROM w WHERE position LIKE '%journalist%' OR position_2 LIKE '%journalist%'", -3.6572589016399992], [" SELECT COUNT(*) FROM w WHERE laetare medalist LIKE '%journalist%' OR laetare medalist_2 LIKE '%journalist%'", -4.16234780912], [" SELECT COUNT(*) FROM w WHERE laetare medalist LIKE '%journalist%' OR laetare medalist_2 LIKE '%journalist%'", -4.162445293219999], [" SELECT COUNT(*) FROM w WHERE laetare medalist_2 LIKE '%journalist%'", -7.73499358133], [" SELECT COUNT(DISTINCT CONCAT(laetare medalist, ' ', laetare medalist_2)) FROM w WHERE position LIKE '%journalist%' OR position_2 LIKE '%journalist%'", -9.222636821018998], [" SELECT COUNT(*) FROM w WHERE laetare medalist LIKE '%journalist%' OR laetare medalist_2 LIKE '%journalist%'", -13.976169721719998]]}, "1072": {"question": "how many consecutive notes are there?", "gold_answer": ["12"], "pred_answer": {"0": [[6], [12], [2], [0], "<error>", [6], [6], [12], [0], [12]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notes = 'none'", -8.139924772319999], [" SELECT COUNT(*) FROM w WHERE notes = 'q'", -8.63483159831], [" SELECT COUNT(DISTINCT notes) FROM w", -8.65236848208], [" SELECT COUNT(*) FROM w WHERE notes LIKE '% %'", -10.605743689230001], [" SELECT COUNT(*) FROM (SELECT notes, COUNT(*) FROM w GROUP BY notes) WHERE COUNT(*) > 1", -10.933678274490005], [" SELECT COUNT(*) FROM w WHERE notes = 'none'\n```", -11.884037200989999], [" SELECT COUNT(*) FROM w WHERE notes = 'none' AND (SELECT COUNT(*) FROM w WHERE notes = 'none' AND row_id < w.row_id) = 0", -13.96362901591], [" SELECT COUNT(*) FROM w WHERE notes != 'none' AND (SELECT COUNT(*) FROM w WHERE notes != 'none' AND row_id < w.row_id) = 0", -15.53881024773], [" SELECT COUNT(*) FROM w WHERE notes = 'none' AND (SELECT COUNT(*) FROM w WHERE notes = 'none' AND row_id > row_id) > 0", -18.135950092059996], [" SELECT COUNT(*) FROM w WHERE notes = 'q'", -19.46217087722]]}, "1113": {"question": "what is the difference in square miles from angus and fife?", "gold_answer": ["326"], "pred_answer": {"0": [["843"], ["843"], ["843"], ["843"], ["843"], ["843"], ["843"], ["843"], ["843"], ["843"]], "1": [["517"], ["517"], ["517"], ["517"], ["517"], ["517"], ["517"], ["517"], ["517"], ["517"]], "2": ["<error>"]}, "nsql": [[" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'", -1.7930141766800003], [" SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'angus'\nNeuralSQL2: SELECT `area\\n(sq miles)` FROM w WHERE mainland = 'fife'\n```", -12.627027391439999]]}, "1154": {"question": "tell me the number of versions that are scrapped.", "gold_answer": ["1"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[15]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"], "8": [[1]], "9": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.06158210787], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.06158210787], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.06158210787], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.06158210787], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.06158210787], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.06158210787], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.06158210787], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.5235025128700004], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'", -2.5235025128700004], [" SELECT COUNT(*) FROM w WHERE comments LIKE '%scrapped%'\nQ2: there are {how many = a2} versions of the transrapid.\nNeuralSQL2: SELECT COUNT(DISTINCT train) FROM w\nQ3: there are {how many = a3} versions of the transrapid that are in china.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location LIKE '%china%'\nQ4: there are {how many = a4} versions of the transrapid that have a top speed of 501 km/h.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)'\nQ5: there are {how many = a5} versions of the transrapid that have a top speed of 501 km/h and are in china.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE `top speed (km/h)` = '501 (2003-11-12)' AND location LIKE '%china%'\nQ6: there are {", -42.917573491367975]]}, "1195": {"question": "which state has the largest amount of judges to serve?", "gold_answer": ["TX"], "pred_answer": {"0": [["tx"], ["tx"], ["tx"], ["tx", 14], ["tx", 14], ["tx", 14], ["tx", 14], ["tx", 14], ["tx", 14], [14]]}, "nsql": [[" SELECT state FROM w GROUP BY state ORDER BY COUNT(state) DESC LIMIT 1", -4.27683536494], [" SELECT state FROM w GROUP BY state ORDER BY COUNT(state) DESC LIMIT 1", -5.272547476940001], [" SELECT state FROM w GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1", -7.375671261280001], [" SELECT state, COUNT(*) FROM w GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1", -7.893557127814001], [" SELECT state, COUNT(DISTINCT judge) FROM w GROUP BY state ORDER BY COUNT(DISTINCT judge) DESC LIMIT 1", -8.568935570815999], [" SELECT state, COUNT(*) AS c FROM w GROUP BY state ORDER BY c DESC LIMIT 1", -9.20545977429], [" SELECT state, COUNT(*) AS num FROM w GROUP BY state ORDER BY num DESC LIMIT 1", -9.531980473260003], [" SELECT state, COUNT(*) FROM w GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1", -9.70474949635], [" SELECT state, COUNT(*) AS c FROM w GROUP BY state ORDER BY c DESC LIMIT 1", -10.51874443979], [" SELECT COUNT(*) FROM w WHERE state = (SELECT state FROM w GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1)", -11.337876711140002]]}, "1236": {"question": "what is the number of competitions held in cuba?", "gold_answer": ["3"], "pred_answer": {"0": [[2], [2], [2], [2], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(DISTINCT competition) FROM w WHERE venue LIKE '%cuba%'", -2.5233825629727], [" SELECT COUNT(DISTINCT competition) FROM w WHERE venue LIKE '%cuba%'", -2.5233825629727], [" SELECT COUNT(DISTINCT competition) FROM w WHERE venue LIKE '%cuba%'", -3.1107263009727], [" SELECT COUNT(DISTINCT competition) FROM w WHERE venue LIKE '%cuba%'", -3.1107263009727], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%cuba%'", -4.19647567075], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%cuba%'", -4.19647567075], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%cuba%'", -4.19647567075], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%cuba%'", -4.19647567075], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%cuba%'", -10.781781026680001], [" SELECT COUNT(*) FROM w WHERE venue LIKE '%cuba%'", -11.59509762668]]}, "1277": {"question": "number of points scored by miami (oh) against the broncos.", "gold_answer": ["12"], "pred_answer": {"0": [[34178], [34178], [34178], [34178], "<error>", [0], [0], ["miami (oh)*"], [0], [0]]}, "nsql": [[" SELECT attendance FROM w WHERE opponent# = 'miami (oh)'", -6.913027352660001], [" SELECT attendance FROM w WHERE opponent# = 'miami (oh)'", -6.924329660675001], [" SELECT attendance FROM w WHERE opponent# = 'miami (oh)'", -7.572017752660001], [" SELECT attendance FROM w WHERE opponent# = 'miami (oh)'", -7.834022146660001], [" SELECT score FROM w WHERE opponent = 'miami (oh)'", -8.27117552074], [" SELECT CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) FROM w WHERE opponent# = 'miami (oh)'", -9.207292064550002], [" SELECT CAST(SUBSTR(result, INSTR(result, ' - ') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) FROM w WHERE opponent# = 'miami (oh)'", -9.501013442340001], [" SELECT `opponent#` FROM w WHERE `opponent#` = 'miami (oh)'", -9.54324801874], [" SELECT CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) FROM w WHERE opponent# = 'miami (oh)*'", -9.70323610831], [" SELECT CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) FROM w WHERE opponent# = 'miami (oh)'", -12.203992856290002]]}, "1280": {"question": "did march or april have more precipitation?", "gold_answer": ["April"], "pred_answer": {"0": [["58"], ["58"], [], ["58"], [], ["58"], [], [], [], ["58"]], "1": [["61"], ["61"], [], ["61"], [], ["61"], [], [], [], ["61"]]}, "nsql": [[" SELECT mar FROM w WHERE month = '% humidity'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% humidity'", -8.308719182669998], [" SELECT mar FROM w WHERE month = '% humidity'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% humidity'", -10.02079267737], [" SELECT mar FROM w WHERE month = '% precipitation'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% precipitation'", -10.64740953887], [" SELECT mar FROM w WHERE month = '% humidity'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% humidity'", -10.85307803637], [" SELECT mar FROM w WHERE month = '% precipitation'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% precipitation'", -11.251314412860001], [" SELECT mar FROM w WHERE month = '% humidity'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% humidity'", -12.125354244390001], [" SELECT mar FROM w WHERE month = '% precipitation'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% precipitation'", -12.461056644750002], [" SELECT mar FROM w WHERE month = '% precipitation'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% precipitation'", -12.63025024971], [" SELECT mar FROM w WHERE month = '% precipitation'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% precipitation'", -13.760470844750003], [" SELECT mar FROM w WHERE month = '% humidity'\nNeuralSQL2: SELECT apr FROM w WHERE month = '% humidity'", -15.35845638144]]}, "1": {"question": "what was the number of silver medals won by ukraine?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'ukraine'", -1.69125267473], [" SELECT silver FROM w WHERE nation = 'ukraine'", -1.69125267473], [" SELECT silver FROM w WHERE nation = 'ukraine'", -1.69125267473], [" SELECT silver FROM w WHERE nation = 'ukraine'", -1.69739887393], [" SELECT silver FROM w WHERE nation = 'ukraine'", -1.69739887393], [" SELECT silver FROM w WHERE nation = 'ukraine'", -1.69739887393], [" SELECT silver FROM w WHERE nation = 'ukraine'", -1.69742953093], [" SELECT silver FROM w WHERE nation = 'ukraine'", -2.65080618853], [" SELECT silver FROM w WHERE nation = 'ukraine'", -2.6508610197299998], [" SELECT silver FROM w WHERE nation LIKE '%ukraine%'", -10.85154146924]]}, "18": {"question": "is the united stated or scotland better?", "gold_answer": ["United States"], "pred_answer": {"0": [[258], [258], [258], [204], [201], [0], [89], "<error>", [242], [56]], "1": [[54], [54], [54], [-204], [53], [0], [-319], "<error>", [38], [0]]}, "nsql": [[" SELECT `total` FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT `total` FROM w WHERE country = 'scotland'", -4.58059215829], [" SELECT `total` FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT `total` FROM w WHERE country = 'scotland'", -4.58059215829], [" SELECT SUM(total) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE country = 'scotland'", -4.599298381490001], [" SELECT (SELECT SUM(total) FROM w WHERE country = 'united states') - (SELECT SUM(total) FROM w WHERE country = 'scotland')\nNeuralSQL2: SELECT (SELECT SUM(total) FROM w WHERE country = 'scotland') - (SELECT SUM(total) FROM w WHERE country = 'united states')", -7.434049548939999], [" SELECT `total` - `masters` FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT `total` - `masters` FROM w WHERE country = 'scotland'", -9.221650810400002], [" SELECT SUM(total) - SUM(masters) - SUM(`u.s. open`) - SUM(`the open`) - SUM(pga) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT SUM(total) - SUM(masters) - SUM(`u.s. open`) - SUM(`the open`) - SUM(pga) FROM w WHERE country = 'scotland'", -9.507130884883], [" SELECT (SELECT total FROM w WHERE country = 'united states') - (SELECT SUM(total) FROM w WHERE country != 'united states')\nNeuralSQL2: SELECT (SELECT total FROM w WHERE country = 'scotland') - (SELECT SUM(total) FROM w WHERE country != 'scotland')", -9.901642220540005], [" SELECT (MASTERS + U.S. OPEN + THE OPEN + PGA) FROM w WHERE COUNTRY = 'UNITED STATES'\nNeuralSQL2: SELECT (MASTERS + U.S. OPEN + THE OPEN + PGA) FROM w WHERE COUNTRY = 'SCOTLAND'", -10.650615106817002], [" SELECT (258 - 16) AS a1\nNeuralSQL2: SELECT (54 - 16) AS a2", -12.202260919159997], [" SELECT (SELECT CAST(`masters` AS INT) FROM w WHERE country = 'united states') - (SELECT CAST(`masters` AS INT) FROM w WHERE country = 'australia')\nNeuralSQL2: SELECT (SELECT CAST(`masters` AS INT) FROM w WHERE country = 'scotland') - (SELECT CAST(`masters` AS INT) FROM w WHERE country = 'australia')", -12.383308196884999]]}, "22": {"question": "what number of mainlands have populations under 100,000?", "gold_answer": ["9"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -4.93197663512], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -4.936620377419999], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -8.8616935089], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -9.021330777420001], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -9.023942108899998], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -9.929450277419999], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -10.007493064839998], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -11.31618705742], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -11.51433051062], [" SELECT COUNT(*) FROM w WHERE `population\\n(2011)` < 100000", -12.07243122039]]}, "59": {"question": "how many aerial tramways are located in france?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.40192564154], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079], [" SELECT COUNT(*) FROM w WHERE country = 'france'", -2.88377587079]]}, "63": {"question": "what is the total of deaths in internment camps and during the wartime flight?", "gold_answer": ["173,805"], "pred_answer": {"0": ["<error>", "<error>", [58256], [80522], "<error>", "<error>", "<error>", [80522], "<error>", "<error>"], "1": ["<error>", "<error>", [93283], [93283], "<error>", "<error>", "<error>", [93283], [93283], [93283]]}, "nsql": [[" SELECT SUM(`violent deaths`) FROM w\nNeuralSQL2: SELECT SUM(`during the wartime flight`) FROM w", -5.366127507280001], [" SELECT SUM(`in the course of the expulsions`) FROM w\nNeuralSQL2: SELECT SUM(`during the wartime flight`) FROM w", -5.58950397044], [" SELECT SUM(total) FROM w WHERE description = 'violent deaths'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description = 'during the wartime flight'", -6.756380608209998], [" SELECT SUM(total) FROM w WHERE description LIKE '%internment%'\nNeuralSQL2: SELECT total FROM w WHERE description = 'during the wartime flight'", -7.72061984745], [" SELECT SUM(`violent deaths`) FROM w\nNeuralSQL2: SELECT `during the wartime flight` FROM w", -9.2482155024], [" SELECT SUM(`violent deaths`) FROM w\nNeuralSQL2: SELECT `during the wartime flight` FROM w", -9.294983881770001], [" SELECT SUM(`in the course of the expulsions`) FROM w\nNeuralSQL2: SELECT SUM(`violent deaths`) FROM w", -10.18536882772], [" SELECT SUM(total) FROM w WHERE description LIKE '%internment camps%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE description LIKE '%wartime flight%'", -10.556415489159999], [" SELECT SUM(`in the course of the expulsions`) FROM w\nNeuralSQL2: SELECT SUM(`total`) FROM w WHERE description = 'during the wartime flight'", -14.12997480121], [" SELECT SUM(`violent deaths`) FROM w\nNeuralSQL2: SELECT `total` FROM w WHERE description = 'during the wartime flight'", -14.58768453208]]}, "104": {"question": "what is the total number of districts of lima?", "gold_answer": ["43"], "pred_answer": {"0": [[43], [43], [43], [43], [43], [43], [43], [43], [43], [43]]}, "nsql": [[" SELECT COUNT(DISTINCT districts) FROM w", -2.6636186940049997], [" SELECT COUNT(*) FROM w", -3.1595026379049997], [" SELECT COUNT(*) FROM w", -3.1595026379049997], [" SELECT COUNT(*) FROM w", -3.1595026379049997], [" SELECT COUNT(*) FROM w", -3.1595026379049997], [" SELECT COUNT(DISTINCT districts) FROM w", -3.624485271005], [" SELECT COUNT(*) FROM w", -3.9678195286449998], [" SELECT COUNT(*) FROM w", -3.9678195286449998], [" SELECT COUNT(*) FROM w", -3.9678195286449998], [" SELECT COUNT(districts) FROM w", -4.068494955205001]]}, "145": {"question": "how many 4x 100m relays were run?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [0], [3], [0], [0], [3]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[2]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": [[0]], "9": ["<error>"], "10": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE notes = '4x100m relay'", -2.8663109431500007], [" SELECT COUNT(*) FROM w WHERE notes = '4x100m relay'", -2.8663109431500007], [" SELECT COUNT(*) FROM w WHERE notes = '4x100m relay'", -4.383206764920001], [" SELECT COUNT(*) FROM w WHERE notes = '4x100m relay'", -4.383206764920001], [" SELECT COUNT(*) FROM w WHERE notes = '4x100m relay'", -4.383206764920001], [" SELECT COUNT(*) FROM w WHERE notes LIKE '4x 100m relay%'", -5.632755888175], [" SELECT COUNT(*) FROM w WHERE notes LIKE '4x%m relay'", -5.876958496219999], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%4x100m relay%'", -6.22411714392], [" SELECT COUNT(*) FROM w WHERE competition LIKE '4x 100m relay%'", -7.392665389919999], [" SELECT COUNT(*) FROM w WHERE notes LIKE '4x100m relay'\nQ2: {how many = a2} events were held in budapest.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue LIKE 'budapest%'\nQ3: {how many = a3} events were held in 1997.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 1997.0\nQ4: {how many = a4} events were held in 1997 and budapest.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 1997.0 AND venue LIKE 'budapest%'\nQ5: {how many = a5} events were held in 1997 and budapest and 4x 100m relays were run.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 1997.0 AND venue LIKE 'budapest%' AND notes LIKE '4x100m relay'\nQ6: {how many = a6} events were held in 1997 and budapest and 4x 100m relays were run and there was a 3rd place.\nNeuralSQL6", -48.947001995980415]]}, "186": {"question": "how many films did irwin allen direct, produce and write?", "gold_answer": ["6"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]], "2": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "3": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.3585670338480005], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.3590512902380003], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.359063745527], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.359610172697], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.3606096937200003], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.361552152175], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.362664235277], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.3643040494350003], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'", -1.3650600736360001], [" SELECT COUNT(*) FROM w WHERE director = 'yes'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE producer = 'yes'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer = 'yes'\n```", -9.402271551138]]}, "227": {"question": "which is the only station with 8 affiliates?", "gold_answer": ["TV M\u00c1S"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -1.2472964412360001], [" SELECT COUNT(*) FROM w WHERE affiliates = 8", -3.5496309151260004]]}, "268": {"question": "how many times did internacional de madrid cf end the season at the top of their division?", "gold_answer": ["2"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.98050576068], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -5.98050576068], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -6.067370760679999], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -6.067370760679999], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -6.11348176068], [" SELECT COUNT(*) FROM w WHERE place LIKE '1st'", -6.684531141939999], [" SELECT COUNT(*) FROM w WHERE place LIKE '1st'", -8.34099269356], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -8.86976326068], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -9.615991405439999], [" SELECT COUNT(*) FROM w WHERE place = '1st'", -9.89364210544]]}, "309": {"question": "what was the greatest number of gold medals won by a single athlete?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT MAX(gold) FROM w", -2.85207798297], [" SELECT MAX(gold) FROM w", -2.85207798297], [" SELECT MAX(gold) FROM w", -2.85207798297], [" SELECT MAX(gold) FROM w", -2.85411036023], [" SELECT MAX(gold) FROM w", -2.85411036023], [" SELECT MAX(gold) FROM w", -2.87188922707], [" SELECT MAX(gold) FROM w", -2.87188922707], [" SELECT MAX(gold) FROM w", -2.87188922707], [" SELECT MAX(gold) FROM w", -2.87188922707], [" SELECT MAX(gold) FROM w", -2.87188922707]]}, "350": {"question": "how many total points has the lost angeles kings scored?", "gold_answer": ["3,373"], "pred_answer": {"0": [[3373], [3373], [3373], [3373], [3373], [3373], [3373], [3373], [3373], [3373]], "1": ["<error>"], "2": [[0.40730176839703364]], "3": ["<error>"], "4": [[-710]], "5": ["<error>"], "6": [[0.08108108108108109]], "7": ["<error>"], "8": [[0.08108108108108109]], "9": ["<error>"], "10": [[0.08108108108108109]], "11": ["<error>"], "12": ["<error>"]}, "nsql": [[" SELECT points FROM w WHERE team = 'lost angeles kings'", -5.77636182413], [" SELECT points FROM w WHERE team = 'lost angeles kings'", -5.86814862213], [" SELECT points FROM w WHERE team = 'lost angeles kings'", -5.86814862213], [" SELECT points FROM w WHERE team = 'lost angeles kings'", -6.0258109832799995], [" SELECT points FROM w WHERE team = 'lost angeles kings'", -6.0258109832799995], [" SELECT points FROM w WHERE team = 'lost angeles kings'", -6.0258109832799995], [" SELECT points FROM w WHERE team = 'los angeles kings'", -6.46815643588], [" SELECT points FROM w WHERE team = 'lost angeles kings'", -6.807429283279999], [" SELECT points FROM w WHERE team = 'lost angeles kings'", -7.0255028821300005], [" SELECT points FROM w WHERE team = 'los angeles kings'\nQ2: the win rate of the los angeles kings is {how many = a2}%.\nNeuralSQL2: SELECT CAST(wins AS FLOAT) / CAST(games AS FLOAT) FROM w WHERE team = 'los angeles kings'\nQ3: the goal difference of the los angeles kings is {how many = a3}.\nNeuralSQL3: SELECT goal\\ndiff FROM w WHERE team = 'los angeles kings'\nQ4: the average goal difference of all teams is {how many = a4}.\nNeuralSQL4: SELECT AVG(goal\\ndiff) FROM w\nQ5: the average goal difference of all teams is {how many = a5}.\nNeuralSQL5: SELECT AVG(goal\\ndiff) FROM w\nQ6: the average goal difference of all teams is {how many = a6}.\nNeuralSQL6: SELECT AVG(goal\\ndiff) FROM w\nQ7: the average goal difference of all teams is {how many = a7}.\nNeuralSQL7: SELECT AVG(", -43.27175648032899]]}, "391": {"question": "the total number of games played at war memorial stadium was how many?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.05757847793], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.05757847793], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.05757847793], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.05757847793], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.05757847793], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.05757847793], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.0576818941299997], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.05774072778], [" SELECT COUNT(*) FROM w WHERE `game site` = 'war memorial stadium'", -1.05970939558], [" SELECT COUNT(*) FROM w WHERE game site = 'war memorial stadium'", -4.73972429328]]}, "432": {"question": "what number of last names start with \"b\"?", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -4.645918579269999], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -4.831154515865], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -4.831154515865], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -4.831154515865], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -4.83995211075], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -4.83995211075], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -6.19003424171], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -6.205119471150001], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -8.308415615865], [" SELECT COUNT(*) FROM w WHERE name LIKE 'b%'", -8.950971050749999]]}, "473": {"question": "how many days is fbn live available each week?", "gold_answer": ["5"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [1], [1], [1], [1], [6]]}, "nsql": [[" SELECT COUNT(DISTINCT days available) FROM w", -3.7060351201999997], [" SELECT COUNT(DISTINCT days available) FROM w", -3.7060351201999997], [" SELECT COUNT(DISTINCT days available) FROM w", -3.7141309376239993], [" SELECT COUNT(DISTINCT days available) FROM w", -3.714134291623999], [" SELECT COUNT(DISTINCT days available) FROM w", -3.714134291623999], [" SELECT COUNT(DISTINCT days available) FROM w WHERE program = 'fbn live'", -4.798982463174999], [" SELECT COUNT(DISTINCT `days available`) FROM w WHERE program = 'fbn live'", -5.214311100170001], [" SELECT COUNT(DISTINCT(days available)) FROM w WHERE program = 'fbn live'", -5.602362294119999], [" SELECT COUNT(DISTINCT `days available`) FROM w WHERE `program` = 'fbn live'", -5.648210000540001], [" SELECT COUNT(DISTINCT days available) FROM w", -5.84123322944]]}, "514": {"question": "which date was attended by the most people?", "gold_answer": ["November 19"], "pred_answer": {"0": [[1], [1], [1], [1], ["november 19"], [1], [1], [1], ["november 19"], ["november 19"]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": [[0]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -3.2189237231800005], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -3.2189237231800005], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -3.22227350464], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -3.22227350464], [" SELECT date FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -3.4404414292099994], [" SELECT COUNT(DISTINCT date) FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -4.105969468029999], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -4.36402581218], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -4.36402581218], [" SELECT date FROM w ORDER BY attendance DESC LIMIT 1", -5.95357408164], [" SELECT date FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)\nQ2: {how many = a2} opponent# had a rank# of #6.\nNeuralSQL2: SELECT COUNT(DISTINCT opponent#) FROM w WHERE rank# = '#6'\nQ3: {how many = a3} opponent# had a rank# of #6 and the result was w.\nNeuralSQL3: SELECT COUNT(DISTINCT opponent#) FROM w WHERE rank# = '#6' AND result = 'w'\nQ4: {how many = a4} opponent# had a rank# of #6 and the result was w and the attendance was less than 60000.\nNeuralSQL4: SELECT COUNT(DISTINCT opponent#) FROM w WHERE rank# = '#6' AND result = 'w' AND attendance < 60000\nQ5: {how many = a5} opponent# had a rank# of #6 and the result was w and the attendance was less than 60000 and the site was ohio stadium \u2022 columbus, oh.\nNeuralSQL5", -48.05362891987001]]}, "555": {"question": "crest 3d intensive professional effects and crest whitestrips 3d professional effects both have a lasting whiteness of how many months?", "gold_answer": ["12 months"], "pred_answer": {"0": [["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"]], "1": [["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"], ["p12m"]]}, "nsql": [[" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.7405782715809996], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.7440994341039993], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.7440994341039993], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.7445135646269994], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.7445459204059994], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.745431263813999], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.745431263813999], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.745431263813999], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -1.7476821628139994], [" SELECT `last of whiteness` FROM w WHERE model = 'crest 3d intensive professional effects'\nNeuralSQL2: SELECT `last of whiteness` FROM w WHERE model = 'crest whitestrips 3d professional effects'", -16.388965834830998]]}, "596": {"question": "which two schools each had twelve total finals?", "gold_answer": ["The Royal School, Armagh", "Portora Royal School"], "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `total finals` = 12", -3.3006369760100003], [" SELECT COUNT(*) FROM w WHERE `total finals` = 12", -3.3030757557099997], [" SELECT COUNT(*) FROM w WHERE `total finals` = 12", -3.3054479400099996], [" SELECT COUNT(*) FROM w WHERE `total finals` = 12", -3.3054479400099996], [" SELECT COUNT(*) FROM w WHERE `total finals` = 12", -3.79641329936], [" SELECT COUNT(*) FROM w WHERE total finals = 12", -4.9622691211099985], [" SELECT COUNT(*) FROM w WHERE `total finals` = 12\n```", -8.417521461509999], [" SELECT COUNT(*) FROM w WHERE `total finals` = 12", -9.896211335059999], [" SELECT COUNT(*) FROM w WHERE `total finals` = 12", -9.983526228919999], [" SELECT COUNT(*) FROM w WHERE `total finals` = 12", -11.56085283506]]}, "637": {"question": "how many women's winners are from kenya?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [5], [5], [0], [0], [0], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%(ken)%'", -2.9087637473299996], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%(ken)%'", -2.9087637473299996], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%ken%'", -3.08243123533], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%ken%'", -3.08243123533], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%kenya%'", -3.2828614993299996], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%kenya%'", -3.2828614993299996], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%kenya%'", -3.9629447093299994], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%ken%'", -3.98269252933], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%ken%'", -3.98269252933], [" SELECT COUNT(*) FROM w WHERE `women's winner` LIKE '%ken%'", -3.98269252933]]}, "640": {"question": "did the song \"gitara\" or \"yesh\" earn more points?", "gold_answer": ["\"Yesh\""], "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -1.29752618649], [" SELECT points FROM w WHERE song = 'gitara'\nNeuralSQL2: SELECT points FROM w WHERE song = 'yesh'", -3.1375229034900003]]}, "661": {"question": "how many songs in the table only reached position number 2?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -2.5479263641400003], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -2.5479263641400003], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -2.5479263641400003], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -2.5479263641400003], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -2.5479263641400003], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -2.5479263641400003], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -2.5479263641400003], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -2.5479263641400003], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2", -3.71193302255], [" SELECT COUNT(*) FROM w WHERE `highest pos. reached` = 2\n```", -4.910831369349999]]}, "678": {"question": "tell me the number of times he finished above 10th place.", "gold_answer": ["3"], "pred_answer": {"0": [[0], [0], [0], [0], [0], [4], [0], [12], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE finish < 10", -3.3456131238199998], [" SELECT COUNT(*) FROM w WHERE finish < 10", -3.3456131238199998], [" SELECT COUNT(*) FROM w WHERE finish < 10", -3.34621328182], [" SELECT COUNT(*) FROM w WHERE finish < 10", -3.34621328182], [" SELECT COUNT(*) FROM w WHERE finish < 10", -3.34621328182], [" SELECT COUNT(*) FROM w WHERE CAST(finish AS INT) < 10", -4.47063802904], [" SELECT COUNT(*) FROM w WHERE finish < 10", -6.483536347920001], [" SELECT COUNT(*) FROM w WHERE finish NOT LIKE '%10%'", -8.16807620026], [" SELECT COUNT(*) FROM w WHERE `start` < 10", -11.48812013377], [" SELECT COUNT(*) FROM w WHERE finish < '10'", -13.947958412605999]]}, "682": {"question": "how often was an encyclical sent in january?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [3], [3], [0], [0], [0], [3], [0], [0], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE '%-01-%'", -3.24813013745], [" SELECT COUNT(*) FROM w WHERE date LIKE '%-01-%'", -3.24908603837], [" SELECT COUNT(*) FROM w WHERE date LIKE '%-01-%'", -3.24908603837], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 01 - %'", -4.0473380391000005], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 01 - %'", -4.049212901100001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 01 - %'", -4.0756093058000005], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%-01-%'", -4.117783859799999], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 01 - %'", -5.7938112721], [" SELECT COUNT(*) FROM w WHERE date LIKE '____-01-__'", -5.854334893099999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%01-%'", -6.609438945800001]]}, "719": {"question": "starting with the 2007 - 08 season, does ecs kempten appear in any of the previous years?", "gold_answer": ["no"], "pred_answer": {"0": [[1], [1], [1], [0], [0], [0], [1], [1], [1], [1]], "1": ["<error>"], "2": [[9]], "3": ["<error>"], "4": [[9]], "5": ["<error>"], "6": [[9]], "7": ["<error>"], "8": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE north = 'ecs kempten' OR south = 'ecs kempten' OR east = 'ecs kempten' OR west = 'ecs kempten'", -3.326158059952001], [" SELECT COUNT(*) FROM w WHERE north = 'ecs kempten' OR south = 'ecs kempten' OR east = 'ecs kempten' OR west = 'ecs kempten'", -3.33015951539], [" SELECT COUNT(*) FROM w WHERE north = 'ecs kempten' OR south = 'ecs kempten' OR east = 'ecs kempten' OR west = 'ecs kempten'", -3.33015951539], [" SELECT COUNT(*) FROM w WHERE north LIKE '%ecs kempten%' OR south LIKE '%ecs kempten%' OR east LIKE '%ecs kempten%' OR west LIKE '%ecs kempten%'", -3.969705333497001], [" SELECT COUNT(*) FROM w WHERE north LIKE '%ecs kempten%' OR south LIKE '%ecs kempten%' OR east LIKE '%ecs kempten%' OR west LIKE '%ecs kempten%'", -3.969705333497001], [" SELECT COUNT(*) FROM w WHERE north LIKE '%ecs kempten%' OR south LIKE '%ecs kempten%' OR east LIKE '%ecs kempten%' OR west LIKE '%ecs kempten%'", -3.969705333497001], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kempten%' OR south LIKE '%kempten%' OR east LIKE '%kempten%' OR west LIKE '%kempten%'", -4.459654258586001], [" SELECT COUNT(*) FROM w WHERE north LIKE '%kempten%' OR south LIKE '%kempten%' OR east LIKE '%kempten%' OR west LIKE '%kempten%'", -4.468633297264], [" SELECT COUNT(*) FROM w WHERE north = 'ecs kempten' OR south = 'ecs kempten' OR east = 'ecs kempten' OR west = 'ecs kempten'", -10.77088478139], [" SELECT COUNT(*) FROM w WHERE north = 'ecs kempten' OR south = 'ecs kempten' OR east = 'ecs kempten' OR west = 'ecs kempten'\nQ2: the number of years in which the north league is not null is {how many = a2}.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE north IS NOT NULL\nQ3: the number of years in which the north league is not null and the east league is not null is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE north IS NOT NULL AND east IS NOT NULL\nQ4: the number of years in which the north league is not null or the east league is not null is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE north IS NOT NULL OR east IS NOT NULL\nQ5: the number of years in which the north league is not null and the east league is not null and the west league is not null is {how many = a5}.\nNeuralSQL5: SELECT COUNT(", -44.703540448556026]]}, "723": {"question": "how many stars have a distance at maximum of 30 light years or higher?", "gold_answer": ["9"], "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30", -1.3535774091100001], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30", -1.3535774091100001], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30", -1.3537202601099998], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30", -1.35658483001], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30", -1.35658483001], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30", -1.35658483001], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30", -1.35658483001], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30", -1.35658483001], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30.0", -7.56643220931], [" SELECT COUNT(*) FROM w WHERE `distance at\\nmaximum (ly)` >= 30.0", -11.676427390710002]]}, "764": {"question": "what is the number of competitions that have been competed in?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -1.241176431125], [" SELECT COUNT(DISTINCT competition) FROM w", -2.487384210125]]}, "805": {"question": "how many crossings are in maryland?", "gold_answer": ["1"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -1.9413836128700002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -1.9413836128700002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -1.9413836128700002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -1.9413836128700002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -1.9413836128700002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -1.9413836128700002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -1.9413836128700002], [" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -3.2127785133400004], [" SELECT COUNT(*) FROM w WHERE location LIKE '%maryland%'", -3.2127785133400004], [" SELECT COUNT(*) FROM w WHERE location LIKE '%, maryland'", -3.3247598297299996]]}, "846": {"question": "which country had more drivers representing them, the us or germany?", "gold_answer": ["tie"], "pred_answer": {"0": [[0], [4], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE driver LIKE '% us'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '% germany'", -5.026540029323998], [" SELECT COUNT(*) FROM w WHERE team LIKE '%us%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%germany%'", -5.277307913248], [" SELECT COUNT(*) FROM w WHERE driver = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'germany'", -6.393085847513], [" SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '% us %'\nNeuralSQL2: SELECT COUNT(DISTINCT driver) FROM w WHERE driver LIKE '% germany %'", -8.868284865065501], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% united states %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '% germany %'", -9.969452510984], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% us %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '% germany %'", -10.898800044979998], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% us %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '% germany %'", -11.037477684479999], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% us %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '% germany %'", -11.798444710538], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% us %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '% germany %'\n```", -12.614933599057998], [" SELECT COUNT(*) FROM w WHERE driver LIKE '% us'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver LIKE '% germany'\n```", -15.510461567894]]}, "887": {"question": "how many total medals did brazil received?", "gold_answer": ["4"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT (gold + silver + bronze) FROM w WHERE nation = 'brazil'", -5.523791091064999], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -8.256747838119999], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -8.41851983812], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -8.41851983812], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -8.72573243812], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -8.72573243812], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -8.98699047912], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -9.303357349119999], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -9.346545279119999], [" SELECT SUM(total) FROM w WHERE nation = 'brazil'", -9.86809913812]]}, "928": {"question": "how many titles only had one episode?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>", "<error>"], "2": [[1]], "3": ["<error>"], "4": [[4]], "5": ["<error>"], "6": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE episodes = 1.0", -1.9295049130800002], [" SELECT COUNT(*) FROM w WHERE episodes = 1.0", -1.9337590746800002], [" SELECT COUNT(*) FROM w WHERE episodes = 1.0", -1.9337590746800002], [" SELECT COUNT(*) FROM w WHERE episodes = 1.0", -1.9337590746800002], [" SELECT COUNT(*) FROM w WHERE episodes = 1", -1.9575948486799999], [" SELECT COUNT(*) FROM w WHERE episodes = 1", -1.95791698108], [" SELECT COUNT(*) FROM w WHERE episodes = 1", -3.98830513608], [" SELECT COUNT(*) FROM w WHERE episodes = 1.0\n```", -12.01494171912], [" SELECT COUNT(*) FROM w WHERE episodes = 1.0", -17.78989411498], [" SELECT COUNT(*) FROM w WHERE episodes = 1.0\nQ2: {how many = a2} titles have a character name that begins with a vowel.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character LIKE 'a%' OR character LIKE 'e%' OR character LIKE 'i%' OR character LIKE 'o%' OR character LIKE 'u%'\nQ3: {how many = a3} titles have a character name that begins with a vowel or a date that is greater than 2012.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE (character LIKE 'a%' OR character LIKE 'e%' OR character LIKE 'i%' OR character LIKE 'o%' OR character LIKE 'u%') OR date > 2012\nQ4: {how many = a4} titles have a character name that begins with a vowel and a date that is greater than 2012.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE (character LIKE 'a%' OR character LIKE 'e%' OR character LIKE 'i%' OR character LIKE 'o%' OR character LIKE 'u%') AND date > 2012", -41.79011635928397]]}, "969": {"question": "how many years did he play where he did not recover a fumble?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w WHERE fumble recoveries = 0", -1.856042833293], [" SELECT COUNT(DISTINCT year) FROM w WHERE fumble recoveries = 0", -1.856042833293], [" SELECT COUNT(DISTINCT year) FROM w WHERE fumble recoveries = 0", -1.856042833293], [" SELECT COUNT(DISTINCT year) FROM w WHERE fumble recoveries = 0", -1.856042833293], [" SELECT COUNT(DISTINCT year) FROM w WHERE fumble recoveries = 0", -1.856042833293], [" SELECT COUNT(DISTINCT year) FROM w WHERE fumble recoveries = 0", -1.856042833293], [" SELECT COUNT(DISTINCT year) FROM w WHERE fumble recoveries = 0", -1.856042833293], [" SELECT COUNT(DISTINCT year) FROM w WHERE fumble recoveries = 0", -1.856042833293], [" SELECT COUNT(*) FROM w WHERE fumble recoveries = 0", -6.185863115634], [" SELECT COUNT(DISTINCT(year)) FROM w WHERE fumble recoveries = 0", -6.371229712822999]]}, "1010": {"question": "who appeared first tom segura or jay larson?", "gold_answer": ["Tom Segura"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2781071932330001], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2781071932330001], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2781071932330001], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2781071932330001], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2781071932330001], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2781071932330001], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2788799297669997], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2788799297669997], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2788799297669997], [" SELECT COUNT(*) FROM w WHERE performer = 'tom segura'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE performer = 'jay larson'", -1.2788799297669997]]}, "1051": {"question": "how many other appearance did this artist make in 2005?", "gold_answer": ["3"], "pred_answer": {"0": [[3], [1], [1], [1], [3], [1], [1], [1], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE release = 2005", -2.822016067194], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa' AND release = '2005'", -3.804680088334], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa' AND release = 2005", -5.537441153054], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa' AND release = 2005", -5.537441153054], [" SELECT COUNT(*) FROM w WHERE release = '2005'", -7.188775569113998], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa' AND release = 2005", -7.356831776768], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa' AND release = 2005", -7.8324595767680005], [" SELECT COUNT(*) FROM w WHERE artist = 'rimi natsukawa' AND release = 2005", -9.864687099444], [" SELECT COUNT(*) FROM w WHERE release = '2005'", -10.437916489113999], [" SELECT COUNT(*) FROM w WHERE release = '2005'", -11.848945589113999]]}, "1092": {"question": "which month had the most performers?", "gold_answer": ["February"], "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "2": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "3": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-01%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02%-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03%-%'", -4.0209443435735], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%'", -4.089291925217], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%'", -4.089291925217], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%'", -4.0900496411285], [" SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` LIKE '2011-01-%'\nNeuralSQL2: SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL3: SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` LIKE '2011-03-%'", -4.452753998343401], [" SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` LIKE '2011-01-%'\nNeuralSQL2: SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL3: SELECT COUNT(DISTINCT performer) FROM w WHERE `air date` LIKE '2011-03-%'", -4.4630142500025], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%'", -7.052357804294498], [" SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `air date`) = '01'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `air date`) = '02'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE STRFTIME('%m', `air date`) = '03'", -11.340392952582999], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%'\n```", -13.559390288501998], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-02-%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `air date` LIKE '2011-03-%'\n```", -17.105962897132002]]}, "1133": {"question": "what are the number of titles listed in 2005?", "gold_answer": ["6"], "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[4]], "5": ["<error>"], "6": [[4]], "7": ["<error>"], "8": [[6]], "9": ["<error>"], "10": [[0]], "11": ["<error>"], "12": [[0]], "13": ["<error>"], "14": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 2005", -1.37558797619], [" SELECT COUNT(*) FROM w WHERE year = 2005", -1.37558797619], [" SELECT COUNT(*) FROM w WHERE year = 2005", -1.37558797619], [" SELECT COUNT(*) FROM w WHERE year = 2005", -1.37558797619], [" SELECT COUNT(*) FROM w WHERE year = 2005", -4.65239350819], [" SELECT COUNT(*) FROM w WHERE year = 2005", -4.6527961512900005], [" SELECT COUNT(*) FROM w WHERE year = 2005", -4.6527961512900005], [" SELECT COUNT(*) FROM w WHERE year = 2005", -4.6527961512900005], [" SELECT COUNT(*) FROM w WHERE year = 2005", -13.88041586177], [" SELECT COUNT(*) FROM w WHERE year = 2005\nQ2: the number of titles listed in 2007 is {how many = a2}.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2007\nQ3: the number of titles listed in 2009 is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2009\nQ4: the number of titles listed in 2011 is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 2011\nQ5: the number of titles listed in 2013 is {how many = a5}.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE year = 2013\nQ6: the number of titles listed in 2015 is {how many = a6}.\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE year = 2015\nQ7: the number of titles listed in 2017 is {how many = a7}.\nNeuralSQL7: SELECT COUNT(*) FROM w WHERE year = 2017\nQ8: the number of titles listed in 2019 is {how many = a8}.\nNeural", -18.649696239255]]}, "1174": {"question": "total number of players that signed in march?", "gold_answer": ["7"], "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%march%'", -2.683467534379999], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE '%march%'", -2.6855471220100005], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.71401647261], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -2.7190848874099998], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march %'", -3.6965614084099996], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -3.8307957204099994], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -3.8307957204099994], [" SELECT COUNT(*) FROM w WHERE `date signed` LIKE 'march%'", -3.8307957204099994], [" SELECT COUNT(*) FROM w WHERE date signed LIKE '%march%'", -3.923941384610001], [" SELECT COUNT(*) FROM w WHERE date signed LIKE '%march%'", -3.923941384610001]]}, "1215": {"question": "did the titans or the daredevils winners?", "gold_answer": ["Titans"], "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'", -2.2987576980200006], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'", -2.3016858653800005], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'", -2.30277425462], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'", -2.30277425462], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'", -2.30277425462], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'", -2.30277425462], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'", -2.30277425462], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'", -2.30378677121], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'\n```", -12.179192449519999], [" SELECT COUNT(*) FROM w WHERE team = 'titans' AND position = 'winners'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'daredevils' AND position = 'winners'\n```", -16.52868200952]]}, "1256": {"question": "how many buildings on the list are taller than 200 feet?", "gold_answer": ["5"], "pred_answer": {"0": [[5], [5], [5], [0], [0], [0], [0], [1], [1], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft (m)`,'(','') AS INT) > 200", -4.69212529291], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft (m)`,'(','') AS INT) > 200", -4.69212529291], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`height\\nft (m)`,'(','') AS INT) > 200", -4.69212529291], [" SELECT COUNT(*) FROM w WHERE `height\\nft (m)` LIKE '% (200)%'", -5.218753242540001], [" SELECT COUNT(*) FROM w WHERE `height\\nft (m)` LIKE '% (200)%'", -5.2672373966100015], [" SELECT COUNT(*) FROM w WHERE `height\\nft (m)` LIKE '% (200)%'", -5.2672373966100015], [" SELECT COUNT(*) FROM w WHERE `height\\nft (m)` LIKE '% (200)%'", -5.2672373966100015], [" SELECT COUNT(*) FROM w WHERE `height\\nft (m)` LIKE '% (2%'", -6.201334816330001], [" SELECT COUNT(*) FROM w WHERE `height\\nft (m)` LIKE '% (2%)'", -6.467929377070001], [" SELECT COUNT(*) FROM w WHERE `height\\nft (m)` LIKE '%(%' AND CAST(SUBSTR(`height\\nft (m)`, 1, INSTR(`height\\nft (m)`, '(') - 1) AS INT) > 200", -8.40562015741]]}}