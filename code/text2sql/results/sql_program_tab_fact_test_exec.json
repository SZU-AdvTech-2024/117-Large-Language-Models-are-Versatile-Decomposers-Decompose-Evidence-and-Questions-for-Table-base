{"0": {"question": "david moore direct 3 episode of series 2 of merlin", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8156271009099999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8167674312800001], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8170304203200001], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8180822894899998], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.81831885009], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8183189710900001], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.818832642534], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.818832642534], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.81913051396], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8200171791199998]]}, "56": {"question": "7 viral family have a helical virion shape", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.3734128740449998], [" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.380205863085], [" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.381964215085], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'helical'", -1.8035231016849997], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'helical'", -1.818437885895], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'helical'", -1.911587224152], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'helical'", -1.9146103307929998], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'helical'", -1.929343410466], [" SELECT COUNT(DISTINCT family) FROM w WHERE `virion shape` = 'helical'", -2.310249030731], [" SELECT COUNT(DISTINCT family) FROM w WHERE `virion shape` = 'helical'", -2.324962622222]]}, "81": {"question": "alfredo binda win 6 race of the 1933 giro d'italia , but he be the race leader for 13 race", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.809029839994], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.8127797153899998], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.8216719356699995], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.8240128015140005], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.8245277901249999], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.8247194946799996], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.82605541018], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.83183151383], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `race leader` = 'alfredo binda ( ita )'", -2.5803837327099997], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `race leader` = 'alfredo binda ( ita )'", -2.6008877711169993]]}, "93": {"question": "sweden and canada be the only country on the table that do not receive a medal in 1 of the category", "gold_answer": 1, "pred_answer": {"0": [[0], [2], [0], [2], [0], [2], [2], [2], [0], [0]], "1": [[0], [2], [0], [2], [0], [2], [2], [2], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden (swe)' OR nation = 'canada (can)') AND gold = 0 AND silver = 0 AND bronze = 0", -4.407064934738001], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden (swe)' OR nation = 'canada (can)') AND (gold = 0 OR silver = 0 OR bronze = 0)", -4.586010578010002], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden' OR nation = 'canada') AND gold = 0 AND silver = 0 AND bronze = 0", -4.612850635522], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden (swe)' OR nation = 'canada (can)') AND (gold = 0 OR silver = 0 OR bronze = 0)", -4.61476943444], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden' OR nation = 'canada') AND gold = 0 AND silver = 0 AND bronze = 0", -4.628731341716], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden (swe)' OR nation = 'canada (can)') AND (gold = 0 OR silver = 0 OR bronze = 0)", -4.692817251234998], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'sweden (swe)' OR nation = 'canada (can)' AND (gold = 0 OR silver = 0 OR bronze = 0)", -5.852459046509999], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (gold = 0 OR silver = 0 OR bronze = 0) AND (nation = 'sweden (swe)' OR nation = 'canada (can)')", -6.4295156188], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'sweden (swe)' OR nation = 'canada (can)' AND gold + silver + bronze = 0", -7.276083993680002], [" SELECT COUNT(*) FROM w WHERE gold + silver + bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'sweden (swe)' OR nation = 'canada (can)' AND gold + silver + bronze = 0", -7.2907602987399995]]}, "106": {"question": "lleyton hewitt be a runner - up 5 time out of a total of 7", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[5], [5], [5], [5], "<error>", "<error>", "<error>", "<error>", [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND (SELECT COUNT(*) FROM w) = 7", -3.797347860060001], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND (SELECT COUNT(*) FROM w) = 7", -3.80077279334], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND (SELECT COUNT(*) FROM w) = 7", -3.8058667085900004], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND (SELECT COUNT(*) FROM w) = 7", -3.8370601975600005], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND COUNT(*) = 7", -4.457056501039999], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND COUNT(*) = 7", -4.571175657600001], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND COUNT(*) = 7", -4.61100247855], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND COUNT(*) / 7", -5.38856462834], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND year = 2002", -6.08918858363], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND year = 2002", -6.179895098819999]]}, "131": {"question": "the yugoslavian national team score 7 goal and allow 3 against in the 2 1982 world cup qualify score", "gold_answer": 0, "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.119507140036], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.122315841242], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.123434950392], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.1237006344759997], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.1240836827186], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.1246994391719993], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.1249452844959995], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.12724086929], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.128040811956], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.129895724071001]]}, "186": {"question": "amy sherman - palladino and daniel palladino direct more than 3 episode together", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino , daniel palladino'", -2.3635774796580002], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino , daniel palladino'", -2.3686009953499996], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino , daniel palladino'", -2.371105397494], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino , daniel palladino'", -2.37513465742], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino , daniel palladino'", -2.3790139117369997], [" SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman - palladino%' AND director LIKE '%daniel palladino%'", -3.3412432697599996], [" SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman - palladino%' AND director LIKE '%daniel palladino%'", -3.349399799879999], [" SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman - palladino , daniel palladino%'", -3.9112543687900003], [" SELECT COUNT(*) FROM w WHERE (director LIKE '%amy sherman - palladino%' AND director LIKE '%daniel palladino%')", -5.463560452129999], [" SELECT COUNT(*) FROM w WHERE (director LIKE '%amy sherman - palladino%' AND director LIKE '%daniel palladino%') OR (director LIKE '%daniel palladino%' AND director LIKE '%amy sherman - palladino%')", -7.105564526593005]]}, "239": {"question": "industrial and commercial panel have 4 more member than cultural and educational panel", "gold_answer": 1, "pred_answer": {"0": [[3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9], [3, 2, 1, 0, 1, 9]], "1": [[2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5], [2, 2, 0, 0, 0, 5]], "2": ["<error>"]}, "nsql": [[" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9206600364300003], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9211911247760001], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9214657958400002], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9222759258639998], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9224657752449997], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9228789979649998], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9230365807459999], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9238830947100001], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w", -0.9242103857359998], [" SELECT `industrial and commercial panel` FROM w\nNeuralSQL2: SELECT `cultural and educational panel` FROM w\n```", -3.311076959164]]}, "264": {"question": "there be no home team that score less than 11", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `home team score` < '11'", -2.42183966018], [" SELECT COUNT(*) FROM w WHERE `home team score` < '11'", -2.4454573015799994], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) < 11", -3.21212154775], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) < 11", -3.2303155837100004], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) < 11", -3.2415437766000004], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) < 11", -3.2651262820300015], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`home team score`,'(','') AS INT) < 11", -4.237721403490001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`home team score`,'(','') AS INT) < 11", -4.24106765776], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`home team score`,'(','') AS INT) < 11", -4.25092449303], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`home team score`, ' (', '.') AS DECIMAL) < 11", -8.109353847319998]]}, "289": {"question": "4 of the cleveland brown start quarterback have 2 different uniform number", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.4723409265300003], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.4790381089499998], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.4795649160199997], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.48045544185], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.48193478524], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.4834416181799996], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.48366421363], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.4843375573200004], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.4918432734], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -2.4950379034499997]]}, "314": {"question": "frank nobilo be the only player from zimbabwe", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9148435109400002], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9150807961599997], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9158142704900002], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9159804367799999], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9160426534000002], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9165353816099999], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9165986158099998], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9167421083899997], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.9185105630599997], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'zimbabwe'", -0.91887977998]]}, "339": {"question": "the texas ranger play the tiger 2 time in the 2006 season", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34348315417999997], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34368706501000007], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34371530056], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34379187607999995], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34392365537], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34415108114], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34428911364000003], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34432753957], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.3443416075400001], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers'", -0.34505850419]]}, "361": {"question": "the new zealand breaker lost 2 game more than the melbourne tiger", "gold_answer": 1, "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.37851489385500015], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.37863387373], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.38044865242000003], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.38138989898000003], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.38189535053000007], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.38286982594], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.3829471261499999], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.38331320098000005], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.3838985352100001], [" SELECT lost FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT lost FROM w WHERE team = 'melbourne tigers'", -0.3840442219399999]]}, "447": {"question": "during the 2007 - 08 minnesota wild season , the decision be harding more time than it be backstrom", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.4679977713800001], [" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.46886125522399996], [" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.46986808454999995], [" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.4701832364399999], [" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.47021299984000003], [" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.47090085473999993], [" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.47102590387599996], [" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.4712069904799999], [" SELECT COUNT(*) FROM w WHERE decision = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'backstrom'", -0.47273514137999995], [" SELECT COUNT(*) FROM w WHERE `decision` = 'harding'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `decision` = 'backstrom'", -2.8100515085]]}, "454": {"question": "the most point score by the lion in a single game be 58", "gold_answer": 0, "pred_answer": {"0": [[78042], [78042], [78042], [78042], [78042], "<error>", [0], [0], [0], "<error>"]}, "nsql": [[" SELECT MAX(attendance) FROM w", -2.3719321594600005], [" SELECT MAX(attendance) FROM w", -2.37274302296], [" SELECT MAX(attendance) FROM w", -2.3751972708599998], [" SELECT MAX(attendance) FROM w", -2.3895664666100003], [" SELECT MAX(attendance) FROM w", -2.39064404379], [" SELECT MAX(score) FROM w", -2.87013150736], [" SELECT MAX(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w", -4.855877174089999], [" SELECT MAX(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w", -4.981423379649999], [" SELECT MAX(CAST(SUBSTR(result, 1, INSTR(result, ' - ') - 1) AS INT)) FROM w", -5.276172391239999], [" SELECT MAX(`scored`) FROM w", -8.36903738236]]}, "472": {"question": "team brazil be the only football club locate on the south american continent", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.4227405270069997], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.423550666047], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.423958776167], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.4250232695570002], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.425140601317], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.425385591167], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.4262966320269999], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.426442260627], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 's america'", -1.4284768203169995], [" SELECT COUNT(*) FROM w WHERE continent = 's america'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE continent = 's america' AND football club = 'team brazil'", -4.076297310867]]}, "497": {"question": "under the influence chart at 56 in the us in 1985 and 1986", "gold_answer": 0, "pred_answer": {"0": [[], [], [], [], [], [], [], [], [], []], "1": [[56.0], [56.0], [56.0], [56.0], [56.0], [56.0], [56.0], [56.0], [56.0], [56.0]]}, "nsql": [[" SELECT us FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT us FROM w WHERE title = 'under the influence' AND year = 1986", -1.8710246964400004], [" SELECT us FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT us FROM w WHERE title = 'under the influence' AND year = 1986", -1.8723060174360002], [" SELECT us FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT us FROM w WHERE title = 'under the influence' AND year = 1986", -1.8725178466499999], [" SELECT us FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT us FROM w WHERE title = 'under the influence' AND year = 1986", -1.8730916431200002], [" SELECT us FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT us FROM w WHERE title = 'under the influence' AND year = 1986", -1.8737957999400001], [" SELECT us FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT us FROM w WHERE title = 'under the influence' AND year = 1986", -1.8739175503339998], [" SELECT `us` FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT `us` FROM w WHERE title = 'under the influence' AND year = 1986", -2.17958471302], [" SELECT `us` FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT `us` FROM w WHERE title = 'under the influence' AND year = 1986", -2.1832225261299993], [" SELECT `us` FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT `us` FROM w WHERE title = 'under the influence' AND year = 1986", -2.1842411566759994], [" SELECT `us` FROM w WHERE title = 'under the influence' AND year = 1985\nNeuralSQL2: SELECT `us` FROM w WHERE title = 'under the influence' AND year = 1986", -2.185445484105]]}, "522": {"question": "there be 3 c - 95 aircraft of brazilian origin currently in service", "gold_answer": 1, "pred_answer": {"0": [[1], [0], [0], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND aircraft = 'embraer emb 110 bandeirante'", -4.086544345509999], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND aircraft = 'c -95'", -4.30598678547], [" SELECT COUNT(*) FROM w WHERE type = 'c -95' AND origin = 'brazil'", -4.42025714637], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND versions = 'c - 95' AND `in service` > 0", -5.256864531070001], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND versions = 'c - 95' AND `in service` > 0", -5.30119436553], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND versions = 'c -95' AND `in service` > 0", -5.311743077289999], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND versions = 'c -95' AND `in service` > 0", -5.31639462887], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND versions = 'c -95' AND in service > 0", -6.140096725820001], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility' AND versions = 'c - 95' AND `in service` > 0", -6.68029590932], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND aircraft = 'c - 95' AND in service <> '0'", -9.38945247373]]}, "547": {"question": "there be more than 1 disc", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT discs) FROM w", -1.02089104856], [" SELECT COUNT(DISTINCT discs) FROM w", -1.02305359912], [" SELECT COUNT(DISTINCT discs) FROM w", -1.0235013951699998], [" SELECT COUNT(DISTINCT discs) FROM w", -1.02437883542], [" SELECT COUNT(DISTINCT discs) FROM w", -1.0246925043600001], [" SELECT COUNT(DISTINCT discs) FROM w", -1.024864691764], [" SELECT COUNT(DISTINCT discs) FROM w", -1.02507170672], [" SELECT COUNT(DISTINCT discs) FROM w", -1.02560902064], [" SELECT COUNT(DISTINCT discs) FROM w", -1.0265181177299998], [" SELECT COUNT(DISTINCT discs) FROM w\n```", -3.6508344886039996]]}, "30": {"question": "west berkshire brewery 's dr hexter healer beer win 3 gold medal between 1995 and 2009", "gold_answer": 1, "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[7]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE beer name = 'dr hexter 's healer' AND prize = 'gold medal' AND year BETWEEN 1995 AND 2009", -4.648130859789998], [" SELECT COUNT(*) FROM w WHERE beer name = 'dr hexter 's healer' AND prize = 'gold medal' AND year BETWEEN 1995 AND 2009", -4.662829244040001], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND year BETWEEN 1995 AND 2009", -5.05142121735], [" SELECT COUNT(*) FROM w WHERE beer name = 'dr hexter 's healer' AND prize = 'gold medal' AND year >= 1995 AND year <= 2009", -5.613949773669999], [" SELECT COUNT(*) FROM w WHERE beer name = 'dr hexter' s healer' AND prize = 'gold medal' AND year BETWEEN 1995 AND 2009", -6.4210282669700005], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND `prize` = 'gold medal' AND `year` >= 1995 AND `year` <= 2009", -6.49847306391], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter' s healer' AND prize = 'gold medal' AND year BETWEEN 1995 AND 2009", -6.88408240636], [" SELECT COUNT(*) FROM w WHERE prize = 'gold medal' AND `beer name` = 'dr hexter 's healer' AND `year` BETWEEN 1995 AND 2009", -7.77244754957], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter'S healer' AND `prize` = 'gold medal' AND `year` BETWEEN 1995 AND 2009", -8.13861857446], [" SELECT COUNT(*) FROM w WHERE beer name = 'dr hexter 's healer' AND prize = 'gold medal' AND year BETWEEN 1995 AND 2009\nQ2: {how many = a2} beers won silver medals between 1995 and 2009.\nNeuralSQL2: SELECT COUNT(DISTINCT beer name) FROM w WHERE prize = 'silver medal' AND year BETWEEN 1995 AND 2009\nQ3: the number of beers won silver medals between 1995 and 2009 is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE prize = 'silver medal' AND year BETWEEN 1995 AND 2009\nQ4: there are {how many =", -30.904726554118]]}, "86": {"question": "2 player be pick during the 2nd round of the draft", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE round = 2", -0.5641342086400001], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.56452552467], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.56497309663], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.56510557439], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.5653828133700001], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.56559834086], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.56560619804], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.56620035753], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.5665782378800001], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.56664223076]]}, "111": {"question": "ileyton hewitt be a runner up 1 time out of a total of 7", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.90804670454], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.9085902072400002], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.90906807284], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.91043325594], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.91427951094], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.91447734074], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.9146902174399998], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.9147045899399999], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.9153307572399999], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -0.9173895264399999]]}, "123": {"question": "the attendance be less than 20000 over 5 time between august 4 and 6th", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [0], [0], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date BETWEEN 'august 4' AND 'august 6' AND attendance < 20000", -4.051104054410001], [" SELECT COUNT(*) FROM w WHERE attendance < 20000 AND `date` BETWEEN 'august 4' AND 'august 6'", -4.39209733335], [" SELECT COUNT(*) FROM w WHERE attendance < 20000 AND `date` BETWEEN 'august 4' AND 'august 6'", -4.40242207365], [" SELECT COUNT(*) FROM w WHERE attendance < 20000 AND date BETWEEN 'august 4' AND 'august 6'", -4.606454141769999], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN 'august 4' AND 'august 6' AND attendance < 20000", -4.838255972140001], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN 'august 4' AND 'august 6' AND attendance < 20000", -4.841460865840002], [" SELECT COUNT(*) FROM w WHERE date BETWEEN 'august 4th' AND 'august 6th' AND attendance < 20000", -4.95419350377], [" SELECT COUNT(*) FROM w WHERE attendance < 20000 AND date BETWEEN '1997-08-04' AND '1997-08-06'", -5.27064167736], [" SELECT COUNT(*) FROM w WHERE attendance < 20000 AND date BETWEEN '1997-08-04' AND '1997-08-06'", -5.288733809039999], [" SELECT COUNT(*) FROM w WHERE `date` >= 'august 4th' AND `date` <= 'august 6th' AND attendance < 20000", -6.220196901639999]]}, "136": {"question": "5 of the game list end with 0 - 0 result and 3 with a result of 5 - 0", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.6033907074639998], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.6068115267850002], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.607422796866], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.6084271368190001], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.60852975415], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.609100761445], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.6091181286199999], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.6098603177200003], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.6107705364540001], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = '5 - 0'", -0.61093010695]]}, "161": {"question": "ray lindwall take the same number of wicket as bill johnston but have a better bowling average", "gold_answer": 1, "pred_answer": {"0": [[27], [27], [27], [27], [27], [27], [27], [27], [27], [27]], "1": [[27], [27], [27], [27], [27], [27], [27], [27], [27], [27]]}, "nsql": [[" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.5290837995480002], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.5292550053579997], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.5294361643179998], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.529872807628], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.5300490526779997], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.5300994312879999], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.5301007977979999], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.530164090888], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.5303732376879999], [" SELECT wickets FROM w WHERE player = 'ray lindwall'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.531300579708]]}, "216": {"question": "there be 10 event in 2011", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [1], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE season = '2011-01-01 00:00:00'", -1.9302413824800002], [" SELECT COUNT(*) FROM w WHERE season = '2011-01-01 00:00:00'", -1.9375354872800001], [" SELECT COUNT(*) FROM w WHERE season = '2011-01-01 00:00:00'", -1.9453875058800003], [" SELECT COUNT(*) FROM w WHERE season = '2011-01-01 00:00:00'", -1.9493858852800003], [" SELECT COUNT(*) FROM w WHERE season = '2011-01-01 00:00:00'", -1.94948689108], [" SELECT COUNT(*) FROM w WHERE season = '2011-01-01 00:00:00'", -1.95320078738], [" SELECT COUNT(*) FROM w WHERE season = '2011-01-01 00:00:00'", -1.9560041089799998], [" SELECT COUNT(*) FROM w WHERE `season` LIKE '2011%'", -3.66375805078], [" SELECT COUNT(*) FROM w WHERE `season` = '2011-01-01 00:00:00'", -4.1976028891800015], [" SELECT COUNT(*) FROM w WHERE `season` = '2011-01-01 00:00:00'", -4.205502240639999]]}, "269": {"question": "no game on the 18th of june draw a crowd of more fewer than 20000", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE DATE(date) = '1938-06-18' AND crowd > 20000", -3.01210428239], [" SELECT COUNT(*) FROM w WHERE DATE(date) = '1938-06-18' AND crowd > 20000", -3.0170010294800007], [" SELECT COUNT(*) FROM w WHERE DATE(date) = '1938-06-18' AND crowd > 20000", -3.01704748423], [" SELECT COUNT(*) FROM w WHERE date = '1938-06-18 00:00:00' AND crowd > 20000", -3.0222394482099997], [" SELECT COUNT(*) FROM w WHERE DATE(date) = '1938-06-18' AND crowd > 20000", -3.03081438105], [" SELECT COUNT(*) FROM w WHERE `crowd` > 20000 AND `date` LIKE '1938-06-18%'", -3.9083789949200005], [" SELECT COUNT(*) FROM w WHERE crowd > 20000 AND `date` LIKE '1938-06-18%'", -4.186406960560001], [" SELECT COUNT(*) FROM w WHERE `crowd` > 20000 AND `date` = '1938-06-18 00:00:00'", -4.23948252913], [" SELECT COUNT(*) FROM w WHERE crowd > 20000 AND `date` = '1938-06-18'", -5.57052475984], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(crowd, 1, INSTR(crowd, ',') - 1) AS INT) > 20000", -8.990009248709999]]}, "294": {"question": "in the 1981 open championship there be 8 player that tie for 9th", "gold_answer": 1, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.8172086239049999], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.817853362605], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.819953708605], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.8200937029049998], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.8201121185049999], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.8213511738049999], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.8217847676050001], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.8225840085049999], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.822748985605], [" SELECT COUNT(*) FROM w WHERE place = 't9'", -0.824142370605]]}, "319": {"question": "there be more than 2 zakspeed chassis make in the year 1987", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [0], [0], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT chassis) FROM w WHERE year = 1987", -2.4572893009579997], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed%'", -3.129227319676], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed%'", -3.1543378341759998], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE '%zakspeed%'", -3.556516780576], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE '%zakspeed%'", -3.558058002576], [" SELECT COUNT(*) FROM w WHERE chassis LIKE '%1987%'", -3.634117718276], [" SELECT COUNT(*) FROM w WHERE chassis LIKE '%1987%'", -3.639670301576], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed %'", -3.799640046876], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis = 'zakspeed 861 zakspeed 871'", -4.467174676016], [" SELECT COUNT(*) FROM w WHERE chassis LIKE '%zakspeed%' AND year = 1987", -4.531873206276]]}, "344": {"question": "4 episode title of gary unmarried feature the name of both gary and allison in season 1", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [0], [0], "<error>", [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%'", -1.4980467881500001], [" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%'", -1.4986673771899996], [" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%'", -1.5005524024500003], [" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%'", -1.50182460248], [" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%'", -1.50269895342], [" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%'", -1.5037014475099997], [" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%' AND episode LIKE '%season 1%'", -5.0067835586900005], [" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%' AND episode LIKE '%season 1%'", -5.015031324649998], [" SELECT COUNT(*) FROM w WHERE episode LIKE '%gary%' AND episode LIKE '%allison%' AND season = 1", -5.70653861677], [" SELECT COUNT(DISTINCT `episode`) FROM w WHERE `episode` LIKE '%gary%' AND `episode` LIKE '%allison%'", -6.389278370194999]]}, "369": {"question": "olga govortsova advance to the third round in the french open 5 year in a row", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [0], [1], [1], [1], [0], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (2007 = '3r' OR 2008 = '3r' OR 2009 = '3r' OR 2010 = '3r' OR 2011 = '3r')", -6.085071416709999], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (2007 = '3r' OR 2008 = '3r' OR 2009 = '3r' OR 2010 = '3r' OR 2011 = '3r')", -6.143232356100002], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND 2007 = '3r' AND 2008 = '3r' AND 2009 = '3r' AND 2010 = '3r' AND 2011 = '3r'", -6.149828191759999], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (2007 = '3r' OR 2008 = '3r' OR 2009 = '3r' OR 2010 = '3r' OR 2011 = '3r')", -6.15710880982], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (2007 = '3r' OR 2008 = '3r' OR 2009 = '3r')", -6.268524767290001], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (`2007` = '3r' OR `2008` = '3r' OR `2009` = '3r' OR `2010` = '3r' OR `2011` = '3r')", -6.818873657999997], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND `2007` = '3r' AND `2008` = '3r' AND `2009` = '3r' AND `2010` = '3r' AND `2011` = '3r'", -7.079055478310002], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (`2007` = '3r' OR `2008` = '3r' OR `2009` = '3r' OR `2010` = '3r')", -7.2986661743799965], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (2007 = '3r' OR 2008 = '3r') AND (2009 = '2r' OR 2010 = '2r')", -8.544452876600001], [" SELECT COUNT(DISTINCT(tournament)) FROM w WHERE tournament = 'french open' AND 2007 = '3r' AND 2008 = '3r' AND 2009 = '3r' AND 2010 = '3r' AND 2011 = '3r'", -10.655051114930004]]}, "391": {"question": "the dundee hurricane win the same number of game in 2003 and 2004", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT wins FROM w WHERE season = 2003\nNeuralSQL2: SELECT wins FROM w WHERE season = 2004", -1.3517812826799998], [" SELECT wins FROM w WHERE season = 2003\nNeuralSQL2: SELECT wins FROM w WHERE season = 2004", -1.3556889778400003], [" SELECT wins FROM w WHERE season = 2003\nNeuralSQL2: SELECT wins FROM w WHERE season = 2004", -1.3563553163500004], [" SELECT wins FROM w WHERE season = 2003\nNeuralSQL2: SELECT wins FROM w WHERE season = 2004", -1.3583962252999995], [" SELECT wins FROM w WHERE season = 2003\nNeuralSQL2: SELECT wins FROM w WHERE season = 2004", -1.3602092831999997], [" SELECT wins FROM w WHERE season = 2003\nNeuralSQL2: SELECT wins FROM w WHERE season = 2004", -1.36512529808], [" SELECT wins FROM w WHERE season = 2003\nNeuralSQL2: SELECT wins FROM w WHERE season = 2004", -1.3671923084700006], [" SELECT wins FROM w WHERE season = 2003\nNeuralSQL2: SELECT wins FROM w WHERE season = 2004", -1.3740973153400002], [" SELECT SUM(wins) FROM w WHERE season = 2003\nNeuralSQL2: SELECT SUM(wins) FROM w WHERE season = 2004", -2.0432227518200006], [" SELECT SUM(wins) FROM w WHERE season = 2003\nNeuralSQL2: SELECT SUM(wins) FROM w WHERE season = 2004", -2.0471839189299996]]}, "477": {"question": "japan be the only football club locate in oceania", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.4065684156540001], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.4102920842980002], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.4103467706750001], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.4112908105719997], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.4131289791550004], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.4166791776969998], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.418368223575], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.426931884655], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.433249577685], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'japan' AND continent = 'oceania'", -1.4343427729579994]]}, "484": {"question": "multiple people be prison escapist and each leave the cube alive", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE occupation = 'prison escapist' AND status = 'alive after exiting the cube'", -1.85868576134], [" SELECT COUNT(*) FROM w WHERE occupation = 'prison escapist' AND status = 'alive after exiting the cube'", -1.8694503137850005], [" SELECT COUNT(*) FROM w WHERE occupation = 'prison escapist' AND status = 'alive after exiting the cube'", -1.8724693878399996], [" SELECT COUNT(*) FROM w WHERE occupation = 'prison escapist' AND status = 'alive after exiting the cube'", -1.8729333657059992], [" SELECT COUNT(*) FROM w WHERE occupation = 'prison escapist' AND status = 'alive after exiting the cube'", -1.8761479444850002], [" SELECT COUNT(*) FROM w WHERE occupation = 'prison escapist' AND status = 'alive after exiting the cube'", -1.8762933120500003], [" SELECT COUNT(*) FROM w WHERE occupation = 'prison escapist' AND status = 'alive after exiting the cube'", -1.8816513802400001], [" SELECT COUNT(*) FROM w WHERE occupation = 'prison escapists' AND status = 'alive after exiting the cube'", -3.6564364374], [" SELECT COUNT(*) FROM w WHERE `prison connection` LIKE '%prison%' AND `prison connection` LIKE '%(%' AND `prison connection` LIKE '%)%' AND `status` = 'alive after exiting the cube'", -9.033897142079997], [" SELECT COUNT(*) FROM w WHERE `prison connection` LIKE '%prison%' AND `prison connection` LIKE '%(%' AND `prison connection` LIKE '%)%' AND `prison connection` NOT LIKE '%(%' AND `prison connection` NOT LIKE '%)%' AND `prison connection` NOT LIKE '%prison%' AND status = 'alive after exiting the cube'", -17.113374359503997]]}, "502": {"question": "pennsylvania17 be the only district that have someone first elect in the 1980s", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'pennsylvania17' AND `first elected` LIKE '198%-%-%'", -3.434458128468001], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'pennsylvania17' AND `first elected` LIKE '198%-%-%'", -3.437421220624001], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'pennsylvania17' AND `first elected` LIKE '198%-%-%'", -3.4376184559140013], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'pennsylvania17' AND `first elected` LIKE '198%-%-%'", -3.4386472328000006], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'pennsylvania17' AND `first elected` LIKE '198%-%-%'", -3.4498117325640005], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'pennsylvania17' AND `first elected` LIKE '198%-%-%'", -3.453988967603998], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'pennsylvania17' AND `first elected` LIKE '198%-%-%'", -3.4567750839799998], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%' AND district = 'pennsylvania17'", -3.8005212427440007], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%' AND district = 'pennsylvania17'", -3.8091827329040004], [" SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `first elected` LIKE '198%-%-%' AND district = 'pennsylvania17'", -3.837943699984]]}, "527": {"question": "there be 12 t - 260 eu aircraft currently in service that originate from switzerland", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` > 0 AND origin = 'switzerland'", -4.200506772661], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND origin = 'switzerland'", -4.3435220404470005], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND origin = 'switzerland' AND `in service` > 0", -4.579431371625998], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0' AND origin = 'switzerland'", -4.876191315474], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0' AND origin = 'switzerland'", -4.878876843404], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0' AND origin = 'switzerland'", -4.9502068488200015], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0' AND origin = 'switzerland'", -4.97484890366], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service != '0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service != '0' AND origin = 'switzerland'", -5.407455609282001], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != 0 AND origin = 'switzerland'", -5.815340115799999], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != 'none'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND origin = 'switzerland' AND `in service` != 'none'", -6.932035876445]]}, "552": {"question": "there be 1 mideast rank and 1 asian rank", "gold_answer": 0, "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]], "1": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3738513028295], [" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3774832676511999], [" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3791674291223996], [" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3821934276612], [" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3824859611523999], [" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3825656034423999], [" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3872936645911997], [" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3896822553674], [" SELECT COUNT(DISTINCT `rank mideast`) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT `rank asia`) FROM w", -1.3929120080804], [" SELECT COUNT(DISTINCT(`rank mideast`)) FROM w\nNeuralSQL2: SELECT COUNT(DISTINCT(`rank asia`)) FROM w", -2.262467628798671]]}, "577": {"question": "there be zero purse after 2012 that have a winner 's share of less than 15400", "gold_answer": 0, "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [1], [1], [1], [9]], "1": ["<error>"], "2": [[9]], "3": ["<error>"], "4": ["<error>"], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE purse > 2012 AND `winner 's share` < 15400", -2.3257621349700006], [" SELECT COUNT(*) FROM w WHERE purse > 2012 AND `winner 's share` < 15400", -2.3302626096700005], [" SELECT COUNT(*) FROM w WHERE purse > 2012 AND `winner 's share` < 15400", -2.3313816349699996], [" SELECT COUNT(*) FROM w WHERE purse > 2012 AND `winner 's share` < 15400", -2.3321719109700005], [" SELECT COUNT(*) FROM w WHERE purse > 2012 AND `winner 's share` < 15400", -2.3405821978700003], [" SELECT COUNT(*) FROM w WHERE purse > 2012 AND `winner 's share` < 15400", -2.3494656885700005], [" SELECT COUNT(*) FROM w WHERE `winner 's share` < 15400 AND year > 2012", -3.0078601381700008], [" SELECT COUNT(*) FROM w WHERE `winner 's share` < 15400 AND `year` > 2012", -3.35074484607], [" SELECT COUNT(*) FROM w WHERE `winner 's share` < 15400 AND `year` > 2012", -3.36035704177], [" SELECT COUNT(*) FROM w WHERE purse > 2012 AND `winner 's share` < 15400\nQ2: there are {how many = a2} purses after 2012 that has a winner 's share of less than 15400\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE purse > 2012 AND `winner 's share` < 15400\nQ3: the average score of all games is {how many = a3}\nNeuralSQL3: SELECT AVERAGE(CAST(REPLACE(score, ' (', '.') AS FLOAT)) FROM w\nQ4: the average score of all games is {how many = a4}\nNeuralSQL", -30.55453928581]]}, "8": {"question": "though 4 player from belgian first division a be in the top 19 scorer , the top scorer (matias suarez) have 8 fewer goal than mbark boussoufa , who have 11 goal", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [2], [1], [2], [2]], "1": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT total FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT total FROM w WHERE player = 'mbark boussoufa'", -2.543686985629999], [" SELECT total FROM w WHERE player = 'mat\u00edas su\u00e1rez'\nNeuralSQL2: SELECT total FROM w WHERE player = 'mbark boussoufa'", -2.8721490933500005], [" SELECT total FROM w WHERE player = 'mat\u00edas su\u00e1rez'\nNeuralSQL2: SELECT total FROM w WHERE player = 'mbark boussoufa'", -2.872895591314001], [" SELECT SUM(total) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'mbark boussoufa'", -2.916292799769999], [" SELECT SUM(total) FROM w WHERE player = 'mat\u00edas su\u00e1rez'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'mbark boussoufa'", -3.0790420565700005], [" SELECT SUM(total) FROM w WHERE player = 'mat\u00edas su\u00e1rez'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'mbark boussoufa'", -3.0815329990380005], [" SELECT league + title playoff + super cup FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT league + title playoff + super cup FROM w WHERE player = 'mbark boussoufa'", -3.9542703293199994], [" SELECT SUM(league) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'mbark boussoufa'", -4.705677083740001], [" SELECT SUM(league) + SUM(title playoff) + SUM(super cup) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(league) + SUM(title playoff) + SUM(super cup) FROM w WHERE player = 'mbark boussoufa'", -5.740327099424001], [" SELECT SUM(league) + SUM(title playoff) + SUM(super cup) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(league) + SUM(title playoff) + SUM(super cup) FROM w WHERE player = 'mbark boussoufa'", -5.755899847160998]]}, "60": {"question": "only 1 of the viral disease be in baltimore group iii", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7455974639390001], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7475350993564998], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7523297794764998], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7534903816390001], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7540439265964999], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7553270768489999], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7568205159064999], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.756945013169], [" SELECT COUNT(*) FROM w WHERE baltimore group = 'group iii'", -1.7889468605100003], [" SELECT COUNT(*) FROM w WHERE baltimore group = 'group iii'", -1.799155099815]]}, "116": {"question": "neither team score for only the first game of the world cup in france", "gold_answer": 0, "pred_answer": {"0": [[4], [2], [2], [2], [2], [1], [0], [0], [1], [2]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%'", -4.06510242768], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND score LIKE '% - 0'", -4.161239812679999], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND score LIKE '% - 0'", -4.17048058808], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '% - 0'", -6.39320061528], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '% - 0'", -6.40095964394], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue = 'stade geoffroy - guichard saint - \u00e9tienne , france' AND score LIKE '% - 0'", -6.484964569542001], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '% france %' AND score LIKE '% - 0'", -7.088599399979999], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '% france %' AND score LIKE '% - 0'", -7.090626703879998], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '% france' AND score LIKE '1 - %'", -9.40081298148], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '%- 0'\nQ2: {how many = a2} team scored for only the first game of the world cup in france.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '0 - %'\nQ3: {how many = a3} team scored for only the first game of the world cup in france.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND", -21.87389157972399]]}, "141": {"question": "3 athlete receive medal in gymnastics", "gold_answer": 1, "pred_answer": {"0": [[11], [11], [11], [11], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -1.0122331088799998], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -1.0205320712599997], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -1.03366746744], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -1.0382196601900002], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE sport = 'gymnastics'", -1.3797698483399998], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE sport = 'gymnastics'", -1.3867289230600002], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE sport = 'gymnastics'", -1.3869609387499995], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE sport = 'gymnastics'", -1.3947525472399998], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE sport = 'gymnastics'", -1.402270318594], [" SELECT COUNT(DISTINCT(athlete)) FROM w WHERE sport = 'gymnastics'", -2.1806004394800005]]}, "153": {"question": "the australian open have 3 a result and wimbledon have only 1", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [0], [0], "<error>"], "1": [[1], [1], [1], [1], [1], [1], [1], [0], [0], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND 1986 = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND 1986 = 'a'", -2.8819342288990004], [" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND 1986 = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND 1986 = 'a'", -2.938199808808999], [" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND 1986 = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND 1986 = 'a'", -2.938200710808999], [" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND `1986` = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND `1986` = 'a'", -3.576283164571001], [" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND `1986` = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND `1986` = 'a'", -3.5780557298649995], [" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND `1986` = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND `1986` = 'a'", -3.578293293], [" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND `1986` = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND `1986` = 'a'", -3.579319519139], [" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND 1988 = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND 1988 = 'a'", -4.471390976998999], [" SELECT COUNT(*) FROM w WHERE tournament = 'australian open' AND 1988 = 'a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND 1988 = 'a'", -4.4879990933050005], [" SELECT SUM(CAST(`australian open` AS INT)) FROM w WHERE `australian open` LIKE '%a%'\nNeuralSQL2: SELECT SUM(CAST(wimbledon AS INT)) FROM w WHERE wimbledon LIKE '%a%'", -9.110725149274995]]}, "166": {"question": "jim laker play in more match than any of the australian player", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT matches FROM w WHERE player = 'jim laker'", -0.43721031447000014], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.43724177263], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.43749186935999995], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.4378275038400001], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.43784142830999995], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.43789705065], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.43796915270000003], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.43798414557], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.43804217453999994], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.43817790246999994]]}, "191": {"question": "hong kong have win 4 more total medal than thailand for wushu", "gold_answer": 1, "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]], "1": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT total FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'thailand (tha)'", -2.3339857874399996], [" SELECT total FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'thailand (tha)'", -2.3351426802899993], [" SELECT total FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'thailand (tha)'", -2.3365353631200008], [" SELECT SUM(total) FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'thailand (tha)'", -2.39908357996], [" SELECT SUM(total) FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'thailand (tha)'", -2.4148792010399998], [" SELECT SUM(total) FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'thailand (tha)'", -2.414899362985], [" SELECT SUM(total) FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'thailand (tha)'", -2.4171373630199997], [" SELECT SUM(total) FROM w WHERE nation LIKE '%hong kong%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%thailand%'", -3.219229730459999], [" SELECT SUM(total) FROM w WHERE nation LIKE '%hong kong%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%thailand%'", -3.22619292336], [" SELECT SUM(total) FROM w WHERE nation LIKE '%hong kong%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%thailand%'", -3.2484197017]]}, "246": {"question": "there be a difference of 31521 crowd , from the lowest to the highest and lowest fan in attendance", "gold_answer": 1, "pred_answer": {"0": [[31521], [31521], [31521], [31521], [31521], [31521], [31521], [31521], [31521], [31521]]}, "nsql": [[" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.7717465962], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.77183477542], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.77183998553], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.7719384561499999], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.7737217095500001], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.7738873124700001], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.7768825618199999], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.7772612088599999], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.77741277365], [" SELECT MAX(attendance) - MIN(attendance) FROM w", -0.77778512299]]}, "299": {"question": "england , australia and the united state have the same number of player in the 1981 open championship with 5 each", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.756210814093], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7565677455770006], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7570262055619998], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7573558185719997], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7573881799359999], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7576654316419997], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7576974834569999], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7580146393610001], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7586193456789998], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'australia'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7609706135940003]]}, "324": {"question": "less than 3 team hold a minus goal difference , while more than 5 have score more goal against them", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[9], [9], [9], [9], [9], [9], [9], [9], "<error>", [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > played", -2.343757083485], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > played", -2.343788288275], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > played", -2.349545361675], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > played", -2.351213468636], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > played", -2.366219584304], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > played", -2.3673015938899997], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > played", -2.36856661605], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > played", -2.372361124546], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > scored", -3.23779666329], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE against > (SELECT SUM(against) FROM w) / (SELECT COUNT(*) FROM w)", -8.94787240775]]}, "349": {"question": "the boston celtic lose more game than they win in the 1984 - 1985 season", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -3.077723234039674], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -3.08007934584467], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -3.081370521298871], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -3.0862294475407728], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -3.0873684567661717], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -3.089052990283871], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -3.0892801061728687], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -3.0952355374011695], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) < CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-')", -4.522339142298798], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -7.7800611605963]]}, "374": {"question": "there be fewer win result than loss result", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.3575745515299999], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.35825955132000004], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.35869290754999994], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.35876376503999996], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.35878276371], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.35886434953999996], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.35903576821], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.35913014012000005], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.3592501469800001], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.36711315317999993]]}, "399": {"question": "there be 4 team that score exactly 12 against cambridge university", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE against = 12", -1.6619384688999999], [" SELECT COUNT(*) FROM w WHERE against = 12", -1.66873349364], [" SELECT COUNT(*) FROM w WHERE against = 12", -1.6722473837999998], [" SELECT COUNT(*) FROM w WHERE `against` = 12", -1.94279403313], [" SELECT COUNT(*) FROM w WHERE opposing team = 'cambridge university' AND against = 12", -2.3838009677000005], [" SELECT COUNT(*) FROM w WHERE against = 12 AND opposing team = 'cambridge university'", -3.17379603833], [" SELECT COUNT(*) FROM w WHERE against = 12 AND opposing team = 'cambridge university'", -3.177055395499999], [" SELECT COUNT(*) FROM w WHERE against = 12 AND opposing team = 'cambridge university'", -3.1862472499], [" SELECT COUNT(*) FROM w WHERE `against` = 12 AND `opposing team` = 'cambridge university'", -3.4221456347499997], [" SELECT COUNT(*) FROM w WHERE `against` = 12 AND `opposing team` = 'cambridge university'", -3.4233615322]]}, "421": {"question": "shane hall run more race on the hensley race than any of this other team", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], "<error>", [57]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `team (s)` = 'hensley racing'", -2.1049018404], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'hensley racing'", -2.1054828862], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'hensley racing'", -2.1090359249], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'hensley racing'", -2.1098010344], [" SELECT COUNT(*) FROM w WHERE team (s) = 'hensley racing'", -2.1416393584000004], [" SELECT COUNT(*) FROM w WHERE team (s) = 'hensley racing'", -2.1929979630999994], [" SELECT COUNT(*) FROM w WHERE team (s) = 'hensley racing'", -2.1942794384999997], [" SELECT COUNT(*) FROM w WHERE team (s) = 'hensley racing'", -2.1949491960999996], [" SELECT COUNT(*) FROM w WHERE team(s) = 'hensley racing'", -3.4099513416], [" SELECT SUM(races) FROM w WHERE `team (s)` LIKE '%hensley racing%'", -3.58210977464]]}, "507": {"question": "william malone never direct after season 6", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director (s) = 'william malone' AND season > 6", -2.5585640105999996], [" SELECT COUNT(*) FROM w WHERE director (s) = 'william malone' AND season > 6", -2.5595940546000002], [" SELECT COUNT(*) FROM w WHERE director (s) = 'william malone' AND season > 6", -2.5719957513300007], [" SELECT COUNT(*) FROM w WHERE director (s) = 'william malone' AND season > 6", -2.5743549744000003], [" SELECT COUNT(*) FROM w WHERE `director (s)` = 'william malone' AND `season` > 6", -3.69636091452], [" SELECT COUNT(*) FROM w WHERE `director (s)` = 'william malone' AND `season` > 6", -3.71328630048], [" SELECT COUNT(*) FROM w WHERE director (s) = 'william malone' AND series > 28", -4.10380806016], [" SELECT COUNT(DISTINCT title) FROM w WHERE `director (s)` = 'william malone' AND season > 6", -5.845947277407999], [" SELECT COUNT(DISTINCT title) FROM w WHERE `director (s)` = 'william malone' AND `season` > 6", -7.0385972381499995], [" SELECT COUNT(*) FROM w WHERE director (s) = 'william malone' AND season > 6\nQ2: there are {how many = a2} episodes directed by robert englund.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director (s) = 'robert englund'\nQ3: the number of episodes written by thomas lazarus is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE writer (s) = 'thomas lazarus'\nQ4: the number of episodes written by thomas lazarus is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*)", -29.949693770822815]]}, "514": {"question": "there be no building with less than 196 feet", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE feet < 196", -0.6082574984699999], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.60863255465], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.60885800901], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.6094732265399999], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.60970394127], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.6104611963000001], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.6111322576499999], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.6114767050700001], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.61160431651], [" SELECT COUNT(*) FROM w WHERE feet < 196", -0.61329918734]]}, "532": {"question": "katie kansa coach 1 episode", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[15]], "3": ["<error>"], "4": [[15]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE coach = 'katie kansas'", -1.0045089383], [" SELECT COUNT(*) FROM w WHERE coach = 'katie kansas'", -1.00780028446], [" SELECT COUNT(*) FROM w WHERE coach = 'katie kansas'", -1.0094860870099998], [" SELECT COUNT(*) FROM w WHERE coach = 'katie kansas'", -1.0116319588], [" SELECT COUNT(*) FROM w WHERE coach = 'katie kansas'", -1.01211244443], [" SELECT COUNT(*) FROM w WHERE coach = 'katie kansas'", -1.0133619473299997], [" SELECT COUNT(*) FROM w WHERE coach = 'katie kansas'", -1.0181855102700001], [" SELECT COUNT(*) FROM w WHERE coach LIKE '%katie kansas%'", -1.73778363777], [" SELECT COUNT(*) FROM w WHERE coach LIKE '%katie kansas%'", -1.7397629971400004], [" SELECT COUNT(*) FROM w WHERE coach = 'katie kansas'\nQ2: {how many = a2} episode summary contains the word \"made\".\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `episode summary` LIKE '%made%'\nQ3: {how many = a3} episode summary contains the word \"made\" and the word \"into\".\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `episode summary` LIKE '%made%' AND `episode summary` LIKE '%into%'\nQ4: {how many = a4} episode summary contains the word \"made\" and the word \"into\" and the word \"an", -30.40014994280899]]}, "557": {"question": "the total for the rank 7 be 2 and the bronze be 1", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.5575511843850002], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.55759507557], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.5583322619150001], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.5587253645450002], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.5591310550750004], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.5594298826349999], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.5594374249110001], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.5597403748649998], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.5599700866649999], [" SELECT total FROM w WHERE rank = 7\nNeuralSQL2: SELECT bronze FROM w WHERE rank = 7", -0.560111527765]]}, "582": {"question": "there be more than 1 season finale on may 26 , 2010", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.22578741786], [" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.22595207006], [" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.2263166629800002], [" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.2263171009800002], [" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.2264219547599995], [" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.2264221397599995], [" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.2267311596200001], [" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.2273096715999998], [" SELECT COUNT(*) FROM w WHERE `season finale` = '2010-05-26 00:00:00'", -1.22805302236], [" SELECT COUNT(*) FROM w WHERE `season finale` LIKE '2010-05-26%'", -3.24495964746]]}, "13": {"question": "though 4 player from belgian first division a be in the top 19 scorer , the top scorer (matias suarez) have 5 fewer goal than bart goor , who have 11 goal", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [18], [18], [0], [0], [18], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE league >= 19\nNeuralSQL2: SELECT league - (SELECT league FROM w WHERE player = 'bart goor') FROM w WHERE player = 'matias suarez'", -6.331160732980001], [" SELECT COUNT(*) FROM w WHERE league > 19\nNeuralSQL2: SELECT league - (SELECT league FROM w WHERE player = 'bart goor') FROM w WHERE player = 'matias suarez'", -6.70617448516], [" SELECT COUNT(*) FROM w WHERE league > 0 AND league < 20\nNeuralSQL2: SELECT league - (SELECT league FROM w WHERE player = 'bart goor') FROM w WHERE player = 'matias suarez'", -7.896278111969997], [" SELECT COUNT(*) FROM w WHERE league > 0 AND league < 20\nNeuralSQL2: SELECT league - (SELECT league FROM w WHERE player = 'bart goor') FROM w WHERE player = 'matias suarez'", -7.916986411369999], [" SELECT COUNT(*) FROM w WHERE league > 19\nNeuralSQL2: SELECT (league - (SELECT league FROM w WHERE player = 'bart goor')) FROM w WHERE player = 'matias suarez'", -8.054569836150003], [" SELECT COUNT(*) FROM w WHERE league > 19\nNeuralSQL2: SELECT (league - (SELECT league FROM w WHERE player = 'bart goor')) FROM w WHERE player = 'matias suarez'", -8.064998038600002], [" SELECT COUNT(*) FROM w WHERE league > 0 AND league < 19\nNeuralSQL2: SELECT league - (SELECT league FROM w WHERE player = 'bart goor') FROM w WHERE player = 'matias suarez'", -8.78126715948], [" SELECT COUNT(*) FROM w WHERE league >= 19 AND league <= 1\nNeuralSQL2: SELECT league - (SELECT league FROM w WHERE player = 'bart goor') FROM w WHERE player = 'matias suarez'", -10.920152544329998], [" SELECT COUNT(DISTINCT player) FROM w WHERE league >= 19\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'matias suarez' AND league < (SELECT league FROM w WHERE player = 'bart goor')", -10.987253420933], [" SELECT COUNT(*) FROM w WHERE league > 19\nNeuralSQL2: SELECT CAST(SUBSTR(player, INSTR(player, ' ') + 1, LENGTH(player) - (INSTR(player, ' ') + 1)) AS INT) - CAST(SUBSTR(player, 1, INSTR(player, ' ') - 1) AS INT) FROM w WHERE player = 'bart goor'", -14.846886740380002]]}, "38": {"question": "west germany have 2 of the top 6 but do not have anyone win a medal", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 3", -3.1600440604100006], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 3", -3.1614294838980004], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 3", -3.1625331402240002], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 3", -3.16544854434], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 3", -3.1662806160020005], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 3", -3.1667844014899997], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 3", -3.168262862572], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 3", -3.169197446596], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank < 7\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank < 4", -4.457570685829], [" SELECT COUNT(*) FROM w WHERE `name` LIKE '%west germany%' AND `rank` <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `name` LIKE '%west germany%' AND `rank` <= 3", -10.293631635990003]]}, "90": {"question": "usc and clemson college have the most player draft at 3 each", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5891854584699998], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5899745447], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5900353016700001], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5900678253100001], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5907586092260002], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5909107235240001], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5923146155199999], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5932576005100002], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5937755855], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.5940718150999998]]}, "146": {"question": "all of the translator be class d", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.6303304495000001], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.63055276547], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.63096603983], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.631266580425], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.6322303315000001], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.63260319354], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.6330874251099999], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.6340725549999999], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.63508643146], [" SELECT COUNT(*) FROM w WHERE class = 'd'", -0.63542267397]]}, "171": {"question": "the toronto blue jay win 2 of the last 3 game they play in may 1991", "gold_answer": 1, "pred_answer": {"0": [[27], [27], [27], [27], [0], [27], [0], [0], [0], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' ORDER BY date DESC LIMIT 3", -6.5412459163899985], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -8.3794710120467], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -8.386400661136602], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -8.3952213799907], [" SELECT COUNT(*) FROM w WHERE date >= '1991-05-27' AND date <= '1991-05-29' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -13.169796457203507], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, ' - ') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) ORDER BY date DESC LIMIT 3", -13.911034837341198], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'may %' AND `record` LIKE '% - % - %' AND (CAST(SUBSTR(`record`, 1, INSTR(`record`, '-') - 1) AS INT) - CAST(SUBSTR(`record`, INSTR(`record`, '-') + 1, LENGTH(`record`) - (INSTR(`record`, ' - ') + 1)) AS INT)) > 0", -14.233837164310605], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 05 - %' AND `score` LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0 LIMIT 3", -14.618263142071942], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND LENGTH(score) - LENGTH(REPLACE(score, ' - ', '')) = 2 AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -16.548005020894706], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND (row_id >= (SELECT COUNT(*) FROM w) - 3) AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -17.317213590351]]}, "183": {"question": "amy sherman - palladino and daniel palladino direct 2 episode together", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [2], [2], [0], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman - palladino%' AND director LIKE '%daniel palladino%'", -2.93351146829], [" SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman - palladino%' AND director LIKE '%daniel palladino%'", -2.9479849460499983], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND writer (s) LIKE '%daniel palladino%'", -3.9972437164200003], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND writer (s) LIKE '%daniel palladino%'", -4.00056988093], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND writer (s) LIKE '%daniel palladino%'", -4.00176494238], [" SELECT COUNT(*) FROM w WHERE writer (s) LIKE '%amy sherman - palladino%' AND writer (s) LIKE '%daniel palladino%'", -4.119080644454997], [" SELECT COUNT(*) FROM w WHERE writer (s) LIKE '%amy sherman - palladino%' AND writer (s) LIKE '%daniel palladino%'", -4.130347735490001], [" SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman-palladino%' AND director LIKE '%daniel palladino%'", -5.519790543309999], [" SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman - palladino%daniel palladino%' OR director LIKE '%daniel palladino%amy sherman - palladino%'", -5.717202724164], [" SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman - palladino%' AND director LIKE '%daniel palladino%'\n```", -5.990803022780001]]}, "196": {"question": "hong kong have win 4 more bronze medal than thailand for wushu", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT bronze FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'thailand (tha)'", -2.0363810784550003], [" SELECT bronze FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'thailand (tha)'", -2.03732191863], [" SELECT bronze FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'thailand (tha)'", -2.0436815104860004], [" SELECT bronze FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'thailand (tha)'", -2.045529015576], [" SELECT bronze FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'thailand (tha)'", -2.0456262237600003], [" SELECT bronze FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'thailand (tha)'", -2.04706570723], [" SELECT bronze FROM w WHERE nation = 'hong kong (hkg)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'thailand (tha)'", -2.05148019292], [" SELECT bronze FROM w WHERE nation LIKE '%hong kong%'\nNeuralSQL2: SELECT bronze FROM w WHERE nation LIKE '%thailand%'", -3.1612071580000007], [" SELECT bronze FROM w WHERE nation LIKE '%hong kong%'\nNeuralSQL2: SELECT bronze FROM w WHERE nation LIKE '%thailand%'", -3.1924444490640007], [" SELECT SUM(bronze) FROM w WHERE nation LIKE '%hong kong%'\nNeuralSQL2: SELECT SUM(bronze) FROM w WHERE nation LIKE '%thailand%'", -3.7570492694129993]]}, "221": {"question": "mike clattenburg direct one more episode than steve scaini", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.8673027557200002], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.8698402739820001], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.8703854599300003], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.87062572069], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.8717343217950003], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.87306586916], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.87511008995], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.8752334452549999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'", -0.8753280566479998], [" SELECT COUNT(DISTINCT title) FROM w WHERE `directed by` = 'mike clattenburg'\nNeuralSQL2: SELECT COUNT(DISTINCT title) FROM w WHERE `directed by` = 'steve scaini'", -3.4223872457963984]]}, "276": {"question": "alberto pagani have only win with 2 team : linto and mv agusta , all before 1967", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.3859444367010005], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.4162189379945], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.4192449738265], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.4214171710088], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.4228634213199998], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.4239034599813], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.4250914240294996], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.426469621107499], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0\nNeuralSQL2: SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -2.426846987602], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wins = 1", -5.448863609739999]]}, "329": {"question": "\u62c5 / \u64d4 be 1 of 3 character that have a metric value measure in kg", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '% kg'", -2.7676567561466707], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.7826645910743206], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '% kg'", -2.7959268901476695], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '% kg'", -2.7997223055526708], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '% kg'", -2.8083523028699395], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '% kg'", -2.8173485045626694], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.836029037139319], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.843827810897322], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.861994452132319], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '%kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '%kg'", -3.8697927246839394]]}, "354": {"question": "of the 3 different position georgia and penn state contribute 2 of the same", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'penn state'", -1.2455627943836998], [" SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'penn state'", -1.2496154062224], [" SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'penn state'", -1.2538574846354], [" SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'penn state'", -1.2568264044382003], [" SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'penn state'", -1.2615677871237], [" SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'penn state'", -1.2674502434442008], [" SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'penn state'", -1.2675862776737], [" SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE school / club team = 'penn state'", -1.2681958735874006], [" SELECT COUNT(DISTINCT position) FROM w WHERE `school / club team` = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT position) FROM w WHERE `school / club team` = 'penn state'", -2.4531778250491993], [" SELECT COUNT(DISTINCT(position)) FROM w WHERE school / club team = 'georgia'\nNeuralSQL2: SELECT COUNT(DISTINCT(position)) FROM w WHERE school / club team = 'penn state'", -2.7622822237086995]]}, "379": {"question": "chauncey billups lead or be tie for the lead in assist for 10 out of 13 game", "gold_answer": 1, "pred_answer": {"0": [[10], [10], [10], [10], [1], [10], [10], [2], [9], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `high assists` LIKE '%chauncey billups%'", -2.9330473175099994], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE '%chauncey billups%'", -2.937574246050001], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE 'chauncey billups%'", -4.05499438561], [" SELECT COUNT(*) FROM w WHERE (high assists LIKE '%chauncey billups%' OR high assists LIKE 'chauncey billups%' OR high assists LIKE '%chauncey billups')", -6.162505326285], [" SELECT COUNT(*) FROM w WHERE (high assists LIKE 'chauncey billups , %' OR high assists LIKE '% , chauncey billups')", -7.098711260320001], [" SELECT COUNT(*) FROM w WHERE high assists LIKE '%chauncey billups%' OR high assists LIKE 'chauncey billups%' OR high assists LIKE '%chauncey billups'", -7.137202734420001], [" SELECT COUNT(DISTINCT game) FROM w WHERE (high assists LIKE 'chauncey billups%' OR high assists LIKE '%chauncey billups%')", -8.4163340305387], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE 'chauncey billups , %' OR `high assists` LIKE '%, chauncey billups' OR `high assists` = 'chauncey billups'", -9.144053708059998], [" SELECT COUNT(*) FROM w WHERE (high assists LIKE '%chauncey billups%' OR high assists LIKE 'chauncey billups%' OR high assists LIKE '%chauncey billups') AND high assists NOT LIKE '% , %'", -10.678091334720001], [" SELECT COUNT(*) FROM w WHERE (high assists LIKE '%chauncey billups%' OR high assists LIKE 'chauncey billups%' OR high assists LIKE '%chauncey billups') AND (high assists NOT LIKE '%chauncey billups%' OR high assists NOT LIKE 'chauncey billups%' OR high assists NOT LIKE '%chauncey billups')", -13.558509304105003]]}, "404": {"question": "glasgow govan be 1 the 4 constituency with result as snp gain", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.2617883988299996], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.26214496313], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.26317075708], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.2690616993499995], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.2727400163599998], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.27836555913], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.27887850533], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.3087927129799997], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.3093080713799998], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'\n\"\"\"", -5.10064619331]]}, "429": {"question": "south korea be the only country to have host equestrian at the asian game more than 1 time , in seoul and doha (and incheon , but that be only find elsewhere on the source page)", "gold_answer": 1, "pred_answer": {"0": [[], [], [], [0], "<error>", "<error>", [0], [0], [0], [0]], "1": [[], [], [], [0], "<error>", "<error>", [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY location HAVING COUNT(*) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' GROUP BY location HAVING COUNT(*) > 1", -4.4491160588579985], [" SELECT COUNT(*) FROM w GROUP BY location HAVING COUNT(*) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' GROUP BY location HAVING COUNT(*) > 1", -4.449921924413999], [" SELECT COUNT(DISTINCT location) FROM w GROUP BY location HAVING COUNT(*) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' GROUP BY location HAVING COUNT(*) > 1", -5.2746395516770015], [" SELECT COUNT(DISTINCT location) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' AND location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)", -6.681372781031001], [" SELECT COUNT(DISTINCT location) FROM w WHERE COUNT(*) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' AND COUNT(*) > 1", -6.682737975510001], [" SELECT COUNT(DISTINCT location) FROM w WHERE COUNT(*) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' AND COUNT(*) > 1", -6.6839083507799995], [" SELECT COUNT(DISTINCT location) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1) AND location = 'south korea'", -6.828844745913997], [" SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1) AND location = 'south korea'", -7.470490812960001], [" SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1) AND location = 'south korea'", -7.505159165218], [" SELECT COUNT(DISTINCT location) FROM w WHERE row_id IN (SELECT row_id FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' AND row_id IN (SELECT row_id FROM w GROUP BY location HAVING COUNT(*) > 1)", -9.10958167394]]}, "451": {"question": "the packer score the least amount of point (6) in a game versus the lion", "gold_answer": 1, "pred_answer": {"0": [[], [], [], [130033], [0], [0], [], [], [0], [0]]}, "nsql": [[" SELECT attendance FROM w WHERE opponent = 'packers'", -2.6801015951300005], [" SELECT attendance FROM w WHERE opponent = 'packers'", -2.68408364713], [" SELECT attendance FROM w WHERE opponent = 'packers'", -2.69047125183], [" SELECT SUM(attendance) FROM w WHERE opponent = 'green bay packers'", -4.98542323508], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w WHERE opponent = 'green bay packers'", -5.5232178827], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w WHERE opponent = 'green bay packers'", -5.542383102189999], [" SELECT attendance FROM w WHERE opponent = 'packers' AND result LIKE 'w % - %'", -6.942778631830001], [" SELECT attendance FROM w WHERE opponent = 'packers' AND result LIKE '%lions%'", -7.472045233429999], [" SELECT COUNT(*) FROM w WHERE opponent = 'green bay packers' AND result LIKE '% - %' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) > CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)", -10.840503224839695], [" SELECT COUNT(*) FROM w WHERE opponent = 'green bay packers' AND result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) > CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT))", -11.262919884082]]}, "537": {"question": "the chicago bear be the loser against the green bay packer more than 10 time", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE loser = 'chicago bears' AND winner = 'green bay packers'", -1.4090988959800002], [" SELECT COUNT(*) FROM w WHERE loser = 'chicago bears' AND winner = 'green bay packers'", -1.4131897905000002], [" SELECT COUNT(*) FROM w WHERE loser = 'chicago bears' AND winner = 'green bay packers'", -1.41345592735], [" SELECT COUNT(*) FROM w WHERE loser = 'chicago bears' AND winner = 'green bay packers'", -1.41874198295], [" SELECT COUNT(*) FROM w WHERE loser = 'chicago bears' AND winner = 'green bay packers'", -1.41880823417], [" SELECT COUNT(*) FROM w WHERE winner = 'green bay packers' AND loser = 'chicago bears'", -1.43329415315], [" SELECT COUNT(*) FROM w WHERE winner = 'green bay packers' AND loser = 'chicago bears'", -1.4337094859800001], [" SELECT COUNT(*) FROM w WHERE winner = 'green bay packers' AND loser = 'chicago bears'", -1.4386711723699999], [" SELECT COUNT(*) FROM w WHERE winner = 'green bay packers' AND loser = 'chicago bears'", -1.4394416135], [" SELECT COUNT(*) FROM w WHERE winner = 'green bay packers' AND loser = 'chicago bears'", -1.4414060091199998]]}, "544": {"question": "on march 15 , 2007 and in region 4 , the highest number of episode be 4", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [null]]}, "nsql": [[" SELECT MAX(episodes) FROM w WHERE region 4 = '2007-03-15 00:00:00'", -2.52577698143], [" SELECT MAX(episodes) FROM w WHERE region 4 = '2007-03-15 00:00:00'", -2.52860689603], [" SELECT MAX(episodes) FROM w WHERE region 4 = '2007-03-15 00:00:00'", -2.52892425223], [" SELECT MAX(episodes) FROM w WHERE `region 4` LIKE '2007-03-15%'", -3.1045826781299994], [" SELECT MAX(episodes) FROM w WHERE `region 4` LIKE '2007-03-15%'", -3.10672440953], [" SELECT MAX(episodes) FROM w WHERE `region 4` LIKE '2007-03-15%'", -3.1073191203299997], [" SELECT MAX(episodes) FROM w WHERE `region 4` LIKE '2007-03-15%'", -3.10836039593], [" SELECT MAX(episodes) FROM w WHERE `region 4` LIKE '2007-03-15%'", -3.1199371035300003], [" SELECT MAX(episodes) FROM w WHERE `region 4` = '2007-03-15 00:00:00'", -3.4776278362299995], [" SELECT MAX(episodes) FROM w WHERE `region 4` LIKE '2007-03-15'", -6.170490049530001]]}, "562": {"question": "the team with 3 loss have 0 tie", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.5807645762579999], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.582285722575], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.582511398443], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.5827546663599998], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.5832506492030002], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.583295602103], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.5837174534579999], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.5838566434049999], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0", -0.5853541022999998], [" SELECT COUNT(*) FROM w WHERE losses = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses = 3 AND ties = 0\n```", -3.892875217218]]}, "587": {"question": "miguel zapata have the fewest number of goal with 17", "gold_answer": 1, "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]]}, "nsql": [[" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.569808301651], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.5730940519400001], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.573109186931], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.5731942596254999], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.5733190711430001], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.5733593939999999], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.574026212314], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.5746489156529998], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.5751644301139999], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.576961273019]]}, "18": {"question": "a majority of the people who score over par be from the united state", "gold_answer": 1, "pred_answer": {"0": [[1], [12], [12], [0], [7], [7], [7], [0], [12], [12]], "1": [[1], [9], [9], [0], [5], [5], [5], [0], [9], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `to par` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` > 0 AND country = 'united states'", -2.7929133331700005], [" SELECT COUNT(*) FROM w WHERE score LIKE '% + %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% + %' AND country = 'united states'", -4.118495020849999], [" SELECT COUNT(*) FROM w WHERE score LIKE '% + %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% + %' AND country = 'united states'", -4.132087274679999], [" SELECT COUNT(*) FROM w WHERE CAST(`to par` AS INT) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(`to par` AS INT) > 0 AND country = 'united states'", -4.696461548324], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`,'+','') AS INT) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`,'+','') AS INT) > 0 AND country = 'united states'", -4.9426996372069985], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`,'+','') AS INT) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`,'+','') AS INT) > 0 AND country = 'united states'", -4.948376396697997], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`,'+','') AS INT) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`,'+','') AS INT) > 0 AND country = 'united states'", -4.949034562912002], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`to par`, 1, 1) AS INT) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`to par`, 1, 1) AS INT) > 0 AND country = 'united states'", -6.435143011308997], [" SELECT COUNT(*) FROM w WHERE CAST(score AS INT) > CAST(`to par` AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(score AS INT) > CAST(`to par` AS INT) AND country = 'united states'", -6.537500419956], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(score, INSTR(score, '=') + 2, LENGTH(score) - (INSTR(score, '=') + 2)) AS INT) > CAST(SUBSTR(to par, INSTR(to par, '=') + 2, LENGTH(to par) - (INSTR(to par, '=') + 2)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(score, INSTR(score, '=') + 2, LENGTH(score) - (INSTR(score, '=') + 2)) AS INT", -13.708525920853]]}, "43": {"question": "only 1 person have be a member of the party of labour of albania political party and be elect", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [0], [0], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania'", -1.04083882078], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania'", -1.042345666014], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania'", -1.042791495974], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania'", -1.0443777356700001], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania'", -1.0451340563099998], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania'", -1.04708570802], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania' AND term start != 'term start'", -4.62769302055], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania' AND term start != 'term start'", -4.62773944142], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania' AND term start != 'term start'", -4.657201572199999], [" SELECT COUNT(*) FROM w WHERE political party = 'party of labour of albania' AND term start != 'prime ministers 1991 onwards'", -4.7610088497100005]]}, "68": {"question": "none of the viral disease have a spherical virion shape", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.9495353977300001], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.9509958275], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.9516433406299999], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.9518741506699999], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.9518983477700003], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.9529691076299999], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.95592732249], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.95732244435], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -0.9590391397100001], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'spherical'", -1.36145027979]]}, "120": {"question": "the solheim cup be host outside the us on 7 occasion from 1990 - 2013", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue NOT LIKE '% , usa'", -3.449005186924], [" SELECT COUNT(*) FROM w WHERE venue NOT LIKE '% , usa'", -3.4498931217239996], [" SELECT COUNT(*) FROM w WHERE venue NOT LIKE '% , usa'", -3.453233821764], [" SELECT COUNT(*) FROM w WHERE venue NOT LIKE '% , usa'", -3.455557090793999], [" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue NOT LIKE '%usa%'", -4.819635552923999], [" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue NOT LIKE '%usa%'", -4.825200553864], [" SELECT COUNT(*) FROM w WHERE venue NOT LIKE '%usa%' AND year BETWEEN 1990 AND 2013", -5.458694056793999], [" SELECT COUNT(*) FROM w WHERE venue NOT LIKE '%usa%' AND year BETWEEN 1990 AND 2013", -5.480711014484], [" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue NOT LIKE '% , usa'", -5.638230428073999], [" SELECT COUNT(*) FROM w WHERE `venue` NOT LIKE '%usa%' AND `year` BETWEEN 1990 AND 2013", -7.664118982674]]}, "176": {"question": "the toronto blue jays lose 1 consecutive game between the 25th and the 28 may 1991", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [0], [0], [0], [0], [3], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date >= 'may 25' AND date <= 'may 28' AND loss IS NOT NULL", -6.88478901977], [" SELECT COUNT(*) FROM w WHERE date >= 'may 25' AND date <= 'may 28' AND loss IS NOT NULL", -6.903476708269999], [" SELECT COUNT(*) FROM w WHERE date >= 'may 25' AND date <= 'may 28' AND loss IS NOT NULL", -6.9120666981699985], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1991-05-25' AND '1991-05-28' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -7.543907296341999], [" SELECT COUNT(*) FROM w WHERE `date` >= '1991-05-25' AND `date` <= '1991-05-28' AND loss IS NOT NULL", -7.806710140270002], [" SELECT COUNT(*) FROM w WHERE date BETWEEN 'may 25' AND 'may 28' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -7.862815260376995], [" SELECT COUNT(*) FROM w WHERE date BETWEEN 'may 25' AND 'may 28' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -7.880290523640995], [" SELECT COUNT(*) FROM w WHERE date >= 'may 25' AND date <= 'may 28' AND loss != 'n / a'", -9.67939779157], [" SELECT COUNT(*) FROM w WHERE date BETWEEN 'may 25' AND 'may 28' AND loss LIKE '% - %' AND (CAST(SUBSTR(loss, 1, INSTR(loss, '-') - 1) AS INT) - CAST(SUBSTR(loss, INSTR(loss, '-') + 1, LENGTH(loss) - (INSTR(loss, ' - ') + 1)) AS INT)) > 0", -11.093312774141], [" SELECT COUNT(*) FROM w WHERE date >= '1991-05-25' AND date <= '1991-05-28' AND `loss` LIKE '% ( % - % ) '", -12.32260219137]]}, "201": {"question": "rodney stuckey lead the detroit piston in point core in only 1 game during this period of the 2010 - 2011 season", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [0], [0], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high points LIKE '%rodney stuckey%'", -2.1258251853599996], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%rodney stuckey%'", -2.136157196019999], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%rodney stuckey%'", -2.14044882175], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%rodney stuckey%'", -2.1446219530899997], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%rodney stuckey%'", -2.53561634363], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%rodney stuckey%'", -2.54361362725], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%rodney stuckey%'", -2.55568145989], [" SELECT COUNT(*) FROM w WHERE high points = 'rodney stuckey'", -2.72813087778], [" SELECT COUNT(*) FROM w WHERE `high points` = 'rodney stuckey'", -2.8440393098959995], [" SELECT COUNT(*) FROM w WHERE high points LIKE 'rodney stuckey%'", -3.08269179222]]}, "213": {"question": "25 - 26 january 2003 and 12 - 13 july 2003 be the only game play in 2003", "gold_answer": 1, "pred_answer": {"0": [[2], [0], [2], [0], [0], [0], [0], [0], [0], [0]], "1": [[2], [2], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '%2003%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '%2003%'", -5.3876432454969985], [" SELECT COUNT(*) FROM w WHERE date LIKE '2003%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '%2003%'", -5.9815619612400015], [" SELECT COUNT(*) FROM w WHERE season LIKE '%2003%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season LIKE '%2003%' AND (date LIKE '%2003-1-25%' OR date LIKE '%2003-1-26%' OR date LIKE '%2003-7-12%' OR date LIKE '%2003-7-13%')", -7.995172018199998], [" SELECT COUNT(*) FROM w WHERE date LIKE '2003-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2003-%-%' AND (date LIKE '%-1-25%' OR date LIKE '%-1-26%' OR date LIKE '%-7-12%' OR date LIKE '%-7-13%')", -9.211148202990003], [" SELECT COUNT(*) FROM w WHERE date LIKE '2003%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2003%-%-%' AND (date LIKE '%-1-25%' OR date LIKE '%-1-26%' OR date LIKE '%-7-12%' OR date LIKE '%-7-13%')", -9.984922133334003], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2003-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2003-%-%' AND (`date` LIKE '%-1-25%' OR `date` LIKE '%-1-26%' OR `date` LIKE '%-7-12%' OR `date` LIKE '%-7-13%')", -10.024425706860002], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2003%-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2003-%-25' OR `date` LIKE '2003-%-26' OR `date` LIKE '2003-%-12' OR `date` LIKE '2003-%-13'", -10.624059252207], [" SELECT COUNT(*) FROM w WHERE date LIKE '2003%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2003%' AND (date LIKE '%25 january%' OR date LIKE '%26 january%' OR date LIKE '%12 july%' OR date LIKE '%13 july%')", -11.095949775943003], [" SELECT COUNT(*) FROM w WHERE date LIKE '2003-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2003-%-%' AND (date LIKE '%25 - 26 january%' OR date LIKE '%12 - 13 july%')", -12.224058889990001], [" SELECT COUNT(*) FROM w WHERE date LIKE '2003%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '%2003-%-%-%' AND (date LIKE '2003-1-25%' OR date LIKE '2003-1-26%' OR date LIKE '2003-7-12%' OR date LIKE '2003-7-13%')", -13.787765612130002]]}, "226": {"question": "steve scaini direct one more episode than mike clattenburg", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -1.2803428747260004], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -1.2812594406519995], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -1.281339522953], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -1.2815434455620003], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -1.283073469882], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -1.2836028345350001], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -1.2840209031109997], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -1.2855198741369998], [" SELECT COUNT(*) FROM w WHERE `directed by` LIKE '%steve scaini%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `directed by` LIKE '%mike clattenburg%'", -2.923580747946001], [" SELECT COUNT(DISTINCT title) FROM w WHERE `directed by` = 'steve scaini'\nNeuralSQL2: SELECT COUNT(DISTINCT title) FROM w WHERE `directed by` = 'mike clattenburg'", -3.8294297794696996]]}, "251": {"question": "the giant have play more game than the cardinal for the month of september", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.971265278153], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.9727517222230001], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.974632071483], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.974654331873], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.974947586933], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.9771436548639998], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.9775871965440001], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.9782450286639998], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'cardinals'", -0.9789871271050002], [" SELECT COUNT(DISTINCT date) FROM w WHERE opponent = 'giants'\nNeuralSQL2: SELECT COUNT(DISTINCT date) FROM w WHERE opponent = 'cardinal'", -4.444678756683]]}, "306": {"question": "brook lopez lead the team in both point and rebound in a single game 3 different time", "gold_answer": 1, "pred_answer": {"0": ["<error>", "<error>", "<error>", [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high points = high rebounds", -2.13723559553], [" SELECT COUNT(*) FROM w WHERE high points = high rebounds", -2.16022608701], [" SELECT COUNT(*) FROM w WHERE high points = high rebounds", -2.1663276370299998], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez' AND high rebounds = 'brook lopez'", -2.4166311495400006], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez' AND high rebounds = 'brook lopez'", -2.41958150466], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez' AND high rebounds = 'brook lopez'", -2.41993623788], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez' AND high rebounds = 'brook lopez'", -2.4211736905400003], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez' AND high rebounds = 'brook lopez'", -2.42297469661], [" SELECT COUNT(*) FROM w WHERE `high points` = 'brook lopez' AND `high rebounds` = 'brook lopez'", -3.1458049906899994], [" SELECT COUNT(*) FROM w WHERE high points = high rebounds AND high points = 'brook lopez'", -4.0957951669299995]]}, "359": {"question": "after 2000 , only brazil and england contribute 1 player to the utah jazz", "gold_answer": 0, "pred_answer": {"0": [[0], [5], [1], [1], [1], [1], [5], [0], [1], [0]], "1": [[0], [1], "<error>", [1], [1], "<error>", [3], [1], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE school / club team LIKE '%2000%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE school / club team LIKE '%2000%'", -8.965921102683998], [" SELECT COUNT(*) FROM w WHERE years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) - CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT)) > 0", -9.2755016498724], [" SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) > 2000\nNeuralSQL2: SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 2000", -11.005275755225295], [" SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 2000\nNeuralSQL2: SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz", -11.383582135857996], [" SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) > 2000)\nNeuralSQL2: SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 2000)", -11.603299801123004], [" SELECT COUNT(*) FROM w WHERE years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) > 2000)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 2000)", -11.703816002602002], [" SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) - CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for", -11.8243266896332], [" SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '%-%' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, '-') + 1)) AS INT) > 2000\nNeuralSQL2: SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '%-%' AND CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) > 2000", -12.612388751008], [" SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND CAST(SUBSTR(years for jazz, LENGTH(years for jazz) - 3, 4) AS INT) > 2000\nNeuralSQL2: SELECT COUNT(DISTINCT school / club team) FROM w WHERE years for jazz LIKE '% - %' AND CAST(SUBSTR(years for jazz, 1, 4) AS INT) > 2000", -12.612522942882702], [" SELECT COUNT(DISTINCT school / club team) FROM w WHERE school / club team LIKE '% - %' AND (CAST(SUBSTR(school / club team, 1, INSTR(school / club team, '-') - 1) AS INT) > 2000)\nNeuralSQL2: SELECT COUNT(DISTINCT school / club team) FROM w WHERE school / club team LIKE '% - %' AND (CAST(SUBSTR(school / club team, INSTR(school / club team, '-') + 1, LENGTH(school / club team) - (INSTR(school / club team, ' - ') + 1)) AS INT) >", -13.881698625641816]]}, "384": {"question": "stephen jackson lead the team in point for the most game", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high points = 'stephen jackson'", -1.9732351452899999], [" SELECT COUNT(*) FROM w WHERE high points = 'stephen jackson'", -1.9758672913240003], [" SELECT COUNT(*) FROM w WHERE high points = 'stephen jackson'", -1.9776241360299998], [" SELECT COUNT(*) FROM w WHERE high points = 'stephen jackson'", -1.9799797316], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%stephen jackson%'", -2.6899131833399994], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%stephen jackson%'", -2.69500074808], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%stephen jackson%'", -2.71062798453], [" SELECT COUNT(*) FROM w WHERE high points LIKE 'stephen jackson%'", -3.2370153141700007], [" SELECT COUNT(*) FROM w WHERE high points LIKE 'stephen jackson (%'", -5.94988990714], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE 'stephen jackson (%%'", -6.64832082821]]}, "409": {"question": "there be 5 player that be from the united state", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.53439249764], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.53463298564], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.53500663884], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.5413717770400001], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.54162107824], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.54167979904], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.5427256218400001], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.54315830644], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.54328914574], [" SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.54349482544]]}, "434": {"question": "the 49ers play the los angeles don 2 time in the 1947 season", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.38922674660600004], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.38961886566], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.38978566859999997], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.39024280993000005], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.39063579178], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.391075828105], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.39114077642399997], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.39118802065], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.39132300831399996], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.39134428359000006]]}, "459": {"question": "the wildcat keep the oppose team scoreless in 10 game", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.67552754815], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.6760624525000001], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.6761089166300001], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.67627329013], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.6771964308999998], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.67794899461], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.67880030858], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.67964010438], [" SELECT COUNT(*) FROM w WHERE `opponents` = 0", -2.13598405708], [" SELECT COUNT(*) FROM w WHERE `opponents` = 0", -2.1397965121999993]]}, "481": {"question": "quentin be the only person to be a police officer in the cube", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -0.939012240425], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -0.9394355098299999], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -0.9418416067279999], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -0.9420790173729999], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -0.9437676949880003], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -0.9441354220449999], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -0.944337077379], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -0.9467832676240002], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE occupation = 'police officer' AND name = 'quentin'", -2.3513641258379994], [" SELECT COUNT(DISTINCT name) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -4.073451014315]]}, "567": {"question": "australia do not receive any gold medal", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[12]], "5": ["<error>"], "6": [[3]], "7": ["<error>"], "8": [[26]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'australia'", -0.63316606187], [" SELECT gold FROM w WHERE nation = 'australia'", -0.63324864855], [" SELECT gold FROM w WHERE nation = 'australia'", -0.63395244319], [" SELECT gold FROM w WHERE nation = 'australia'", -0.63492691915], [" SELECT gold FROM w WHERE nation = 'australia'", -0.6352834777699999], [" SELECT gold FROM w WHERE nation = 'australia'", -0.63595547647], [" SELECT gold FROM w WHERE nation = 'australia'", -0.63675327151], [" SELECT gold FROM w WHERE nation = 'australia'", -0.6370716945599999], [" SELECT gold FROM w WHERE nation = 'australia'", -0.6376232452], [" SELECT gold FROM w WHERE nation = 'australia'\nQ2: france received {how many = a2} medals.\nNeuralSQL2: SELECT total FROM w WHERE nation = 'france'\nQ3: the number of countries received {how many = a3} medals.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE total = 1\nQ4: the number of countries received {how many = a4} medals.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE total = 2\nQ5: the number of countries received {how many = a5} medals.\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE total", -26.989485413052023]]}, "574": {"question": "only 1 game be play on november 27", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` = 'november 27'", -1.2095375815100002], [" SELECT COUNT(*) FROM w WHERE `date` = 'november 27'", -1.20983689331], [" SELECT COUNT(*) FROM w WHERE `date` = 'november 27'", -1.21063332306], [" SELECT COUNT(*) FROM w WHERE `date` = 'november 27'", -1.2154760020400004], [" SELECT COUNT(*) FROM w WHERE date = 'november 27'", -1.28607574442], [" SELECT COUNT(*) FROM w WHERE date = 'november 27'", -1.2916585458600003], [" SELECT COUNT(*) FROM w WHERE date = 'november 27'", -1.2921247397], [" SELECT COUNT(*) FROM w WHERE date = 'november 27'", -1.2943261904], [" SELECT COUNT(*) FROM w WHERE date = 'november 27'", -1.29532515457], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%november 27%'", -3.7874750957]]}, "592": {"question": "canada and the united state be the 2 nationality of player with round lower than 4", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "2": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "3": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.9049420145320002], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.9053132464610012], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.9058546624400008], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.9059640598499998], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.907061978451999], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.9098946533349996], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.9138007472809995], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.9145556750719996], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada' AND round < 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND round < 4", -1.9153601786799996], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE round < 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round < 4 AND nationality = 'canada'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE round < 4 AND nationality = 'united states'\n\"\"\"", -5.986786044578]]}, "23": {"question": "only round 3 be not list 2 time", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [1], [1], [6]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], "<error>"], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT round) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3", -3.0053492257460004], [" SELECT COUNT(DISTINCT round) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3", -3.0092181887720004], [" SELECT COUNT(DISTINCT round) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3", -3.0110265834199996], [" SELECT COUNT(DISTINCT round) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3", -3.014814829296], [" SELECT COUNT(DISTINCT round) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3", -3.025394707746], [" SELECT COUNT(DISTINCT round) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3", -3.0435830255260004], [" SELECT COUNT(DISTINCT(round)) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3", -4.1823987209119995], [" SELECT COUNT(*) FROM w WHERE round NOT IN (SELECT round FROM w GROUP BY round HAVING COUNT(*) = 2)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3 AND round NOT IN (SELECT round FROM w GROUP BY round HAVING COUNT(*) = 2)", -5.6592208411759986], [" SELECT COUNT(*) FROM w WHERE round NOT IN (SELECT round FROM w GROUP BY round HAVING COUNT(*) = 2)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3 AND round NOT IN (SELECT round FROM w GROUP BY round HAVING COUNT(*) = 2)\n```", -8.031335519979002], [" SELECT COUNT(DISTINCT round) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round = 3 AND NOT EXISTS (SELECT * FROM w WHERE round = 3 HAVING COUNT(*) = 2)", -12.648590706456003]]}, "48": {"question": "the jazz have 2 player , both guard , with the last name dawkins but their time on the team do not overlap", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins' AND position = 'guard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins' AND position = 'guard'", -3.6668716210300007], [" SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins' AND position = 'guard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins' AND position = 'guard'", -3.672264290260001], [" SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins%' AND position = 'guard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins%' AND position = 'guard'", -4.39635035035], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '% dawkins'", -4.41977890335], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '% dawkins'", -4.421291063240002], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '% dawkins'", -4.421752910709999], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '% dawkins'", -4.50873249837], [" SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins' AND position = 'guard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins' AND position = 'guard'", -4.58452738362], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '%dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'guard' AND player LIKE '%dawkins'", -5.461264968650001], [" SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins' AND position = 'guard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins' AND position = 'guard'\n```", -6.411741917769999]]}, "73": {"question": "galina voskoboeva play 20% of her game on a clay top tennis court", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.515371162948], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.5158189939139999], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.516449293064], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.516565218699], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.5166783365040001], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.51700519132], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.5173237197839999], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.5174082314740001], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -0.519489675324], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'\n```", -2.8328049101539996]]}, "98": {"question": "jerry mitchell be 1 of 3 nominee for a drama desk award", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'drama desk award' AND nominee = 'jerry mitchell'", -1.8799547938319996], [" SELECT COUNT(*) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'drama desk award' AND nominee = 'jerry mitchell'", -1.8817210496019996], [" SELECT COUNT(*) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'drama desk award' AND nominee = 'jerry mitchell'", -1.8909973717919997], [" SELECT COUNT(*) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'drama desk award' AND nominee = 'jerry mitchell'", -1.8915542344220004], [" SELECT COUNT(*) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'drama desk award' AND nominee = 'jerry mitchell'", -1.895012627712], [" SELECT COUNT(DISTINCT nominee) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -2.330423764340999], [" SELECT COUNT(*) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -2.750414569078], [" SELECT COUNT(*) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -2.762878869932], [" SELECT COUNT(DISTINCT(nominee)) FROM w WHERE award = 'drama desk award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'drama desk award' AND nominee = 'jerry mitchell'", -4.6799097141319965], [" SELECT COUNT(*) FROM w WHERE award = \"drama desk award\"\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = \"drama desk award\"", -8.554431596982003]]}, "150": {"question": "the number 2 be the only erp w", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [6]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT `erp w`) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `erp w` = 2", -2.1654941419929994], [" SELECT COUNT(DISTINCT `erp w`) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `erp w` = 2", -2.1678702377070005], [" SELECT COUNT(DISTINCT `erp w`) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `erp w` = 2", -2.1798647711360006], [" SELECT COUNT(DISTINCT `erp w`) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `erp w` = 2", -2.1819674297329996], [" SELECT COUNT(DISTINCT `erp w`) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `erp w` = 2", -2.2054421729129996], [" SELECT COUNT(DISTINCT erp w) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE erp w = 2", -2.749377822493], [" SELECT COUNT(DISTINCT erp w) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE erp w = 2", -2.7699552392029996], [" SELECT COUNT(DISTINCT erp w) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE erp w = 2", -2.7714746062929994], [" SELECT COUNT(DISTINCT erp w) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE erp w = 2", -2.7776573118529995], [" SELECT COUNT(*) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE erp w = 2", -3.408936098143]]}, "206": {"question": "keith gordon direct 2 episode of dexter in season 3", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `directed by` = 'keith gordon'", -1.2850005787800003], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'keith gordon'", -1.2918720655200002], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'keith gordon'", -1.2974723152999998], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'keith gordon'", -1.2974733333000001], [" SELECT COUNT(*) FROM w WHERE directed by = 'keith gordon'", -1.4295672518], [" SELECT COUNT(*) FROM w WHERE directed by = 'keith gordon'", -1.4295673778], [" SELECT COUNT(*) FROM w WHERE directed by = 'keith gordon'", -1.43017996103], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'keith gordon' AND `no in season` = 3", -5.134432497780001], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'keith gordon' AND `no in season` = 3", -5.1540050767159995], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'keith gordon' AND `no in season` LIKE '3-%'", -7.2550711168160005]]}, "231": {"question": "10 of the player be transfer at the end of their contract", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.8630235110200001], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.8743173883500002], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.88289033368], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.8829486422100001], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.8843668399399999], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.8844943391299999], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.88785523135], [" SELECT COUNT(*) FROM w WHERE `type` = 'end of contract'", -2.12532921928], [" SELECT COUNT(*) FROM w WHERE `type` = 'end of contract'", -2.13090538761], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su' AND `type` = 'end of contract'", -3.74222700961]]}, "243": {"question": "secteur 6 lose by 1 against the enugu ranger", "gold_answer": 1, "pred_answer": {"0": [[1], [2], [2], [2], [-1], [-1], [1], [0], [1], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers'", -4.850977249926], [" SELECT CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers'", -7.203440886396996], [" SELECT CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers'", -7.256629485713002], [" SELECT CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers'", -7.2811920939800014], [" SELECT CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT) - CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers'", -7.553492435102398], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) - SUM(CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT)) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers'", -10.536590513110799], [" SELECT ABS(CAST(SUBSTR(agg, 1, INSTR(agg, ' - ') - 1) AS INT) - CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT)) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers'", -10.679370379400792], [" SELECT CAST(SUBSTR(`1st leg`, 1, INSTR(`1st leg`, '-') - 1) AS INT) - CAST(SUBSTR(`1st leg`, INSTR(`1st leg`, '-') + 1, LENGTH(`1st leg`) - (INSTR(`1st leg`, ' - ') + 1)) AS INT) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers'", -10.7318047578074], [" SELECT COUNT(*) FROM w WHERE team 1 = 'secteur 6' AND team 2 = 'enugu rangers' AND (CAST(SUBSTR(agg, 1, INSTR(agg, ' - ') - 1) AS INT) - CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT)) < 0", -13.515959393996894], [" SELECT COUNT(*) FROM w WHERE (team 1 = 'secteur 6' AND team 2 = 'enugu rangers' AND (CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT) > CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT))) OR (team 1 = 'enugu rangers' AND team 2 = 'secteur 6' AND (CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT) < CAST(SUBSTR", -14.737738259264994]]}, "256": {"question": "there be more than 2 team that have the same score during the 1st leg", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [4], [4], [4], [4], [4], [4], [4], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT `1st leg`) FROM w", -2.2685094866999993], [" SELECT COUNT(DISTINCT `1st leg`) FROM w", -2.3359001638740002], [" SELECT COUNT(*) FROM w WHERE `1st leg` LIKE '% - %' AND (CAST(SUBSTR(`1st leg`, 1, INSTR(`1st leg`, '-') - 1) AS INT) - CAST(SUBSTR(`1st leg`, INSTR(`1st leg`, '-') + 1, LENGTH(`1st leg`) - (INSTR(`1st leg`, ' - ') + 1)) AS INT)) = 0", -4.312577703825999], [" SELECT COUNT(*) FROM w WHERE 1st leg LIKE '% - %' AND (CAST(SUBSTR(1st leg, 1, INSTR(1st leg, '-') - 1) AS INT) - CAST(SUBSTR(1st leg, INSTR(1st leg, '-') + 1, LENGTH(1st leg) - (INSTR(1st leg, ' - ') + 1)) AS INT)) = 0", -4.510549437948998], [" SELECT COUNT(*) FROM w WHERE 1st leg LIKE '% - %' AND (CAST(SUBSTR(1st leg, 1, INSTR(1st leg, '-') - 1) AS INT) - CAST(SUBSTR(1st leg, INSTR(1st leg, '-') + 1, LENGTH(1st leg) - (INSTR(1st leg, ' - ') + 1)) AS INT)) = 0", -4.528041930912001], [" SELECT COUNT(*) FROM w WHERE 1st leg LIKE '% - %' AND (CAST(SUBSTR(1st leg, 1, INSTR(1st leg, '-') - 1) AS INT) - CAST(SUBSTR(1st leg, INSTR(1st leg, '-') + 1, LENGTH(1st leg) - (INSTR(1st leg, ' - ') + 1)) AS INT)) = 0", -4.545006929750001], [" SELECT COUNT(*) FROM w WHERE 1st leg LIKE '% - %' AND (CAST(SUBSTR(1st leg, 1, INSTR(1st leg, '-') - 1) AS INT) - CAST(SUBSTR(1st leg, INSTR(1st leg, '-') + 1, LENGTH(1st leg) - (INSTR(1st leg, ' - ') + 1)) AS INT)) = 0", -4.567777456178], [" SELECT COUNT(*) FROM w WHERE 1st leg LIKE '%-%' AND (CAST(SUBSTR(1st leg, 1, INSTR(1st leg, '-') - 1) AS INT) - CAST(SUBSTR(1st leg, INSTR(1st leg, '-') + 1, LENGTH(1st leg) - (INSTR(1st leg, ' - ') + 1)) AS INT)) = 0", -6.104481166186996], [" SELECT COUNT(*) FROM w WHERE 1st leg LIKE '%-%' AND (CAST(SUBSTR(1st leg, 1, INSTR(1st leg, '-') - 1) AS INT) - CAST(SUBSTR(1st leg, INSTR(1st leg, '-') + 1, LENGTH(1st leg) - (INSTR(1st leg, ' - ') + 1)) AS INT)) = 0", -6.114074855537], [" SELECT COUNT(*) FROM w WHERE `1st leg` LIKE '%-%' AND CAST(SUBSTR(`1st leg`, 1, INSTR(`1st leg`, '-') - 1) AS INT) = CAST(SUBSTR(`1st leg`, INSTR(`1st leg`, '-') + 1, LENGTH(`1st leg`) - (INSTR(`1st leg`, '-') + 1)) AS INT)", -6.366050693111003]]}, "281": {"question": "during the 1993 new york jet season , the new york jet play 8 game at the game site name the robert f kennedy memorial stadium", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `game site` = 'robert f kennedy memorial stadium'", -1.3781060602400002], [" SELECT COUNT(*) FROM w WHERE `game site` = 'robert f kennedy memorial stadium'", -1.3809177097839995], [" SELECT COUNT(*) FROM w WHERE `game site` = 'robert f kennedy memorial stadium'", -1.396354994675], [" SELECT COUNT(*) FROM w WHERE `game site` = 'robert f kennedy memorial stadium'", -1.3986520329340004], [" SELECT COUNT(*) FROM w WHERE game site = 'robert f kennedy memorial stadium'", -1.68963892874], [" SELECT COUNT(*) FROM w WHERE game site = 'robert f kennedy memorial stadium'", -1.69187500504], [" SELECT COUNT(*) FROM w WHERE game site = 'robert f kennedy memorial stadium'", -1.69545400017], [" SELECT COUNT(*) FROM w WHERE game site = 'robert f kennedy memorial stadium'", -1.69703317673], [" SELECT COUNT(*) FROM w WHERE game site = 'robert f kennedy memorial stadium'", -1.6993321170300004], [" SELECT COUNT(*) FROM w WHERE game site = 'robert f kennedy memorial stadium'", -1.7042962637399999]]}, "336": {"question": "there have be 19 game since 13 august 2005 which have an attendance exactly equal to that of arsenal in 9 april 2006", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [0], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00' AND opponents = 'arsenal') AND date > '2005-08-13 00:00:00'", -4.718220497890003], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00' AND opponents = 'arsenal') AND date > '2005-08-13 00:00:00'", -4.71915741733], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00' AND opponents = 'arsenal') AND date > '2005-08-13 00:00:00'", -4.729743426120001], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00' AND opponents = 'arsenal') AND date > '2005-08-13 00:00:00'", -4.73330689748], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00' AND opponents = 'arsenal') AND date > '2005-08-13 00:00:00'", -4.740511506860001], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00' AND opponents = 'arsenal') AND date > '2005-08-13 00:00:00'", -4.742464967759999], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00' AND opponents = 'arsenal') AND date > '2005-08-13 00:00:00'", -4.743191018790001], [" SELECT COUNT(*) FROM w WHERE date > '2005-08-13' AND attendance = (SELECT attendance FROM w WHERE date = '2006-04-09')", -5.737295251770001], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00' AND opponents = 'arsenal') AND `date` > '2005-08-13 00:00:00'", -6.058022983349999], [" SELECT COUNT(*) FROM w WHERE date > '2005-08-13 00:00:00' AND attendance = (SELECT attendance FROM w WHERE date = '2006-04-09 00:00:00')", -6.422188033229998]]}, "389": {"question": "the bobcat have a record of more win than loss", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.596818860825299], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.605782188345299], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.6181392849222975], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.621778026503097], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.6277335335993035], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -4.646793873114499], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -4.6512223292472985], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -4.655261469683598], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -4.667823546069504], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -4.677465696619]]}, "414": {"question": "the prince park venue have just as much crowd as the junction oval menu", "gold_answer": 0, "pred_answer": {"0": [[23830], [23830], [23830], [23830], [23830], [23830], [23830], [23830], [23830], [23830]], "1": [[16249], [16249], [16249], [16249], [16249], [16249], [16249], [16249], [16249], [16249]]}, "nsql": [[" SELECT crowd FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'junction oval'", -1.2683225641700007], [" SELECT crowd FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'junction oval'", -1.2683828419299998], [" SELECT crowd FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'junction oval'", -1.26915961345], [" SELECT crowd FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'junction oval'", -1.2705697489699994], [" SELECT crowd FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'junction oval'", -1.2719867529949997], [" SELECT crowd FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'junction oval'", -1.2723705054740007], [" SELECT crowd FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'junction oval'", -1.2728500236], [" SELECT crowd FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'junction oval'", -1.2729035588799993], [" SELECT SUM(crowd) FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT SUM(crowd) FROM w WHERE venue = 'junction oval'", -1.9636992916999996], [" SELECT SUM(crowd) FROM w WHERE venue = 'princes park'\nNeuralSQL2: SELECT SUM(crowd) FROM w WHERE venue = 'junction oval'", -1.9647946843199993]]}, "439": {"question": "the dolphins' defense record 2 shutout during the season", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.4019512247199994], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.40220912992], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.40220912992], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.4036912672199997], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.40615023072], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.4083507807199993], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.40909299722], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w% - 0'", -4.2597853504200005], [" SELECT COUNT(*) FROM w WHERE opponent = 'buffalo bills' AND result = 'w 12 - 0'", -5.1370721148700005], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - %' AND SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, '-') + 1)) = '0'", -10.60232397674]]}, "464": {"question": "there be more ford then any other with alfa romeo and matra tying for the least", "gold_answer": 0, "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [0], [17], [17]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE constructor LIKE '%ford%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor LIKE '%alfa romeo%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor LIKE '%matra%'", -2.8563032394490007], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '%ford%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor LIKE '%alfa romeo%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor LIKE '%matra%'", -2.8600103814769993], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '%ford%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor LIKE '%alfa romeo%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor LIKE '%matra%'", -2.860592847000001], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '%ford%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor LIKE '%alfa romeo%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor LIKE '%matra%'", -2.864743536476], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '%ford%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor LIKE '%alfa romeo%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor LIKE '%matra%'", -2.866457789982998], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '%ford%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor LIKE '%alfa romeo%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor LIKE '%matra%'", -2.869001891590999], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '%ford%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor LIKE '%alfa romeo%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor LIKE '%matra%'", -2.869651818120001], [" SELECT COUNT(*) FROM w WHERE constructor = 'ford'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -3.2239410905649994], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '% - ford'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -4.034992175648], [" SELECT COUNT(*) FROM w WHERE constructor LIKE '% - ford'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor LIKE 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor LIKE 'matra'", -4.605105107933999]]}, "489": {"question": "caisse d'epargne have the most team classification win with 11", "gold_answer": 1, "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[21]], "5": ["<error>"], "6": [[2]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `team classification` = 'caisse d'epargne'", -1.4539849209439997], [" SELECT COUNT(*) FROM w WHERE `team classification` = 'caisse d'epargne'", -1.4608528408940002], [" SELECT COUNT(*) FROM w WHERE `team classification` = 'caisse d'epargne'", -1.4767395732439996], [" SELECT COUNT(*) FROM w WHERE `team classification` = 'caisse d'epargne'", -1.4916201997439997], [" SELECT COUNT(*) FROM w WHERE `team classification` = 'caisse d'epargne'", -1.5397647007739999], [" SELECT COUNT(*) FROM w WHERE team classification = 'caisse d'epargne'", -2.2282568933739997], [" SELECT COUNT(*) FROM w WHERE team classification = 'caisse d'epargne'", -2.259559807344], [" SELECT COUNT(*) FROM w WHERE team classification = 'caisse d'epargne'", -2.2631721220039998], [" SELECT COUNT(DISTINCT stage) FROM w WHERE `team classification` = 'caisse d'epargne'", -4.478034335754], [" SELECT COUNT(*) FROM w WHERE `team classification` = 'caisse d'epargne'\nQ2: {how many = a2} records have a winner whose name is mark cavendish.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish'\nQ3: the number of stage is {how many = a3}.\nNeuralSQL3: SELECT COUNT(DISTINCT stage) FROM w\nQ4: {how many = a4} records have a general classification whose name is mark cavendish.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `general classification` = 'mark cavendish'\nQ5", -34.58355159787402]]}, "511": {"question": "the only defensive tackle be corey peter , with a pick number of 19", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.0009396495440002], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.001934946354], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.006911299944], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.0082317912839995], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.00832972066], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.0093461931580001], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.010006860854], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.0101045140740001], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.0105353913140003], [" SELECT COUNT(*) FROM w WHERE position = 'defensive tackle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'corey peters' AND position = 'defensive tackle'", -1.017122528248]]}, "597": {"question": "there be 96 goal achieve when chievo be the club which debut after 1999", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [86], [86], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE current club = 'chievo' AND debut year > 1999", -2.1337925971800003], [" SELECT COUNT(*) FROM w WHERE current club = 'chievo' AND debut year > 1999", -2.1341972551799997], [" SELECT COUNT(*) FROM w WHERE current club = 'chievo' AND debut year > 1999", -2.13870147138], [" SELECT COUNT(*) FROM w WHERE current club = 'chievo' AND debut year > 1999", -2.14057667968], [" SELECT COUNT(*) FROM w WHERE current club = 'chievo' AND debut year > 1999", -2.1421395995800006], [" SELECT SUM(goals) FROM w WHERE current club = 'chievo' AND debut year > 1999", -2.44619550828], [" SELECT SUM(goals) FROM w WHERE debut year > 1999 AND current club = 'chievo'", -2.6913722039999994], [" SELECT COUNT(*) FROM w WHERE debut year > 1999 AND current club = 'chievo'", -2.69563576168], [" SELECT COUNT(*) FROM w WHERE debut year > 1999 AND current club = 'chievo'", -2.7017286288800006], [" SELECT COUNT(*) FROM w WHERE debut year > 1999 AND current club = 'chievo'", -2.7034026661799992]]}, "604": {"question": "there be more than one be station", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE frequency LIKE '%am%'", -1.417997099224], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '%am%'", -1.505630880924], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '%am%'", -1.506115826724], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '%am%'", -1.506571203624], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '%am%'", -1.5070943927240004], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '%am%'", -1.507731201424], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '%am%'", -1.5117751518240001], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '% am%'", -3.1111417982239997], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '% am %'", -3.2693153594239996], [" SELECT COUNT(*) FROM w WHERE frequency LIKE '% am %'", -3.285050599424]]}, "5": {"question": "jonathan legear score 4 more goal than mat\u00edas su\u00e1rez , the next highest rank player in the belgian first dvision a league who play in the belgian cup", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [3], [3], [1], [1], [1], [1], [1]], "1": [[5], [5], [5], [7], [7], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT league FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT league FROM w WHERE player = 'jonathan legear'", -1.5820693738899998], [" SELECT league FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT league FROM w WHERE player = 'jonathan legear'", -1.5861098018299997], [" SELECT league FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT league FROM w WHERE player = 'jonathan legear'", -1.5901790710700008], [" SELECT SUM(total) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'jonathan legear'", -2.6552253592699997], [" SELECT SUM(total) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'jonathan legear'", -2.6553544030899996], [" SELECT SUM(league) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -2.766880241199999], [" SELECT SUM(league) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -2.7706937800199998], [" SELECT SUM(league) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -2.7733773898500016], [" SELECT SUM(league) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -2.775102781819999], [" SELECT SUM(league) FROM w WHERE player = 'matias suarez'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -2.7760733099200015]]}, "28": {"question": "2 player be draft in each round round 3 and 9", "gold_answer": 1, "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE round BETWEEN 3 AND 9", -1.85324271754], [" SELECT COUNT(*) FROM w WHERE round BETWEEN 3 AND 9", -1.8541459218099998], [" SELECT COUNT(*) FROM w WHERE round BETWEEN 3 AND 9", -1.8563790970599998], [" SELECT COUNT(*) FROM w WHERE round BETWEEN 3 AND 9", -1.8569047167999997], [" SELECT COUNT(*) FROM w WHERE round BETWEEN 3 AND 9", -1.8577930520400001], [" SELECT COUNT(*) FROM w WHERE round BETWEEN 3 AND 9", -1.8617122275100002], [" SELECT COUNT(*) FROM w WHERE round BETWEEN 3 AND 9", -1.8638138711899999], [" SELECT COUNT(*) FROM w WHERE round >= 3 AND round <= 9", -2.2284677525900007], [" SELECT COUNT(*) FROM w WHERE round >= 3 AND round <= 9", -2.2345640653900003], [" SELECT COUNT(DISTINCT(player)) FROM w WHERE round BETWEEN 3 AND 9", -3.9598614661889995]]}, "53": {"question": "14 viral family have a replication site in the cytoplasm", "gold_answer": 1, "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE replication site = 'cytoplasm'", -1.5071137937999999], [" SELECT COUNT(*) FROM w WHERE replication site = 'cytoplasm'", -1.5085250743899998], [" SELECT COUNT(*) FROM w WHERE replication site = 'cytoplasm'", -1.5129704463399998], [" SELECT COUNT(*) FROM w WHERE replication site = 'cytoplasm'", -1.51335204873], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'cytoplasm'", -1.52997007462], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'cytoplasm'", -1.53968679945], [" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'cytoplasm'", -1.74125913754], [" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'cytoplasm'", -1.7441819872599995], [" SELECT COUNT(DISTINCT(family)) FROM w WHERE replication site = 'cytoplasm'", -2.6648680060300003], [" SELECT COUNT(DISTINCT(family)) FROM w WHERE replication site = 'cytoplasm'", -2.6694480969099987]]}, "78": {"question": "galina voskoboeva play 20% of her game on a clay top tennis court and 1% on hard", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.6837999067599998], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68419690532], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.6853602269100001], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68701696372], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.6877197843299999], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.6889799221799999], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68929128075], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68930497559], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.6903811717200001], [" SELECT COUNT(*) FROM w WHERE surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.69146039382]]}, "103": {"question": "lleyton hewitt have win the master series final 2 time , in 2002 and 2003", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship = 'master series finals'", -2.98090749543], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%master series finals%'", -3.48611066943], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%master series finals%'", -3.4889213996899997], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%master series finals%'", -3.49224955943], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%master series finals%'", -3.5507412912299996], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%master series finals%'", -3.5536502597800004], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '% ( % )'", -5.22734748453], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '% ( % )'", -5.25177314157], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '% ( % )'", -5.287174171679999], [" SELECT COUNT(DISTINCT championship) FROM w WHERE outcome = 'winner' AND championship LIKE '%master series finals%'", -6.26524132776]]}, "128": {"question": "the yugoslavian national team win both of its friendly match by a score of 2:1", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.52178769444], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5222069494000003], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5228560016], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5235375258400001], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5243047099000002], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5243047099000002], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5250793059400005], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5275952548], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5285525749], [" SELECT COUNT(*) FROM w WHERE results = '2:1' AND type of game = 'friendly'", -1.5286313356399999]]}, "180": {"question": "jb holmes from the united state and henrik stenson from sweden tie for third place with + 1 to par", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [1], [0], [0], [0], [0], [0]], "1": ["<error>", [0]]}, "nsql": [[" SELECT COUNT(DISTINCT place) FROM w WHERE player IN ('jb holmes', 'henrik stenson') AND `to par` = '+ 1'", -5.89143604905], [" SELECT COUNT(DISTINCT place) FROM w WHERE player IN ('jb holmes', 'henrik stenson') AND `to par` = '+ 1'", -5.912415886800002], [" SELECT COUNT(*) FROM w WHERE player = 'jb holmes' AND country = 'united states' AND `to par` = '+ 1'", -6.233672799129999], [" SELECT COUNT(DISTINCT place) FROM w WHERE player = 'jb holmes' AND country = 'united states' AND `to par` = '+ 1'", -6.43155969251], [" SELECT COUNT(*) FROM w WHERE (player = 'jb holmes' AND country = 'united states') OR (player = 'henrik stenson' AND country = 'sweden') AND `to par` = '+ 1'", -6.512583973969999], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND player IN ('jb holmes', 'henrik stenson')", -6.627351073720001], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND player IN ('jb holmes', 'henrik stenson')", -6.634684527509999], [" SELECT COUNT(*) FROM w WHERE player IN ('jb holmes', 'henrik stenson') AND to par = '+ 1'", -6.71999527797], [" SELECT COUNT(*) FROM w WHERE player = 'jb holmes' AND country = 'united states' AND `to par` = '+ 1'\n```", -9.380808490369997], [" SELECT COUNT(*) FROM w WHERE country = 'united states' AND player = 'jb holmes' AND `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'sweden' AND player = 'henrik stenson' AND `to par` = '+ 1'", -10.593402968407998]]}, "236": {"question": "the agricultural panel and labour panel both have 11 total member", "gold_answer": 1, "pred_answer": {"0": [[], [], [], [], [], [], [], [3], [], [3]], "1": [[], [], [], [], [], [], [], [0], [], [0]], "2": ["<error>"]}, "nsql": [[" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.5024549490000003], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.5098377162], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.51103306957], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.5115507334499998], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.5129373609999999], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.5178239849800004], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.52187586795], [" SELECT `agricultural panel` FROM w WHERE row_id = 1\nNeuralSQL2: SELECT `labour panel` FROM w WHERE row_id = 1", -2.4429947641899994], [" SELECT agricultural panel FROM w WHERE party = 'total'\nNeuralSQL2: SELECT labour panel FROM w WHERE party = 'total'", -2.49442821978], [" SELECT `agricultural panel` FROM w WHERE row_id = 1\nNeuralSQL2: SELECT `labour panel` FROM w WHERE row_id = 1\n```", -5.203815449330001]]}, "261": {"question": "4 of the competition be senior world championship", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [0], [7], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition LIKE '%world championships%'", -2.4989952031200002], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world championships%'", -2.50415823249], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world championships%'", -2.51272672569], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world championships%'", -2.51735046312], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world championships%'", -2.5203292470900003], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world championships%'", -2.5328455601900006], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%senior world championships%'", -3.55131173876], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% championships'", -3.7276894824899998], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% world championships%'", -3.8895413095499998], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% senior world championships%'", -4.149483604389999]]}, "273": {"question": "1971 be the only year alberto pagani win 2 time in the same year", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w WHERE wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins = 2", -3.11492802854], [" SELECT COUNT(DISTINCT year) FROM w WHERE wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins = 2", -3.1217035473999992], [" SELECT COUNT(*) FROM w WHERE wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins = 2", -3.5277282411399997], [" SELECT COUNT(*) FROM w WHERE wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wins = 2 AND year = 1971", -3.748066208779999], [" SELECT COUNT(*) FROM w WHERE wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wins = 2 AND year = 1971", -3.7721552264], [" SELECT COUNT(*) FROM w WHERE wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wins = 2 AND year = 1971", -3.7751826728], [" SELECT COUNT(*) FROM w WHERE wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wins = 2 AND year = 1971", -3.79143225278], [" SELECT COUNT(DISTINCT year) FROM w WHERE wins >= 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins >= 2", -4.23826321574], [" SELECT COUNT(DISTINCT year) FROM w WHERE wins >= 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins >= 2", -4.24469630733], [" SELECT COUNT(*) FROM w WHERE wins > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wins > 1 AND year = 1971", -4.84920365972]]}, "286": {"question": "only 10 cleveland brown 's quarterback have win more than 10 game", "gold_answer": 1, "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [19]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE wins > 10", -0.843101105314], [" SELECT COUNT(*) FROM w WHERE wins > 10", -0.8438162038139999], [" SELECT COUNT(*) FROM w WHERE wins > 10", -0.845891187014], [" SELECT COUNT(*) FROM w WHERE wins > 10", -0.847500332714], [" SELECT COUNT(*) FROM w WHERE wins > 10", -0.847942498914], [" SELECT COUNT(*) FROM w WHERE wins > 10", -0.8493005840140001], [" SELECT COUNT(*) FROM w WHERE wins > 10", -0.8497581612139999], [" SELECT COUNT(*) FROM w WHERE wins > 10", -0.8528565631139999], [" SELECT COUNT(*) FROM w WHERE wins > 10", -0.853717423914], [" SELECT COUNT(*) FROM w WHERE (wins + losses + ties) > 10", -3.0598548876440006]]}, "311": {"question": "nick price be the only player from zimbabwe", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.023322199616], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.0234053517659996], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.0238144431660001], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.025923053216], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.0263428229159999], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.0265820724160002], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.0276447741260002], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.027833903836], [" SELECT COUNT(*) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -1.0299183529659999], [" SELECT COUNT(DISTINCT player) FROM w WHERE country = 'zimbabwe'\nNeuralSQL2: SELECT COUNT(DISTINCT player) FROM w WHERE player = 'nick price' AND country = 'zimbabwe'", -4.109293122439]]}, "366": {"question": "the furthest olga govortsova have ever advance in a grand slam tournament be the third round", "gold_answer": 1, "pred_answer": {"0": [["year - end championship"], [3], [2], [0], [22], [0], [3], [0], [0], [2]], "1": [[3]], "2": ["<error>"]}, "nsql": [[" SELECT MAX(`2007`) FROM w", -5.78364956565], [" SELECT MAX(CAST(SUBSTR(2008, 1, INSTR(2008, 'r') - 1) AS INT)) FROM w", -6.076061197979997], [" SELECT MAX(CAST(SUBSTR(`2007`, 1, INSTR(`2007`, 'r') - 1) AS INT)) FROM w", -8.71726888534], [" SELECT MAX(CAST(SUBSTR(2008, 1, INSTR(2008, 'r') - 1) AS INT)) FROM w WHERE tournament = 'grand slam tournaments'", -8.898281226329997], [" SELECT MAX(LENGTH(`2011`)) FROM w WHERE tournament = 'grand slam tournaments'", -9.73744731765], [" SELECT MAX(CAST(REPLACE(`2008`,'r','') AS INT)) FROM w WHERE tournament = 'grand slam tournaments'", -10.456769031249998], [" SELECT MAX(CAST(SUBSTR(`2008`, 1, INSTR(`2008`, 'r') - 1) AS INT)) FROM w WHERE `2008` LIKE '%r'", -10.67864586453], [" SELECT MAX(CAST(SUBSTR(`2008`, 1, INSTR(`2008`, 'r') - 1) AS INT)) FROM w WHERE tournament = 'grand slam tournaments'", -10.92161403036], [" SELECT MAX(a) FROM (SELECT MAX(CAST(`2007` AS INT)) AS a, MAX(CAST(`2008` AS INT)) AS b, MAX(CAST(`2009` AS INT)) AS c, MAX(CAST(`2010` AS INT)) AS d, MAX(CAST(`2011` AS INT)) AS e FROM w WHERE tournament = 'grand slam tournaments')", -13.528901037930003], [" SELECT MAX(CAST(SUBSTR(w.`2007`, 1, INSTR(w.`2007`, 'r') - 1) AS INT)) FROM w WHERE w.`2007` LIKE '%r'\nNeuralSQL2: SELECT MAX(CAST(SUBSTR(w.`2008`, 1, INSTR(w.`2008`, 'r') - 1) AS INT)) FROM w WHERE w.`2008` LIKE '%r'\nNeuralSQL3: SELECT MAX(CAST(SUBSTR(w.`2009`, 1, INSTR(w.`2009`, 'r') - 1) AS INT)) FROM w WHERE w.`2009` LIKE '%r", -18.068497686178013]]}, "419": {"question": "shane hall have more top 10 placement than top 5 placement", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [4], [4], [4]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT SUM(top 10) FROM w\nNeuralSQL2: SELECT SUM(top 5) FROM w", -1.4577025476399996], [" SELECT SUM(top 10) FROM w\nNeuralSQL2: SELECT SUM(top 5) FROM w", -1.4589731328600004], [" SELECT SUM(top 10) FROM w\nNeuralSQL2: SELECT SUM(top 5) FROM w", -1.45917029874], [" SELECT SUM(top 10) FROM w\nNeuralSQL2: SELECT SUM(top 5) FROM w", -1.4705170702699992], [" SELECT SUM(`top 10`) FROM w\nNeuralSQL2: SELECT SUM(`top 5`) FROM w", -1.7330210820099996], [" SELECT SUM(`top 10`) FROM w\nNeuralSQL2: SELECT SUM(`top 5`) FROM w", -1.7678932607699993], [" SELECT SUM(`top 10`) FROM w\nNeuralSQL2: SELECT SUM(`top 5`) FROM w", -1.78492504753], [" SELECT COUNT(*) FROM w WHERE `top 10` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `top 5` > 0", -2.620276725974001], [" SELECT COUNT(*) FROM w WHERE `top 10` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `top 5` > 0", -2.6206782456599997], [" SELECT COUNT(*) FROM w WHERE top 10 > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE top 5 > 0", -3.6591408122299995]]}, "444": {"question": "during the 2007 - 08 minnesota wild season , minnesota play home 2 time less than they play away", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.82886454546], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.8296579526400002], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.8302739315999998], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.83031829389], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.8303188997000003], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.8304312199139999], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.8312733233700002], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.8315354939200001], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.8316800900099999], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.8332429195550001]]}, "469": {"question": "oh the issue affect time suspension trouble be the most common", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [3], [1], [1], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%suspension%'", -3.19280531676], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%suspension%' OR `time / retired` LIKE '%trouble%'", -3.95444370516], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%suspension%' OR `time / retired` LIKE '%trouble%'", -3.962349298060001], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%suspension%' OR `time / retired` LIKE '%trouble%'", -3.9631075470599995], [" SELECT COUNT(*) FROM w WHERE time / retired LIKE '%suspension%' OR time / retired LIKE '%trouble%'", -4.213112822759999], [" SELECT COUNT(*) FROM w WHERE time / retired LIKE '%suspension%' OR time / retired LIKE '%trouble%'", -4.21877516416], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%suspension%' OR `time / retired` LIKE '%trouble%' OR `time / retired` LIKE '%issue%' OR `time / retired` LIKE '%overheating%'", -8.3590984292], [" SELECT COUNT(DISTINCT constructor) FROM w WHERE `time / retired` LIKE '%suspension%' OR `time / retired` LIKE '%trouble%'", -8.359951331561], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%suspension%' OR `time / retired` LIKE '%trouble%' OR `time / retired` LIKE '%issue%' OR `time / retired` LIKE '%oh%'", -8.440309441030001], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%suspension%' OR `time / retired` LIKE '%trouble%' OR `time / retired` LIKE '%issue%' OR `time / retired` LIKE '%problem%' OR `time / retired` LIKE '%accident%' OR `time / retired` LIKE '%overheating%'", -12.61795999016]]}, "494": {"question": "caisse d'epargne have the least team classification with 3", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team classification = '3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team classification = '3' AND winner = 'caisse d'epargne'", -4.5805453071520015], [" SELECT COUNT(*) FROM w WHERE team classification = '3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team classification = '3' AND winner = 'caisse d'epargne'", -4.588223260122], [" SELECT COUNT(*) FROM w WHERE team classification = '3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team classification = '3' AND winner = 'caisse d'epargne'", -4.594407547901999], [" SELECT COUNT(*) FROM w WHERE `team classification` = '3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team classification` = '3' AND `team classification` = 'caisse d'epargne'", -4.892301678772001], [" SELECT COUNT(*) FROM w WHERE `team classification` = '3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team classification` = '3' AND `team classification` = 'caisse d'epargne'", -4.899030605881999], [" SELECT COUNT(*) FROM w WHERE `team classification` = '3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team classification` = '3' AND `team classification` = 'caisse d'epargne'", -4.937711379822001], [" SELECT COUNT(*) FROM w WHERE `team classification` = '3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team classification` = '3' AND `winner` = 'caisse d'epargne'", -5.333753427542001], [" SELECT COUNT(*) FROM w WHERE team classification = '3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team classification = 'caisse d'epargne' AND team classification = '3'", -5.356047735172], [" SELECT COUNT(*) FROM w WHERE `team classification` LIKE '% 3'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team classification` = 'caisse d'epargne' AND `team classification` LIKE '% 3'", -7.359589742171999], [" SELECT COUNT(DISTINCT(`team classification`)) FROM w WHERE `team classification` = '3'\nNeuralSQL2: SELECT COUNT(DISTINCT(`team classification`)) FROM w WHERE `team classification` = '3' AND `team classification` = 'caisse d'epargne'", -7.894373354936996]]}, "519": {"question": "the least lap for christian danner when the grid be 5 , be 43", "gold_answer": 0, "pred_answer": {"0": [[null], [null], [null], [null], [null], [null], [null], [43], [null], [null]]}, "nsql": [[" SELECT MIN(laps) FROM w WHERE driver = 'christian danner' AND grid = 5", -1.227500833276], [" SELECT MIN(laps) FROM w WHERE driver = 'christian danner' AND grid = 5", -1.2319570555160002], [" SELECT MIN(laps) FROM w WHERE driver = 'christian danner' AND grid = 5", -1.2327731694960002], [" SELECT MIN(laps) FROM w WHERE driver = 'christian danner' AND grid = 5", -1.2331335255359999], [" SELECT MIN(laps) FROM w WHERE driver = 'christian danner' AND grid = 5", -1.233191199076], [" SELECT MIN(laps) FROM w WHERE driver = 'christian danner' AND grid = 5", -1.235494527866], [" SELECT MIN(laps) FROM w WHERE driver = 'christian danner' AND grid = 5", -1.2395158091260001], [" SELECT MIN(laps) FROM w WHERE grid = 5", -1.6270808284759999], [" SELECT MIN(laps) FROM w WHERE grid = 5 AND driver = 'christian danner'", -2.674255772826], [" SELECT MIN(laps) FROM w WHERE grid = 5 AND driver = 'christian danner'", -2.687519088976]]}, "541": {"question": "the no of grid have 104 lap and a time / retire of + 6.18 be 1", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps = 104 AND `time / retired` = '+ 6.18'", -2.1191027876800006], [" SELECT COUNT(*) FROM w WHERE laps = 104 AND `time / retired` = '+ 6.18'", -2.1207466139], [" SELECT COUNT(*) FROM w WHERE laps = 104 AND `time / retired` = '+ 6.18'", -2.1245011736499997], [" SELECT COUNT(*) FROM w WHERE laps = 104 AND `time / retired` = '+ 6.18'", -2.12523371063], [" SELECT COUNT(*) FROM w WHERE laps = 104 AND `time / retired` = '+ 6.18'", -2.12527533647], [" SELECT COUNT(*) FROM w WHERE laps = 104 AND `time / retired` = '+ 6.18'", -2.12726274634], [" SELECT COUNT(*) FROM w WHERE laps = 104 AND time / retired = '+ 6.18'", -3.0646544545500003], [" SELECT COUNT(DISTINCT grid) FROM w WHERE laps = 104 AND `time / retired` = '+ 6.18'", -3.1840986949359995], [" SELECT COUNT(DISTINCT grid) FROM w WHERE laps = 104 AND `time / retired` = '+ 6.18'", -3.1841679988759997], [" SELECT COUNT(*) FROM w WHERE `time / retired` = '+ 6.18' AND laps = 104", -3.99870090224]]}, "35": {"question": "west berkshire brewery 's maggs magnificent mild have win a gold medal every single instance in which it win a prize between 1995 and 2009", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[10], [10], [10], [6], [6], [6], [6], [6], [6], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild'", -1.813522240501], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild'", -2.128631827873], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize != ''", -4.907480264282], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize != 'gold medal'", -5.1855672188209985], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize != 'gold medal'", -5.269314799454999], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize != 'gold medal'", -5.321936424270001], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize != 'gold medal'", -5.332077402413], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize != 'gold medal'", -5.345630502374], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND prize != 'gold medal'", -5.695343389283999], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize = 'gold medal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND prize != 'prize'", -6.9646019405379995]]}, "58": {"question": "only 1 of the viral disease have a spherical virion shape", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `virion shape` = 'spherical'", -0.89707675587], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'spherical'", -0.89726781087], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'spherical'", -0.9026723550600001], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'spherical'", -0.9247948632300002], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'spherical'", -0.9249355258399999], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -1.0274115261999999], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -1.0274771402], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -1.0318044738700003], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -1.05967573667], [" SELECT COUNT(*) FROM w WHERE virion shape = 'spherical'", -1.06970117277]]}, "83": {"question": "alfredo binda be the race leader for 15 race in the 1933 giro d'italia", "gold_answer": 0, "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda'", -1.95006281396], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda'", -1.9504096873399996], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda'", -1.9536805215200002], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda'", -1.9563092780299995], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda'", -1.9566208220899997], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda'", -1.95717137343], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda'", -1.9575508997000002], [" SELECT COUNT(*) FROM w WHERE `race leader` = 'alfredo binda ( ita )'", -2.3315650681899998], [" SELECT COUNT(*) FROM w WHERE `race leader` = 'alfredo binda ( ita )'", -2.3351419959400004], [" SELECT COUNT(DISTINCT race leader) FROM w WHERE race leader = 'alfredo binda'", -3.5474417173940003]]}, "108": {"question": "ileyton hewitt have win the master series 2 time , in 2004 and 2005", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters series%'", -3.2078350228600008], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters series%'", -3.22059055426], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters series%'", -3.2213488885599997], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters series%'", -3.22384935356], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters series%'", -3.2239362227600004], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters series%'", -3.2281342988599997], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters series%'", -3.2371759720599997], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND `championship` LIKE '%masters series%'", -4.693131333889999], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters%'", -4.77017829546], [" SELECT COUNT(DISTINCT(championship)) FROM w WHERE outcome = 'winner' AND championship LIKE '%masters series%'", -6.958314258840001]]}, "133": {"question": "5 of the game list end with 0 - 0 result", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.278399895356], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.27864073611600004], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.28049762501599995], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.28055131261599997], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.28057007531600003], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.2806371739859999], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.28064679857600006], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.28072231941599995], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.280898571416], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -0.281091129446]]}, "158": {"question": "few athlete from the united state have the longest mark", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [0], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE mark = (SELECT MAX(mark) FROM w) AND nationality = 'united states'", -3.5471843872199993], [" SELECT COUNT(*) FROM w WHERE mark = (SELECT MAX(mark) FROM w) AND nationality = 'united states'", -3.5509236063200005], [" SELECT COUNT(*) FROM w WHERE mark = (SELECT MAX(mark) FROM w) AND nationality = 'united states'", -3.55175328957], [" SELECT COUNT(*) FROM w WHERE mark = (SELECT MAX(mark) FROM w) AND nationality = 'united states'", -3.56227545979], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND mark = (SELECT MAX(mark) FROM w)", -3.62925580815], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND mark = (SELECT MAX(mark) FROM w)", -3.64899475752], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND mark = '8.95 m (29ft4\u00bcin)'", -4.71342161738], [" SELECT COUNT(*) FROM w WHERE mark LIKE '% m' AND nationality = 'united states'", -6.934648076959999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND mark LIKE '% m (29ft4\u00bcin)'", -8.34616552952], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE nationality = 'united states' AND mark IN (SELECT MAX(mark) FROM w)\n```", -8.871331586813998]]}, "210": {"question": "the result be count in bhind district 5 time and 3 time in datia", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.776422166699], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.7767327868360002], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.7769106696409999], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.778603391981], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.7788837360670001], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.778916195844], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.7790473659120002], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.780292677187], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.7815821127279999], [" SELECT COUNT(*) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE district = 'datia'", -0.7829133439639997]]}, "266": {"question": "3 home team have higher score than the away team that they be play", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], "<error>", "<error>", "<error>", "<error>", "<error>", [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0", -3.4408033394330007], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0", -3.4547888523390005], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) > CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)", -3.779063206542698], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`home team score`, INSTR(`home team score`, '(') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '(') + 1)) AS INT)) > (CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, INSTR(`away team score`, '('", -5.6643029772773], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`home team score`, INSTR(`home team score`, '.') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '.') + 1)) AS INT)) > (CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, INSTR(`away team score`, '.'", -6.080705118006396], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`home team score`, INSTR(`home team score`, '.') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '.') + 1)) AS INT)) > (CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, INSTR(`away team score`, '.'", -6.094466914912398], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`home team score`, INSTR(`home team score`, '.') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '.') + 1)) AS INT)) > (CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, INSTR(`away team score`, '.'", -6.109630531786399], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`home team score`, INSTR(`home team score`, '.') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '.') + 1)) AS INT)) > (CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, INSTR(`away team score`, '.'", -6.110885352521399], [" SELECT COUNT(*) FROM w WHERE (CAST(REPLACE(`home team score`, ' (', '.') AS FLOAT) - CAST(REPLACE(`away team score`, ' (', '.') AS FLOAT)) > 0", -8.051562794042999], [" SELECT COUNT(*) FROM w WHERE (CAST(REPLACE(`home team score`, '.', ' ') AS INT) - CAST(REPLACE(`away team score`, '.', ' ') AS INT)) > 0", -8.177589330740997]]}, "291": {"question": "only 10 cleveland brown 's quarterback have win more than 30 game", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE wins > 30", -0.867639720975], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.8680560988250001], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.869500933505], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.870355542815], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.872310300685], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.872749212215], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.8736219022549999], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.8750881741550001], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.875105052405], [" SELECT COUNT(*) FROM w WHERE wins > 30", -0.8810813906949999]]}, "303": {"question": "there be 10 game in the 2005 milwaukee brewer season where 1 team score no point", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score = '0 - 0'", -2.6821746017800003], [" SELECT COUNT(*) FROM w WHERE score = '0 - 0'", -2.69456997372], [" SELECT COUNT(*) FROM w WHERE score = '0 - 0'", -2.7080161734100003], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.9585812790499992], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.9614226762700007], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -3.016646850450001], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 0' OR score LIKE '0 - %'", -3.21612792857], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 0' OR score LIKE '0 - %'", -3.2300712917000007], [" SELECT COUNT(*) FROM w WHERE (score LIKE '0 - %' OR score LIKE '% - 0')", -4.300997163890001], [" SELECT COUNT(*) FROM w WHERE (score LIKE '0 - %' OR score LIKE '% - 0')", -4.302000979399999]]}, "316": {"question": "the zakspeed s4 t / c engine be use on all chassis from 1985 until 1988", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE engine (s) = 'zakspeed s4 t / c' AND year BETWEEN 1985 AND 1988", -4.00009810703], [" SELECT COUNT(*) FROM w WHERE engine (s) = 'zakspeed s4 t / c' AND year BETWEEN 1985 AND 1988", -4.00094780908], [" SELECT COUNT(*) FROM w WHERE engine (s) = 'zakspeed s4 t / c' AND year BETWEEN 1985 AND 1988", -4.003592712970001], [" SELECT COUNT(*) FROM w WHERE engine (s) = 'zakspeed s4 t / c' AND year >= 1985 AND year <= 1988", -4.013879768580001], [" SELECT COUNT(*) FROM w WHERE engine (s) = 'zakspeed s4 t / c' AND year >= 1985 AND year <= 1988", -4.018822614410001], [" SELECT COUNT(*) FROM w WHERE engine (s) = 'zakspeed s4 t / c' AND year >= 1985 AND year <= 1988", -4.021561498899999], [" SELECT COUNT(DISTINCT chassis) FROM w WHERE `engine (s)` = 'zakspeed s4 t / c' AND year BETWEEN 1985 AND 1988", -4.237986618581], [" SELECT COUNT(DISTINCT chassis) FROM w WHERE `engine (s)` = 'zakspeed s4 t / c' AND year BETWEEN 1985 AND 1988", -4.240753484228], [" SELECT COUNT(DISTINCT chassis) FROM w WHERE `engine (s)` = 'zakspeed s4 t / c' AND year >= 1985 AND year <= 1988", -4.379539825272], [" SELECT COUNT(DISTINCT chassis) FROM w WHERE year >= 1985 AND year <= 1988 AND engine (s) = 'zakspeed s4 t / c'", -6.458156681107998]]}, "341": {"question": "in the 2006 season the texas mariner play the angel 9 time", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [7], [7], [0], [16], [16], [7], [0], [7]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'angels'", -1.151267968754], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels'", -1.155514666845], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels'", -1.1561338302600002], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels'", -1.1590399696199998], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND opponent = 'mariners'", -3.465543481064], [" SELECT COUNT(*) FROM w WHERE opponent IN ('angels', 'mariners')", -3.80986385202], [" SELECT COUNT(*) FROM w WHERE opponent IN ('mariners', 'angels')", -3.97915130316], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND score LIKE '% - %'", -5.555014455754], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND opponent = 'mariners'\n```", -6.159464132675], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND (opponent = 'mariners' OR opponent = 'rangers')", -8.271819319525]]}, "396": {"question": "rankin county be home to multiple project that be propose and list", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed IS NOT NULL AND listed IS NOT NULL", -2.0120318611299997], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed IS NOT NULL AND listed IS NOT NULL", -2.01452837047], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed IS NOT NULL AND listed IS NOT NULL", -2.0168665127], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed IS NOT NULL AND listed IS NOT NULL", -2.0170204593500003], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed IS NOT NULL AND listed IS NOT NULL", -2.01721094092], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed IS NOT NULL AND listed IS NOT NULL", -2.01738012578], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed IS NOT NULL AND listed IS NOT NULL", -2.0194918720500006], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed IS NOT NULL AND listed IS NOT NULL", -2.02093850581], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed != 'none' AND listed != 'none'", -3.2939714220500003], [" SELECT COUNT(*) FROM w WHERE county = 'rankin' AND proposed NOT LIKE 'none' AND listed NOT LIKE 'none'", -4.420470255280001]]}, "449": {"question": "the minnesota viking defeat the lion in both game they play", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result = 'w'", -3.1216902375749997], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE 'w%'", -3.16809625286], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE 'w%'", -3.225586055595], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE 'w%'", -3.2348785636399997], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE 'w%'", -3.23726117191], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE 'w%'", -3.2509349911599994], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE '%l%'", -3.4885092840400005], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE '%l%'", -3.510557842134], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE '%l%'", -3.5303563346959996], [" SELECT COUNT(*) FROM w WHERE opponent = 'minnesota vikings' AND result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) < 0", -6.4036706032559]]}, "474": {"question": "beijing guoan be 1 of the 2 football club in asia , and participate in the 2008 and 2010 season", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [9]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.336289978456], [" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.3379369690460001], [" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.3379718516660002], [" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.3390504737160003], [" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.340484876566], [" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.340944423296], [" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.341022674666], [" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.3423568353859998], [" SELECT COUNT(*) FROM w WHERE continent = 'asia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -1.3438485841560004], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'beijing guoan' AND continent = 'asia'", -5.693683809230999]]}, "499": {"question": "the toronto maple leaf be the only opponent with 63 point", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.47093689153], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.4712310803599997], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.47181613279], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.4721583271000003], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.4725750723400002], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.47269491446], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.4788961003799999], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.4790228253200002], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.4805346909199997], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'toronto maple leafs' AND points = 63", -1.48064608644]]}, "524": {"question": "there be 3 c - 95 brazilian aircraft currently in service", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95' AND origin = 'brazil'", -3.81138246293], [" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95 brazilian' AND `in service` != '0'", -5.1285633292299995], [" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95 brazilian' AND `in service` != '0'", -5.13011477463], [" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95 brazilian' AND `in service` != '0'", -5.13221114473], [" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95 brazilian' AND `in service` != '0'", -5.142608731429999], [" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95 brazilian' AND `in service` != '0'", -5.14305602273], [" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95 brazilian' AND `in service` != '0'", -5.14517198543], [" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95 brazilian' AND in service != '0'", -5.31962162533], [" SELECT COUNT(*) FROM w WHERE aircraft = 'c - 95 brazilian' AND in service != 'none'", -6.183505318330001], [" SELECT COUNT(*) FROM w WHERE aircraft LIKE '%c - 95 brazilian%' AND `in service` != '0'", -8.74271325923]]}, "549": {"question": "in 2011 , the southwest region win a total of 5 game and lose 1 game create a record of 28 - 12", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l%'", -2.3156901516599993], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l%'", -2.316651184042999], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l%'", -2.316984065814], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l%'", -2.317368640112001], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l%'", -2.318860919387999], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l %'", -2.756668117923], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l %'", -2.7595551374999996], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l %'", -2.759763211853], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l %'", -2.7657409686], [" SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE region = 'southwest' AND results LIKE 'l%'\n```", -4.816557801514998]]}, "571": {"question": "andrew rule , john silverster , sandra harvey lindsay simpson , and marele day be the only 1 to win the lifetime achievement when na win the best - non fiction and reader 's vote after the year 2005", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [5], [6], [6], [5], [6], [5], [6], [5]], "1": [[0], [0], [0], [0], [3], [3], [1], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `lifetime achievement` IS NOT NULL AND `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `year` > 2005\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` IN ('andrew rule , john silverster , sandra harvey , lindsay simpson , and marele day') AND `best non - fiction` = 'na'", -8.309137508035002], [" SELECT COUNT(*) FROM w WHERE `lifetime achievement` IS NOT NULL AND `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `year` > 2005\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` IN ('andrew rule , john silverster , sandra harvey , lindsay simpson , and marele day') AND `best non - fiction` = 'na'", -8.360056100471999], [" SELECT COUNT(*) FROM w WHERE `lifetime achievement` != 'na' AND `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `year` > 2005\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` IN ('andrew rule , john silverster , sandra harvey , lindsay simpson , and marele day') AND `best non - fiction` = 'na' AND `reader 's vote` = 'na'", -9.776293777570006], [" SELECT COUNT(*) FROM w WHERE `lifetime achievement` IS NOT NULL AND `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `year` > 2005\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` IN ('andrew rule, john silverster, sandra harvey, lindsay simpson, and marele day') AND `best non - fiction` = 'na'", -9.926181648062995], [" SELECT COUNT(*) FROM w WHERE `lifetime achievement` IS NOT NULL AND `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `year` > 2005\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` IN ('andrew rule and john silvester', 'sandra harvey and lindsay simpson', 'marele day') AND `best non - fiction` = 'na'", -11.600449003115997], [" SELECT COUNT(*) FROM w WHERE year > 2005 AND `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `lifetime achievement` != 'na'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `lifetime achievement` IN ('andrew rule and john silvester', 'sandra harvey and lindsay simpson', 'marele day')", -11.6628761017], [" SELECT COUNT(*) FROM w WHERE `lifetime achievement` IS NOT NULL AND `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND year > 2005\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` IN ('andrew rule, john silverster', 'sandra harvey', 'lindsay simpson', 'marele day') AND `best non - fiction` = 'na' AND `reader 's vote` = 'na'", -11.936662714533496], [" SELECT COUNT(*) FROM w WHERE (`best non - fiction` = 'na' OR `reader 's vote` = 'na') AND `lifetime achievement` != 'na' AND `year` > 2005\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`best non - fiction` = 'na' OR `reader 's vote` = 'na') AND `lifetime achievement` != 'na' AND `lifetime achievement` IN ('andrew rule and john silvester', 'sandra harvey and lindsay simpson', 'marele day')", -14.922515797842003], [" SELECT COUNT(DISTINCT(lifetime achievement)) FROM w WHERE `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `year` > 2005\nNeuralSQL2: SELECT COUNT(DISTINCT(lifetime achievement)) FROM w WHERE `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND lifetime achievement IN ('andrew rule and john silvester', 'sandra harvey and lindsay simpson', 'marele day')", -15.122564680132003], [" SELECT COUNT(*) FROM w WHERE `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND `lifetime achievement` != 'na' AND year > 2005\nNeuralSQL2: SELECT COUNT(DISTINCT(`lifetime achievement`)) FROM w WHERE `best non - fiction` = 'na' AND `reader 's vote` = 'na' AND (`lifetime achievement` = 'andrew rule and john silvester' OR `lifetime achievement` = 'sandra harvey and lindsay simpson' OR `lifetime achievement` = 'marele day')", -15.790964872294]]}, "65": {"question": "13 viral family have an helical virion shape", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [7], [7], [7], [7], [6], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.5280505508160003], [" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.5309022181499998], [" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.537306031695], [" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.539324163095], [" SELECT COUNT(*) FROM w WHERE virion shape LIKE '%helical%'", -2.453168612876], [" SELECT COUNT(*) FROM w WHERE virion shape LIKE '%helical%'", -2.46345277622], [" SELECT COUNT(*) FROM w WHERE `virion shape` LIKE '%helical%'", -2.5046831334500004], [" SELECT COUNT(*) FROM w WHERE `virion shape` LIKE '%helical%'", -2.5653616482199997], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'helical'", -2.7584815949070003], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape LIKE '%helical%'", -3.361798208274]]}, "88": {"question": "no player in the running back position be pick after the 10th round", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.025747396766], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.026645794956], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.028604851916], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.029256571806], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.034087132706], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.0343567355960002], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.0366460693859998], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.036948607506], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10", -1.0369769292459998], [" SELECT COUNT(*) FROM w WHERE position = 'running back' AND round > 10\n```", -3.976199469076]]}, "113": {"question": "neither team score for the first 2 game of the world cup in france", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [2], [2], [1], [1], [1], [1], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '% - %'", -5.602646881299999], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '% - %'", -5.617152492799999], [" SELECT COUNT(DISTINCT(SUBSTR(score, 1, INSTR(score, '-') - 1))) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%'", -7.537764046845], [" SELECT COUNT(DISTINCT(SUBSTR(score, 1, INSTR(score, '-') - 1))) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%'", -7.542462181074001], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -8.196999518796002], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > 0", -8.476023396490003], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -9.219246182712999], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > 0 AND CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) > 0)", -9.586083361436], [" SELECT COUNT(DISTINCT SUBSTR(score, 1, INSTR(score, '-') - 1)) FROM w WHERE comp = 'world cup' AND venue LIKE '%france%' AND row_id < 2", -9.751680846647004], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND venue LIKE '% france %' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -10.645673434097999]]}, "138": {"question": "bradford city go against port vale 2 time accord to the chart , on 13 september 2008 and 28 march 2009", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.34903646361000007], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.349051870363], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.34905746546], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.34960745184], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.34972035066500007], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.34980630229500004], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.35010523438599994], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.35065390145], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.35101258012700004], [" SELECT COUNT(*) FROM w WHERE opponent = 'port vale'", -0.351668596596]]}, "163": {"question": "jim laker play in fewer match than any of the australian player", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT matches FROM w WHERE player = 'jim laker'", -0.38957244098], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39002664510999996], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39014801426], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39145393659999994], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39218575353], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39230876865], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39237033033999996], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39290597599], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39308670233000004], [" SELECT matches FROM w WHERE player = 'jim laker'", -0.39355490892]]}, "188": {"question": "china have win 39 more gold medal than iran for wushu at the asian game", "gold_answer": 1, "pred_answer": {"0": [[43], [43], [], [43], [43], [43], [], [43], [43], [43]], "1": [[4], [4], [], [4], [4], [4], [], [4], [4], [4]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.0357135906799995], [" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.0470130101], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran'", -2.0474286291899992], [" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.04881593605], [" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.0515275917499993], [" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.0526233968900005], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran'", -2.0565998408299997], [" SELECT gold FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%iran%'", -2.6981297258], [" SELECT gold FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%iran%'", -2.7079078685100004], [" SELECT SUM(gold) FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation LIKE '%iran%'", -3.120688430510001]]}, "240": {"question": "the agricultural panel have 2 member and the labour panel have 5 member", "gold_answer": 0, "pred_answer": {"0": [[4], [], [], [4], [4], [4], [4], [], [], [17]], "1": [[0], [], [], [0], [0], [0], [0], [], [], [17]]}, "nsql": [[" SELECT `agricultural panel` FROM w WHERE row_id = 0\nNeuralSQL2: SELECT `labour panel` FROM w WHERE row_id = 0", -1.8613472783900002], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.96519101357], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -1.97190283496], [" SELECT `agricultural panel` FROM w WHERE row_id = 0\nNeuralSQL2: SELECT `labour panel` FROM w WHERE row_id = 0", -1.99365321698], [" SELECT `agricultural panel` FROM w WHERE row_id = 0\nNeuralSQL2: SELECT `labour panel` FROM w WHERE row_id = 0", -1.9976818161399998], [" SELECT `agricultural panel` FROM w WHERE row_id = 0\nNeuralSQL2: SELECT `labour panel` FROM w WHERE row_id = 0", -1.9999399124100004], [" SELECT `agricultural panel` FROM w WHERE row_id = 0\nNeuralSQL2: SELECT `labour panel` FROM w WHERE row_id = 0", -2.00193357907], [" SELECT `agricultural panel` FROM w WHERE party = 'total'\nNeuralSQL2: SELECT `labour panel` FROM w WHERE party = 'total'", -2.11814017836], [" SELECT agricultural panel FROM w WHERE party = 'total'\nNeuralSQL2: SELECT labour panel FROM w WHERE party = 'total'", -2.2947510244499996], [" SELECT SUM(`agricultural panel`) FROM w WHERE row_id <> 0\nNeuralSQL2: SELECT SUM(`labour panel`) FROM w WHERE row_id <> 0", -7.064392447774002]]}, "296": {"question": "in the 1981 open championship no 1 player achieve their position alone , in other word there be a tie at every position", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place LIKE '%(a)%'", -2.8523910293200005], [" SELECT COUNT(*) FROM w WHERE place LIKE '%(a)%'", -2.8525957791200005], [" SELECT COUNT(*) FROM w WHERE place LIKE '%(a)%'", -2.85473839562], [" SELECT COUNT(*) FROM w WHERE place LIKE '%(a)%'", -2.85876374112], [" SELECT COUNT(*) FROM w WHERE place LIKE '%(a)%'", -2.86226111182], [" SELECT COUNT(*) FROM w WHERE place LIKE '%(a)%'", -2.86337334132], [" SELECT COUNT(*) FROM w WHERE place LIKE '% (a)%'", -3.03626313702], [" SELECT COUNT(*) FROM w WHERE place LIKE '% (a)%'", -3.0397779606199995], [" SELECT COUNT(*) FROM w WHERE place LIKE '% (a)%'", -3.04209333992], [" SELECT COUNT(*) FROM w WHERE place LIKE '%(a)'", -4.725180144319999]]}, "321": {"question": "4 of the team have a minus goal difference while only 4 have score more goal than those against them", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -0.99910240077], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -1.0001332421140001], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -1.00169955696], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -1.00410397163], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -1.0041398155839998], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -1.0048288441900002], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -1.0051760431799999], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -1.00982060002], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0", -1.0193715680799997], [" SELECT COUNT(*) FROM w WHERE difference < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE difference > 0\n```", -3.949908574115]]}, "333": {"question": "there have be 19 game since 13 august 2005 which have an attendance of 60000 or more", "gold_answer": 1, "pred_answer": {"0": [[19], [19], [19], [19], [19], [19], [19], [19], [19], [19]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance >= 60000 AND `date` >= '2005-08-13 00:00:00'", -3.3990752677299994], [" SELECT COUNT(*) FROM w WHERE attendance >= 60000 AND date >= '2005-08-13 00:00:00'", -3.7750866381999995], [" SELECT COUNT(*) FROM w WHERE `attendance` >= 60000 AND `date` >= '2005-08-13 00:00:00'", -3.7817265885899993], [" SELECT COUNT(*) FROM w WHERE `attendance` >= 60000 AND `date` >= '2005-08-13 00:00:00'", -3.7839812984500005], [" SELECT COUNT(*) FROM w WHERE `attendance` >= 60000 AND `date` >= '2005-08-13 00:00:00'", -3.785914385999999], [" SELECT COUNT(*) FROM w WHERE `date` >= '2005-08-13 00:00:00' AND attendance >= 60000", -3.9472262215299994], [" SELECT COUNT(*) FROM w WHERE `date` >= '2005-08-13 00:00:00' AND attendance >= 60000", -3.96584963083], [" SELECT COUNT(*) FROM w WHERE `date` > '2005-08-13 00:00:00' AND attendance >= 60000", -4.42393074956], [" SELECT COUNT(*) FROM w WHERE `attendance` >= 60000 AND `date` >= '2005-08-13'", -4.573090359849999], [" SELECT COUNT(*) FROM w WHERE date > '2005-08-13 00:00:00' AND attendance >= 60000", -4.58658828439]]}, "346": {"question": "no episode of gary unmarried air in december 2009", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.10970168847], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.12501097562], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.12594002812], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.12696177752], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.1306600967500002], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.13373755484], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.1372959972200003], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12%-%'", -2.7608958391600003], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%-%'", -2.8050418716199994], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%-%'", -2.8396804236900004]]}, "371": {"question": "there be more win result than loss result", "gold_answer": 1, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.2886902793699999], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.28869074536], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.28874485157], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.2888024906700001], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.28883337885999993], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.28890574329], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.28906308119], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.28910466452], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.2891812457499999], [" SELECT COUNT(*) FROM w WHERE res = 'win'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE res = 'loss'", -0.28918715622]]}, "426": {"question": "there be only 2 highest rank list in the table", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT `highest rank`) FROM w", -1.34672175372], [" SELECT COUNT(DISTINCT `highest rank`) FROM w", -1.34818001446], [" SELECT COUNT(DISTINCT `highest rank`) FROM w", -1.3540653137600003], [" SELECT COUNT(DISTINCT `highest rank`) FROM w", -1.35437060897], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.7193272366999999], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.7202053929599999], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.72987306277], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.7322128792499998], [" SELECT COUNT(DISTINCT(highest rank)) FROM w", -2.555130739669999], [" SELECT COUNT(DISTINCT `highest rank`) FROM w\n```", -4.13315804244]]}, "479": {"question": "club belenenses , benfica and sporting cp be 3 of 4 place with lisbon as the city", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], "<error>", [3], [1]], "1": [[3], [3], [3], [3], [3], [3], [3], "<error>", [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city = 'lisbon' AND club IN ('belenenses', 'benfica', 'sporting cp')", -3.19413428534], [" SELECT COUNT(*) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city = 'lisbon' AND club IN ('belenenses', 'benfica', 'sporting cp')", -3.1942951179999994], [" SELECT COUNT(*) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city = 'lisbon' AND club IN ('belenenses', 'benfica', 'sporting cp')", -3.1958826740099995], [" SELECT COUNT(*) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city = 'lisbon' AND club IN ('belenenses', 'benfica', 'sporting cp')", -3.20654032943], [" SELECT COUNT(*) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city = 'lisbon' AND club IN ('belenenses', 'benfica', 'sporting cp')", -3.2123854452039993], [" SELECT COUNT(*) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city = 'lisbon' AND club IN ('belenenses', 'benfica', 'sporting cp')", -3.217810568779999], [" SELECT COUNT(*) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city = 'lisbon' AND club IN ('belenenses' , 'benfica' , 'sporting cp')", -3.787729108070001], [" SELECT COUNT(DISTINCT place) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(DISTINCT place) FROM w WHERE city = 'lisbon' AND club IN ('belenenses','benfica','sporting cp')", -6.070904193600202], [" SELECT COUNT(*) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(DISTINCT club) FROM w WHERE city = 'lisbon' AND club IN ('belenenses' , 'benfica' , 'sporting cp')", -6.859202163709997], [" SELECT COUNT(DISTINCT(city)) FROM w WHERE city = 'lisbon'\nNeuralSQL2: SELECT COUNT(DISTINCT(club)) FROM w WHERE club IN ('belenenses','benfica','sporting cp') AND city = 'lisbon'", -10.175290377828672]]}, "504": {"question": "william f goodling be 1 of 6 republican incumbent to be re - elect", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE incumbent = 'william f goodling' AND party = 'republican' AND status = 're - elected'", -2.850124983869999], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE incumbent = 'william f goodling' AND party = 'republican' AND status = 're - elected'", -2.8558494575699997], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE incumbent = 'william f goodling' AND party = 'republican' AND status = 're - elected'", -2.871773905349999], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE incumbent = 'william f goodling' AND party = 'republican' AND status = 're - elected'", -2.8800697004799996], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE incumbent = 'william f goodling' AND party = 'republican' AND status = 're - elected'", -2.883161624429999], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected' AND incumbent = 'william f goodling'", -3.6294655025599996], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected' AND incumbent = 'william f goodling'", -3.6555067738499996], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'republican' AND status = 're - elected' AND incumbent = 'william f goodling'", -3.656268098159999], [" SELECT COUNT(*) FROM w WHERE `status` = 're - elected' AND party = 'republican'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `status` = 're - elected' AND party = 'republican' AND incumbent = 'william f goodling'", -4.32339271307], [" SELECT COUNT(*) FROM w WHERE `first elected` = '1986' AND status = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `first elected` = '1986' AND status = 're - elected' AND incumbent = 'william f goodling'", -10.900910913380004]]}, "529": {"question": "1 game be on may 20 in houston", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.778018220024], [" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.7788034540040001], [" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.7794919860040003], [" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.7797952609640001], [" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.7801952764939999], [" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.7815625895739998], [" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.7815893308540001], [" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.7817038274840001], [" SELECT COUNT(*) FROM w WHERE date = 'may 20' AND location = 'houston'", -0.781801663214], [" SELECT COUNT(*) FROM w WHERE `date` = 'may 20' AND location = 'houston'", -2.6280458972739997]]}, "554": {"question": "south korea earn no gold medal in the competition", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'south korea'", -0.5554388233], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.55564436474], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.5558601485999999], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.5563750228399998], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.5564384661400001], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.5566534792], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.55692317754], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.5583783883999999], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.55844354417], [" SELECT gold FROM w WHERE nation = 'south korea'", -0.5591645742499999]]}, "579": {"question": "hurac\u00e1n have a 38 in 1992 - 93 and a 43 in 1993 - 94", "gold_answer": 1, "pred_answer": {"0": [["38"], ["38"], ["38"], ["38"], ["38"], ["38"], ["38"], ["38"], ["38"], [1900]], "1": [[43], [43], [43], [43], [43], [43], [43], [43], [43], [43]]}, "nsql": [[" SELECT 1992 - 93 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.74132628619], [" SELECT 1992 - 93 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.7451457970500002], [" SELECT 1992 - 93 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.7456964047099999], [" SELECT 1992 - 93 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.7512665237299998], [" SELECT 1992 - 93 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.75211869724], [" SELECT 1992 - 93 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.7541126165899996], [" SELECT 1992 - 93 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.75901984887], [" SELECT `1992 - 93` FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT `1993 - 94` FROM w WHERE team = 'hurac\u00e1n'", -1.8943345959950006], [" SELECT `1992 - 93` FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT `1993 - 94` FROM w WHERE team = 'hurac\u00e1n'", -1.9001023228899996], [" SELECT 1992 - 92 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -3.1544929109999993]]}, "601": {"question": "wayne rose have direct only 1 title echo in the table", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE directed by = 'wayne rose' AND title = 'echo'", -2.0178190172], [" SELECT COUNT(*) FROM w WHERE directed by = 'wayne rose' AND title = 'echo'", -2.0189056806099996], [" SELECT COUNT(*) FROM w WHERE directed by = 'wayne rose' AND title = 'echo'", -2.02259764956], [" SELECT COUNT(*) FROM w WHERE directed by = 'wayne rose' AND title = 'echo'", -2.0346982674899996], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose' AND title = 'echo'", -2.1246871735500004], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose' AND title = 'echo'", -2.1259708067500007], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose' AND title = 'echo'", -2.1355693079699996], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose' AND title = 'echo'", -2.1460186367300005], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose' AND title = 'echo'", -2.1488652106299995], [" SELECT COUNT(*) FROM w WHERE title = 'echo' AND `directed by` = 'wayne rose'", -3.06791177016]]}, "2": {"question": "david moore direct 5 episode of series 2 of merlin", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8843142936699999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8850919787599998], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8862853498999999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8864134448000001], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.88699084169], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8870445454139999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8870869832600002], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'david moore'", -0.8872230704900002], [" SELECT COUNT(DISTINCT no overall) FROM w WHERE directed by = 'david moore'", -3.361541664571999], [" SELECT COUNT(DISTINCT(no overall)) FROM w WHERE `directed by` = 'david moore'", -5.783086883176002]]}, "10": {"question": "thomas chatelle score 4 more goal than mat\u00edas su\u00e1rez , the next highest rank player in the belgian first dvision a league who play in the belgian cup", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT league FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT league FROM w WHERE player = 'matias suarez'", -1.7479232740100004], [" SELECT league FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT league FROM w WHERE player = 'matias suarez'", -1.7499923563699997], [" SELECT league FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT league FROM w WHERE player = 'matias suarez'", -1.7516873162], [" SELECT league FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT league FROM w WHERE player = 'matias suarez'", -1.7599007756299998], [" SELECT league FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT league FROM w WHERE player = 'matias suarez'", -1.7601969903999994], [" SELECT league FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT league FROM w WHERE player = 'matias suarez'", -1.7656454339599998], [" SELECT `league` FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT `league` FROM w WHERE player = 'matias suarez'", -3.738432518579999], [" SELECT `league` FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT `league` FROM w WHERE player = 'matias suarez'", -3.7402588873], [" SELECT SUM(league) FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'matias suarez'", -3.8527378871900013], [" SELECT SUM(league) FROM w WHERE player = 'thomas chatelle'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'matias suarez'", -3.8675050613100006]]}, "95": {"question": "sweden and canada be the only country on the table that do not receive a medal in 2 of the category", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [0], [0], [0], [0], [2], [0]], "1": [[0], [2], [2], [2], [0], [0], [0], [0], [2], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden' OR nation = 'canada') AND (gold = 0 OR silver = 0 OR bronze = 0)", -5.2541251778300015], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation IN ('sweden (swe)', 'canada (can)') AND (gold = 0 OR silver = 0 OR bronze = 0)", -5.729015757070002], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'sweden (swe)' OR nation = 'canada (can)' AND (gold = 0 OR silver = 0 OR bronze = 0)", -6.101882933869999], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation IN ('sweden (swe)','canada (can)') AND (gold = 0 OR silver = 0 OR bronze = 0)", -6.336989527590002], [" SELECT COUNT(*) FROM w WHERE (gold = 0 AND silver = 0) OR (gold = 0 AND bronze = 0) OR (silver = 0 AND bronze = 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden (swe)' OR nation = 'canada (can)') AND ((gold = 0 AND silver = 0) OR (gold = 0 AND bronze = 0) OR (silver = 0 AND bronze = 0))", -6.736614472176], [" SELECT COUNT(*) FROM w WHERE (gold = 0 AND silver = 0) OR (gold = 0 AND bronze = 0) OR (silver = 0 AND bronze = 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation IN ('sweden (swe)', 'canada (can)') AND ((gold = 0 AND silver = 0) OR (gold = 0 AND bronze = 0) OR (silver = 0 AND bronze = 0))", -7.817960075713998], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0 AND bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation IN ('sweden (swe)','canada (can)') AND gold = 0 AND silver = 0 AND bronze = 0", -7.911978173530004], [" SELECT COUNT(*) FROM w WHERE gold = 0 AND silver = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation IN ('sweden (swe)','canada (can)') AND gold = 0 AND silver = 0", -7.971873852498], [" SELECT COUNT(*) FROM w WHERE gold = 0 OR silver = 0 OR bronze = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'sweden (swe)' AND (gold = 0 OR silver = 0 OR bronze = 0) OR nation = 'canada (can)' AND (gold = 0 OR silver = 0 OR bronze = 0)", -8.404894944059999], [" SELECT COUNT(*) FROM w WHERE (gold = 0 AND silver = 0) OR (gold = 0 AND bronze = 0) OR (silver = 0 AND bronze = 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (nation = 'sweden (swe)' AND gold = 0 AND bronze = 0) OR (nation = 'canada (can)' AND gold = 0 AND silver = 0)", -10.893938840530007]]}, "118": {"question": "patty sheehan , judy rankin , and kathy whitworth be all captain that win the cup 2 time", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [1], [1], [1], [2], [2], [2], [2]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[2], [2], [2], [1], [1], [1], "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth'", -2.8488691229469993], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth'", -2.852316810383], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' OR `europe captain` = 'patty sheehan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' OR `europe captain` = 'judy rankin'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' OR `europe captain` = 'kathy whitworth'", -4.236571268027999], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -4.499794023753001], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -4.503696379229997], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -4.509000232481998], [" SELECT COUNT(*) FROM w WHERE (usa captain = 'patty sheehan' OR europe captain = 'patty sheehan') AND (usa captain = 'patty sheehan' OR europe captain = 'patty sheehan')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (usa captain = 'judy rankin' OR europe captain = 'judy rankin') AND (usa captain = 'judy rankin' OR europe captain = 'judy rankin')\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE (usa captain = 'kathy whitworth' OR europe captain = 'kathy whitworth') AND (", -5.554581521878303], [" SELECT COUNT(*) FROM w WHERE (usa captain = 'patty sheehan' OR europe captain = 'patty sheehan') AND (usa captain = 'patty sheehan' OR europe captain = 'patty sheehan')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (usa captain = 'judy rankin' OR europe captain = 'judy rankin') AND (usa captain = 'judy rankin' OR europe captain = 'judy rankin')\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE (usa captain = 'kathy whitworth' OR europe captain = 'kathy whitworth') AND (", -5.5601053971639045], [" SELECT COUNT(*) FROM w WHERE (usa captain = 'patty sheehan' OR europe captain = 'patty sheehan') AND (usa captain = 'patty sheehan' OR europe captain = 'patty sheehan')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (usa captain = 'judy rankin' OR europe captain = 'judy rankin') AND (usa captain = 'judy rankin' OR europe captain = 'judy rankin')\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE (usa captain = 'kathy whitworth' OR europe captain = 'kathy whitworth') AND (", -5.574535713827798], [" SELECT COUNT(*) FROM w WHERE (`usa captain` = 'patty sheehan' OR `europe captain` = 'patty sheehan') AND (`usa captain` = 'patty sheehan' OR `europe captain` = 'patty sheehan')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`usa captain` = 'judy rankin' OR `europe captain` = 'judy rankin') AND (`usa captain` = 'judy rankin' OR `europe captain` = 'judy rankin')\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE (`usa captain` = '", -6.998921469950004]]}, "143": {"question": "none of the athlete receive a medal for pommel horse", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `record medal event` = 'pommel horse'", -2.10056433384], [" SELECT COUNT(*) FROM w WHERE `record medal event` = 'pommel horse'", -2.1015275178899997], [" SELECT COUNT(*) FROM w WHERE `record medal event` = 'pommel horse'", -2.10974083117], [" SELECT COUNT(*) FROM w WHERE `record medal event` = 'pommel horse'", -2.1133900003800004], [" SELECT COUNT(*) FROM w WHERE `record medal event` = 'pommel horse'", -2.11945016454], [" SELECT COUNT(*) FROM w WHERE record medal event = 'pommel horse'", -2.13907031479], [" SELECT COUNT(*) FROM w WHERE record medal event = 'pommel horse'", -2.15184501208], [" SELECT COUNT(*) FROM w WHERE `record medal event` LIKE '%pommel horse%'", -2.8617253349799996], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE `record medal event` LIKE '%pommel horse%'", -4.124376696912], [" SELECT COUNT(*) FROM w WHERE `record medal event` = 'pommel horse'\n```", -4.67271147863]]}, "168": {"question": "there be 2 player with the highest number of total goal ian robin and chris topping", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total goals = (SELECT MAX(total goals) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND total goals = (SELECT MAX(total goals) FROM w)", -2.838851648275999], [" SELECT COUNT(*) FROM w WHERE total goals = (SELECT MAX(total goals) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND total goals = (SELECT MAX(total goals) FROM w)", -2.839846764266], [" SELECT COUNT(*) FROM w WHERE total goals = (SELECT MAX(total goals) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND total goals = (SELECT MAX(total goals) FROM w)", -2.846239198116], [" SELECT COUNT(*) FROM w WHERE total goals = (SELECT MAX(total goals) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND total goals = (SELECT MAX(total goals) FROM w)", -2.8482322536059996], [" SELECT COUNT(*) FROM w WHERE `total goals` = (SELECT MAX(`total goals`) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND `total goals` = (SELECT MAX(`total goals`) FROM w)", -3.503886926536], [" SELECT COUNT(*) FROM w WHERE `total goals` = (SELECT MAX(`total goals`) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND `total goals` = (SELECT MAX(`total goals`) FROM w)", -3.506227039926], [" SELECT COUNT(*) FROM w WHERE `total goals` = (SELECT MAX(`total goals`) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND `total goals` = (SELECT MAX(`total goals`) FROM w)", -3.5160310417360003], [" SELECT COUNT(*) FROM w WHERE `total goals` = (SELECT MAX(`total goals`) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `total goals` = (SELECT MAX(`total goals`) FROM w) AND name = 'ian robins'", -3.972662427416], [" SELECT COUNT(*) FROM w WHERE total goals = (SELECT MAX(total goals) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND total goals = (SELECT MAX(total goals) FROM w)\n```", -5.171575178265999], [" SELECT COUNT(*) FROM w WHERE total goals = (SELECT MAX(total goals) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'ian robins' AND total goals = (SELECT MAX(total goals) FROM w)\n```", -5.191172881116]]}, "193": {"question": "china have win 40 more gold medal than iran for wushu at the asian game", "gold_answer": 0, "pred_answer": {"0": [[], [], [43], [43], [43], [43], [43], [43], [43], [43]], "1": [[], [], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran'", -1.9726112895639993], [" SELECT gold FROM w WHERE nation = 'china'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran'", -1.979792774849], [" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.1991651217139996], [" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.1992566777539992], [" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.199593057034], [" SELECT gold FROM w WHERE nation = 'china (chn)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'iran (irn)'", -2.2086529558500003], [" SELECT gold FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%iran%'", -2.425641803904], [" SELECT gold FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%iran%'", -2.4325779154939995], [" SELECT gold FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%iran%'", -2.4349616594109995], [" SELECT SUM(gold) FROM w WHERE nation LIKE '%china%'\nNeuralSQL2: SELECT SUM(gold) FROM w WHERE nation LIKE '%iran%'", -3.3798289967539996]]}, "218": {"question": "march be the month that air the most episode with 5", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%'", -1.912678046117], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%'", -1.9169150864789999], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%'", -1.9180471125470002], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%'", -1.9238159134769999], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%'", -1.926392065469], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%'", -1.958234032928], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%-%'", -2.6694008648390004], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%-%'", -2.6762676210390004], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-%-%'", -2.676577105979], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-03-__'", -3.9702998594679997]]}, "270": {"question": "2 home team have the same score as the away team that they be play", "gold_answer": 0, "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE home team score = away team score", -1.3546961508], [" SELECT COUNT(*) FROM w WHERE home team score = away team score", -1.3552757699999998], [" SELECT COUNT(*) FROM w WHERE home team score = away team score", -1.3580377939], [" SELECT COUNT(*) FROM w WHERE home team score = away team score", -1.3583945775], [" SELECT COUNT(*) FROM w WHERE home team score = away team score", -1.3596450056], [" SELECT COUNT(*) FROM w WHERE home team score = away team score", -1.3608564461], [" SELECT COUNT(*) FROM w WHERE home team score = away team score", -1.3624965881], [" SELECT COUNT(*) FROM w WHERE `home team score` = `away team score`", -1.4924159443999998], [" SELECT COUNT(*) FROM w WHERE `home team score` = `away team score`", -1.4933911708], [" SELECT COUNT(*) FROM w WHERE `home team score` = `away team score`", -1.4991787159000003]]}, "326": {"question": "kardinia park be 1 of 2 venue where the home team score be higher than the away team score", "gold_answer": 1, "pred_answer": {"0": ["<error>", [2], [2], [2], [2], [2], [2], [2], [2], "<error>"], "1": [[0], "<error>", "<error>", "<error>", "<error>", [1], "<error>", [1], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `home team score` > `away team score`\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `home team score` > `away team score` AND venue = 'kardinia park'", -4.131433867337999], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR", -5.624822881532804], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR", -5.693977205271205], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team", -5.9589764107472005], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score", -5.9925167435608], [" SELECT COUNT(DISTINCT venue) FROM w WHERE CAST(REPLACE(`home team score`,'(','') AS INT) > CAST(REPLACE(`away team score`,'(','') AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND CAST(REPLACE(`home team score`,'(','') AS INT) > CAST(REPLACE(`away team score`,'(','') AS INT)", -6.405701596476998], [" SELECT COUNT(DISTINCT venue) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) > CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) > CAST(SUBSTR(`away team score`, 1, INSTR(`", -6.432565632314603], [" SELECT COUNT(DISTINCT venue) FROM w WHERE CAST(REPLACE(`home team score`,'(','') AS INT) > CAST(REPLACE(`away team score`,'(','') AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND CAST(REPLACE(`home team score`,'(','') AS INT) > CAST(REPLACE(`away team score`,'(','') AS INT)", -6.466261435272999], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR", -6.758323706486904], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`home team score`, INSTR(`home team score`, '(') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '(') + 1)) AS INT)) > (CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, INSTR(`away", -6.887238610228305]]}, "351": {"question": "less than half the 1984 - 1985 season game be play in the boston garden", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.47177220865400005], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.47275652289400005], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.473494393394], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.47414513275399994], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.474281422844], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.47474176254399997], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.47512444939399995], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.47581451640399997], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.47601914434400006], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'\n```", -3.410450272694]]}, "363": {"question": "the new zealand breaker win 2 game more than the melbourne tiger", "gold_answer": 0, "pred_answer": {"0": ["<error>", [2], [2], [2], [0], [0], [0], [0], [2], [10]], "1": ["<error>", [3], [3], [3], [0], [0], [0], [0], [3], [11]]}, "nsql": [[" SELECT SUM(won) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(won) FROM w WHERE team = 'melbourne tigers'", -3.229434994589999], [" SELECT SUM(CAST(SUBSTR(`last 5`, 1, INSTR(`last 5`, '-') - 1) AS INT)) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`last 5`, 1, INSTR(`last 5`, '-') - 1) AS INT)) FROM w WHERE team = 'melbourne tigers'", -6.642554961008002], [" SELECT SUM(CAST(SUBSTR(`last 5`, 1, INSTR(`last 5`, '-') - 1) AS INT)) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`last 5`, 1, INSTR(`last 5`, '-') - 1) AS INT)) FROM w WHERE team = 'melbourne tigers'", -6.661807900286999], [" SELECT SUM(CAST(SUBSTR(`last 5`, 1, INSTR(`last 5`, '-') - 1) AS INT)) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`last 5`, 1, INSTR(`last 5`, '-') - 1) AS INT)) FROM w WHERE team = 'melbourne tigers'", -6.670207140817], [" SELECT SUM(CAST(SUBSTR(`% won`, 1, INSTR(`% won`, '%') - 1) AS INT)) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`% won`, 1, INSTR(`% won`, '%') - 1) AS INT)) FROM w WHERE team = 'melbourne tigers'", -6.942570368633999], [" SELECT SUM(CAST(SUBSTR(`% won`, 1, INSTR(`% won`, '%') - 1) AS INT)) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`% won`, 1, INSTR(`% won`, '%') - 1) AS INT)) FROM w WHERE team = 'melbourne tigers'", -6.945815590466999], [" SELECT SUM(CAST(SUBSTR(`% won`, 1, INSTR(`% won`, '%') - 1) AS INT)) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`% won`, 1, INSTR(`% won`, '%') - 1) AS INT)) FROM w WHERE team = 'melbourne tigers'", -6.973836901370996], [" SELECT COUNT(*) FROM w WHERE team = 'new zealand breakers' AND `% won` = '100.0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'melbourne tigers' AND `% won` = '100.0'", -7.394147500726001], [" SELECT SUM(CAST(SUBSTR(`last 5`, 1, INSTR(`last 5`, ' - ') - 1) AS INT)) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`last 5`, 1, INSTR(`last 5`, ' - ') - 1) AS INT)) FROM w WHERE team = 'melbourne tigers'", -7.514515713970998], [" SELECT SUM(CAST(REPLACE(home, '-', '') AS INT)) FROM w WHERE team = 'new zealand breakers'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(home, '-', '') AS INT)) FROM w WHERE team = 'melbourne tigers'", -9.152701942275998]]}, "376": {"question": "carmelo anthony be the leading scorer on the nugget for 12 out of the 13 game play in november", "gold_answer": 1, "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND high points LIKE 'carmelo anthony%'", -5.17956373502], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND high points LIKE 'carmelo anthony%'", -5.1936053735200005], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND high points LIKE 'carmelo anthony%'", -5.208782612049999], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE 'carmelo anthony%' AND `date` LIKE 'november%'", -5.221140605519999], [" SELECT COUNT(*) FROM w WHERE date LIKE '%november%' AND high points LIKE 'carmelo anthony%'", -5.65454431815], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%carmelo anthony%' AND `date` LIKE '%november%'", -6.00824195906], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND `high points` LIKE '%carmelo anthony%'", -6.048892772320001], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE 'carmelo anthony%' AND `date` LIKE '%november%'", -6.068923526150001], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november %' AND high points LIKE '%carmelo anthony%'", -6.40997016325], [" SELECT COUNT(DISTINCT game) FROM w WHERE date LIKE 'november%' AND high points LIKE '%carmelo anthony%'", -8.990992070215999]]}, "401": {"question": "no team score more than 10 against cambridge university", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opposing team = 'cambridge university' AND against > 10", -1.7292304983799998], [" SELECT COUNT(*) FROM w WHERE `opposing team` = 'cambridge university' AND `against` > 10", -2.59075524773], [" SELECT COUNT(*) FROM w WHERE `opposing team` = 'cambridge university' AND `against` > 10", -2.5975313337799992], [" SELECT COUNT(*) FROM w WHERE `against` > 10 AND `opposing team` = 'cambridge university'", -2.8072276125899993], [" SELECT COUNT(*) FROM w WHERE `against` > 10 AND `opposing team` = 'cambridge university'", -2.8116742233599994], [" SELECT COUNT(*) FROM w WHERE `against` > 10 AND `opposing team` = 'cambridge university'", -2.81273734173], [" SELECT COUNT(*) FROM w WHERE `against` > 10 AND `opposing team` = 'cambridge university'", -2.8158556853299994], [" SELECT COUNT(*) FROM w WHERE `opposing team` = 'cambridge university' AND against > 10", -2.9251096944600006], [" SELECT COUNT(*) FROM w WHERE `opposing team` = 'cambridge university' AND against > 10", -2.92916578719], [" SELECT COUNT(*) FROM w WHERE `opposing team` = 'cambridge university' AND against > 10", -2.9365647497300005]]}, "456": {"question": "the wildcat never score more than 7 in any game they lose", "gold_answer": 1, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], "<error>", [13]]}, "nsql": [[" SELECT MAX(`wildcats points`) FROM w WHERE result = 'loss'", -1.9677726798100004], [" SELECT MAX(`wildcats points`) FROM w WHERE result = 'loss'", -1.9722259957100001], [" SELECT MAX(`wildcats points`) FROM w WHERE result = 'loss'", -1.9737025861099997], [" SELECT MAX(`wildcats points`) FROM w WHERE result = 'loss'", -1.9768650595100001], [" SELECT MAX(`wildcats points`) FROM w WHERE result = 'loss'", -1.98061584251], [" SELECT MAX(`wildcats points`) FROM w WHERE result = 'loss'", -2.00978965111], [" SELECT MAX(wildcats points) FROM w WHERE result = 'loss'", -2.13096335061], [" SELECT MAX(wildcats points) FROM w WHERE result = 'loss'", -2.1363768197099997], [" SELECT MAX(`wildcats points`) FROM w WHERE `wildcats points` < `opponents`", -4.78414257861], [" SELECT SUM(wildcats points) FROM w WHERE result = 'loss'", -4.990713034610001]]}, "509": {"question": "2 be the fewest point that roger dutton / tony wright receive", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.6519445112600002], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.6521952811999999], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.6524537508100001], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.65300237803], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.6533705039799997], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.65387756613], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.6539613561999998], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.65397628408], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.6558037888999998], [" SELECT points FROM w WHERE rider = 'roger dutton / tony wright'", -0.6564030786899999]]}, "534": {"question": "in all election where the democrat hold the seat , the party maintain the office", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [0], [0], "<error>", [3]], "1": [[3], [3], [3], [3], [3], [3], [0], [0], "<error>", [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE party = 'democratic'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND result = 're - elected'", -4.102097581070001], [" SELECT COUNT(*) FROM w WHERE party = 'democratic'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND result = 're - elected'", -4.1040264768400005], [" SELECT COUNT(*) FROM w WHERE party = 'democratic'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND result = 're - elected'", -4.131877694390002], [" SELECT COUNT(*) FROM w WHERE party = 'democratic'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND result = 're - elected'", -4.140073832170001], [" SELECT COUNT(*) FROM w WHERE party = 'democratic' AND result = 're - elected'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND result = 're - elected'", -5.88394477726], [" SELECT COUNT(*) FROM w WHERE party = 'democratic'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND result LIKE '% - elected'", -6.462386135839999], [" SELECT COUNT(*) FROM w WHERE result LIKE '%democrat%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%democrat%' AND result LIKE '%maintained%'", -7.11106089752], [" SELECT COUNT(*) FROM w WHERE result LIKE '%democratic%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%democratic%' AND result LIKE '%re - elected%'", -7.711538918540002], [" SELECT COUNT(*) FROM w WHERE `incumbent party` = 'democratic'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `incumbent party` = 'democratic' AND `result` LIKE '%democratic%'", -8.144032705596], [" SELECT COUNT(*) FROM w WHERE party = 'democratic' AND incumbent != 'none (district created)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND incumbent != 'none (district created)' AND `result` LIKE '%re - elected%'", -12.17672676157]]}, "559": {"question": "no other game have total rebound smaller than 1048", "gold_answer": 0, "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `total rebounds` < 1048", -0.91229973803], [" SELECT COUNT(*) FROM w WHERE `total rebounds` < 1048", -0.9144294858700001], [" SELECT COUNT(*) FROM w WHERE `total rebounds` < 1048", -0.9146177623099999], [" SELECT COUNT(*) FROM w WHERE `total rebounds` < 1048", -0.91554831107], [" SELECT COUNT(*) FROM w WHERE `total rebounds` < 1048", -0.91576492151], [" SELECT COUNT(*) FROM w WHERE `total rebounds` < 1048", -0.91852241087], [" SELECT COUNT(*) FROM w WHERE `total rebounds` < 1048", -0.91951494673], [" SELECT COUNT(*) FROM w WHERE `total rebounds` < 1048", -0.9215105468699999], [" SELECT COUNT(*) FROM w WHERE total rebounds < 1048", -1.5141908426700001], [" SELECT COUNT(*) FROM w WHERE total rebounds < 1048", -1.5146865888699999]]}, "584": {"question": "1 safe result be choreograph by jason gilkison to filet from le r\u00eave", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE results = 'safe' AND choreographer (s) = 'jason gilkison' AND music = 'filet from le reve'", -3.15995695246], [" SELECT COUNT(*) FROM w WHERE results = 'safe' AND choreographer (s) = 'jason gilkison' AND music = 'filet from le reve'", -3.1651907635700005], [" SELECT COUNT(*) FROM w WHERE choreographer (s) = 'jason gilkison' AND music = 'filet from le reve' AND results = 'safe'", -3.4029884217400013], [" SELECT COUNT(*) FROM w WHERE choreographer (s) = 'jason gilkison' AND music = 'filet from le reve' AND results = 'safe'", -3.41699405706], [" SELECT COUNT(*) FROM w WHERE results = 'safe' AND choreographer (s) = 'jason gilkison' AND music = 'filet from le r\u00eave'", -3.5776388273899986], [" SELECT COUNT(*) FROM w WHERE results = 'safe' AND choreographer (s) = 'jason gilkison' AND music = 'filet from le r\u00eave'", -3.601246404799999], [" SELECT COUNT(*) FROM w WHERE choreographer (s) = 'jason gilkison' AND results = 'safe' AND music = 'filet from le reve'", -3.659524030870001], [" SELECT COUNT(*) FROM w WHERE choreographer (s) = 'jason gilkison' AND results = 'safe' AND music = 'filet from le reve'", -3.6636012691899986], [" SELECT COUNT(*) FROM w WHERE choreographer (s) = 'jason gilkison' AND results = 'safe' AND music = 'filet from le r\u00eave'", -4.112608610064998], [" SELECT COUNT(*) FROM w WHERE results = 'safe' AND music = 'filet from le reve' AND choreographer (s) LIKE '%jason gilkison%'", -4.365000965959999]]}, "15": {"question": "a majority of the people who score under par be from the united state", "gold_answer": 1, "pred_answer": {"0": [[11], [11], [11], [11], [4], [11], [0], [4], [4], [4]], "1": [[8], [8], [8], [8], [3], [8], [0], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `to par` < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` < 0 AND country = 'united states'", -2.6555628117600016], [" SELECT COUNT(*) FROM w WHERE `to par` < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` < 0 AND country = 'united states'", -2.6602515895499987], [" SELECT COUNT(*) FROM w WHERE `to par` < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` < 0 AND country = 'united states'", -2.66478468069], [" SELECT COUNT(*) FROM w WHERE `to par` < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` < 0 AND country = 'united states'", -2.6729003258899997], [" SELECT COUNT(*) FROM w WHERE `to par` LIKE '%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` LIKE '%-%' AND country = 'united states'", -4.034373248080001], [" SELECT COUNT(*) FROM w WHERE `to par` < '0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` < '0' AND country = 'united states'", -4.035422572269999], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND country = 'united states'", -4.11866509592], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`, 'e', '0') AS INT) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`, 'e', '0') AS INT) < 0 AND country = 'united states'", -5.5745584354640005], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(to par, 'e', '0') AS INT) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE CAST(REPLACE(to par, 'e', '0') AS INT) < 0 AND country = 'united states'", -6.461894967709002], [" SELECT COUNT(*) FROM w WHERE (CAST(REPLACE(`to par`, 'e', '0') AS INT) < 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (CAST(REPLACE(`to par`, 'e', '0') AS INT) < 0) AND country = 'united states'", -8.287677791034005]]}, "32": {"question": "west berkshire brewery 's maggs magnificent mild 2 time win an award at the siba national beer competition between 1995 and 2009", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND competition = 'siba national beer competition' AND year BETWEEN 1995 AND 2009", -3.7610249703300007], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND competition = 'siba national beer competition' AND year BETWEEN 1995 AND 2009", -3.7729976891399994], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND competition = 'siba national beer competition' AND year BETWEEN 1995 AND 2009", -3.8665346005999996], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND competition = 'siba national beer competition' AND year >= 1995 AND year <= 2009", -4.805749221020001], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND year BETWEEN 1995 AND 2009 AND competition = 'siba national beer competition'", -4.965444488849999], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND `competition` = 'siba national beer competition' AND year BETWEEN 1995 AND 2009", -5.855113167180001], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND `competition` = 'siba national beer competition' AND year BETWEEN 1995 AND 2009", -5.86077198257], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND competition = 'siba national beer competition' AND (year >= 1995 AND year <= 2009)", -6.32080615272], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1995 AND 2009 AND `beer name` = 'maggs magnificent mild' AND competition = 'siba national beer competition'", -6.460346752159998], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND (year BETWEEN 1995 AND 2009) AND competition = 'siba national beer competition'", -7.37171886858]]}, "40": {"question": "france 's competitor all finish better than 5th", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE rank < 5", -1.03735332901], [" SELECT COUNT(*) FROM w WHERE rank < 5", -1.0373536750099999], [" SELECT COUNT(*) FROM w WHERE rank < 5", -1.04202590879], [" SELECT COUNT(*) FROM w WHERE rank < 5", -1.0426572674799999], [" SELECT COUNT(*) FROM w WHERE rank < 5", -1.0426576574800002], [" SELECT COUNT(*) FROM w WHERE rank < 5", -1.04462874654], [" SELECT COUNT(*) FROM w WHERE rank < 5", -1.0455118319999999], [" SELECT COUNT(*) FROM w WHERE rank <= 5", -1.63192482594], [" SELECT COUNT(*) FROM w WHERE rank <= 5", -1.63498127654], [" SELECT COUNT(*) FROM w WHERE rank <= 5", -1.63819521101]]}, "125": {"question": "the buffalo bill lose more game than they win", "gold_answer": 1, "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.3300710814500003], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.3302814896300001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.33080655028], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.3310847544799997], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.33109102866], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.33155781253], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.3322584350200002], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.3344305718399998], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.3346927643339996], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.3347918234400005]]}, "148": {"question": "there be a 5 mhz frequency change range", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [2], [2], [2], [2], "<error>", [3], [6]]}, "nsql": [[" SELECT COUNT(DISTINCT `frequency mhz`) FROM w", -2.7253457162939996], [" SELECT COUNT(DISTINCT `frequency mhz`) FROM w", -2.725454923434], [" SELECT COUNT(DISTINCT(`frequency mhz`)) FROM w", -3.936809880668], [" SELECT COUNT(*) FROM w WHERE frequency mhz >= 103.1 AND frequency mhz <= 106.5", -7.54119177253], [" SELECT COUNT(*) FROM w WHERE frequency mhz BETWEEN 103.1 AND 106.5", -7.8881428940900005], [" SELECT COUNT(*) FROM w WHERE frequency mhz BETWEEN 100 AND 105", -8.03473166674], [" SELECT COUNT(*) FROM w WHERE frequency mhz >= 100 AND frequency mhz <= 105", -8.31675692663], [" SELECT COUNT(DISTINCT frequency) FROM w WHERE frequency > 100", -8.5640744871], [" SELECT COUNT(DISTINCT(`frequency mhz`)) FROM w WHERE `frequency mhz` BETWEEN 100 AND 110", -10.884511072500002], [" SELECT COUNT(*) FROM w WHERE (frequency mhz >= 100 AND frequency mhz < 110) OR (frequency mhz >= 90 AND frequency mhz < 100) OR (frequency mhz >= 80 AND frequency mhz < 90) OR (frequency mhz >= 70 AND frequency mhz < 80) OR (frequency mhz >= 60 AND frequency mhz < 70) OR (frequency mhz >= 50 AND frequency mhz < 60) OR (frequency mhz >= 40 AND frequency mhz < 50) OR (frequency mhz >= 30 AND frequency mhz < 40) OR (frequency mhz >= 20 AND frequency mhz < 30) OR (frequency mhz >= 10 AND frequency mhz < 20)", -17.37670040886999]]}, "173": {"question": "the toronto blue jay play in 8 game with an attendance lower than 5000 in may of the 1991 season", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'may%' AND attendance < 5000", -3.0858124371199995], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may%' AND attendance < 5000", -3.0938664489899996], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may%' AND attendance < 5000", -3.1036064315200003], [" SELECT COUNT(*) FROM w WHERE attendance < 5000 AND date LIKE 'may%'", -3.68429747443], [" SELECT COUNT(*) FROM w WHERE attendance < 5000 AND `date` LIKE 'may%'", -3.9845272852200004], [" SELECT COUNT(*) FROM w WHERE attendance < 5000 AND `date` LIKE 'may%'", -3.985741232940001], [" SELECT COUNT(*) FROM w WHERE attendance < 5000 AND `date` LIKE 'may%'", -3.99161977202], [" SELECT COUNT(*) FROM w WHERE attendance < 5000 AND `date` LIKE 'may %'", -4.6659327218], [" SELECT COUNT(*) FROM w WHERE attendance < 5000 AND `date` LIKE 'may %'", -4.6760981278600005], [" SELECT COUNT(*) FROM w WHERE attendance < 5000 AND `date` LIKE '%may%'", -5.1946475771600005]]}, "198": {"question": "the detroit piston lose 6 game during this period of their 2010 - 2011 season", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [12], [8], [8], [8], [8]], "1": ["<error>", "<error>", "<error>"], "2": [[6], [12], [4]], "3": ["<error>", "<error>", "<error>"], "4": [[4], [8], [1194]], "5": ["<error>", "<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE 'l%'", -2.2860635772899998], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l %'", -3.08901050259], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l %'", -3.09020444509], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l %'", -3.09364210729], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l % - %'", -3.3823978402900003], [" SELECT COUNT(*) FROM w WHERE record LIKE '%-%'", -3.5807064437899996], [" SELECT COUNT(*) FROM w WHERE SUBSTR(score, 1, 1) = 'l'", -4.476378074840001], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l%'\nQ2: {how many = a2} games were played at the palace of auburn hills.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `location attendance` LIKE 'the palace of auburn hills%'\nQ3: the detroit pistons had {how many = a3} wins during this period of their 2010 - 2011 season.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE score LIKE 'w%'", -24.04128700225499], [" SELECT COUNT(*) FROM w WHERE score LIKE '%l%'\nQ2: the detroit pistons had {how many = a2} games during this period of their 2010 - 2011 season.\nNeuralSQL2: SELECT COUNT(*) FROM w\nQ3: the detroit pistons lost {how many = a3} games during this period of their 2010 - 2011 season.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE score LIKE '%l%'\nQ4: the detroit pistons lost {how many = a4} games during this period of their 2010 - 2011 season.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE score LIKE", -24.728584523991003], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l %'\nQ2: the detroit pistons won {how many = a2} games during this period of their 2010 - 2011 season.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE 'w %'\nQ3: the detroit pistons had {how many = a3} wins during this period of their 2010 - 2011 season.\nNeuralSQL3: SELECT SUM(CAST(SUBSTR(score, 2, INSTR(score, '-') - 2) AS INT)) FROM w\nQ4: the detroit pistons had {how many = a4} losses during this period of their 2010", -25.925728998889998]]}, "223": {"question": "january be the month that air the most episode with 5", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.039934654491], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.0448970954339996], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.0471406337530005], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.048582738689], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.048662363799], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.048753244666], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.0515132306400004], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.0519603751810003], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%-%'", -3.079264042455], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-__ 00:00:00'", -4.481016939643999]]}, "248": {"question": "2 game have a score of more than 10 point", "gold_answer": 1, "pred_answer": {"0": [[2], [0], [5], [5], [5], [0], [0], [0], [0], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > 10", -3.598352039256001], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.6208283932238], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.63909052432532], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.643742215812319], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.6445511663593195], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.6713554681617], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.6838749773924007], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.685794685262141], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.6957112704035016], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, '-') + 1)) AS INT)) > 10", -5.154119861184499]]}, "300": {"question": "in the 1981 open championship no 1 player achieve their position alone , except argentina", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [16], [16], [16], [16], [16], [16], [0], [3]], "1": [[0], [0], [1], [1], [1], [1], [1], [1], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place NOT LIKE '%t%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'argentina' AND place NOT LIKE '%t%'", -4.218261823740001], [" SELECT COUNT(*) FROM w WHERE place NOT LIKE '%t%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'argentina' AND place NOT LIKE '%t%'", -4.314192859909999], [" SELECT COUNT(*) FROM w WHERE place LIKE 't%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place LIKE 't%' AND country = 'argentina'", -4.567122919669999], [" SELECT COUNT(*) FROM w WHERE place LIKE 't%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place LIKE 't%' AND country = 'argentina'", -4.5866118143899985], [" SELECT COUNT(*) FROM w WHERE place LIKE 't%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'argentina' AND place LIKE 't%'", -5.0285137439800005], [" SELECT COUNT(*) FROM w WHERE place LIKE 't%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'argentina' AND place LIKE 't%'", -5.048415362210001], [" SELECT COUNT(*) FROM w WHERE place LIKE '%t%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'argentina' AND place LIKE '%t%'", -5.515076184220002], [" SELECT COUNT(*) FROM w WHERE place LIKE '%t%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'argentina' AND place LIKE '%t%'", -5.53501228396], [" SELECT COUNT(DISTINCT player) FROM w WHERE place NOT LIKE '%t%'\nNeuralSQL2: SELECT COUNT(DISTINCT player) FROM w WHERE place NOT LIKE '%t%' AND country = 'argentina'", -6.233854997419898], [" SELECT COUNT(DISTINCT place) FROM w WHERE place LIKE 't%'\nNeuralSQL2: SELECT COUNT(DISTINCT place) FROM w WHERE place LIKE 't%' AND country = 'argentina'", -8.074431559642003]]}, "356": {"question": "the united state contribute the most player of all the country", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": ["<error>"], "2": [[6]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -1.2608521988899999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -1.2631878420899998], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -1.26497987279], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -1.26679986689], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -1.26719572959], [" SELECT COUNT(DISTINCT player) FROM w WHERE nationality = 'united states'", -1.9374281633200001], [" SELECT COUNT(DISTINCT player) FROM w WHERE nationality = 'united states'", -1.9471263780799999], [" SELECT COUNT(DISTINCT player) FROM w WHERE nationality = 'united states'", -1.948149557384], [" SELECT COUNT(DISTINCT(player)) FROM w WHERE nationality = 'united states'", -2.89132730568], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nQ2: {how many = a2} players are from the united states.\nNeuralSQL2: SELECT COUNT(DISTINCT player) FROM w WHERE nationality = 'united states'\nQ3: {how many = a3} players are from the united states and play as forward.\nNeuralSQL3: SELECT COUNT(DISTINCT player) FROM w WHERE nationality = 'united states' AND position = 'forward'\nQ4: {how many = a4} players are from the united states and play as forward and play for the jazz in 2000s.\nNeuralSQL4: SELECT COUNT", -37.77662958219998]]}, "381": {"question": "the nugget lose all 6 game play at the pepsi center during this span", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], "<error>", [0], "<error>", "<error>", "<error>", [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'l%'", -3.2890625902600004], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'l%'", -3.291125764444], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'l%'", -3.29862560906], [" SELECT COUNT(*) FROM w WHERE location = 'pepsi center' AND score LIKE 'l%'", -4.12557010462], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE '%pepsi center%' AND score LIKE 'l%'", -4.50978926279], [" SELECT COUNT(*) FROM w WHERE location = 'pepsi center' AND result = 'l'", -4.98851366389], [" SELECT COUNT(*) FROM w WHERE location = 'pepsi center' AND score LIKE 'l % - %'", -5.095617990525], [" SELECT COUNT(*) FROM w WHERE location = 'pepsi center' AND score LIKE 'l % - %'", -5.112077606866001], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE '%l%'", -5.98517797776], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center' AND score LIKE 'l%'", -6.893716185160001]]}, "393": {"question": "only 3 of the project have be complete so far", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [9], [9], [9], [3], [0], [3]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[3]], "5": ["<error>"], "6": [[3]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE construction completed != 'none'", -2.41649261108], [" SELECT COUNT(*) FROM w WHERE `construction completed` != 'none'", -2.57958493837], [" SELECT COUNT(*) FROM w WHERE `construction completed` != 'none'", -2.5803986485599997], [" SELECT COUNT(*) FROM w WHERE `construction completed` != 'none'", -2.5824219356700002], [" SELECT COUNT(*) FROM w WHERE `construction completed` IS NOT NULL", -2.76251430747], [" SELECT COUNT(*) FROM w WHERE `construction completed` IS NOT NULL", -2.7635068312800004], [" SELECT COUNT(*) FROM w WHERE construction completed IS NOT NULL", -2.88978051369], [" SELECT COUNT(*) FROM w WHERE `construction completed` <> 'none'", -3.4826856027899997], [" SELECT COUNT(*) FROM w WHERE `construction completed` LIKE '% - % - %'", -6.21625315822], [" SELECT COUNT(*) FROM w WHERE `construction completed` != 'none'\nQ2: {how many = a2} of the projects have been completed so far.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `construction completed` != 'none'\nQ3: {how many = a3} of the projects have been completed so far.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `construction completed` != 'none'\nQ4: {how many = a4} of the projects have been completed so far.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `construction completed` != 'none'\nQ5", -16.193443350180505]]}, "406": {"question": "glasgow govan be 1 the 5 constituency with result as snp gain", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.139210701618], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.1408073933879999], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.1408777023420005], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.141850522402], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.1442169037370002], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.1442191952820004], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.14580177291], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.15369653778], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.153936560768], [" SELECT COUNT(*) FROM w WHERE result = 'snp gain'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constituency = 'glasgow govan' AND result = 'snp gain'", -1.1543652312739998]]}, "431": {"question": "south korea be the only country to have host equestrian at the asian game more than 1 time , in seoul 2 time", "gold_answer": 0, "pred_answer": {"0": [[], [], [0], [0], [0], [0], [0], [], "<error>", [0]], "1": [[0], [0], [0], [0], [0], [0], [0], "<error>", "<error>", [0]]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY location HAVING COUNT(*) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea'", -3.9578482249139997], [" SELECT COUNT(DISTINCT location) FROM w GROUP BY location HAVING COUNT(location) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea'", -5.9630618195839995], [" SELECT COUNT(DISTINCT location) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' AND location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)", -6.777730069463], [" SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' AND location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)", -7.1229756219540015], [" SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1) AND location = 'south korea'", -7.5723593612765026], [" SELECT COUNT(DISTINCT location) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'seoul' AND location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)", -7.657590637988001], [" SELECT COUNT(*) FROM w WHERE location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'seoul' AND location IN (SELECT location FROM w GROUP BY location HAVING COUNT(*) > 1)", -8.002319266899002], [" SELECT COUNT(DISTINCT location) FROM w GROUP BY location HAVING COUNT(*) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' AND COUNT(*) > 1", -8.081942432638003], [" SELECT COUNT(DISTINCT(location)) FROM w WHERE COUNT(location) > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'south korea' AND COUNT(location) > 1", -8.319489150559], [" SELECT COUNT(*) FROM (SELECT DISTINCT location FROM w GROUP BY location HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM (SELECT DISTINCT location FROM w GROUP BY location HAVING COUNT(*) > 1) WHERE location = 'south korea'", -8.903603871643996]]}, "486": {"question": "2 episode title consist entirely of number", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.1449946859400004], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.14931351133], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.14947547397], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.1495380415399996], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.15165414307], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.15185600233], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.15187302283], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.1519986990400004], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'", -2.15361535211], [" SELECT COUNT(*) FROM w WHERE episode title REGEXP '^[0-9]+$'\n```", -5.133967084670001]]}, "539": {"question": "in the 2002 - 2003 season there be 6 cash , a match play smaller than 13 and 7 event", "gold_answer": 1, "pred_answer": {"0": [[], [], [], [], [], [], [], [], [0], [0]], "1": [[], [], [], [], [], [], [], [], [0], [0]], "2": [[], [], [], [], [], [], [], [], [0], [0]]}, "nsql": [[" SELECT cashes FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL2: SELECT match play FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL3: SELECT events FROM w WHERE season = '2002-03-01 00:00:00'", -2.0757979842000007], [" SELECT cashes FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL2: SELECT match play FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL3: SELECT events FROM w WHERE season = '2002-03-01 00:00:00'", -2.076870316196001], [" SELECT cashes FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL2: SELECT match play FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL3: SELECT events FROM w WHERE season = '2002-03-01 00:00:00'", -2.0769970879539983], [" SELECT cashes FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL2: SELECT match play FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL3: SELECT events FROM w WHERE season = '2002-03-01 00:00:00'", -2.1161489253099983], [" SELECT cashes FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL2: SELECT match play FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL3: SELECT events FROM w WHERE season = '2002-03-01 00:00:00'", -2.1171005701989993], [" SELECT cashes FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL2: SELECT match play FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL3: SELECT events FROM w WHERE season = '2002-03-01 00:00:00'", -2.117334375874], [" SELECT cashes FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL2: SELECT match play FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL3: SELECT events FROM w WHERE season = '2002-03-01 00:00:00'", -2.1177302872560007], [" SELECT cashes FROM w WHERE season = '2002 - 2003'\nNeuralSQL2: SELECT match play FROM w WHERE season = '2002 - 2003'\nNeuralSQL3: SELECT events FROM w WHERE season = '2002 - 2003'", -2.729431079033], [" SELECT COUNT(*) FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2002-03-01 00:00:00'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE season = '2002-03-01 00:00:00'", -4.194238632872002], [" SELECT COUNT(*) FROM w WHERE season = '2002 - 2003'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2002 - 2003'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE season = '2002 - 2003'", -4.928274825750004]]}, "564": {"question": "pga championship when top - 25 be less than 4 have 0 win with cut made 6 and top - 5 be greater than 0", "gold_answer": 0, "pred_answer": {"0": [[], [], [], [], [], [null], [null], [], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT wins FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND `cuts made` = 6 AND `top - 5` > 0", -2.9804065649999996], [" SELECT wins FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND `cuts made` = 6 AND `top - 5` > 0", -3.01360333397], [" SELECT wins FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND cuts made = 6 AND `top - 5` > 0", -3.2887668931400005], [" SELECT wins FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND cuts made = 6 AND `top - 5` > 0", -3.29508662591], [" SELECT wins FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND cuts made = 6 AND `top - 5` > 0", -3.3038646217700007], [" SELECT SUM(wins) FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND `cuts made` = 6 AND `top - 5` > 0", -3.7826740072500002], [" SELECT SUM(wins) FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND cuts made = 6 AND `top - 5` > 0", -4.418859436839998], [" SELECT `wins` FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND `cuts made` = 6 AND `top - 5` > 0", -4.590049937499999], [" SELECT COUNT(DISTINCT wins) FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND `cuts made` = 6 AND `top - 5` > 0", -6.624438918638], [" SELECT COUNT(*) FROM w WHERE tournament = 'pga championship' AND `top - 25` < 4 AND wins > 0 AND `cuts made` = 6 AND `top - 5` > 0\n```", -7.750918316840002]]}, "589": {"question": "atl\u00e9tico ciudad play 28 match with an average of less than 0.61", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average < 0.61", -1.2832397207400004], [" SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average < 0.61", -1.2833689906999994], [" SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average < 0.61", -1.28349283266], [" SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average < 0.61", -1.2843073409200003], [" SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average < 0.61", -1.28431939429], [" SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average < 0.61", -1.2857985398000003], [" SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average < 0.61", -1.286681823194], [" SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average < 0.61", -1.288048684858], [" SELECT COUNT(*) FROM w WHERE average < 0.61 AND team = 'atl\u00e9tico ciudad'", -2.7934239028399994], [" SELECT COUNT(*) FROM w WHERE average < 0.61 AND team = 'atl\u00e9tico ciudad'", -2.8254675715029998]]}, "20": {"question": "except for slovakia , all other country be from north america", "gold_answer": 1, "pred_answer": {"0": [[10], [2], [2], [10], [10], [10], [2], [0], [10], [1]], "1": [[1], [1], [1], [1], [0], [0], [0], [1], [11], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality IN ('canada', 'united states')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia'", -3.926472338999999], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE nationality IN ('canada', 'united states')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia'", -4.230312222328], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE nationality IN ('canada', 'united states')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia'", -4.238520904542999], [" SELECT COUNT(*) FROM w WHERE nationality IN ('canada','united states')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia'", -4.7718046759599995], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada' OR nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia' AND (nationality = 'canada' OR nationality = 'united states')", -5.325020536], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada' OR nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia' AND (nationality = 'canada' OR nationality = 'united states')", -5.345136010520001], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE nationality IN ('canada', 'united states')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia' AND nationality IN ('canada', 'united states')", -5.555703836323], [" SELECT COUNT(*) FROM w WHERE nationality LIKE '%america%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia'", -6.434894158280001], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada' OR nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'slovakia' OR nationality = 'canada' OR nationality = 'united states'", -6.553667839079997], [" SELECT COUNT(DISTINCT nationality) FROM w WHERE nationality = 'slovakia'\nNeuralSQL2: SELECT COUNT(DISTINCT nationality) FROM w WHERE nationality LIKE '%america%'", -7.502642821370999]]}, "45": {"question": "the jazz have 2 player with the last name dawkins but their time on the team do not overlap", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [0], [2]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [0], [2]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'", -2.7069610635500005], [" SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'", -2.7092050400699996], [" SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'", -2.709930339269999], [" SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'", -2.71084546119], [" SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins'", -2.91491674583], [" SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins'", -2.92200806592], [" SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins'", -2.9608174136400005], [" SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '%dawkins%'", -3.457465200160002], [" SELECT COUNT(*) FROM w WHERE player LIKE 'dawkins%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE 'dawkins%'", -4.83116226045], [" SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player LIKE '% dawkins'\n```", -5.2672141227]]}, "62": {"question": "9 viral family have a replication site in the cytoplasm", "gold_answer": 0, "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `replication site` = 'cytoplasm'", -1.46544425216], [" SELECT COUNT(*) FROM w WHERE replication site = 'cytoplasm'", -1.4750404519899998], [" SELECT COUNT(*) FROM w WHERE replication site = 'cytoplasm'", -1.4860994155200002], [" SELECT COUNT(*) FROM w WHERE replication site = 'cytoplasm'", -1.4909341014800004], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'cytoplasm'", -1.5074475936399998], [" SELECT COUNT(*) FROM w WHERE replication site = 'cytoplasm'", -1.5109420817800003], [" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'cytoplasm'", -1.7667701810499996], [" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'cytoplasm'", -1.7830003677999997], [" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'cytoplasm'", -1.79388402539], [" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'cytoplasm'", -1.80667566885]]}, "70": {"question": "2 of the viral disease be in baltimore group iii", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7348266832225002], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7367428106225001], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7371952847225001], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.738410495806], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7387150721659999], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7398815702239999], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7399486253625001], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.740277342196], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7407363209860001], [" SELECT COUNT(*) FROM w WHERE `baltimore group` = 'group iii'", -0.7411409719040001]]}, "155": {"question": "collingwood score more point than fitzroy in their 1962 vfl match", "gold_answer": 1, "pred_answer": {"0": [[10], [10], [10], [10], [10], ["10.14 "], [10], [10], [10], [10]], "1": [[9], [9], [9], [9], [9], ["9.11 "], [9], [9], [9], []]}, "nsql": [[" SELECT CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) FROM w WHERE `away team` = 'fitzroy'", -4.1356403039649985], [" SELECT CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) FROM w WHERE `away team` = 'fitzroy'", -4.140132650120001], [" SELECT CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) FROM w WHERE `away team` = 'fitzroy'", -4.140425333267002], [" SELECT CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) FROM w WHERE `away team` = 'fitzroy'", -4.14420911159], [" SELECT CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) FROM w WHERE `away team` = 'fitzroy'", -4.148386620955002], [" SELECT SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) FROM w WHERE `away team` = 'fitzroy'", -4.926033696290002], [" SELECT CAST(REPLACE(`home team score`,'(','') AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(REPLACE(`away team score`,'(','') AS INT) FROM w WHERE `away team` = 'fitzroy'", -5.124859119489997], [" SELECT CAST(REPLACE(`home team score`,'(','') AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(REPLACE(`away team score`,'(','') AS INT) FROM w WHERE `away team` = 'fitzroy'", -5.1438084752719995], [" SELECT CAST(SUBSTR(home team score, 1, INSTR(home team score, '(') - 1) AS INT) FROM w WHERE home team = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(away team score, 1, INSTR(away team score, '(') - 1) AS INT) FROM w WHERE away team = 'fitzroy'", -5.922996398086004], [" SELECT CAST(REPLACE(`home team score`,'(','') AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(REPLACE(`home team score`,'(','') AS INT) FROM w WHERE `home team` = 'fitzroy'", -6.8646933572970035]]}, "178": {"question": "sergio garc\u00eda , p\u00e1draig harrington and charlie wi tie for 4th place with + 1 to par", "gold_answer": 1, "pred_answer": {"0": [[3], [1], [1], [1], [3], [1], [1], [1], [1], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'", -2.7717160979999997], [" SELECT COUNT(DISTINCT place) FROM w WHERE to par = '+ 1'", -3.0303436135760005], [" SELECT COUNT(DISTINCT place) FROM w WHERE to par = '+ 1'", -3.0597650337615], [" SELECT COUNT(DISTINCT place) FROM w WHERE to par = '+ 1'", -3.060471289377], [" SELECT COUNT(*) FROM w WHERE to par = '+ 1'", -3.1210663638999994], [" SELECT COUNT(DISTINCT(place)) FROM w WHERE to par = '+ 1'", -4.409251356045999], [" SELECT COUNT(DISTINCT place) FROM w WHERE `to par` = '+ 1' AND player IN ('sergio garc\u00eda','p\u00e1draig harrington','charlie wi')", -6.243137771339997], [" SELECT COUNT(DISTINCT place) FROM w WHERE `to par` = '+ 1' AND player IN ('sergio garc\u00eda','p\u00e1draig harrington','charlie wi')", -6.274203885713001], [" SELECT COUNT(DISTINCT place) FROM w WHERE to par = '+ 1' AND player IN ('sergio garc\u00eda','p\u00e1draig harrington','charlie wi')", -6.532088339629499], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND player IN ('sergio garc\u00eda','p\u00e1draig harrington','charlie wi')", -7.434493252533002]]}, "203": {"question": "the detroit piston win by over 10 point in 4 game during this period of their 2010 - 2011 season", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [3], [0], [0], [3], [0], [0], "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -4.258251619734001], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, '-') + 1)) AS INT)) > 10", -5.6446283861493995], [" SELECT COUNT(*) FROM w WHERE team = 'detroit pistons' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -7.251175166579937], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND (CAST(SUBSTR(score, 3, INSTR(score, '-') - 3) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 2, LENGTH(score) - (INSTR(score, '-') + 2)) AS INT)) > 10", -9.522733108343001], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND (CAST(SUBSTR(score, 4, INSTR(score, '-') - 4) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 2, LENGTH(score) - (INSTR(score, ' - ') + 2)) AS INT)) > 10", -10.304365615897002], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) - CAST(SUBSTR(score, 2, INSTR(score, '-') - 2) AS INT) > 10", -11.164379747658996], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND (CAST(SUBSTR(score, 2, INSTR(score, ' - ') - 2) AS INT) - CAST(SUBSTR(score, INSTR(score, ' - ') + 2, LENGTH(score) - (INSTR(score, ' - ') + 2)) AS INT)) > 10\n```", -12.013109267119004], [" SELECT COUNT(*) FROM w WHERE team = 'detroit pistons' AND score LIKE 'w % - %' AND (CAST(SUBSTR(score, 3, INSTR(score, '-') - 3) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 2, LENGTH(score) - (INSTR(score, '-') + 2)) AS INT)) > 10", -12.916633522936397], [" SELECT COUNT(*) FROM w WHERE `score` LIKE '% - % (ot)' AND (CAST(SUBSTR(`score`, 1, INSTR(`score`, '-') - 1) AS INT) - CAST(SUBSTR(`score`, INSTR(`score`, '-') + 1, INSTR(`score`, '(') - (INSTR(`score`, '-') + 1)) AS INT)) > 10", -13.859996778088002], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND CAST(REPLACE(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)), ')', '') AS INT) - CAST(REPLACE(SUBSTR(score, 4, INSTR(score, '-') - 4), '(', '') AS INT) > 10", -16.054490885810004]]}, "228": {"question": "only 7 player be transfer at the end of their contract", "gold_answer": 1, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.7822295005799998], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.7829312372900001], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.78356371549], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.7872954499499999], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.78794749375], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.78806542242], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.7882095671899999], [" SELECT COUNT(*) FROM w WHERE type = 'end of contract'", -0.7894895503700001], [" SELECT COUNT(*) FROM w WHERE `type` = 'end of contract'", -1.9615971279300002], [" SELECT COUNT(*) FROM w WHERE `type` = 'end of contract'", -1.9705621473800001]]}, "253": {"question": "rosales of arizona diamond have more loss than johnson", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE loss LIKE '%johnson%'", -2.6748196484499984], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE loss LIKE '%johnson%'", -2.682893577026], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE loss LIKE '%johnson%'", -2.6898964064139985], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE loss LIKE '%johnson%'", -2.6904566710170004], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE loss LIKE '%johnson%'", -2.696061283125001], [" SELECT COUNT(*) FROM w WHERE loss LIKE 'rosales%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE loss LIKE 'johnson%'", -3.7110357043170006], [" SELECT COUNT(*) FROM w WHERE `loss` LIKE '%rosales%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `loss` LIKE '%johnson%'", -4.4113925605299995], [" SELECT COUNT(*) FROM w WHERE `loss` LIKE '%rosales%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `loss` LIKE '%johnson%'", -4.414864186864999], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%' AND loss LIKE '%(% - %)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE loss LIKE '%johnson%' AND loss LIKE '%(% - %)'", -7.428740904229999], [" SELECT COUNT(*) FROM w WHERE opponent = 'rosales' AND score LIKE '% - %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'johnson' AND score LIKE '% - %'", -8.651437802825003]]}, "278": {"question": "during the 1993 new york jet season , the new york jet play 8 game at the game site name the meadowlands", "gold_answer": 1, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.7540141611200001], [" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.7561138164399999], [" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.75651755444], [" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.7572323938499999], [" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.7574022974], [" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.7584267413299999], [" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.75892300925], [" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.7593788103000001], [" SELECT COUNT(*) FROM w WHERE `game site` = 'the meadowlands'", -0.76272227472], [" SELECT COUNT(*) FROM w WHERE game site = 'the meadowlands'", -1.5911156055000002]]}, "330": {"question": "\u9322 and \u65a4 be the only character that have metric value measure in g", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [3], [3], [3], [3], [6], [6], [3], [6]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE metric value LIKE '%g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (character = '\u9322' OR character = '\u65a4') AND metric value LIKE '%g'", -5.025076544394], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '%g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character IN ('\u9322', '\u65a4') AND metric value LIKE '%g'", -5.31091200902], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE metric value LIKE '% g' AND character IN ('\u9322','\u65a4')", -5.460225297615], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE metric value LIKE '% g' AND character IN ('\u9322','\u65a4')", -5.473226431329998], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE metric value LIKE '% g' AND character IN ('\u9322','\u65a4')", -5.47698230358], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE metric value LIKE '% g' AND (character = '\u9322' OR character = '\u65a4')", -5.5448126035600005], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '%g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`character` = '\u9322' OR `character` = '\u65a4') AND `metric value` LIKE '%g'", -5.83818606658], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '%g%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `metric value` LIKE '%g%' AND (character = '\u9322' OR character = '\u65a4')", -6.311861792780001], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% g' AND (character LIKE '%\u9322%' OR character LIKE '%\u65a4%')", -6.79769344584], [" SELECT COUNT(DISTINCT character) FROM w WHERE metric value LIKE '%g'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character IN ('\u9322', '\u65a4') AND metric value LIKE '%g'", -7.377332411096001]]}, "386": {"question": "the bobcat have a record of 3 win and 7 loss", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [10]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.315473435205503], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.316535672186104], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.329950436278202], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.332561017339502], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '", -4.336575700954504], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -4.480869899997241], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -4.482590741569401], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -4.504275097851294], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT))\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-')", -5.1663067840764985], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) > CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, '-') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE record LIKE '% - %' AND CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) < CAST(SUBSTR(record, INSTR(record, '-') +", -5.169171386705017]]}, "411": {"question": "kenneth ferrie and geoff ogilvy of australia be the only player to score a + 1 to par", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [2], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND country = 'australia' AND `to par` = '+ 1'", -4.498587372356001], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND country = 'australia' AND `to par` = '+ 1'", -4.586531295521999], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND country = 'australia'", -4.956495332693], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND country = 'australia'", -4.988744424930001], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND country = 'australia'", -4.991006202283], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND country = 'australia'", -4.996863781877997], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND country = 'australia'", -5.005513369230001], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND player IN ('kenneth ferrie', 'geoff ogilvy') AND country = 'australia'", -5.887800141295], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND player IN ('kenneth ferrie' , 'geoff ogilvy')", -7.491320965430001], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player LIKE '%kenneth ferrie%' OR player LIKE '%geoff ogilvy%') AND country = 'australia'", -7.624533116112999]]}, "423": {"question": "spiral galaxy have 2 ngc number in the list", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT ngc number) FROM w WHERE object type = 'spiral galaxy'", -1.7324025819700002], [" SELECT COUNT(DISTINCT ngc number) FROM w WHERE object type = 'spiral galaxy'", -1.7325334213400005], [" SELECT COUNT(DISTINCT ngc number) FROM w WHERE object type = 'spiral galaxy'", -1.7381283980399995], [" SELECT COUNT(DISTINCT ngc number) FROM w WHERE object type = 'spiral galaxy'", -1.73858093229], [" SELECT COUNT(DISTINCT ngc number) FROM w WHERE object type = 'spiral galaxy'", -1.740788858474], [" SELECT COUNT(DISTINCT ngc number) FROM w WHERE object type = 'spiral galaxy'", -1.7416324960849996], [" SELECT COUNT(DISTINCT ngc number) FROM w WHERE object type = 'spiral galaxy'", -1.74297228299], [" SELECT COUNT(*) FROM w WHERE object type = 'spiral galaxy'", -1.8684138836500002], [" SELECT COUNT(*) FROM w WHERE object type = 'spiral galaxy'", -1.870972973], [" SELECT COUNT(DISTINCT ngc number) FROM w WHERE object type = 'spiral galaxy'\n```", -4.2546710695]]}, "436": {"question": "the 49ers lose 2 out of 14 game int eh 1947 season", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7053970165849998], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7070915286149999], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7082862846150001], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7095516335850001], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7103151470749999], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7110173266350003], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7117609041149998], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7118943449650003], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.712521081125], [" SELECT COUNT(*) FROM w WHERE result = 'l'\nNeuralSQL2: SELECT COUNT(*) FROM w", -0.7149524243650002]]}, "461": {"question": "the wildcat loss 1 game in november and 2 game in september", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [0], "<error>", [0]], "1": [[1], [1], [1], [1], [1], [1], [0], [0], "<error>", [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%nov%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%sep%'", -3.706958031000001], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%nov%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%sep%'", -3.71384486989], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE 'nov%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE 'sep%'", -3.7904440846100007], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE 'nov%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE 'sep%'", -3.7905717389299993], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE '%nov%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE '%sep%'", -4.371799348040001], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE '%nov%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE '%sep%'", -4.382802733410002], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE 'nov %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE 'sep %'", -5.403859401289998], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE '%-nov-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE '%-sep-%'", -5.4610286822799985], [" SELECT COUNT(*) FROM w WHERE MONTH(`date`) = 11 AND result = 'loss'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE MONTH(`date`) = 9 AND result = 'loss'", -5.51546247785], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '% - 11 - %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '% - 09 - %'", -6.016749477185999]]}, "516": {"question": "at 459 feet , the schiesinger building be the fourth largest building in johannesburg", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name = 'schlesinger building'", -1.6892957357360001], [" SELECT COUNT(*) FROM w WHERE name = 'schlesinger building'", -1.6951145768360003], [" SELECT COUNT(*) FROM w WHERE name = 'schlesinger building'", -1.6966441076359997], [" SELECT COUNT(*) FROM w WHERE name = 'schlesinger building'", -1.7030254501359998], [" SELECT COUNT(*) FROM w WHERE name = 'schlesinger building' AND city = 'johannesburg'", -2.6857731506360008], [" SELECT COUNT(*) FROM w WHERE name = 'schlesinger building' AND city = 'johannesburg'", -2.6902386079559992], [" SELECT COUNT(*) FROM w WHERE name = 'schlesinger building' AND city = 'johannesburg'", -2.7079889694259993], [" SELECT COUNT(*) FROM w WHERE name = 'schlesinger building' AND city = 'johannesburg'", -2.710965359036], [" SELECT COUNT(*) FROM w WHERE name = 'schiesinger building' AND city = 'johannesburg'", -3.490114345835999], [" SELECT COUNT(*) FROM w WHERE city = 'johannesburg' AND name = 'schlesinger building'", -3.9965951237360007]]}, "569": {"question": "australia receive 0 gold medal and more than 1 bronze", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6465073290559997], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6465224628530003], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6466182089860004], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6468140182029997], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6470665795480001], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.647685974063], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6501902548780001], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6505252704530001], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6509054382180001], [" SELECT gold FROM w WHERE nation = 'australia'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'australia'", -0.6517727135250002]]}, "594": {"question": "12.8 be 1 of the milepost list for the location rockland", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'rockland' AND milepost = '12.8'", -2.4930891469899996], [" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'rockland' AND milepost = '12.8'", -2.4938503258300004], [" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'rockland' AND milepost = '12.8'", -2.49581501304], [" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'rockland' AND milepost = '12.8'", -2.4988672344799996], [" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'rockland' AND milepost = '12.8'", -2.50435989856], [" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'rockland' AND milepost = '12.8'", -2.50656450371], [" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'rockland' AND milepost = '12.8'", -2.50699659186], [" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE milepost = '12.8' AND location = 'rockland'", -2.6760305887700007], [" SELECT COUNT(DISTINCT milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE milepost = '12.8' AND location = 'rockland'", -2.6784918311900006], [" SELECT COUNT(milepost) FROM w WHERE location = 'rockland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'rockland' AND milepost = '12.8'", -3.32524030471]]}, "25": {"question": "the only player not from the united state or canada be from norway", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality != 'united states' AND nationality != 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality != 'united states' AND nationality != 'canada'", -3.05424536062], [" SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')", -3.37751571642], [" SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')", -3.39039162664], [" SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')", -3.3997745979200005], [" SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')", -3.4070778829399995], [" SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')", -3.41297110651], [" SELECT COUNT(*) FROM w WHERE nationality != 'united states' AND nationality != 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality != 'united states' AND nationality != 'canada' AND player = 'david laliberte'", -8.268559648239998], [" SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada') AND player = 'david laliberte'", -8.92623770638], [" SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality NOT IN ('united states', 'canada') AND player = 'r j anderson'", -8.961480651410001], [" SELECT COUNT(*) FROM w WHERE nationality != 'united states' AND nationality != 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality != 'united states' AND nationality != 'canada' AND NOT EXISTS (SELECT * FROM w WHERE nationality = 'united states' OR nationality = 'canada')", -9.467127683283003]]}, "50": {"question": "the jazz have at least 3 guard that be on the team during 1979 - 80 , 1 be james donaldson", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'guard' AND '1979 - 80' IN (years for jazz)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'james donaldson' AND position = 'guard' AND '1979 - 80' IN (years for jazz)", -5.598744288090002], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND '1979 - 80' IN (years for jazz)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'james donaldson' AND position = 'guard' AND '1979 - 80' IN (years for jazz)", -5.602181106544001], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND '1979 - 80' IN (years for jazz)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'james donaldson' AND position = 'guard' AND '1979 - 80' IN (years for jazz)", -5.615324910187001], [" SELECT COUNT(*) FROM w WHERE years for jazz = '1979 - 80' AND position = 'guard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE years for jazz = '1979 - 80' AND position = 'guard' AND player = 'james donaldson'", -5.738654821799999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%guard%' AND years for jazz LIKE '%1979 - 80%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'james donaldson' AND position LIKE '%guard%' AND years for jazz LIKE '%1979 - 80%'", -5.886154860475], [" SELECT COUNT(*) FROM w WHERE `years for jazz` LIKE '%1979 - 80%' AND position LIKE '%guard%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `years for jazz` LIKE '%1979 - 80%' AND position LIKE '%guard%' AND player = 'james donaldson'", -5.960092198959999], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND `years for jazz` LIKE '1979 - 80'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'james donaldson' AND position = 'guard' AND `years for jazz` LIKE '1979 - 80'", -6.4281002832850005], [" SELECT COUNT(*) FROM w WHERE position LIKE '%guard%' AND `years for jazz` LIKE '%1979 - 80%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'james donaldson' AND position LIKE '%guard%' AND `years for jazz` LIKE '%1979 - 80%'", -6.550714615350001], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND '1979 - 80' LIKE '%' + years for jazz + '%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'james donaldson' AND position = 'guard' AND '1979 - 80' LIKE '%' + years for jazz + '%'", -8.546008671109998], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND '1979-80' LIKE '%' || years for jazz || '%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'james donaldson' AND position = 'guard' AND '1979-80' LIKE '%' || years for jazz || '%'", -9.628095566990003]]}, "75": {"question": "galina voskoboeva never play the same opponent more than 1 time", "gold_answer": 1, "pred_answer": {"0": [[5], [], [1], [1], [1], [1], [1], [1], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT opponent) FROM w", -1.53129715692], [" SELECT COUNT(*) FROM w GROUP BY opponent HAVING COUNT(*) > 1", -2.95290273001], [" SELECT COUNT(*) FROM w WHERE opponent = 'matea mezak'", -3.1425750950999993], [" SELECT COUNT(*) FROM w WHERE opponent = 'matea mezak'", -3.1467810479000002], [" SELECT COUNT(*) FROM w WHERE opponent = 'matea mezak'", -3.1527392892999995], [" SELECT COUNT(*) FROM w WHERE opponent = 'matea mezak'", -3.1529069024999994], [" SELECT COUNT(*) FROM w WHERE opponent = 'matea mezak'", -3.1532057901], [" SELECT COUNT(*) FROM w WHERE opponent = 'matea mezak'", -3.1658794427], [" SELECT COUNT(*) FROM w WHERE opponent IN (SELECT opponent FROM w GROUP BY opponent HAVING COUNT(*) > 1)", -4.517128757270001], [" SELECT COUNT(*) FROM w WHERE opponent IN (SELECT opponent FROM w GROUP BY opponent HAVING COUNT(*) > 1)", -4.5252542924500005]]}, "92": {"question": "6 different country receive the same number of bronze medal", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [6, 2], [6]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT bronze) FROM w", -0.915535966984], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.921315165955], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.927094031434], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.927094031434], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.9311089508380002], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.9328201878549999], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.934204291199], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.934552452803], [" SELECT COUNT(*) FROM w GROUP BY bronze HAVING COUNT(*) > 1", -3.9031413735], [" SELECT COUNT(*) FROM w WHERE bronze = (SELECT bronze FROM w WHERE nation = 'austria (aut)')\n```", -11.790390542300003]]}, "100": {"question": "jerry mitchell win 2 tony award", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.270647983895], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.2883057686450003], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.2902944835520005], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.290879152839], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.2928699534250003], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.3066398161750006], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND result = 'won' AND award = 'tony award'", -2.53306285714], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND result = 'won' AND award = 'tony award'", -2.5468365585079997], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND result = 'won' AND award = 'tony award'", -2.5500996124349995], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND result = 'won' AND award = 'tony award'", -2.5628886723650006]]}, "185": {"question": "daniel palladino direct 3 episode fewer than amy sherman - palladino do", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [7], [7]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -1.269290282666], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -1.2774122607179998], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -1.2825966127120005], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -1.282796340938999], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -1.2831861188900002], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -1.2835566740560003], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -1.288060517142], [" SELECT COUNT(*) FROM w WHERE `director` = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `director` = 'amy sherman - palladino'", -3.397700026480999], [" SELECT COUNT(*) FROM w WHERE writer (s) = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE writer (s) = 'amy sherman - palladino'", -3.7788029994520014], [" SELECT COUNT(*) FROM w WHERE `writer (s)` = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `writer (s)` = 'amy sherman - palladino'", -3.9773400281730003]]}, "208": {"question": "keith gordon write 2 episode of dexter in season 3", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `written by` = 'keith gordon'", -2.1687867491199997], [" SELECT COUNT(*) FROM w WHERE `written by` = 'keith gordon'", -2.16920789822], [" SELECT COUNT(*) FROM w WHERE `written by` = 'keith gordon'", -2.172723951925], [" SELECT COUNT(*) FROM w WHERE `written by` = 'keith gordon'", -2.1736429579600007], [" SELECT COUNT(*) FROM w WHERE `written by` = 'keith gordon'", -2.1780697461699994], [" SELECT COUNT(*) FROM w WHERE written by = 'keith gordon'", -2.3140586251999995], [" SELECT COUNT(*) FROM w WHERE `written by` LIKE '%keith gordon%'", -2.6927136267099994], [" SELECT COUNT(*) FROM w WHERE `written by` LIKE '%keith gordon%'", -2.69564446621], [" SELECT COUNT(*) FROM w WHERE `written by` LIKE '%keith gordon%'", -2.69957756489], [" SELECT COUNT(*) FROM w WHERE `written by` = \"keith gordon\"", -5.293077783809999]]}, "233": {"question": "15 player be transfer during the summer window as oppose to 8 during the winter window", "gold_answer": 0, "pred_answer": {"0": [[19], [19], [19], [19], [19], [19], [19], [19], [19], [4]], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.3637775330800002], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.3794385619299994], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.3812519291500003], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.3856047094], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.3863333966700002], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.3987565563900004], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.4024879336199993], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.4100288643299996], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.4151977684799995], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su' AND `type` = 'transfer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi' AND `type` = 'transfer'", -2.63798661499]]}, "258": {"question": "luk\u00e1\u0161 melich place third place or higher in 1 competition", "gold_answer": 1, "pred_answer": {"0": [[9], [9], [1], [10], [3], [0], [0], [0], [0], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position LIKE '%th'", -3.0647769503599998], [" SELECT COUNT(*) FROM w WHERE position LIKE '%th'", -3.0695253938600002], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(position, 1, INSTR(position, 't') - 1) AS INT) <= 1", -6.230511824120001], [" SELECT COUNT(*) FROM w WHERE position LIKE '%th' OR position LIKE '%rd' OR position LIKE '%st' OR position LIKE '%nd'", -6.775941189359998], [" SELECT COUNT(*) FROM w WHERE position LIKE '%th' AND CAST(REPLACE(position, 'th', '') AS INT) <= 6", -8.06492874325], [" SELECT COUNT(*) FROM w WHERE position LIKE '%th' AND CAST(REPLACE(position, 'th', '') AS INT) <= 1", -8.082105488940002], [" SELECT COUNT(*) FROM w WHERE position LIKE '%th' AND CAST(REPLACE(position, 'th', '') AS INT) <= 1", -8.12845492848], [" SELECT COUNT(*) FROM w WHERE position LIKE '%-%' AND CAST(REPLACE(position, 'th', '') AS INT) <= 1", -8.270473845360002], [" SELECT COUNT(*) FROM w WHERE position LIKE '%-%' AND (CAST(SUBSTR(position, 1, INSTR(position, '-') - 1) AS INT) - CAST(SUBSTR(position, INSTR(position, '-') + 1, LENGTH(position) - (INSTR(position, ' - ') + 1)) AS INT)) > 0", -8.649776015595698], [" SELECT COUNT(*) FROM w WHERE position LIKE '%th' AND (CAST(REPLACE(position,'th','') AS INT) <= 6)", -10.47979492303]]}, "283": {"question": "brian sipe start 7 more game than bernie kosar", "gold_answer": 1, "pred_answer": {"0": [[], [], [], [], [], [], [], [], [], []], "1": [[], [], [], [], [], [], [], [], [], []], "2": ["<error>"]}, "nsql": [[" SELECT `games started` FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'bernie kosar'", -2.0130078970909993], [" SELECT `games started` FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'bernie kosar'", -2.0206945159160004], [" SELECT `games started` FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'bernie kosar'", -2.021141634047], [" SELECT `games started` FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'bernie kosar'", -2.02574151403], [" SELECT `games started` FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'bernie kosar'", -2.0319684174680006], [" SELECT games started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games started FROM w WHERE quarterback = 'bernie kosar'", -2.06335301218], [" SELECT games started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games started FROM w WHERE quarterback = 'bernie kosar'", -2.0645069240169995], [" SELECT games started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games started FROM w WHERE quarterback = 'bernie kosar'", -2.065419914779999], [" SELECT games started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games started FROM w WHERE quarterback = 'bernie kosar'", -2.0689603414940008], [" SELECT games started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games started FROM w WHERE quarterback = 'bernie kosar'\n```", -4.71203519222]]}, "308": {"question": "brook lopez lead the team in assist for more game than deron williams do", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[1], [1], [1], [1], [1], [1], [3], [3], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high assists = 'brook lopez'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -1.65269240618], [" SELECT COUNT(*) FROM w WHERE high assists = 'brook lopez'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -1.6581574111539998], [" SELECT COUNT(*) FROM w WHERE high assists = 'brook lopez'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -1.6632791792760002], [" SELECT COUNT(*) FROM w WHERE high assists = 'brook lopez'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -1.6714262097039998], [" SELECT COUNT(*) FROM w WHERE high assists = 'brook lopez'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -1.67213115417], [" SELECT COUNT(*) FROM w WHERE high assists = 'brook lopez'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -1.6780730355470004], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE 'brook lopez%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high assists` LIKE 'deron williams%'", -2.89364311595], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE 'brook lopez%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high assists` LIKE 'deron williams%'", -2.916368818140001], [" SELECT COUNT(*) FROM w WHERE `high assists` = 'brook lopez'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high assists` = 'deron williams'", -2.9430716019420005], [" SELECT COUNT(*) FROM w WHERE `high assists` = 'brook lopez'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high assists` = 'deron williams'", -2.9732665488269996]]}, "360": {"question": "after 1985 , the united state contribute 2 player with rafael ara\u00e3jo be the most recent", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [0], [3], [0], [0], [0], [0], [0]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND CAST(SUBSTR(`years for jazz`, 1, INSTR(`years for jazz`, '-') - 1) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -6.385442009169998], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -6.396166541580002], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -6.396500378079998], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND years for jazz LIKE '% - 1985'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -7.049226078570001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND (CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) > 1985 OR CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 1985)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -7.910513764801799], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND `years for jazz` LIKE '%-%' AND CAST(SUBSTR(`years for jazz`, INSTR(`years for jazz`, '-') + 1, LENGTH(`years for jazz`) - (INSTR(`years for jazz`, '-') + 1)) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -9.072035097513998], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for jazz, INSTR(years for jazz, ' - ') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 1985)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -10.649485463814], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND `years for jazz` LIKE '%-%' AND (CAST(SUBSTR(`years for jazz`, INSTR(`years for jazz`, '-') + 1, LENGTH(`years for jazz`) - (INSTR(`years for jazz`, '-') + 1)) AS INT)) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -11.312802237736], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND years for jazz LIKE '%-%-%' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -11.388555769825006], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND `years for jazz` LIKE '%-% - %' AND CAST(SUBSTR(`years for jazz`, INSTR(`years for jazz`, ' - ') + 2, LENGTH(`years for jazz`) - (INSTR(`years for jazz`, ' - ') + 2)) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'rafael ara\u00e3jo'", -12.722092214653994]]}, "416": {"question": "moorabbin oval have less crowd than kardinia park", "gold_answer": 0, "pred_answer": {"0": [[17811], [17811], [17811], [17811], [17811], [17811], [17811], [17811], [17811], [17811]], "1": [[13328], [13328], [13328], [13328], [13328], [13328], [13328], [13328], [13328], [13328]]}, "nsql": [[" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.051793345656], [" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.0525529474660003], [" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.0543680187160003], [" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.0544670047059999], [" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.0548346292059998], [" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.0550468905759998], [" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.055271506836], [" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.055791724185999], [" SELECT crowd FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'kardinia park'", -1.0609536876360002], [" SELECT MAX(crowd) FROM w WHERE venue = 'moorabbin oval'\nNeuralSQL2: SELECT MAX(crowd) FROM w WHERE venue = 'kardinia park'", -2.831746136925999]]}, "441": {"question": "the most point score by the dolphin in a game be 38", "gold_answer": 1, "pred_answer": {"0": [[78715], [78715], [78715], "<error>", [78715], [0], [0], ["w 38 "], [" 38 "], ["38 - 3"]]}, "nsql": [[" SELECT MAX(attendance) FROM w", -1.7804402862900002], [" SELECT MAX(attendance) FROM w", -1.7834591906899995], [" SELECT MAX(attendance) FROM w", -1.7879758250900002], [" SELECT MAX(score) FROM w", -3.2899507150900003], [" SELECT MAX(`attendance`) FROM w", -4.05900022529], [" SELECT MAX(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w", -4.198081889089999], [" SELECT MAX(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w", -4.213795957110001], [" SELECT MAX(SUBSTR(result, 1, INSTR(result, '-') - 1)) FROM w", -5.317461411139999], [" SELECT MAX(SUBSTR(result, 2, INSTR(result, '-') - 2)) FROM w", -5.621795046109999], [" SELECT MAX(SUBSTR(result, INSTR(result, ' ') + 1, LENGTH(result) - (INSTR(result, ' ') + 1))) FROM w", -8.01954289843]]}, "453": {"question": "the chicago bear defeat the lion in both game they play", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE 'w%'", -2.3454104080700002], [" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE 'w%'", -2.3651020544400003], [" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE 'w%'", -2.3832512760199998], [" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE 'w%'", -2.39278848931], [" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE 'w%'", -2.39768153302], [" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE 'w %'", -3.33984974178], [" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE 'w %'", -3.34363440053], [" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE 'w %'", -3.3545460073499997], [" SELECT COUNT(*) FROM w WHERE opponent = 'chicago bears' AND result LIKE '%w%'", -3.4936406133699998], [" SELECT COUNT(*) FROM w WHERE opponent = \"chicago bears\" AND result LIKE '%-%' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) < 0", -12.321010671262668]]}, "466": {"question": "there be a 4 way tie for the most lap at 79 with a 2 way tie for the least amount at 5", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [1], [4]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [1], [2]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5", -1.1848823523], [" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5", -1.1852143437039997], [" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5", -1.1861487759199998], [" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5", -1.18697784249], [" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5", -1.18906162314], [" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5", -1.189413320006], [" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5", -1.18980234852], [" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5", -1.1931306602399998], [" SELECT COUNT(DISTINCT(laps)) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(DISTINCT(laps)) FROM w WHERE laps = 5", -3.7003484225059986], [" SELECT COUNT(*) FROM w WHERE laps = 79\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 5\n```", -3.9796838074100003]]}, "491": {"question": "micka\u00ebl delage be the only person to appear in the mountain classification just 1 time", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [0], [3], [3], [1, 1], [20], [3], [0], [3]], "1": [[1], [1], [1], [1], [1], [1], [1], [0], "<error>", [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE mountains classification = 'mickael delage'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = 'mickael delage'", -5.990221174305999], [" SELECT COUNT(*) FROM w WHERE mountains classification <> 'not awarded' GROUP BY mountains classification HAVING COUNT(*) = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = 'mickael delage'", -7.316574204319998], [" SELECT COUNT(*) FROM w WHERE mountains classification LIKE '% - 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification LIKE 'mickael delage - 1'", -8.137081161930002], [" SELECT COUNT(DISTINCT `mountains classification`) FROM w WHERE `mountains classification` NOT LIKE '%not awarded%'\nNeuralSQL2: SELECT COUNT(DISTINCT `mountains classification`) FROM w WHERE `mountains classification` NOT LIKE '%not awarded%' AND `mountains classification` = 'mickael delage'", -8.230298105692802], [" SELECT COUNT(DISTINCT(`mountains classification`)) FROM w WHERE `mountains classification` NOT LIKE '%not awarded%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'mickael delage' AND `mountains classification` NOT LIKE '%not awarded%'", -9.184189973699], [" SELECT COUNT(*) FROM w WHERE mountains classification LIKE '%' GROUP BY mountains classification HAVING COUNT(*) = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = 'mickael delage'", -9.569707850813996], [" SELECT COUNT(*) FROM w WHERE mountains classification NOT LIKE '% 2' AND mountains classification NOT LIKE 'not awarded'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = 'mickael delage'", -10.545407260334002], [" SELECT COUNT(DISTINCT(`mountains classification`)) FROM w WHERE `mountains classification` NOT LIKE '%not awarded%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` LIKE '%mickael delage%' AND `mountains classification` NOT LIKE '%not awarded%'", -10.722697840542999], [" SELECT COUNT(*) FROM w WHERE mountains classification LIKE '% - %' AND (CAST(SUBSTR(mountains classification, 1, INSTR(mountains classification, '-') - 1) AS INT) - CAST(SUBSTR(mountains classification, INSTR(mountains classification, '-') + 1, LENGTH(mountains classification) - (INSTR(mountains classification, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification LIKE '% - %' AND (CAST(SUBSTR(mountains classification, 1, INSTR(mountains classification, '-') - 1) AS", -11.799370693304502], [" SELECT COUNT(DISTINCT `mountains classification`) FROM w WHERE `mountains classification` NOT LIKE '%not awarded%' AND `mountains classification` NOT LIKE '%not awarded%'\nNeuralSQL2: SELECT COUNT(DISTINCT `mountains classification`) FROM w WHERE `mountains classification` NOT LIKE '%not awarded%' AND `mountains classification` NOT LIKE '%not awarded%' AND `mountains classification` = 'mickael delage'", -13.871962947888802]]}, "546": {"question": "the volume 's 2 , 4 , and 5 have 2 disc and 3 episode", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [1], [1], [1], [1]], "1": [[12], [12], [12], [12], [12], [12], [1], [1], [1], [1]]}, "nsql": [[" SELECT SUM(discs) FROM w WHERE volume IN (2, 4, 5)\nNeuralSQL2: SELECT SUM(episodes) FROM w WHERE volume IN (2, 4, 5)", -2.6444877246399994], [" SELECT SUM(discs) FROM w WHERE volume IN (2, 4, 5)\nNeuralSQL2: SELECT SUM(episodes) FROM w WHERE volume IN (2, 4, 5)", -2.6455084948099987], [" SELECT SUM(discs) FROM w WHERE volume IN (2, 4, 5)\nNeuralSQL2: SELECT SUM(episodes) FROM w WHERE volume IN (2, 4, 5)", -2.64884484635], [" SELECT SUM(discs) FROM w WHERE volume IN (2, 4, 5)\nNeuralSQL2: SELECT SUM(episodes) FROM w WHERE volume IN (2, 4, 5)", -2.6515548152800004], [" SELECT SUM(discs) FROM w WHERE volume IN (2,4,5)\nNeuralSQL2: SELECT SUM(episodes) FROM w WHERE volume IN (2,4,5)", -2.887285650929999], [" SELECT SUM(discs) FROM w WHERE volume IN (2,4,5)\nNeuralSQL2: SELECT SUM(episodes) FROM w WHERE volume IN (2,4,5)", -2.8899087547600004], [" SELECT COUNT(DISTINCT discs) FROM w WHERE volume IN (2, 4, 5)\nNeuralSQL2: SELECT COUNT(DISTINCT episodes) FROM w WHERE volume IN (2, 4, 5)", -3.4766815795230013], [" SELECT COUNT(DISTINCT discs) FROM w WHERE volume IN (2, 4, 5)\nNeuralSQL2: SELECT COUNT(DISTINCT episodes) FROM w WHERE volume IN (2, 4, 5)", -3.4783127486687997], [" SELECT COUNT(DISTINCT discs) FROM w WHERE volume IN (2,4,5)\nNeuralSQL2: SELECT COUNT(DISTINCT episodes) FROM w WHERE volume IN (2,4,5)", -3.729170465169669], [" SELECT COUNT(DISTINCT discs) FROM w WHERE volume IN ('2','4','5')\nNeuralSQL2: SELECT COUNT(DISTINCT episodes) FROM w WHERE volume IN ('2','4','5')", -4.597099682674]]}, "599": {"question": "15 of the eagle class be make but 0 be preserve", "gold_answer": 0, "pred_answer": {"0": [["3"], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [["0"], [1], ["0"], [0], [0], [0], [0], [0], [0], [1]]}, "nsql": [[" SELECT `quantity made` FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT `quantity preserved` FROM w WHERE class = 'eagle'", -2.290001214566], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'eagle'", -2.4284043436399996], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT `quantity preserved` FROM w WHERE class = 'eagle'", -3.3351723090500003], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'eagle' AND `quantity preserved` > 0", -4.0218795599199995], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'eagle' AND `quantity preserved` > 0", -4.02576493076], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'eagle' AND `quantity preserved` > 0", -4.031989018009999], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'eagle' AND quantity preserved > 0", -4.66094902955], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'eagle' AND quantity preserved > 0", -4.68723546041], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'eagle' AND quantity preserved > 0", -4.7126360128], [" SELECT COUNT(*) FROM w WHERE class = 'eagle'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'eagle' AND quantity preserved = '0'", -8.090225492390001]]}, "55": {"question": "13 viral family have an icosahedral virion shape", "gold_answer": 1, "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.0881998527899999], [" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.08929161556], [" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.0920871404699999], [" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.09471713194], [" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.0964408031500004], [" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.09672930302], [" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.1016838368900002], [" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.1136883730899998], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'icosahedral'", -1.7649671638], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'icosahedral'", -2.0422985918900003]]}, "80": {"question": "alfredo binda be the race leader for 13 race in the 1933 giro d'italia", "gold_answer": 1, "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.6828847027300002], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.6872819003199997], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.68862800031], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.6929649330400005], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.70606076023], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.7073890248199999], [" SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.71084572143], [" SELECT COUNT(*) FROM w WHERE `race leader` = 'alfredo binda ( ita )'", -2.0492913673100004], [" SELECT COUNT(*) FROM w WHERE `race leader` = 'alfredo binda ( ita )'", -2.0535317017300003], [" SELECT COUNT(*) FROM w WHERE `race leader` = 'alfredo binda ( ita )'", -2.0572894447200007]]}, "105": {"question": "only the master series final in paris have a carpet surface", "gold_answer": 1, "pred_answer": {"0": [[1], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface LIKE 'carpet%'", -2.3759524263199996], [" SELECT COUNT(*) FROM w WHERE surface LIKE '%carpet%' AND championship LIKE '%master series%'", -4.6671299584899995], [" SELECT COUNT(*) FROM w WHERE surface LIKE '%carpet%' AND championship LIKE '%master series%'", -4.66756431366], [" SELECT COUNT(*) FROM w WHERE surface LIKE '%carpet%' AND championship LIKE '%master series%'", -4.678067141849999], [" SELECT COUNT(*) FROM w WHERE `championship` LIKE '%master series%' AND surface = 'carpet'", -4.742083398299999], [" SELECT COUNT(*) FROM w WHERE `championship` LIKE '%master series%' AND surface = 'carpet'", -4.777145073044999], [" SELECT COUNT(*) FROM w WHERE surface LIKE 'carpet%' AND championship LIKE '%master series%'", -4.7789593671900015], [" SELECT COUNT(*) FROM w WHERE surface LIKE '%carpet%' AND championship LIKE '%master%'", -5.430269236959999], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet (i)' AND championship LIKE '%master series%'", -6.016165769470001], [" SELECT COUNT(*) FROM w WHERE championship LIKE '% ( % )' AND surface LIKE 'carpet%'", -6.70850836886]]}, "122": {"question": "the solheim cup be host in the united state 6 time from 1990 - 2013", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [8], [7], [7], [7], [5], [7], [7], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue LIKE '% , usa'", -4.36109420792], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1990 AND 2013 AND venue LIKE '%, usa'", -4.706079927895], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'united states' AND year BETWEEN 1990 AND 2013", -6.0056373049700005], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1990 AND 2013 AND venue LIKE '% , usa%'", -6.050514195410001], [" SELECT COUNT(*) FROM w WHERE `venue` LIKE '%, usa' AND `year` BETWEEN 1990 AND 2013", -6.055761789920001], [" SELECT COUNT(*) FROM w WHERE `venue` LIKE '% , usa' AND `year` >= 1990 AND `year` <= 2013", -6.27787922022], [" SELECT COUNT(*) FROM w WHERE year > 1990 AND year < 2013 AND venue LIKE '% , usa'", -6.370012836260001], [" SELECT COUNT(*) FROM w WHERE `venue` LIKE '%usa%' AND year >= 1990 AND year <= 2013", -7.538723107719999], [" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND `venue` LIKE '%usa%'", -8.03635627262], [" SELECT COUNT(*) FROM w WHERE `winning team` = 'united states' AND `venue` LIKE '% , usa' AND year BETWEEN 1990 AND 2013", -10.926460261970002]]}, "130": {"question": "the yugoslavian national team win both of its friendly match by a score 0:2", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE results = '0:2' AND type of game = 'friendly'", -1.6544464604599998], [" SELECT COUNT(*) FROM w WHERE results = '0:2' AND type of game = 'friendly'", -1.6566291918899998], [" SELECT COUNT(*) FROM w WHERE results = '0:2' AND type of game = 'friendly'", -1.6583207816900003], [" SELECT COUNT(*) FROM w WHERE results = '0:2' AND type of game = 'friendly'", -1.65922987389], [" SELECT COUNT(*) FROM w WHERE results = '0:2' AND type of game = 'friendly'", -1.6592704303299997], [" SELECT COUNT(*) FROM w WHERE results = '0:2' AND type of game = 'friendly'", -1.6605816147899999], [" SELECT COUNT(*) FROM w WHERE results = '0:2' AND type of game = 'friendly'", -1.6605880395500003], [" SELECT COUNT(*) FROM w WHERE results = '0:2' AND type of game = 'friendly'", -1.6650326529899997], [" SELECT COUNT(*) FROM w WHERE type of game = 'friendly' AND results = '0:2'", -2.71179473044], [" SELECT COUNT(*) FROM w WHERE `type of game` = 'friendly' AND results = '0:2'", -2.75919401363]]}, "215": {"question": "25 - 26 january 2003 be the only game play in 2003", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [0], [0], [0], "<error>", "<error>", "<error>", "<error>"], "1": [[0], [0], [1], [0], [0], [0], "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '%2003%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '%2003%' AND `date` LIKE '%25 - 26%'", -9.393226060693998], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%2003%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '%2003%' AND `date` LIKE '%25 - 26%'", -9.418059473304002], [" SELECT COUNT(*) FROM w WHERE season LIKE '2003%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season LIKE '2003%' AND date LIKE '%2003-1-25%' OR date LIKE '%2003-1-26%'", -9.783856039343998], [" SELECT COUNT(*) FROM w WHERE season = '2003-01-01 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2003-01-01 00:00:00' AND date LIKE '%25 - 26%'", -10.132820174733999], [" SELECT COUNT(*) FROM w WHERE date LIKE '2003-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2003-%-%' AND (date LIKE '2003-%-25' OR date LIKE '2003-%-26')", -10.828167487674001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2003-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2003-%-%' AND `date` LIKE '%25%' AND `date` LIKE '%26%'", -11.533907885844], [" SELECT COUNT(*) FROM w WHERE YEAR(`date`) = 2003\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE YEAR(`date`) = 2003 AND `date` LIKE '%-25%' OR `date` LIKE '%-26%'", -11.917301709708994], [" SELECT COUNT(*) FROM w WHERE YEAR(date) = 2003\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE YEAR(date) = 2003 AND date LIKE '%25%' OR date LIKE '%26%'", -11.922062683324002], [" SELECT COUNT(*) FROM w WHERE YEAR(`date`) = 2003\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE YEAR(`date`) = 2003 AND `date` LIKE '% - % - 2003%'", -12.979040398424], [" SELECT COUNT(*) FROM w WHERE YEAR(date) = 2003\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE YEAR(date) = 2003 AND ((date LIKE '%-1-25%' AND date LIKE '%-1-26%') OR (date LIKE '%-2-25%' AND date LIKE '%-2-26%'))", -14.550188676516001]]}, "238": {"question": "university of dublin be the only group of origin make up entirely of member from 1 party", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], "<error>", [3], [3], [0], [4], [2]], "1": [[0], "<error>", "<error>", "<error>", "<error>", [3], [3], [0], "<error>", [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `administrative panel` = 0 AND `agricultural panel` = 0 AND `cultural and educational panel` = 0 AND `industrial and commercial panel` = 0 AND `labour panel` = 0 AND `national university of ireland` = 0 AND `university of dublin` = 0 AND `nominated by the taoiseach` = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `administrative panel` = 0 AND `agricultural panel` = 0 AND `cultural and educational panel` = 0 AND `industrial and commercial panel` = 0 AND `labour panel` = 0 AND `national university of ireland` = 0", -7.223436425896996], [" SELECT COUNT(*) FROM w WHERE `administrative panel` = 0 AND `agricultural panel` = 0 AND `cultural and educational panel` = 0 AND `industrial and commercial panel` = 0 AND `labour panel` = 0 AND `national university of ireland` = 0 AND `university of dublin` = 0 AND `nominated by the taoiseach` = 0 AND `total` = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `administrative panel` = 0 AND `agricultural panel` = 0 AND `cultural and educational panel` = 0 AND `industrial and commercial panel` = 0 AND `labour panel` = 0 AND `national university", -9.452714330511991], [" SELECT COUNT(*) FROM w WHERE party != 'total' AND `administrative panel` != 0 AND `agricultural panel` = 0 AND `cultural and educational panel` = 0 AND `industrial and commercial panel` = 0 AND `labour panel` = 0 AND `national university of ireland` = 0 AND `university of dublin` = 0 AND `nominated by the taoiseach` = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party != 'total' AND `administrative panel` = 0 AND `agricultural panel` = 0 AND `cultural and educational panel` = 0 AND `industrial and commercial panel` = 0 AND `labour panel`", -10.095296236984995], [" SELECT COUNT(*) FROM w WHERE party != 'total' AND party != 'independent' AND `administrative panel` = 0 AND `agricultural panel` = 0 AND `cultural and educational panel` = 0 AND `industrial and commercial panel` = 0 AND `labour panel` = 0 AND `national university of ireland` = 0 AND `university of dublin` = 0 AND `nominated by the taoiseach` = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party != 'total' AND party != 'independent' AND `administrative panel` = 0 AND `agricultural panel` = 0 AND `cultural and educational panel` = 0 AND `industrial", -11.406409899151003], [" SELECT COUNT(*) FROM w WHERE `total` = `administrative panel` + `agricultural panel` + `cultural and educational panel` + `industrial and commercial panel` + `labour panel` + `national university of ireland` + `university of dublin` + `nominated by the taoiseach`\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'university of dublin' AND `total` = `administrative panel` + `agricultural panel` + `cultural and educational panel` + `industrial and commercial panel` + `labour panel` + `national university of ireland` + `university of dublin` + `", -11.604531438601995], [" SELECT COUNT(*) FROM w WHERE party != 'total' AND party != 'independent' AND party != 'clann na talmhan' AND party != 'labour party'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party != 'total' AND party != 'independent' AND party != 'clann na talmhan' AND party != 'labour party'", -12.150015647154], [" SELECT COUNT(*) FROM w WHERE party != 'total' AND party != 'independent' AND party != 'clann na talmhan' AND party != 'labour party'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party != 'total' AND party != 'independent' AND party != 'clann na talmhan' AND party != 'labour party'", -12.273889682910006], [" SELECT COUNT(*) FROM w WHERE party <> 'total' AND (administrative panel = 0 AND agricultural panel = 0 AND cultural and educational panel = 0 AND industrial and commercial panel = 0 AND labour panel = 0 AND national university of ireland = 0 AND university of dublin = 0 AND nominated by the taoiseach = 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party <> 'total' AND (administrative panel = 0 AND agricultural panel = 0 AND cultural and educational panel = 0 AND industrial and commercial panel = 0 AND labour panel = 0 AND national university of ireland = 0 AND university of dublin = 0 AND nominated by the taoiseach = 0)", -13.548860380583996], [" SELECT COUNT(*) FROM w WHERE (party = 'labour party' AND `labour panel` = '5') OR (party = 'independent' AND `agricultural panel` = '1') OR (party = 'clann na talmhan' AND `agricultural panel` = '2') OR (party = 'fianna f\u00e1il' AND `administrative panel` = '4')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (party = 'labour party' AND `labour panel` = '5') OR (party = 'independent' AND `agricultural panel` = '1') OR (party = 'clann na talm", -18.455886469057006], [" SELECT COUNT(*) FROM w WHERE party != 'total' AND party != 'independent' AND party != 'labour party' AND party != 'clann na talmhan' AND party != 'fianna f\u00e1il'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'labour party' AND party = 'independent' AND party = 'clann na talmhan' AND party = 'fianna f\u00e1il'", -18.61434111776001]]}, "263": {"question": "only 2 team (hawthorn and south melbourne) score less than 10", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], "<error>", [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `home team score` < 10 OR `away team score` < 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`home team` = 'hawthorn' OR `away team` = 'hawthorn') AND (`home team score` < 10 OR `away team score` < 10)", -5.525553591450002], [" SELECT COUNT(*) FROM w WHERE `home team score` < 10 OR `away team score` < 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`home team` = 'hawthorn' OR `away team` = 'hawthorn') AND (`home team` = 'south melbourne' OR `away team` = 'south melbourne') AND (`home team score` < 10 OR `away team score` < 10)", -5.657414927520002], [" SELECT COUNT(*) FROM w WHERE `home team score` < 10 OR `away team score` < 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`home team` = 'hawthorn' OR `away team` = 'hawthorn') AND (`home team` = 'south melbourne' OR `away team` = 'south melbourne') AND (`home team score` < 10 OR `away team score` < 10)", -5.66673679324], [" SELECT COUNT(*) FROM w WHERE `home team score` < 10 OR `away team score` < 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`home team` = 'hawthorn' OR `away team` = 'hawthorn') AND (`home team` = 'south melbourne' OR `away team` = 'south melbourne') AND (`home team score` < 10 OR `away team score` < 10)", -5.672661511970001], [" SELECT COUNT(*) FROM w WHERE `home team score` < 10 OR `away team score` < 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`home team` = 'hawthorn' OR `away team` = 'hawthorn') AND (`home team` = 'south melbourne' OR `away team` = 'south melbourne') AND (`home team score` < 10 OR `away team score` < 10)", -5.6888251450899965], [" SELECT COUNT(*) FROM w WHERE `home team score` < 10 OR `away team score` < 10\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`home team` = 'hawthorn' OR `away team` = 'hawthorn') AND (`home team` = 'south melbourne' OR `away team` = 'south melbourne') AND (`home team score` < 10 OR `away team score` < 10)", -5.70899510269], [" SELECT COUNT(*) FROM w WHERE (home team score < 10 OR away team score < 10)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (home team = 'hawthorn' OR away team = 'hawthorn') AND (home team score < 10 OR away team score < 10)", -7.27528029084], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) + CAST(SUBSTR(`home team score`, INSTR(`home team score`, '(') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '(') + 1)) AS INT)) < 10 OR (CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) + CAST(SUBSTR(`away team score`, INSTR(`away team score`,", -8.874874057795], [" SELECT COUNT(*) FROM w WHERE (`home team score` < 10 OR `away team score` < 10)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (`home team score` < 10 OR `away team score` < 10) AND (home team = 'hawthorn' OR away team = 'hawthorn' OR home team = 'south melbourne' OR away team = 'south melbourne')", -9.0927785076], [" SELECT COUNT(DISTINCT(home team)) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) < 10\nNeuralSQL2: SELECT COUNT(DISTINCT(home team)) FROM w WHERE `home team` = 'hawthorn' AND `home team` = 'south melbourne' AND CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) < 10", -14.552546992240703]]}, "288": {"question": "brian sipe start 8 more game than bernie kosar", "gold_answer": 0, "pred_answer": {"0": [[], [], [], [], [], [0], [0], [112], [112], "<error>"], "1": [[], [], [], [], [], [0], [0], [105], [105], "<error>"]}, "nsql": [[" SELECT `games started` FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'bernie kosar'", -2.6183459638300004], [" SELECT `games started` FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'bernie kosar'", -2.64033561678], [" SELECT games started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games started FROM w WHERE quarterback = 'bernie kosar'", -2.6973461260340006], [" SELECT games started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games started FROM w WHERE quarterback = 'bernie kosar'", -2.7043118250300004], [" SELECT games started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games started FROM w WHERE quarterback = 'bernie kosar'", -2.70869821841], [" SELECT COUNT(*) FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE quarterback = 'bernie kosar'", -3.397454537829999], [" SELECT COUNT(*) FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE quarterback = 'bernie kosar'", -3.406227849385001], [" SELECT `games started` FROM w WHERE quarterback = 'sipe , brian'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'kosar , bernie'", -3.5332204932600004], [" SELECT `games started` FROM w WHERE quarterback = 'sipe , brian'\nNeuralSQL2: SELECT `games started` FROM w WHERE quarterback = 'kosar , bernie'", -3.5335719391600002], [" SELECT games_started FROM w WHERE quarterback = 'brian sipe'\nNeuralSQL2: SELECT games_started FROM w WHERE quarterback = 'bernie kosar'", -3.9660366784799996]]}, "313": {"question": "phil mickelson be the the only player from united state", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'phil mickelson' AND country = 'united states'", -0.9927953554789999], [" SELECT COUNT(*) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'phil mickelson' AND country = 'united states'", -0.9950482522619999], [" SELECT COUNT(*) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'phil mickelson' AND country = 'united states'", -0.9952541898160001], [" SELECT COUNT(*) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'phil mickelson' AND country = 'united states'", -0.99622056092], [" SELECT COUNT(*) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'phil mickelson' AND country = 'united states'", -0.9966169674029999], [" SELECT COUNT(*) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'phil mickelson' AND country = 'united states'", -0.997187194011], [" SELECT COUNT(*) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'phil mickelson' AND country = 'united states'", -0.9978132503260003], [" SELECT COUNT(*) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'phil mickelson' AND country = 'united states'", -0.9990389282460002], [" SELECT COUNT(DISTINCT player) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT player) FROM w WHERE country = 'united states' AND player = 'phil mickelson'", -3.711547355689501], [" SELECT COUNT(DISTINCT player) FROM w WHERE country = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT player) FROM w WHERE country = 'united states' AND player = 'phil mickelson'", -3.716702032975601]]}, "338": {"question": "the final game score be 7 - 2 in 2 different game of the 2006 season", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.8062955374000002], [" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.8090076459000001], [" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.8111830266000001], [" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.8156001858], [" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.8183609075000001], [" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.8657493281], [" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.8669350708], [" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.8704974871], [" SELECT COUNT(*) FROM w WHERE score = '7 - 2'", -0.872483922], [" SELECT COUNT(*) FROM w WHERE score LIKE '7 - 2'", -2.2094024121999998]]}, "390": {"question": "the dundee hurricane have 2 losing season , in 2006 and 2009", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [7], [7], [2], [2]], "1": [[2], [2], [2], [2], [2], [2], [7], [7], [0], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE losses > wins\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > wins", -2.3545731376549996], [" SELECT COUNT(*) FROM w WHERE losses > wins\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > wins", -2.3588671760230002], [" SELECT COUNT(*) FROM w WHERE losses > wins\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > wins", -2.3603380299150003], [" SELECT COUNT(*) FROM w WHERE losses > wins\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > wins", -2.3624319755369996], [" SELECT COUNT(*) FROM w WHERE losses > wins\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > wins", -2.3662447460399996], [" SELECT COUNT(*) FROM w WHERE losses > wins\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > wins", -2.3676216642920003], [" SELECT COUNT(*) FROM w WHERE losses > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > 0", -3.5388044940119996], [" SELECT COUNT(*) FROM w WHERE losses > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > 0", -3.5412986144730003], [" SELECT COUNT(*) FROM w WHERE losses > wins\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > wins AND season < 2005", -7.682501332155], [" SELECT COUNT(*) FROM w WHERE losses > wins\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE losses > wins AND season > 2003", -7.83951320275]]}, "446": {"question": "during the 2007 - 08 minnesota wild season , minnesota play at home more time than they play away", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.9480831775800002], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.9484530591], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.9509630696999999], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.9514963643480001], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.955399311056], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.9562173868219999], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.9605540058280003], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.962477133935], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.9637703214010003], [" SELECT COUNT(*) FROM w WHERE home = 'minnesota'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE visitor = 'minnesota'", -0.965620825789]]}, "471": {"question": "any driver above 75 lap care trouble of some kind thus no time list", "gold_answer": 0, "pred_answer": {"0": [[12], [12], [12], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps > 75 AND `time / retired` LIKE '%'", -5.49215440917], [" SELECT COUNT(*) FROM w WHERE laps > 75 AND `time / retired` NOT LIKE '% : %'", -5.910564190590001], [" SELECT COUNT(*) FROM w WHERE laps > 75 AND `time / retired` NOT LIKE '% : %'", -5.922020732669999], [" SELECT COUNT(*) FROM w WHERE `time / retired` = 'n / a' AND laps > 75", -6.224654452149999], [" SELECT COUNT(*) FROM w WHERE laps > 75 AND time / retired = 'gearbox'", -6.513644618140001], [" SELECT COUNT(*) FROM w WHERE laps > 75 AND `time / retired` LIKE '% trouble %'", -6.815074318480001], [" SELECT COUNT(*) FROM w WHERE laps > 75 AND `time / retired` LIKE '% trouble %'", -6.822784915140001], [" SELECT COUNT(*) FROM w WHERE laps > 75 AND time / retired LIKE '% trouble%'", -6.9108215012939995], [" SELECT COUNT(*) FROM w WHERE laps > 75 AND time / retired LIKE '% trouble%'", -6.940589879759999], [" SELECT COUNT(*) FROM w WHERE laps > 75 AND `time / retired` LIKE '%trouble of some kind%'", -7.107142784460001]]}, "483": {"question": "quentin be 1 of the police offer who be in the cube", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.3268547470400003], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.328195422065], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.3285602019329998], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.3291701365640003], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.3293370180879995], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.330743254155], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.3312560672139997], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.3325409061720002], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer'", -1.33419317834], [" SELECT COUNT(*) FROM w WHERE occupation = 'police officer' AND prison connection LIKE '%cube%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'quentin' AND occupation = 'police officer' AND prison connection LIKE '%cube%'", -4.627370228743999]]}, "496": {"question": "mar cavendish consecutively win 5 stage", "gold_answer": 0, "pred_answer": {"0": [[3], [0], [0], [2], "<error>", [1], [1], [2], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish'", -2.5987264806000003], [" SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND winner = (SELECT winner FROM w WHERE row_id = row_id - 1)", -6.823341841699999], [" SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND winner = (SELECT winner FROM w WHERE row_id = row_id - 1)", -6.834643925100002], [" SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND row_id > (SELECT row_id FROM w WHERE winner = 'mark cavendish' ORDER BY row_id LIMIT 1)", -10.467131025], [" SELECT COUNT(*) FROM w WHERE `points classification` = 'mark cavendish' AND `points classification` = LAG(`points classification`, 1) OVER (ORDER BY stage)", -11.963066497708002], [" SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND (stage - (SELECT stage FROM w WHERE winner = 'mark cavendish' LIMIT 1)) = 1", -13.38602737377], [" SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND stage - (SELECT stage FROM w WHERE winner = 'mark cavendish' ORDER BY stage LIMIT 1) = 1", -13.66760068958], [" SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND stage < (SELECT stage FROM w WHERE winner = 'mark cavendish' AND stage > (SELECT stage FROM w WHERE winner = 'mark cavendish' AND stage > (SELECT stage FROM w WHERE winner = 'mark cavendish')))", -14.125004794399993], [" SELECT COUNT(*) FROM w WHERE general classification = 'mark cavendish' AND (stage - (SELECT stage FROM w WHERE general classification = 'mark cavendish' ORDER BY stage ASC LIMIT 1)) = 1", -14.707732594259996], [" SELECT COUNT(*) FROM w WHERE general classification = 'mark cavendish' AND (row_id - 1) = (SELECT row_id FROM w WHERE general classification = 'mark cavendish' AND row_id < (SELECT row_id FROM w WHERE general classification = 'mark cavendish'))", -18.269906467620007]]}, "521": {"question": "there be currently 12 t - 260 eu aircraft in service", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu'", -1.5504358581], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu'", -1.5519153735999998], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu'", -1.5548390902900004], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service > 0", -3.0503407267600005], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service > 0", -3.0742537735100006], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service > 0", -3.0814366843999994], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` > 0", -3.67232162966], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` > 0", -3.67866635602], [" SELECT COUNT(*) FROM w WHERE aircraft LIKE '%t - 260 eu%' AND in service > 0", -4.95151720526], [" SELECT COUNT(*) FROM w WHERE aircraft LIKE '%t - 260 eu%' AND `in service` > 0", -5.47771346416]]}, "576": {"question": "highest total score for ukraine be 2 while the highest total score of estonia be 8", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.1384828942500007], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.138651910346], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.1401830225500003], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.1405441317199998], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.14114420127], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.14149021105], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.1425799374499996], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.1436333039500002], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.1457961622040003], [" SELECT MAX(total) FROM w WHERE nation = 'ukraine'\nNeuralSQL2: SELECT MAX(total) FROM w WHERE nation = 'estonia'", -1.1483795288099998]]}, "85": {"question": "ettore meini win 3 race in a row , on may 24 , 25th and 26th , during the 1933 giro d'italia", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [0], [0], [0], [0], "<error>", [1], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.7553791413499997], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.7563431707000001], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.76082812145], [" SELECT COUNT(*) FROM w WHERE race leader = 'ettore meini'", -3.1265107797000002], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND race leader = 'ettore meini'", -4.71064325122], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND race leader = 'ettore meini'", -4.797472447430001], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND race leader = 'ettore meini'", -4.80009619364], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND winner = race leader", -6.56083624959], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND (row_id - 1) IN (SELECT row_id FROM w WHERE winner = 'ettore meini')", -9.889661028539999], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND (row_id = (SELECT row_id FROM w WHERE winner = 'ettore meini' LIMIT 1) OR row_id = (SELECT row_id FROM w WHERE winner = 'ettore meini' LIMIT 1, 1))", -14.486374121576995]]}, "110": {"question": "only the master series final in cincinnati have a carpet surface", "gold_answer": 0, "pred_answer": {"0": [[1], [0], [0], [0], [0], [0], [0], [0], [0], [1]], "1": ["<error>"], "2": [[0]], "3": ["<error>"], "4": [[0]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface = 'carpet'", -1.0650422399600001], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND championship LIKE '%master series%'", -3.7246713960799998], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND championship LIKE '%master series%'", -3.72906502198], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND championship LIKE '%master series%'", -3.73111175311], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND championship LIKE '%master series%'", -3.73270424624], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND championship LIKE '%master series%'", -3.7352776984899996], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND championship LIKE '%master series%'", -3.73992961326], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND championship LIKE '%master series%' AND outcome = 'winner'", -6.979099515939999], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND championship LIKE '% master series final'", -7.3271232019], [" SELECT COUNT(*) FROM w WHERE surface = 'carpet'\nQ2: {how many = a2} master series final had a carpet surface in 2000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND year = 2000\nQ3: {how many = a3} master series final had a carpet surface in 2000 and the opponent is wayne ferreira.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE surface = 'carpet' AND year = 2000 AND opponent = 'wayne ferreira'\nQ4: {how many = a4} master series final had a carpet surface in 2000 or the opponent is", -27.605661284893003]]}, "135": {"question": "march be feature more often as a month in the date than any other month , follow by the 4 game in april", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [0], [7]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [0], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%'", -2.7513519589359996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%'", -2.753061277191], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%'", -2.7558044788960006], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%'", -2.758158640216], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%'", -2.759597063846001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%'", -2.760685434741], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%'", -2.767731282776001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%'", -2.7694052294960003], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-03-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2009-04-%-%'", -3.7789870391899996], [" SELECT COUNT(*) FROM w WHERE date LIKE '2009-03-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2009-04-%'", -3.95961383845]]}, "152": {"question": "wimbledon have only 1 a result during the year 1986 to 1999", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND (1986 = 'a' OR 1988 = 'a' OR 1989 = 'a' OR 1990 = 'a' OR 1991 = 'a' OR 1992 = 'a' OR 1993 = 'a' OR 1994 = 'a' OR 1995 = 'a' OR 1996 = 'a' OR 1997 = 'a' OR 1998 = 'a' OR 1999 = 'a')", -4.307308983659999], [" SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND (1986 = 'a' OR 1988 = 'a' OR 1989 = 'a' OR 1990 = 'a' OR 1991 = 'a' OR 1992 = 'a' OR 1993 = 'a' OR 1994 = 'a' OR 1995 = 'a' OR 1996 = 'a' OR 1997 = 'a' OR 1998 = 'a' OR 1999 = 'a')", -4.31149251027], [" SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND (1986 = 'a' OR 1988 = 'a' OR 1989 = 'a' OR 1990 = 'a' OR 1991 = 'a' OR 1992 = 'a' OR 1993 = 'a' OR 1994 = 'a' OR 1995 = 'a' OR 1996 = 'a' OR 1997 = 'a' OR 1998 = 'a' OR 1999 = 'a')", -4.3125997092400015], [" SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND (1986 = 'a' OR 1988 = 'a' OR 1989 = 'a' OR 1990 = 'a' OR 1991 = 'a' OR 1992 = 'a' OR 1993 = 'a' OR 1994 = 'a' OR 1995 = 'a' OR 1996 = 'a' OR 1997 = 'a' OR 1998 = 'a' OR 1999 = 'a')", -4.314179421520002], [" SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND (1986 = 'a' OR 1988 = 'a' OR 1989 = 'a' OR 1990 = 'a' OR 1991 = 'a' OR 1992 = 'a' OR 1993 = 'a' OR 1994 = 'a' OR 1995 = 'a' OR 1996 = 'a' OR 1997 = 'a' OR 1998 = 'a' OR 1999 = 'a')", -4.31618757834], [" SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND (1986 = 'a' OR 1988 = 'a' OR 1989 = 'a' OR 1990 = 'a' OR 1991 = 'a' OR 1992 = 'a' OR 1993 = 'a' OR 1994 = 'a' OR 1995 = 'a' OR 1996 = 'a' OR 1997 = 'a' OR 1998 = 'a' OR 1999 = 'a')", -4.3186440783499975], [" SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND (1986 = 'a' OR 1988 = 'a' OR 1989 = 'a' OR 1990 = 'a' OR 1991 = 'a' OR 1992 = 'a' OR 1993 = 'a' OR 1994 = 'a' OR 1995 = 'a' OR 1996 = 'a' OR 1997 = 'a' OR 1998 = 'a' OR 1999 = 'a')", -4.320830530259999], [" SELECT COUNT(*) FROM w WHERE tournament = 'wimbledon' AND (`1986` = 'a' OR `1988` = 'a' OR `1989` = 'a' OR `1990` = 'a' OR `1991` = 'a' OR `1992` = 'a' OR `1993` = 'a' OR `1994` = 'a' OR `1995` = 'a' OR `1996` = 'a' OR `1997` = 'a' OR `1998` = 'a' OR `1999` = 'a')", -4.79648513665], [" SELECT SUM(CAST(`1986` AS INT)) + SUM(CAST(`1988` AS INT)) + SUM(CAST(`1989` AS INT)) + SUM(CAST(`1990` AS INT)) + SUM(CAST(`1991` AS INT)) + SUM(CAST(`1992` AS INT)) + SUM(CAST(`1993` AS INT)) + SUM(CAST(`1994` AS INT)) + SUM(CAST(`1995` AS INT)) + SUM(CAST(`1996` AS INT)) + SUM(CAST(`1997` AS INT)) + SUM(CAST(`1998` AS INT)) + SUM(CAST(`1999` AS INT)) FROM w WHERE tournament = '", -6.810938199136994], [" SELECT SUM(CAST(`wimbledon` AS INT)) FROM w WHERE row_id > 1 AND row_id < 15", -10.06502866837]]}, "160": {"question": "the bowler with 13 wicket appear in more match than the bowler with 11 wicket", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [1], [1], [1]], "1": [[4], [4], [4], [4], [4], [4], [4], [1], [1], [1]]}, "nsql": [[" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.155795137995], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1596671003650003], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1612828344049997], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1639539856049996], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1644344316450002], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1647757683750002], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1654227589449997], [" SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 13\nNeuralSQL2: SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 11", -2.3893226495190003], [" SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 13\nNeuralSQL2: SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 11", -2.3944020667340005], [" SELECT COUNT(DISTINCT(matches)) FROM w WHERE wickets = 13\nNeuralSQL2: SELECT COUNT(DISTINCT(matches)) FROM w WHERE wickets = 11", -3.8328801704054]]}, "245": {"question": "canon yaound\u00e9 score zero point against their opponent", "gold_answer": 0, "pred_answer": {"0": [[22], [9], [9], [9], [9], [9], [9], [9], [45], "<error>"]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w", -4.0393522948800005], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'canon yaounde'", -5.372744438399999], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'canon yaounde'", -5.380115538249998], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'canon yaounde'", -5.404857450309998], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'canon yaounde' OR team 2 = 'canon yaounde'", -6.28462118141], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'canon yaounde' OR team 2 = 'canon yaounde'", -6.286520611079999], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'canon yaounde' OR team 2 = 'canon yaounde'", -6.288393408630001], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'canon yaounde' OR team 2 = 'canon yaounde'", -6.29086226939], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(agg, INSTR(agg, '-') + 1, LENGTH(agg) - (INSTR(agg, ' - ') + 1)) AS INT)) FROM w", -6.352811552920001], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team1 = 'canon yaounde' OR team2 = 'canon yaounde'", -7.533813739090002]]}, "268": {"question": "there be no home team that score more than 11", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [4], [4], [4], [6], [0], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `home team score` > 11", -2.40888634658], [" SELECT COUNT(*) FROM w WHERE `home team score` > 11", -2.4221575318799995], [" SELECT COUNT(*) FROM w WHERE `home team score` > 11", -2.42534549828], [" SELECT COUNT(*) FROM w WHERE `home team score` > '11'", -2.91227054528], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) > 11", -3.8974823138500008], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) > 11", -4.0458847072], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`home team score`,'(','') AS INT) > 11", -4.369434292610001], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`home team score`, '.', '') AS INT) > 11", -5.679732109939999], [" SELECT COUNT(*) FROM w WHERE `home team score` LIKE '% - %' AND CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '-') - 1) AS INT) > 11", -6.4740386392800024], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`home team score`, ' ( ', '.') AS FLOAT) > 11", -7.5415222910100015]]}, "293": {"question": "in the 1981 open championship no player finish under par", "gold_answer": 1, "pred_answer": {"0": [[14], [14], [0], [14], [14], [14], [14], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `to par` < 0", -2.22181043297], [" SELECT COUNT(*) FROM w WHERE `to par` < 0", -2.22534756987], [" SELECT COUNT(*) FROM w WHERE `to par` LIKE '%-%'", -2.5205264550699997], [" SELECT COUNT(*) FROM w WHERE `to par` < '0'", -2.94768303917], [" SELECT COUNT(*) FROM w WHERE `to par` < '0'", -2.94821878697], [" SELECT COUNT(*) FROM w WHERE `to par` < '0'", -2.9535874508700006], [" SELECT COUNT(*) FROM w WHERE `to par` < '0'", -2.9577672066700003], [" SELECT COUNT(*) FROM w WHERE `to par` LIKE '-%'", -3.2474911140700002], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`to par`, '+', '') AS INT) < 0", -4.0888452614299995], [" SELECT COUNT(*) FROM w WHERE to par LIKE '%-%'", -4.27857086487]]}, "318": {"question": "the zakspeed 841 chassis be the only chassis from the year 1985", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1985 AND chassis = 'zakspeed 841'", -2.1938129017479997], [" SELECT COUNT(*) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1985 AND chassis = 'zakspeed 841'", -2.193850115428], [" SELECT COUNT(*) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1985 AND chassis = 'zakspeed 841'", -2.194134696098], [" SELECT COUNT(*) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 841'", -2.1947487356579995], [" SELECT COUNT(*) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1985 AND chassis = 'zakspeed 841'", -2.1979087570980003], [" SELECT COUNT(*) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 841' AND year = 1985", -2.380638475138], [" SELECT COUNT(*) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 841' AND year = 1985", -2.384182603813], [" SELECT COUNT(*) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 841' AND year = 1985", -2.394522551937999], [" SELECT COUNT(DISTINCT chassis) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 841' AND year = 1985", -2.9067292857419993], [" SELECT COUNT(DISTINCT chassis) FROM w WHERE year = 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1985 AND chassis = 'zakspeed 841'", -3.128449115877999]]}, "343": {"question": "in 4 different baseball game the final score be 9 - 2", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[23]], "3": ["<error>"], "4": [[7]], "5": ["<error>"], "6": [[7]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.37030282644], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.37038544445999994], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.3706966391], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.37081397617000006], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.37090059654999996], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.37110925083999996], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.3714937213200001], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.3717601454], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'", -0.37216771117999997], [" SELECT COUNT(*) FROM w WHERE score = '9 - 2'\nQ2: {how many = a2} baseball games the attendance is over 20000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance > 20000\nQ3: there are {how many = a3} baseball games the opponent is angels.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE opponent = 'angels'\nQ4: there are {how many = a4} baseball games the opponent is angels and the attendance is over 20000.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND attendance > 20000\nQ5:", -27.388555055555003]]}, "368": {"question": "olga govortsova reach the final in a grand slam tournament", "gold_answer": 0, "pred_answer": {"0": [[0], [11], [0], [0], [11], [0], [0], [0], [0], [0]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (2007 = 'f' OR 2008 = 'f' OR 2009 = 'f' OR 2010 = 'f' OR 2011 = 'f')", -4.11490654533], [" SELECT COUNT(*) FROM w WHERE `2007` = 'a' OR `2008` = 'a' OR `2009` = 'a' OR `2010` = 'a' OR `2011` = 'a'", -6.066706731770001], [" SELECT COUNT(*) FROM w WHERE tournament = 'grand slam tournaments' AND (2007 = 'f' OR 2008 = 'f' OR 2009 = 'f' OR 2010 = 'f' OR 2011 = 'f')", -6.9560017288600005], [" SELECT COUNT(*) FROM w WHERE tournament = 'grand slam tournaments' AND (2007 = 'f' OR 2008 = 'f' OR 2009 = 'f' OR 2010 = 'f' OR 2011 = 'f')", -6.963770743550001], [" SELECT COUNT(*) FROM w WHERE 2007 = 'a' OR 2008 = 'a' OR 2009 = 'a' OR 2010 = 'a' OR 2011 = 'a'\n```", -7.38176822078], [" SELECT COUNT(*) FROM w WHERE tournament = 'grand slam tournament' AND (2007 = 'f' OR 2008 = 'f' OR 2009 = 'f' OR 2010 = 'f' OR 2011 = 'f')", -7.581618045890001], [" SELECT COUNT(*) FROM w WHERE tournament = 'grand slam tournament' AND 2007 = 'f' AND 2008 = 'f' AND 2009 = 'f' AND 2010 = 'f' AND 2011 = 'f'", -8.666600656329999], [" SELECT COUNT(*) FROM w WHERE tournament LIKE '%open%' AND (2007 LIKE '%f%' OR 2008 LIKE '%f%' OR 2009 LIKE '%f%' OR 2010 LIKE '%f%' OR 2011 LIKE '%f%')", -8.685599213569999], [" SELECT COUNT(*) FROM w WHERE tournament = 'grand slam tournaments' AND (`2007` LIKE '%f' OR `2008` LIKE '%f' OR `2009` LIKE '%f' OR `2010` LIKE '%f' OR `2011` LIKE '%f')", -10.144943776620009], [" SELECT COUNT(*) FROM w WHERE tournament = 'us open' AND 2007 = 'f' OR tournament = 'french open' AND 2007 = 'f' OR tournament = 'wimbledon' AND 2007 = 'f' OR tournament = 'australian open' AND 2007 = 'f'\n```", -13.177645299190004]]}, "420": {"question": "in the year 2000 shane hall dnf half of his race", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT dnf FROM w WHERE year = 2000", -0.8346904481549999], [" SELECT dnf FROM w WHERE year = 2000", -0.8610242367050001], [" SELECT dnf FROM w WHERE year = 2000", -0.8630369335250001], [" SELECT dnf FROM w WHERE year = 2000", -0.863193546855], [" SELECT dnf FROM w WHERE year = 2000", -0.8634880784050002], [" SELECT dnf FROM w WHERE year = 2000", -0.866565737825], [" SELECT dnf FROM w WHERE year = 2000", -0.8666170210849998], [" SELECT dnf FROM w WHERE year = 2000", -0.8666267247850001], [" SELECT dnf FROM w WHERE year = 2000", -0.8693498589549998], [" SELECT dnf FROM w WHERE year = 2000", -0.871957211255]]}, "476": {"question": "team brazil be the only football club locate on the european continent", "gold_answer": 0, "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.516248494466], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.5183695626159994], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.5212625055959996], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.5219628953060003], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.522210172476], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.5236096089959996], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.523862473506], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.5289990812760001], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.5311176874460004], [" SELECT COUNT(*) FROM w WHERE continent = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team brazil' AND continent = 'europe'", -1.5355159079759995]]}, "501": {"question": "all but 1 season be about to have or have an army - navy game in baltimore , md (m&t bank stadium)", "gold_answer": 0, "pred_answer": {"0": [[41], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE army - navy score LIKE '% - %'", -3.7207686779699998], [" SELECT COUNT(*) FROM w WHERE `army - navy score` LIKE '% - %' AND `army - navy score` LIKE '%baltimore%'", -6.801373985859999], [" SELECT COUNT(*) FROM w WHERE `army - navy score` LIKE '% - %' AND `army - navy score` LIKE '%baltimore%'", -6.8026483328200005], [" SELECT COUNT(*) FROM w WHERE `army - navy score` LIKE '% - %' AND `army - navy score` LIKE '%baltimore%'", -6.807037122375], [" SELECT COUNT(*) FROM w WHERE `army - navy score` LIKE '% - %' AND `army - navy score` LIKE '%baltimore%'", -6.808948084053998], [" SELECT COUNT(*) FROM w WHERE army - navy score LIKE '% - %' AND army - navy score LIKE '%baltimore%'", -8.02545637527], [" SELECT COUNT(*) FROM w WHERE army - navy score LIKE '% - %' AND army - navy score LIKE '%baltimore%'", -8.04782506937], [" SELECT COUNT(*) FROM w WHERE (army - navy score LIKE '% - baltimore , md (m&t bank stadium)%' OR army - navy score LIKE 'baltimore , md (m&t bank stadium) - %')", -10.464160232205], [" SELECT COUNT(*) FROM w WHERE `army - navy score` LIKE '% - %' AND (SUBSTR(`army - navy score`, 1, INSTR(`army - navy score`, '-') - 1) LIKE '%baltimore%' OR SUBSTR(`army - navy score`, INSTR(`army - navy score`, '-') + 1, LENGTH(`army - navy score`) - (INSTR(`army - navy score`, ' - ') + 1)) LIKE '%baltimore%')", -12.778280410530506], [" SELECT COUNT(*) FROM w WHERE (army - navy score LIKE '% - %' OR air force - army score LIKE '% - %' OR air force - navy score LIKE '% - %') AND (army - navy score LIKE '% , md%' OR air force - army score LIKE '% , md%' OR air force - navy score LIKE '% , md%')", -14.738002589490003]]}, "513": {"question": "bridgenorth have the highest number of win in the ntfa div with 15 win and only 3 loss", "gold_answer": 1, "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.5779226215669999], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.5779555181919999], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.5784122148580002], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.578892999011], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.5794178544870002], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.579453039998], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.5801276711909998], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.5801948267110002], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.580623283869], [" SELECT wins FROM w WHERE ntfa div 1 = 'bridgenorth'\nNeuralSQL2: SELECT losses FROM w WHERE ntfa div 1 = 'bridgenorth'", -0.5810342541210001]]}, "526": {"question": "brazil have transport / utility and attack type aircraft", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'attack'", -2.4888467204799993], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type LIKE '%attack%'", -2.5503123136570003], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type LIKE '%attack%'", -2.5598301705799997], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type LIKE '%attack%'", -2.5630219562300005], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type LIKE '%attack%'", -2.630828384008], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type LIKE '%attack%'", -2.644350985619999], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type LIKE '%attack%'", -2.662394201918], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type LIKE '%attack%'", -2.6782007561999994], [" SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'transport / utility'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE origin = 'brazil' AND type = 'attack'", -2.6942523429219998], [" SELECT COUNT(*) FROM w WHERE `type` = 'transport / utility' AND origin = 'brazil'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `type` = 'attack' AND origin = 'brazil'", -4.751370125619999]]}, "551": {"question": "iran , who rank 1st in gdp in the middle east , rank sixth in all of asia", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT `rank mideast` FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT `rank asia` FROM w WHERE country = 'iran'", -1.1827317642100004], [" SELECT `rank mideast` FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT `rank asia` FROM w WHERE country = 'iran'", -1.1830039763999993], [" SELECT `rank mideast` FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT `rank asia` FROM w WHERE country = 'iran'", -1.1842591752400007], [" SELECT `rank mideast` FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT `rank asia` FROM w WHERE country = 'iran'", -1.1862739912000004], [" SELECT `rank mideast` FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT `rank asia` FROM w WHERE country = 'iran'", -1.1873986302499997], [" SELECT `rank mideast` FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT `rank asia` FROM w WHERE country = 'iran'", -1.1882314735000004], [" SELECT `rank mideast` FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT `rank asia` FROM w WHERE country = 'iran'", -1.1895313859699999], [" SELECT rank mideast FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT rank asia FROM w WHERE country = 'iran'", -2.1859312716500003], [" SELECT rank mideast FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT rank asia FROM w WHERE country = 'iran'", -2.1926221370600003], [" SELECT rank mideast FROM w WHERE country = 'iran'\nNeuralSQL2: SELECT rank asia FROM w WHERE country = 'iran'", -2.2026401694400004]]}, "606": {"question": "bell media own 3 separate radio station like the cbc", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.071038435417], [" SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.0726167127259996], [" SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.0778150593929996], [" SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.079719622826], [" SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.083904670336], [" SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.0867715333484997], [" SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.0941441819347], [" SELECT COUNT(DISTINCT frequency) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT frequency) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.6323156090179993], [" SELECT COUNT(DISTINCT(call sign)) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT(call sign)) FROM w WHERE owner = 'canadian broadcasting corporation'", -3.2230174970493994], [" SELECT COUNT(DISTINCT(call sign)) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT(call sign)) FROM w WHERE owner = 'canadian broadcasting corporation'", -3.2286679438345]]}, "7": {"question": "guillaume gillet score 3 time as much as each of the other 2 player in the uefa champion league tournament", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [9], [9], [9], [8], [8]], "1": [[11, 9, 8, 5, 6, 4, 4, 4, 2, 3, 2, 1, 3, 2, 1, 1, 1, 0], [11, 9, 8, 5, 6, 4, 4, 4, 2, 3, 2, 1, 3, 2, 1, 1, 1, 0], [67], [11, 9, 8, 5, 6, 4, 4, 4, 2, 3, 2, 1, 3, 2, 1, 1, 1, 0], [56], [75], [75], [11, 9, 8, 7, 6, 4, 4, 4, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1], [0], [66]]}, "nsql": [[" SELECT league FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT league FROM w WHERE player != 'guillaume gillet'", -4.611664621940999], [" SELECT league FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT league FROM w WHERE player != 'guillaume gillet'", -4.611683247455999], [" SELECT league FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player != 'guillaume gillet'", -4.914335104119998], [" SELECT league FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT league FROM w WHERE player <> 'guillaume gillet'", -5.22957374981], [" SELECT league FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT SUM(league) - league FROM w WHERE player != 'guillaume gillet'", -6.12112595071], [" SELECT total FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT SUM(total) - (SELECT total FROM w WHERE player = 'guillaume gillet') FROM w", -6.27190451062], [" SELECT total FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT SUM(total) - (SELECT total FROM w WHERE player = 'guillaume gillet') FROM w", -6.298361047347002], [" SELECT `total` FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT `total` FROM w WHERE player != 'guillaume gillet'", -6.52177419602], [" SELECT SUM(league) FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT SUM(league) - SUM(league) FROM w WHERE player = 'guillaume gillet'", -7.209782441508999], [" SELECT league FROM w WHERE player = 'guillaume gillet'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player NOT IN ('guillaume gillet', 'mat\u00edas su\u00e1rez')", -9.65689299571]]}, "115": {"question": "netherlands and romania have game on june 24 and 28 , respectively , in 1998", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [0], [0], [0], [0]], "1": [[1], [1], [1], [1], [1], [1], [0], "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date = '1998-06-24 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1998-06-28 00:00:00'", -3.370927112266], [" SELECT COUNT(*) FROM w WHERE date = '1998-06-24 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1998-06-28 00:00:00'", -3.385600390752], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-24%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-28%'", -3.5436828429099987], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-24%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-28%'", -3.5534194242849995], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-24%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-28%'", -3.555750534430001], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-24%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-28%'", -3.5618021733200016], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-24%' AND (score LIKE '% - netherlands%' OR score LIKE 'netherlands - %')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1998-06-28%' AND (score LIKE '% - romania%' OR score LIKE 'romania - %')", -7.2310657145700015], [" SELECT COUNT(*) FROM w WHERE date = '1998-06-24 00:00:00' AND (score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1998-06-28 00:00:00' AND (score LIKE '% - %' AND (CAST(SUBSTR(score", -9.943763285897408], [" SELECT COUNT(*) FROM w WHERE date = '1998-06-24 00:00:00' AND (score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1998-06-28 00:00:00' AND (score LIKE '% - %' AND (CAST(SUBSTR(score", -9.98624793386871], [" SELECT COUNT(*) FROM w WHERE date = '1998-06-24 00:00:00' AND (score LIKE '% - %' AND (SUBSTR(score, 1, INSTR(score, '-') - 1) = 'netherlands' OR SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) = 'netherlands'))\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1998-06-28 00:00:00' AND (score LIKE '% - %' AND (SUBSTR(score, 1, IN", -11.334784722355005]]}, "140": {"question": "1 athlete receive a medal for pommel horse", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `record medal event` = 'pommel horse'", -2.0808875576199997], [" SELECT COUNT(*) FROM w WHERE record medal event = 'pommel horse'", -2.20513374122], [" SELECT COUNT(*) FROM w WHERE record medal event = 'pommel horse'", -2.2128781399900004], [" SELECT COUNT(*) FROM w WHERE record medal event = 'pommel horse'", -2.25785357416], [" SELECT COUNT(*) FROM w WHERE record medal event = 'pommel horse'", -2.260682728089999], [" SELECT COUNT(*) FROM w WHERE `record medal event` LIKE '%pommel horse%'", -3.5015763469200007], [" SELECT COUNT(*) FROM w WHERE `record medal event` LIKE '%pommel horse%'", -3.5343408395399996], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE `record medal event` LIKE '%pommel horse%'", -3.581161487787999], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE `record medal event` LIKE '%pommel horse%'", -3.5849473513464014], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE `record medal event` LIKE '%pommel horse%'", -3.6722453938294994]]}, "165": {"question": "all of the england player take as many wicket as bill johnston", "gold_answer": 0, "pred_answer": {"0": [[36], [36], [36], [36], [36], [36], [36], [36], [36], [36]], "1": [[27], [27], [27], [27], [27], [27], [27], [27], [27], [27]]}, "nsql": [[" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.8625428679], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.86325082065], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.8636733612599998], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.8652117171899998], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.8654633232200002], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.86690674841], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.86729569623], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.8680558909399999], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.8687345655200001], [" SELECT SUM(wickets) FROM w WHERE team = 'england'\nNeuralSQL2: SELECT wickets FROM w WHERE player = 'bill johnston'", -0.8708654936100001]]}, "182": {"question": "daniel palladino direct direct 1 episode than amy sherman - palladino do", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [9], [9], [9], [9], [1]], "1": [[1], [1], [1], [1], [1], [7], [7], [7], [7], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -2.5383682122409996], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -2.5436271401850004], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -2.551286212033], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -2.551629768403001], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino'", -2.553622921584], [" SELECT COUNT(*) FROM w WHERE `writer (s)` LIKE '%daniel palladino%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `writer (s)` LIKE '%amy sherman - palladino%'", -3.664255686539001], [" SELECT COUNT(*) FROM w WHERE writer (s) LIKE '%daniel palladino%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE writer (s) LIKE '%amy sherman - palladino%'", -3.7164539471874996], [" SELECT COUNT(*) FROM w WHERE writer (s) LIKE '%daniel palladino%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE writer (s) LIKE '%amy sherman - palladino%'", -3.7266020377932], [" SELECT COUNT(*) FROM w WHERE writer (s) LIKE '%daniel palladino%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE writer (s) LIKE '%amy sherman - palladino%'", -3.7551440739419992], [" SELECT COUNT(*) FROM w WHERE director = 'daniel palladino'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE director LIKE '%amy sherman - palladino%'", -4.311554585459]]}, "190": {"question": "the philippine and macau have win the same number of gold and silver medal for wushu , but the philippine have win 4 more bronze medal", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "2": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "3": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL4: SELECT gold FROM w WHERE nation = 'macau (mac)'", -1.8375695912869996], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL4: SELECT gold FROM w WHERE nation = 'macau (mac)'", -1.8413288597499993], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL4: SELECT gold FROM w WHERE nation = 'macau (mac)'", -1.8462787523480004], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL4: SELECT gold FROM w WHERE nation = 'macau (mac)'", -1.8481887486539992], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT bronze FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL4: SELECT gold FROM w WHERE nation = 'macau (mac)'", -1.85232112079], [" SELECT gold FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL2: SELECT silver FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL3: SELECT bronze FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL4: SELECT gold FROM w WHERE nation LIKE '%macau%'", -2.2046467661969986], [" SELECT gold FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL2: SELECT silver FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL3: SELECT bronze FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL4: SELECT gold FROM w WHERE nation LIKE '%macau%'", -2.209218062343], [" SELECT gold FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL2: SELECT silver FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL3: SELECT bronze FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL4: SELECT gold FROM w WHERE nation LIKE '%macau%'", -2.2192539179660007], [" SELECT gold FROM w WHERE nation LIKE '% (phi)%'\nNeuralSQL2: SELECT silver FROM w WHERE nation LIKE '% (phi)%'\nNeuralSQL3: SELECT bronze FROM w WHERE nation LIKE '% (phi)%'\nNeuralSQL4: SELECT gold FROM w WHERE nation LIKE '% (mac)%'", -5.512775456460001], [" SELECT SUM(gold) FROM w WHERE nation LIKE 'philippines%'\nNeuralSQL2: SELECT SUM(silver) FROM w WHERE nation LIKE 'philippines%'\nNeuralSQL3: SELECT SUM(bronze) FROM w WHERE nation LIKE 'philippines%'\nNeuralSQL4: SELECT SUM(gold) FROM w WHERE nation LIKE 'macau%'", -6.123901424540003]]}, "275": {"question": "alberto pagani have race for aermacchi 10 time , more than any other team", "gold_answer": 1, "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.32435342607999995], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.32454969874000006], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.32478069121], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.32510394724999997], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.32519143279], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.3253035578300001], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.3255869024400001], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.32571227138], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.32589384087], [" SELECT COUNT(*) FROM w WHERE team = 'aermacchi'", -0.32657692933]]}, "298": {"question": "in the 1981 open championship there be 8 player that tie for 9th and 2 that tie for 3", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.8994417759940001], [" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.900345817764], [" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.903710610854], [" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.9039272078239999], [" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.9044855109590001], [" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.9055167016740001], [" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.9061152761239999], [" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.9068927969839999], [" SELECT COUNT(*) FROM w WHERE place = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE place = 't3'", -0.9113328771890001], [" SELECT COUNT(*) FROM w WHERE `place` = 't9'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `place` = 't3'", -3.4258880269340004]]}, "323": {"question": "3 team tie on point but be separate by goal difference", "gold_answer": 1, "pred_answer": {"0": [[0], [1], [1], [1], [1], [1], [0], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (points, difference) IN (SELECT points, difference FROM w GROUP BY points, difference HAVING COUNT(*) > 1)", -6.361248426499999], [" SELECT COUNT(*) FROM w WHERE points = (SELECT points FROM w WHERE team = 'corinthians') AND difference = (SELECT difference FROM w WHERE team = 'corinthians')", -7.607047924230001], [" SELECT COUNT(*) FROM w WHERE points = (SELECT points FROM w WHERE row_id = 1) AND difference = (SELECT difference FROM w WHERE row_id = 1)", -7.955448223889999], [" SELECT COUNT(*) FROM w WHERE points = (SELECT points FROM w WHERE position = 5) AND difference = (SELECT difference FROM w WHERE position = 5)", -8.87228720289], [" SELECT COUNT(*) FROM w WHERE points = (SELECT points FROM w WHERE team = 'botafogo') AND difference = (SELECT difference FROM w WHERE team = 'botafogo')", -8.874029756819999], [" SELECT COUNT(*) FROM w WHERE points = (SELECT points FROM w WHERE position = 1) AND difference = (SELECT difference FROM w WHERE position = 1)", -9.27670767559], [" SELECT COUNT(*) FROM w WHERE points = (SELECT points FROM w WHERE team = 'corinthians') AND points = (SELECT points FROM w WHERE team = 'palestra it\u00e1lia')", -10.604707235590004], [" SELECT COUNT(*) FROM w WHERE (points = (SELECT points FROM w WHERE position = 5)) AND (difference = (SELECT difference FROM w WHERE position = 5))", -11.517899860190001], [" SELECT COUNT(*) FROM w WHERE points = (SELECT points FROM w WHERE team = 'corinthians') AND (difference - (SELECT difference FROM w WHERE team = 'corinthians')) = 0", -11.57254191009], [" SELECT COUNT(DISTINCT team) FROM w WHERE points = (SELECT points FROM w WHERE position = (SELECT position FROM w WHERE team = 'botafogo') + 1) AND difference = (SELECT difference FROM w WHERE position = (SELECT position FROM w WHERE team = 'botafogo') + 1)", -16.403060454650003]]}, "348": {"question": "in the 1984 - 85 season the boston celtic play 8 game at the boston garden", "gold_answer": 1, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.44649139511], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.4469988294799999], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.44729071269600007], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.44754804604000004], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.44791307383], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.4486074615799999], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.44913179878000004], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.4514079785799999], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'", -0.454169931745], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden'\nQ2: in the 1984 - 85 season the boston celtics played {how many = a2} games at the omni.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'the omni'\nQ3: in the 1984 - 85 season the boston celtics played {how many = a3} games against the los angeles lakers.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE opponent = 'los angeles lakers'\nQ4: in the 1984 - 85 season the boston celtics played {how many = a4} games against the", -13.211404531347]]}, "373": {"question": "2 match result in the result of a draw", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.43048248854000004], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.44171035131], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.44242381156000005], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.44286388171], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.44299381424], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.44336152455999994], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.44356727156], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.4440368706], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.4457837621], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.44583015074000004]]}, "398": {"question": "there be 4 test match in the last 2 month of 1978", "gold_answer": 1, "pred_answer": {"0": [[18], [18], [18], [4], [18], [0], [1], [4], [4], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-1%-%' OR `date` LIKE '1978-12-%'", -5.808709260759999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-1%-%' OR `date` LIKE '1978-12-%'", -5.81469107846], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-1%-%' OR `date` LIKE '1978-12-%'", -5.821344731069999], [" SELECT COUNT(*) FROM w WHERE status = 'test match' AND `date` LIKE '1978-1%-%'", -6.099835251780001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-1%-%' OR `date` LIKE '1978-12%-%'", -6.761098315849998], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-12-%-%' OR `date` LIKE '1978-11-%-%'", -7.191155714800002], [" SELECT COUNT(*) FROM w WHERE status = 'test match' AND date LIKE '1978-12-%'", -8.091381420520001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-%-%' AND `date` >= '1978-10-01' AND status = 'test match'", -11.230356347360004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-%-%' AND `date` > '1978-10-01' AND `status` = 'test match'", -11.436817897539997], [" SELECT COUNT(*) FROM w WHERE status = 'test match' AND `date` LIKE '1978-%-%' AND (SUBSTR(`date`, 8, 2) > '10' OR (SUBSTR(`date`, 8, 2) = '10' AND SUBSTR(`date`, 11, 2) > '26'))", -21.511946793800014]]}, "450": {"question": "the most point score by the lion in a single game be 41", "gold_answer": 1, "pred_answer": {"0": ["<error>", "<error>", [0], [0], "<error>", [0], "<error>", [319], [163], "<error>"], "1": ["<error>"], "2": ["<error>"], "3": ["<error>"], "4": [[0]], "5": [[0]], "6": ["<error>"]}, "nsql": [[" SELECT MAX(score) FROM w", -3.34910944022], [" SELECT MAX(points) FROM w", -4.91147655022], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w", -5.1226908994899985], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT)) FROM w", -5.14091730326], [" SELECT MAX(wins) FROM w", -5.287147736220001], [" SELECT SUM(CAST(SUBSTR(result, 1, INSTR(result, ' - ') - 1) AS INT)) FROM w", -5.6811385976799995], [" SELECT SUM(score) FROM w WHERE opponent = 'detroit lions'", -6.573983029220002], [" SELECT SUM(CAST(SUBSTR(result, 2, INSTR(result, '-') - 2) AS INT)) FROM w", -7.579711798860001], [" SELECT SUM(CASE WHEN result LIKE 'w%' THEN CAST(SUBSTR(result, 3, INSTR(result, '-') - 3) AS INT) ELSE 0 END) FROM w", -12.592908534533999], [" SELECT MAX(score) FROM w WHERE opponent = 'detroit lions'\nNeuralSQL2: SELECT MIN(score) FROM w WHERE opponent = 'detroit lions'\nNeuralSQL3: SELECT MAX(score) FROM w WHERE opponent = 'detroit lions' AND result = 'w'\nNeuralSQL4: SELECT MIN(score) FROM w WHERE opponent = 'detroit lions' AND result = 'w'\nNeuralSQL5: SELECT COUNT(*) FROM w WHERE result = 'w' AND opponent = 'detroit lions'\nNeuralSQL6: SELECT COUNT(*) FROM w WHERE result = 'l' AND opponent = 'detroit lions'\nNeuralSQL7", -31.69835405186999]]}, "506": {"question": "there be only one year (1983) with a title of kriegspiel in the genre arcade", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w WHERE title = 'kriegspiel' AND genre = 'arcade'", -1.8111806484239998], [" SELECT COUNT(DISTINCT year) FROM w WHERE title = 'kriegspiel' AND genre = 'arcade'", -1.821604876452], [" SELECT COUNT(DISTINCT year) FROM w WHERE title = 'kriegspiel' AND genre = 'arcade'", -1.8216895343789998], [" SELECT COUNT(DISTINCT year) FROM w WHERE title = 'kriegspiel' AND genre = 'arcade'", -1.8225607484139998], [" SELECT COUNT(DISTINCT year) FROM w WHERE title = 'kriegspiel' AND genre = 'arcade'", -1.8290753715469998], [" SELECT COUNT(DISTINCT year) FROM w WHERE genre = 'arcade' AND title = 'kriegspiel'", -2.163877884219], [" SELECT COUNT(DISTINCT year) FROM w WHERE genre = 'arcade' AND title = 'kriegspiel'", -2.1644580781269998], [" SELECT COUNT(DISTINCT year) FROM w WHERE genre = 'arcade' AND title = 'kriegspiel'", -2.1674304059739997], [" SELECT COUNT(DISTINCT year) FROM w WHERE genre = 'arcade' AND title = 'kriegspiel'", -2.1696836174520002], [" SELECT COUNT(DISTINCT(year)) FROM w WHERE genre = 'arcade' AND title = 'kriegspiel'", -3.4787446270589992]]}, "531": {"question": "the team ag2r pr\u00e9voyance cumulatively have more point than caisse d'epargne", "gold_answer": 0, "pred_answer": {"0": [[45], [45], [45], "<error>", "<error>", "<error>", [45], "<error>", "<error>", [45]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT SUM(CAST(REPLACE(`uci points`, 'n / a', '0') AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`uci points`, 'n / a', '0') AS INT)) FROM w WHERE team = 'caisse d'epargne'", -4.342699581817999], [" SELECT SUM(CAST(REPLACE(`uci points`, 'n / a', '0') AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`uci points`, 'n / a', '0') AS INT)) FROM w WHERE team = 'caisse d'epargne'", -4.4374229795260005], [" SELECT SUM(CAST(REPLACE(`uci points`,'n / a','') AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`uci points`,'n / a','') AS INT)) FROM w WHERE team = 'caisse d'epargne'", -5.3393689178280015], [" SELECT SUM(CAST(REPLACE(`uci points`,'n / a',0) AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`uci points`,'n / a',0) AS INT)) FROM w WHERE team = 'caisse d'epargne'", -5.379170205731998], [" SELECT SUM(CAST(REPLACE(`uci points`,'n / a',0) AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`uci points`,'n / a',0) AS INT)) FROM w WHERE team = 'caisse d'epargne'", -5.414297084757003], [" SELECT SUM(CAST(REPLACE(uci points,'n / a',0) AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(uci points,'n / a',0) AS INT)) FROM w WHERE team = 'caisse d'epargne'", -6.236047786083001], [" SELECT SUM(CAST(REPLACE(uci points,'n / a','') AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(uci points,'n / a','') AS INT)) FROM w WHERE team = 'caisse d'epargne'", -6.460129219159999], [" SELECT SUM(CAST(REPLACE(uci points,'n/a',0) AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(uci points,'n/a',0) AS INT)) FROM w WHERE team = 'caisse d'epargne'", -6.664560375550002], [" SELECT SUM(CAST(REPLACE(`uci points`,'n/a',0) AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`uci points`,'n/a',0) AS INT)) FROM w WHERE team = 'caisse d\\'epargne'", -7.22840531124], [" SELECT SUM(CAST(REPLACE(`uci points`,'n/a','') AS INT)) FROM w WHERE team = 'ag2r pr\u00e9voyance'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`uci points`,'n/a','') AS INT)) FROM w WHERE team = 'caisse d\\'epargne'", -7.371456616382003]]}, "543": {"question": "there be nil industrial and commercial panel that have a labour panel greater than 1 , a nominate by the taoiseach le than 11 and a cultural and educational panel smaller than 0", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[2], [2], [2], [2], [2], [6], [3], [3], [2], [6]], "2": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `cultural and educational panel` < 0", -2.7679995051509994], [" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `cultural and educational panel` < 0", -2.776163056262001], [" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `cultural and educational panel` < 0", -2.8017529004040003], [" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `cultural and educational panel` < 0", -2.8040194015229996], [" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `cultural and educational panel` < 0", -2.806881234078001], [" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` < 11 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` < 0 AND `cultural and educational panel` < 0", -3.300402510552002], [" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 0 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 0 AND `cultural and educational panel` < 0", -3.7524280724699994], [" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 0 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 0 AND `cultural and educational panel` < 0", -3.7597132958309993], [" SELECT COUNT(*) FROM w WHERE `labour panel` > 1 AND `industrial and commercial panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `nominated by the taoiseach` < 11 AND `industrial and commercial panel` > 1\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `cultural and educational panel` < 0 AND `industrial and commercial panel` > 1", -4.681936945330799], [" SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` > 1 AND `labour panel` > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `industrial and commercial panel` < 11 AND `nominated by the taoiseach` < 11\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `cultural and educational panel` < 0 AND `industrial and commercial panel` < 0", -6.924622481094997]]}, "556": {"question": "south korea get 2 gold award in total", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"]}, "nsql": [[" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.04219130207], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.0422747886100001], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.0428085243500003], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.04798639783], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.04869763632], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.0490286468199999], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.04966894554], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.05323193017], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'", -1.0538909947299997], [" SELECT SUM(gold) FROM w WHERE nation = 'south korea'\nQ2: the number of countries got more than 4 gold awards is {how many = a2}.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE gold > 4\nQ3: the number of countries got more than 3 gold awards is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE gold > 3\nQ4: the number of countries got more than 2 gold awards is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE gold > 2\nQ5: the number of countries got more than 1 gold awards is {how", -27.759934431966]]}, "581": {"question": "36 of 1991 - 92 have a 1993 - 94 smaller than 34 , and a team of estudiantes de la plata", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [1], [1], [1], [4], [4], [5], [1], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE 1991 - 92 > 34 AND 1993 - 94 < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'estudiantes de la plata' AND 1991 - 92 > 34 AND 1993 - 94 < 34", -4.521836608531001], [" SELECT COUNT(*) FROM w WHERE `1991 - 92` > 34 AND `1993 - 94` < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'estudiantes de la plata' AND `1991 - 92` > 34 AND `1993 - 94` < 34", -4.7401520589059984], [" SELECT COUNT(*) FROM w WHERE `1991 - 92` < 34 AND `1993 - 94` < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'estudiantes de la plata' AND `1991 - 92` < 34 AND `1993 - 94` < 34", -4.781712421145998], [" SELECT COUNT(*) FROM w WHERE `1991 - 92` < 34 AND `1993 - 94` < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'estudiantes de la plata' AND `1991 - 92` < 34 AND `1993 - 94` < 34", -4.786850979686001], [" SELECT COUNT(*) FROM w WHERE `1991 - 92` < 34 AND `1993 - 94` < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `1991 - 92` < 34 AND `1993 - 94` < 34 AND team = 'estudiantes de la plata'", -5.291331816566003], [" SELECT COUNT(*) FROM w WHERE `1991 - 92` > `1993 - 94` AND `1993 - 94` < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `1991 - 92` > `1993 - 94` AND `1993 - 94` < 34 AND team = 'estudiantes de la plata'", -5.815917236843999], [" SELECT COUNT(*) FROM w WHERE `1991 - 92` > `1993 - 94` AND `1993 - 94` < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `1991 - 92` > `1993 - 94` AND `1993 - 94` < 34 AND team = 'estudiantes de la plata'", -5.822990271912001], [" SELECT COUNT(*) FROM w WHERE 1993 - 94 < 34 AND 1991 - 92 > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'estudiantes de la plata' AND 1993 - 94 < 34 AND 1991 - 92 > 0", -5.844193485706], [" SELECT COUNT(*) FROM w WHERE `1991 - 92` < `1993 - 94` AND `1993 - 94` < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'estudiantes de la plata' AND `1991 - 92` < `1993 - 94` AND `1993 - 94` < 34", -6.252532567306001], [" SELECT COUNT(*) FROM w WHERE `1991 - 92` > `1993 - 94` AND `1991 - 92` < 34\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `1991 - 92` > `1993 - 94` AND `1991 - 92` < 34 AND team = 'estudiantes de la plata'", -8.060622123584002]]}, "12": {"question": "jelle van damme score 3 time as much as each of the other 2 player in the uefa champion league tournament", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[72], [72], [66], [66], [66], [66], [66], [11, 9, 8, 8, 5, 4, 4, 4, 2, 3, 2, 1, 2, 1, 1, 1, 0], [66], [55]]}, "nsql": [[" SELECT league FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player != 'jelle van damme'", -4.51323622111], [" SELECT SUM(league) FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player != 'jelle van damme'", -5.4871413339699995], [" SELECT league FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player NOT IN ('jelle van damme', 'nicol\u00e1s frutos')", -5.602368761894], [" SELECT league FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player NOT IN ('jelle van damme', 'nicol\u00e1s frutos')", -5.606480464853], [" SELECT league FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player NOT IN ('jelle van damme', 'nicol\u00e1s frutos')", -5.608804568590002], [" SELECT league FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player NOT IN ('jelle van damme', 'nicol\u00e1s frutos')", -5.6272163408], [" SELECT league FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player NOT IN ('jelle van damme', 'nicol\u00e1s frutos')", -5.630357087329998], [" SELECT league FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT league FROM w WHERE player <> 'jelle van damme' AND player <> 'nicol\u00e1s frutos'", -7.025404098120001], [" SELECT `league` FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(`league`) FROM w WHERE player NOT IN ('jelle van damme', 'nicol\u00e1s frutos')", -8.269431167940002], [" SELECT league FROM w WHERE player = 'jelle van damme'\nNeuralSQL2: SELECT SUM(league) - league FROM w WHERE player NOT IN ('jelle van damme', 'nicol\u00e1s frutos')", -8.33793874116]]}, "37": {"question": "3 of the game at the us airways center have the same attendance", "gold_answer": 1, "pred_answer": {"0": ["<error>", "<error>", [2], [2], [4], [2], [5], [3], "<error>", "<error>"], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT attendance) FROM w WHERE location = 'us airways center'", -3.1457946942399992], [" SELECT COUNT(DISTINCT attendance) FROM w WHERE location = 'us airways center'", -3.154018567439999], [" SELECT COUNT(DISTINCT `location attendance`) FROM w WHERE `location attendance` LIKE 'us airways center%'", -4.01065235442], [" SELECT COUNT(DISTINCT `location attendance`) FROM w WHERE `location attendance` LIKE 'us airways center%'", -4.021032031864], [" SELECT COUNT(*) FROM w WHERE `location attendance` LIKE 'us airways center%'", -4.28442500488], [" SELECT COUNT(DISTINCT(`location attendance`)) FROM w WHERE `location attendance` LIKE 'us airways center%'", -5.03803961009], [" SELECT COUNT(DISTINCT(SUBSTR(`location attendance`, 1, INSTR(`location attendance`, ' ') - 1))) FROM w", -7.181590605020001], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'us airways center %'\n```", -7.41387993454], [" SELECT COUNT(DISTINCT location_attendance) FROM w WHERE location_attendance LIKE 'us airways center %'", -7.890091380444], [" SELECT COUNT(DISTINCT(SUBSTR(`location attendance`, LOCATE(' ', `location attendance`) + 1, LENGTH(`location attendance`) - (LOCATE(' ', `location attendance`) + 1)))) FROM w WHERE `location attendance` LIKE '%us airways center%'", -14.181655391409993]]}, "145": {"question": "there be 3 translator in frequency mhz in the 100 's and 3 translator in the frequency mhz in the 90 's", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [1], [3], [0], [0], [0], [1], [3]], "1": [[3], [3], [3], [0], [3], [0], [0], [0], [0], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `frequency mhz` >= 100 AND `frequency mhz` < 110\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `frequency mhz` >= 90 AND `frequency mhz` < 100", -3.8174586845600014], [" SELECT COUNT(*) FROM w WHERE `frequency mhz` >= 100 AND `frequency mhz` < 110\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `frequency mhz` >= 90 AND `frequency mhz` < 100", -3.8202323012329984], [" SELECT COUNT(*) FROM w WHERE `frequency mhz` >= 100 AND `frequency mhz` < 110\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `frequency mhz` >= 90 AND `frequency mhz` < 100", -3.8223366673099997], [" SELECT COUNT(*) FROM w WHERE `frequency mhz` LIKE '100.%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `frequency mhz` LIKE '90.%'", -4.624849538330001], [" SELECT COUNT(*) FROM w WHERE frequency mhz > 100\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE frequency mhz < 100", -4.937544308206999], [" SELECT COUNT(*) FROM w WHERE `frequency mhz` LIKE '1__'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `frequency mhz` LIKE '9__'", -4.9715658836209995], [" SELECT COUNT(*) FROM w WHERE `frequency mhz` LIKE '1__'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `frequency mhz` LIKE '9__'", -4.977199680590999], [" SELECT COUNT(*) FROM w WHERE `frequency mhz` LIKE '1__.__'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `frequency mhz` LIKE '9__.__'", -5.261432218739001], [" SELECT COUNT(*) FROM w WHERE frequency mhz LIKE '100%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE frequency mhz LIKE '90%'", -5.300060449979998], [" SELECT COUNT(*) FROM w WHERE `frequency mhz` BETWEEN 100 AND 109.9\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `frequency mhz` BETWEEN 90 AND 99.9", -6.494264777180998]]}, "170": {"question": "the toronto blue jay play in 8 game with an attendance greater than 5000 in may of the 1991 season", "gold_answer": 1, "pred_answer": {"0": [[27], [27], [27], [27], [27], [27], [27], [27], [27], [27]], "1": ["<error>"], "2": [[27]], "3": ["<error>"], "4": [[27]], "5": ["<error>"], "6": [[1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'may%' AND attendance > 5000", -3.1314762641600002], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may%' AND attendance > 5000", -3.13512911576], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'may%' AND attendance > 5000", -3.55692518146], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'may%' AND attendance > 5000", -3.56661966426], [" SELECT COUNT(*) FROM w WHERE attendance > 5000 AND date LIKE 'may%'", -3.7539787870600003], [" SELECT COUNT(*) FROM w WHERE attendance > 5000 AND date LIKE 'may%'", -3.7555433065599995], [" SELECT COUNT(*) FROM w WHERE attendance > 5000 AND `date` LIKE 'may%'", -3.78435344286], [" SELECT COUNT(*) FROM w WHERE attendance > 5000 AND `date` LIKE 'may%'", -3.7923239881599997], [" SELECT COUNT(*) FROM w WHERE attendance > 5000 AND date LIKE 'may %'", -4.25694835166], [" SELECT COUNT(*) FROM w WHERE attendance > 5000 AND date LIKE 'may%'\nQ2: the toronto blue jays played in {how many = a2} games in may of the 1991 season.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'may%'\nQ3: the toronto blue jays played in {how many = a3} games with an attendance greater than 5000 in the 1991 season.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE attendance > 5000\nQ4: the toronto blue jays played in {how many = a4} games in the 1991 season.\nNeuralSQL4: SELECT COUNT(*)", -19.736315153358003]]}, "195": {"question": "the philippine and macau have win the same number of gold and silver medal for wushu , but macau have win 4 more bronze medal", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "2": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "3": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.5288371690010005], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.5288800925440003], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.529249307304], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.5293983503600008], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.5302174830000006], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.5302362807439995], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.5302960289799998], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.5306142511399994], [" SELECT gold FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL2: SELECT silver FROM w WHERE nation = 'philippines (phi)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'macau (mac)'\nNeuralSQL4: SELECT silver FROM w WHERE nation = 'macau (mac)'", -1.5380251648799999], [" SELECT gold FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL2: SELECT silver FROM w WHERE nation LIKE '%philippines%'\nNeuralSQL3: SELECT gold FROM w WHERE nation LIKE '%macau%'\nNeuralSQL4: SELECT silver FROM w WHERE nation LIKE '%macau%'", -2.9257449508050013]]}, "212": {"question": "mehgaon tie with datia to have the highest number of electorate in 2009", "gold_answer": 0, "pred_answer": {"0": [[210649], [210649], [210649], [210649], [210649], [210649], [210649], [210649], [210649], [210649]], "1": [[413354], [413354], [413354], [413354], [413354], [413354], [130161, 139600, 143593], [130161, 139600, 143593], [130161, 139600, 143593], [130161, 139600, 143593]]}, "nsql": [[" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.245739657218], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.2535523363379997], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.2546161111739997], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.2558739758139998], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.2564744812939999], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.256937844499], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT `number of electorates (2009)` FROM w WHERE district = 'datia'", -2.1486695175879995], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT `number of electorates (2009)` FROM w WHERE district = 'datia'", -2.1544619439500003], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT `number of electorates (2009)` FROM w WHERE district = 'datia'", -2.1869422765880007], [" SELECT `number of electorates (2009)` FROM w WHERE name = 'mehgaon'\nNeuralSQL2: SELECT `number of electorates (2009)` FROM w WHERE district = 'datia'", -2.1911037619710005]]}, "220": {"question": "there be 3 different director that direct 2 episode", "gold_answer": 1, "pred_answer": {"0": [[2, 2, 2], [1, 1, 1], [1, 1, 1], [3], [3], [3], [], [0], [3], [1, 1, 1]], "1": ["<error>"], "2": [[10]], "3": ["<error>"], "4": [[6]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY `directed by` HAVING COUNT(*) = 2", -4.027310249319999], [" SELECT COUNT(DISTINCT(`directed by`)) FROM w GROUP BY `directed by` HAVING COUNT(*) = 2", -4.490391175847], [" SELECT COUNT(DISTINCT(`directed by`)) FROM w GROUP BY `directed by` HAVING COUNT(*) = 2", -4.500678391795001], [" SELECT COUNT(*) FROM (SELECT DISTINCT `directed by` FROM w GROUP BY `directed by` HAVING COUNT(*) = 2)", -4.952369727746], [" SELECT COUNT(*) FROM (SELECT DISTINCT(`directed by`) FROM w GROUP BY `directed by` HAVING COUNT(*) = 2)", -5.564895363870002], [" SELECT COUNT(*) FROM (SELECT DISTINCT(`directed by`) FROM w GROUP BY `directed by` HAVING COUNT(*) = 2)", -5.565264013155001], [" SELECT COUNT(DISTINCT(`directed by`)) FROM w GROUP BY `directed by` HAVING COUNT(DISTINCT(`directed by`)) = 2", -5.8784561144800005], [" SELECT COUNT(*) FROM (SELECT DISTINCT `directed by` FROM w GROUP BY `directed by` HAVING COUNT(DISTINCT `directed by`) = 2)", -7.921200328074], [" SELECT COUNT(*) FROM (SELECT `directed by` FROM w GROUP BY `directed by` HAVING COUNT(*) = 2) AS t", -9.23222282628], [" SELECT COUNT(DISTINCT(`directed by`)) FROM w GROUP BY `directed by` HAVING COUNT(*) = 2\nQ2: there are {how many = a2} records with a prod code larger than 100.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE prod code > 100\nQ3: there are {how many = a3} records with a prod code larger than 100 and a viewers larger than 900,000.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE prod code > 100 AND viewers > 900000\nQ4: there are {how many = a4} records with a prod code larger than 100 or a viewers larger", -37.445674073226016]]}, "305": {"question": "jordan farmar lead the team in assist for more game than deron williams do", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high assists = 'jordan farmar'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -2.0457180212740003], [" SELECT COUNT(*) FROM w WHERE high assists = 'jordan farmar'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -2.0562656896030003], [" SELECT COUNT(*) FROM w WHERE high assists = 'jordan farmar'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -2.062327815928001], [" SELECT COUNT(*) FROM w WHERE high assists = 'jordan farmar'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams'", -2.06529307209], [" SELECT COUNT(*) FROM w WHERE `high assists` = 'jordan farmar (11)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high assists` = 'deron williams (21)'", -2.774112265373], [" SELECT COUNT(*) FROM w WHERE `high assists` = 'jordan farmar (11)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high assists` = 'deron williams (21)'", -2.7769328130199993], [" SELECT COUNT(*) FROM w WHERE `high assists` = 'jordan farmar (11)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high assists` = 'deron williams (21)'", -2.777188918846001], [" SELECT COUNT(*) FROM w WHERE `high assists` = 'jordan farmar (11)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high assists` = 'deron williams (21)'", -2.7871989570330005], [" SELECT COUNT(*) FROM w WHERE high assists = 'jordan farmar (11)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams (21)'", -3.2054923142500003], [" SELECT COUNT(*) FROM w WHERE high assists = 'jordan farmar (11)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high assists = 'deron williams (7)'", -4.41118238388]]}, "328": {"question": "\u62c5 / \u64d4 be the only character that have a metric value measure in kg", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.6720508103179994], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.672950993245999], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.674444264848999], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.675161517053], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.6755109946819995], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '% kg'", -2.8120813539690395], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '% kg'", -2.8592977674500406], [" SELECT COUNT(*) FROM w WHERE metric value LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND metric value LIKE '% kg'", -2.9150462893089997], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '% kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '% kg'", -3.0300140170370407], [" SELECT COUNT(*) FROM w WHERE `metric value` LIKE '%kg'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE character = '\u62c5 / \u64d4' AND `metric value` LIKE '%kg'\n```", -6.73339774276704]]}, "353": {"question": "the utah jazz have 6 player from the united state", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.5774622802800001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.5781362964800001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.5846726823800001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.5854007543799999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.58568379348], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.5860186965799999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.58604004858], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.58632658848], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.5863567525799999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.5869414504800001]]}, "378": {"question": "denver do not lose more than 1 game in a row during november", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [6], [0], [0], [0], [6], [0], [6]], "1": ["<error>", "<error>"], "2": [[2], [13]], "3": ["<error>", "<error>"], "4": [[6], [13]], "5": ["<error>", "<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND score LIKE 'l%'", -4.94767995951], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'november%' AND `score` LIKE 'l%'", -6.69826980681], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND SUBSTR(score, 1, 1) = 'l'", -7.878334228310003], [" SELECT COUNT(*) FROM w WHERE team LIKE '%l%' AND `date` LIKE '%november%'", -9.04954500241], [" SELECT COUNT(*) FROM w WHERE team = 'denver' AND `date` LIKE 'november%' AND score LIKE 'l%'", -9.554144262209999], [" SELECT COUNT(*) FROM w WHERE team LIKE '%denver%' AND score LIKE 'l%' AND date LIKE 'november%'", -9.757866599610002], [" SELECT COUNT(*) FROM w WHERE team LIKE '%denver%' AND score LIKE 'l%' AND `date` LIKE 'november%'", -10.021710049509998], [" SELECT COUNT(*) FROM w WHERE team LIKE '%l%' AND date LIKE 'november%'\nQ2: denver won {how many = a2} games in a row during november.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team LIKE '%w%' AND date LIKE 'november%'\nQ3: denver lost {how many = a3} games in a row during november.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team LIKE '%l%' AND date LIKE 'november%'\nQ4: denver won {how many = a4} games in a row during november", -23.646814223134008], [" SELECT COUNT(*) FROM w WHERE team LIKE '%denver%' AND score LIKE '%l%' AND date LIKE '%november%' AND (game - 1) NOT IN (SELECT game FROM w WHERE team LIKE '%denver%' AND score LIKE '%l%' AND date LIKE '%november%') AND (game + 1) NOT IN (SELECT game FROM w WHERE team LIKE '%denver%' AND score LIKE '%l%' AND date LIKE '%november%')", -24.103454823054005], [" SELECT COUNT(*) FROM w WHERE team LIKE '%l%' AND date LIKE 'november%'\nQ2: the number of denver games in november is {how many = a2}.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'november%'\nQ3: the number of denver games in november is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE 'november%'\nQ4: the number of denver games in november is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE date LIKE 'n", -32.473232161249996]]}, "403": {"question": "all of the constituency have 2nd snp 's place 2003", "gold_answer": 1, "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": ["<error>", "<error>"], "2": [[9], [5]], "3": ["<error>", "<error>"], "4": [[1], [3]], "5": ["<error>", "<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'", -0.7771619183259999], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'", -0.7772638198059999], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'", -0.778455404096], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'", -0.7789235744759999], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'", -0.779236034396], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'", -0.779342503626], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'", -0.7800828274059999], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'", -0.7812071935260001], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '2nd'\nQ2: {how many = a2} constituencies has a winning party 2003 of labour.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `winning party 2003` = 'labour'\nQ3: {how many = a3} constituencies has a winning party 2003 of conservative.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `winning party 2003` = 'conservative'\nQ4: {how many = a4} constituencies has a winning party 2003 of conservative and a result of con hold.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE `", -27.222274916099995], [" SELECT COUNT(*) FROM w WHERE snp 's place 2003 = '2nd'\nQ2: {how many = a2} constituency has the winning party 2003 is labour and result is lab hold.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winning party 2003 = 'labour' AND result = 'lab hold'\nQ3: {how many = a3} constituency has the winning party 2003 is labour and result is lab hold and swing to gain is larger than 3.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE winning party 2003 = 'labour' AND result = 'lab hold' AND swing to gain > 3\nQ4: {how many =", -32.26311978568201]]}, "428": {"question": "the only total that appear more than 2 time be 31", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [9], [3]], "1": [[2, 2, 2], [2, 2, 2], [22], [22], [22], [22], [2, 2, 2], [6], [6], [26, 27, 30]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w GROUP BY total HAVING COUNT(*) > 2\nNeuralSQL2: SELECT COUNT(*) FROM w GROUP BY total HAVING COUNT(*) = 2", -4.915893191813999], [" SELECT COUNT(*) FROM w GROUP BY total HAVING COUNT(*) > 2\nNeuralSQL2: SELECT COUNT(*) FROM w GROUP BY total HAVING COUNT(*) = 2", -4.949569052077002], [" SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(*) > 2)\nNeuralSQL2: SELECT total FROM w GROUP BY total HAVING COUNT(*) > 2", -5.5726539714809995], [" SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(*) > 2)\nNeuralSQL2: SELECT total FROM w GROUP BY total HAVING COUNT(*) > 2", -5.57767344708], [" SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(*) > 2)\nNeuralSQL2: SELECT total FROM w GROUP BY total HAVING COUNT(*) > 2", -5.591139323414002], [" SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(total) > 2)\nNeuralSQL2: SELECT total FROM w GROUP BY total HAVING COUNT(total) > 2", -6.187778470852502], [" SELECT COUNT(*) FROM w GROUP BY total HAVING COUNT(total) > 2\nNeuralSQL2: SELECT COUNT(*) FROM w GROUP BY total HAVING COUNT(total) = 2", -6.287694272914998], [" SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(total) > 2)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(total) = 2)", -7.768812476677], [" SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(*) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(*) = 2)", -8.767558199035], [" SELECT COUNT(*) FROM w WHERE total IN (SELECT total FROM w GROUP BY total HAVING COUNT(total) > 2)\nNeuralSQL2: SELECT total FROM w GROUP BY total HAVING COUNT(total) = 2\n```", -10.340376611677998]]}, "480": {"question": "only 1 female have a prison connection in the usa", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gender = 'female' AND prison connection LIKE '% (usa)'", -3.1216838744000004], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND prison connection LIKE '% (usa)'", -3.13045241387], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND prison connection LIKE '% (usa)'", -3.13931182625], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND `prison connection` LIKE '%usa%'", -3.1698721268999996], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND `prison connection` LIKE '%usa%'", -3.1764083665499996], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND `prison connection` LIKE '% (usa)'", -3.21090874962], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND `prison connection` LIKE '% (usa)'", -3.2228490212499996], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND `prison connection` LIKE '% (usa)'", -3.2248075813699995], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND `prison connection` LIKE '%(usa)'", -4.27332131735], [" SELECT COUNT(*) FROM w WHERE `prison connection` LIKE '% (usa)%' AND gender = 'female'", -4.46031887776]]}, "536": {"question": "there be only 1 person with a snatch of 153.0 and his total bodyweight be 104.70", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[104.7], [104.7], [104.7], [104.7], [104.7], [104.7], [104.7], [104.7], [104.7], [104.7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE snatch = 153.0\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = 153.0", -1.770427737508], [" SELECT COUNT(*) FROM w WHERE snatch = 153.0\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = 153.0", -1.7715598304989997], [" SELECT COUNT(*) FROM w WHERE snatch = 153.0\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = 153.0", -1.771739300314], [" SELECT COUNT(*) FROM w WHERE snatch = 153.0\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = 153.0", -1.7773277283179998], [" SELECT COUNT(*) FROM w WHERE snatch = 153.0\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = 153.0", -1.778115949028], [" SELECT COUNT(*) FROM w WHERE snatch = 153.0\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = 153.0", -1.7781547118140004], [" SELECT COUNT(*) FROM w WHERE snatch = 153.0\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = 153.0", -1.7799292830740001], [" SELECT COUNT(*) FROM w WHERE snatch = '153.0'\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = '153.0'", -2.578782170024], [" SELECT COUNT(*) FROM w WHERE snatch = '153.0'\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = '153.0'", -2.5839575906339998], [" SELECT COUNT(DISTINCT name) FROM w WHERE snatch = '153.0'\nNeuralSQL2: SELECT SUM(bodyweight) FROM w WHERE snatch = '153.0'", -4.9624895041990005]]}, "561": {"question": "6.2 be the total of rebound average with more than 124 game and a rank of 10", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [10]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.515843520694], [" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.5177847114149998], [" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.5220772865699999], [" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.52254950909], [" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.5232362448200003], [" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.5268758578640003], [" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.5275440237799993], [" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.5290489431299998], [" SELECT COUNT(*) FROM w WHERE games > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -1.5316858459899996], [" SELECT COUNT(*) FROM w WHERE `total rebounds` > 124\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank = 10", -3.206450932595001]]}, "573": {"question": "the specie that test positive for indol also test positive on the methyl red reading", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE methyl red = 'positive'", -1.398762442122], [" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE methyl red = 'positive'", -1.398764026122], [" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE methyl red = 'positive'", -1.4045332382159998], [" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE methyl red = 'positive'", -1.415421385344], [" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE methyl red = 'positive'", -1.4177710722629997], [" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE methyl red = 'positive'", -1.42516555423], [" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `methyl red` = 'positive'", -1.728392699663], [" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `methyl red` = 'positive'", -1.7305578858439996], [" SELECT COUNT(*) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `methyl red` = 'positive'", -1.734235060169], [" SELECT COUNT(DISTINCT species) FROM w WHERE indole = 'positive'\nNeuralSQL2: SELECT COUNT(DISTINCT species) FROM w WHERE methyl red = 'positive'", -3.2215583114535007]]}, "586": {"question": "for all 28 match that atl\u00e9tico ciudad play , his average be never below 0.61", "gold_answer": 1, "pred_answer": {"0": [[28], [28], [28], [28], [28], [28], [28], [28], [28], [1]], "1": [[1], [1], [1], [1], [1], [0], [1], [1], [0], [1]]}, "nsql": [[" SELECT SUM(matches) FROM w WHERE team = 'atl\u00e9tico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average >= 0.61", -3.338346096280001], [" SELECT SUM(matches) FROM w WHERE team = 'atl\u00e9tico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average >= 0.61", -3.3423806792025004], [" SELECT SUM(matches) FROM w WHERE team = 'atl\u00e9tico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average >= 0.61", -3.3463755836660005], [" SELECT matches FROM w WHERE team = 'atl\u00e9tico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average >= 0.61", -3.808154759792999], [" SELECT matches FROM w WHERE team = 'atl\u00e9tico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average >= 0.61", -3.8203534975399993], [" SELECT SUM(matches) FROM w WHERE team = 'atl\u00e9tico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average > 0.61", -3.9366433437289996], [" SELECT SUM(matches) FROM w WHERE team = 'atletico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atletico ciudad' AND average >= 0.61", -3.9695360539539997], [" SELECT SUM(matches) FROM w WHERE team = 'atletico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atletico ciudad' AND average >= 0.61", -3.9713522961099996], [" SELECT SUM(matches) FROM w WHERE team = 'atletico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atletico ciudad' AND average > 0.61", -4.51167884086], [" SELECT COUNT(DISTINCT(matches)) FROM w WHERE team = 'atl\u00e9tico ciudad'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'atl\u00e9tico ciudad' AND average >= 0.61", -7.710843793910002]]}, "17": {"question": "3 of the people tie for fifth place be from the united state", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place = '5' AND country = 'united states'", -1.54251198135], [" SELECT COUNT(*) FROM w WHERE place = '5' AND country = 'united states'", -1.5536445737500004], [" SELECT COUNT(*) FROM w WHERE place = '5' AND country = 'united states'", -1.5555904404499994], [" SELECT COUNT(*) FROM w WHERE place = '5' AND country = 'united states'", -1.5565275961500002], [" SELECT COUNT(*) FROM w WHERE place = '5' AND country = 'united states'", -1.55975346595], [" SELECT COUNT(*) FROM w WHERE place = '5' AND country = 'united states'", -1.5623791085499998], [" SELECT COUNT(*) FROM w WHERE place = '5' AND country = 'united states'", -1.5627395833500004], [" SELECT COUNT(*) FROM w WHERE place = '5' AND country = 'united states'", -1.5638457961500003], [" SELECT COUNT(*) FROM w WHERE place = 't5' AND country = 'united states'", -3.09322620275], [" SELECT COUNT(DISTINCT(player)) FROM w WHERE place = '5' AND country = 'united states'", -5.082590425265001]]}, "42": {"question": "there be a tie for the largest point gap 2 time during the season", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], "<error>", "<error>", "<error>", [4], "<error>", [2], [4]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -5.450848565268701], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -5.459935949781199], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -5.463221460095201], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) = (SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM", -6.148260872161002], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) = (SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM", -6.161176201431999], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) = (SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM", -6.161490190317399], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '", -6.387351418949701], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, ' - ') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) = (SELECT MAX(CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, ' - ') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1))", -7.529344669763499], [" SELECT COUNT(*) FROM w WHERE (SUBSTR(score, 1, INSTR(score, '-') - 1) - SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1))) = (SELECT MAX(SUBSTR(score, 1, INSTR(score, '-') - 1) - SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1))) FROM w)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (SUBSTR(score, 1", -9.677125660899996], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' GROUP BY (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) ORDER BY COUNT(*) DESC LIMIT 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '% - %' GROUP BY (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(S", -12.661979123669175]]}, "67": {"question": "9 of the viral disease replicate outside the nucleus", "gold_answer": 0, "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE replication site != 'nucleus'", -1.2097557216640002], [" SELECT COUNT(*) FROM w WHERE replication site != 'nucleus'", -1.2124256077340003], [" SELECT COUNT(*) FROM w WHERE replication site != 'nucleus'", -1.212918763574], [" SELECT COUNT(*) FROM w WHERE replication site != 'nucleus'", -1.220148682664], [" SELECT COUNT(*) FROM w WHERE replication site != 'nucleus'", -1.221096187284], [" SELECT COUNT(*) FROM w WHERE `replication site` != 'nucleus'", -1.6338024860539997], [" SELECT COUNT(*) FROM w WHERE `replication site` != 'nucleus'", -1.6422595943840002], [" SELECT COUNT(*) FROM w WHERE `replication site` != 'nucleus'", -1.6445786625939998], [" SELECT COUNT(*) FROM w WHERE `replication site` != 'nucleus'", -1.6447660775540003], [" SELECT COUNT(*) FROM w WHERE `replication site` != 'nucleus'", -1.646335789414]]}, "175": {"question": "the toronto blue jays lose 2 of the last 3 game they play in may 1991", "gold_answer": 0, "pred_answer": {"0": [[27], [0], [27], [0], [0], [0], [0], [0], [3], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' ORDER BY date DESC LIMIT 3", -7.001632012799998], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1991-05-01' AND '1991-05-31' AND loss IS NOT NULL", -7.98289453929], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND loss IS NOT NULL ORDER BY date DESC LIMIT 3", -9.14390809262], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 05 - %' AND LENGTH(loss) > 0", -10.49081339809], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND loss NOT LIKE '% - %'", -11.301146029589999], [" SELECT COUNT(*) FROM w WHERE date LIKE '1991-05-%' AND loss LIKE '%(% - %)'", -11.46841370949], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'may %' AND `date` LIKE '% 1991' AND loss IS NOT NULL", -11.645116491589999], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND loss LIKE '% - %' AND (CAST(SUBSTR(loss, 1, INSTR(loss, '-') - 1) AS INT) - CAST(SUBSTR(loss, INSTR(loss, '-') + 1, LENGTH(loss) - (INSTR(loss, ' - ') + 1)) AS INT)) > 0\n```", -14.926977018403003], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'may%' AND loss IS NOT NULL AND row_id > (SELECT row_id FROM w WHERE `date` LIKE 'may%' ORDER BY row_id DESC LIMIT 1) - 3", -17.20364430395], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND (LENGTH(loss) - LENGTH(REPLACE(loss, ' - ', '')) + 1) = 1", -18.721488082375]]}, "200": {"question": "there be 4 instance where there be a tie for most rebound by detroit piston player during this period of the 2010 - 2011 season", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"], "2": [[4]], "3": ["<error>"], "4": [[4]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '% , %'", -2.434417578075], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '% , %'", -2.442094636425], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '% , %'", -2.443281623605], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '%, %'", -2.642788398685], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '%, %'", -2.6507068578850004], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '%, %'", -2.652301462895], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '%, %'", -2.653002195475], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '%, %'", -2.653930413085], [" SELECT COUNT(*) FROM w WHERE high rebounds LIKE '% , %'", -2.776802761475], [" SELECT COUNT(*) FROM w WHERE high rebounds LIKE '% , %'\nQ2: there are {how many = a2} instances where detroit pistons had the same number of rebounds as their opponents during this period of the 2010 - 2011 season.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE high rebounds LIKE '% , %'\nQ3: there are {how many = a3} instances where detroit pistons had the same number of rebounds as their opponents during this period of the 2010 - 2011 season.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE high rebounds LIKE '% , %'\nQ4: there are {how many = a4}", -32.753990992434986]]}, "225": {"question": "there be no director that direct more than one episode", "gold_answer": 0, "pred_answer": {"0": [[1, 1, 1], [7], [3], [3], "<error>", [3], [0], [3], [3], [3]], "1": ["<error>"], "2": [[1950000]], "3": ["<error>"], "4": [[1950000]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT `directed by`) FROM w GROUP BY `directed by` HAVING COUNT(*) > 1", -4.090414644729], [" SELECT COUNT(*) FROM (SELECT DISTINCT `directed by` FROM w)", -4.920576214486], [" SELECT COUNT(*) FROM (SELECT COUNT(*) FROM w GROUP BY `directed by` HAVING COUNT(*) > 1)", -5.0443507494999995], [" SELECT COUNT(*) FROM (SELECT DISTINCT `directed by` FROM w GROUP BY `directed by` HAVING COUNT(*) > 1)", -5.130651710979999], [" SELECT COUNT(*) FROM (SELECT COUNT(*) FROM w GROUP BY `directed by`) WHERE COUNT(*) > 1", -6.641073513690001], [" SELECT COUNT(DISTINCT(`directed by`)) FROM w WHERE `directed by` IN (SELECT `directed by` FROM w GROUP BY `directed by` HAVING COUNT(`directed by`) > 1)", -7.262023453986], [" SELECT COUNT(*) FROM (SELECT COUNT(DISTINCT(`directed by`)) FROM w GROUP BY `directed by` HAVING COUNT(DISTINCT(`directed by`)) > 1)", -9.301811009167999], [" SELECT COUNT(*) FROM (SELECT DISTINCT(`directed by`) FROM w GROUP BY `directed by` HAVING COUNT(*) > 1) AS T", -10.740459035652002], [" SELECT COUNT(*) FROM (SELECT DISTINCT `directed by` FROM w) AS a WHERE a.`directed by` IN (SELECT `directed by` FROM w GROUP BY `directed by` HAVING COUNT(*) > 1)", -12.628167641950002], [" SELECT COUNT(*) FROM (SELECT DISTINCT(`directed by`) FROM w GROUP BY `directed by` HAVING COUNT(*) > 1)\nQ2: the number of viewers of the episode that was directed by robert lieberman is {how many = a2}.\nNeuralSQL2: SELECT SUM(viewers) FROM w WHERE `directed by` = 'robert lieberman'\nQ3: the number of viewers of the episode that was directed by robert lieberman is {how many = a3}.\nNeuralSQL3: SELECT SUM(viewers) FROM w WHERE `directed by` = 'robert lieberman'\nQ4: the number of", -32.26693952922]]}, "242": {"question": "administrative panel have 4 more member than national university of ireland", "gold_answer": 1, "pred_answer": {"0": [[4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7], [4, 1, 0, 0, 0, 7]], "1": [[1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3], [1, 1, 0, 0, 1, 3]]}, "nsql": [[" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.33563338201], [" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.3369675780800003], [" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.3372979493339996], [" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.33763904766], [" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.3376893684379998], [" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.3377093694800002], [" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.337735601118], [" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.3379685257300002], [" SELECT `administrative panel` FROM w\nNeuralSQL2: SELECT `national university of ireland` FROM w", -1.3414532869400002], [" SELECT administrative panel FROM w\nNeuralSQL2: SELECT national university of ireland FROM w", -2.1867659108299997]]}, "250": {"question": "there be 2 time the attendance be over 50000", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.23313580766600003], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.23321597106599998], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.233353455196], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.23336431108599998], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.23367686675600002], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.233681051066], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.23371881044599999], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.233804276236], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.23406743608599997], [" SELECT COUNT(*) FROM w WHERE attendance > 50000", -0.23509356105599996]]}, "335": {"question": "manchester unite have draw all mathces to the blackburn rover 2 out of 2 time since 13 august 2005", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], "<error>", [0], [0], [2], [0], "<error>", [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND result f - a = '0 - 0'", -4.28555436615], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND result f - a = '0 - 0' AND date >= '2005-08-13 00:00:00'", -7.029287617329999], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND result f - a = '0 - 0' AND date >= '2005-08-13 00:00:00'", -7.072885693179999], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND result = '0 - 0' AND date > '2005-08-13 00:00:00'", -7.3041993957299995], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND `result f - a` = '0 - 0' AND `date` > '2005-08-13 00:00:00'", -7.504150644660002], [" SELECT COUNT(*) FROM w WHERE date > '2005-08-13 00:00:00' AND opponents = 'blackburn rovers' AND result f - a = '0 - 0'", -7.515653416979999], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND date > '2005-08-13 00:00:00' AND result f - a LIKE '%-%'", -9.26560507062], [" SELECT COUNT(*) FROM w WHERE `opponents` = 'blackburn rovers' AND `result f - a` LIKE '% - %' AND (CAST(SUBSTR(`result f - a`, 1, INSTR(`result f - a`, '-') - 1) AS INT) - CAST(SUBSTR(`result f - a`, INSTR(`result f - a`, '-') + 1, LENGTH(`result f - a`) - (INSTR(`result f - a`, ' - ') + 1)) AS INT)) = 0", -9.477337326319008], [" SELECT COUNT(*) FROM w WHERE date >= '2005-08-13' AND opponents = 'blackburn rovers' AND result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) = 0", -10.646143128364995], [" SELECT COUNT(*) FROM w WHERE (opponents = 'blackburn rovers' AND `result f - a` LIKE '%-%') AND (`date` >= '2005-08-13 00:00:00' AND `date` <= '2006-01-03 00:00:00')", -18.831766750529997]]}, "358": {"question": "the utah jazz have 3 player from the united state", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.6639468078500002], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.66481018145], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.66501612815], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.66583305345], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.6660753899500002], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.6663372056499999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.66732889105], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.6673618395499998], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.6674560344500001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.66964777825]]}, "383": {"question": "ty lawson lead or be tie for the lead in assist for 10 out of 13 game", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `high assists` LIKE '%ty lawson%'", -2.8204805564000006], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE '%ty lawson%'", -2.8216813771200004], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE '%ty lawson%'", -2.82660674271], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE '%ty lawson%'", -2.82745706916], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE '%ty lawson%'", -2.83294362246], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE '%ty lawson%'", -2.83499281115], [" SELECT COUNT(*) FROM w WHERE high assists LIKE '%ty lawson%'", -3.7413650168600006], [" SELECT COUNT(DISTINCT game) FROM w WHERE `high assists` LIKE '%ty lawson%'", -4.8264359223642], [" SELECT COUNT(*) FROM w WHERE (high assists LIKE '%ty lawson%' OR high assists LIKE 'ty lawson%') AND high assists NOT LIKE '%ty lawson%'", -10.47987326231], [" SELECT COUNT(*) FROM w WHERE (`high assists` LIKE '%ty lawson%' OR `high assists` LIKE 'ty lawson%') AND `high assists` NOT LIKE '%ty lawson%'", -11.22989208866]]}, "408": {"question": "kenneth ferrie and geoff ogilvy be the only player to score a + 1 to par", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND `to par` = '+ 1'", -3.025805434375], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND `to par` = '+ 1'", -3.038436084314999], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy')", -3.269172337205], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy')", -3.2998998717489987], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy')", -3.312676853694999], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy')", -3.313177263535], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy')", -3.3139355602250005], [" SELECT COUNT(DISTINCT player) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(DISTINCT player) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy')", -5.3864893768182], [" SELECT COUNT(DISTINCT player) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(DISTINCT player) FROM w WHERE (player = 'kenneth ferrie' OR player = 'geoff ogilvy') AND `to par` = '+ 1'", -5.6747244890455], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 1'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `to par` = '+ 1' AND (player = 'kenneth ferrie' OR player = 'geoff ogilvy')\n```", -6.274260112365001]]}, "433": {"question": "the 49ers tie 2 out of 14 game in the 1947 season", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 't'", -1.31256441888], [" SELECT COUNT(*) FROM w WHERE result = 't'", -1.3145508792799998], [" SELECT COUNT(*) FROM w WHERE result = 't'", -1.3150566403800001], [" SELECT COUNT(*) FROM w WHERE result = 't'", -1.31577165458], [" SELECT COUNT(*) FROM w WHERE result = 't'", -1.3166014285799998], [" SELECT COUNT(*) FROM w WHERE result = 't'", -1.31699594088], [" SELECT COUNT(*) FROM w WHERE result = 't'", -1.3173968458800003], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - % - %'", -3.11975914428], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - % - %'", -3.1248954202800006], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - % - %'", -3.1281201677799997]]}, "458": {"question": "the wildcat play 2 game in september , 4 game in october , and 4 game in november", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "2": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.6465761111839994], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.6669134547770004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.7058076179369996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.7065971385720002], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.7067201294520002], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.7075871332280008], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.7092862647800011], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.710082332655], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -1.7108529286719998], [" SELECT COUNT(*) FROM w WHERE date LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE 'nov%'", -2.6816868875799993]]}, "510": {"question": "the bmw have less than 6 point with a speed of 82.32 mph", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.11846300262], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.1195120316200002], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.1196878318999999], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.1199463639199998], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.1205444093899999], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.1207129717500002], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.1207502150700002], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.12088967339], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.1209889841000003], [" SELECT SUM(points) FROM w WHERE machine = 'bmw' AND speed = '82.32 mph'", -1.1210931700700002]]}, "566": {"question": "the nation of croatia win 3 medal all together , 2 of which be silver", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "2": ["<error>"]}, "nsql": [[" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'", -3.1647907345800004], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'", -3.1752993296699996], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'", -3.1774260096], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'", -3.1776463552300003], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'", -3.185113072499999], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'croatia'", -3.242285619835999], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'croatia'", -3.7427797581555007], [" SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'croatia'", -3.762943765673], [" SELECT SUM(total) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold) + SUM(silver) + SUM(bronze) FROM w WHERE nation = 'croatia'", -4.2582970677039995], [" SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT SUM(gold + silver + bronze) FROM w WHERE nation = 'croatia'\n```", -5.85741483016]]}, "591": {"question": "player in round higher than 4 , be from either canada or the united state", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (nationality = 'canada' OR nationality = 'united states') AND round > 4", -1.8752423809150003], [" SELECT COUNT(*) FROM w WHERE (nationality = 'canada' OR nationality = 'united states') AND round > 4", -1.8865282807650003], [" SELECT COUNT(*) FROM w WHERE (nationality = 'canada' OR nationality = 'united states') AND round > 4", -1.8871045791650003], [" SELECT COUNT(*) FROM w WHERE (nationality = 'canada' OR nationality = 'united states') AND round > 4", -1.8878350259649999], [" SELECT COUNT(*) FROM w WHERE (nationality = 'canada' OR nationality = 'united states') AND round > 4", -1.890080550965], [" SELECT COUNT(*) FROM w WHERE (nationality = 'canada' OR nationality = 'united states') AND round > 4", -1.892617459035], [" SELECT COUNT(*) FROM w WHERE nationality IN ('canada', 'united states') AND round > 4", -3.3438737160949996], [" SELECT COUNT(*) FROM w WHERE nationality IN ('canada', 'united states') AND round > 4", -3.3495233468150007], [" SELECT COUNT(*) FROM w WHERE nationality IN ('canada','united states') AND round > 4", -3.7844999954649996], [" SELECT COUNT(*) FROM w WHERE `round` > 4 AND (`nationality` = 'canada' OR `nationality` = 'united states')", -5.549342425154998]]}, "603": {"question": "bell media own 3 separate radio station like the cbc", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[3], [3], [3], [0], [0], [0], [0], [0], [0], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.2066903200030006], [" SELECT COUNT(*) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.2190796589490005], [" SELECT COUNT(*) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE owner = 'canadian broadcasting corporation'", -2.224247935565], [" SELECT COUNT(*) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE owner = 'cbc'", -2.7567707294450003], [" SELECT COUNT(*) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE owner = 'cbc'", -2.759006480365], [" SELECT COUNT(*) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE owner = 'cbc'", -2.7987784638650006], [" SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT call sign) FROM w WHERE owner = 'cbc'", -3.1278110604052003], [" SELECT COUNT(DISTINCT frequency) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT frequency) FROM w WHERE owner = 'cbc'", -3.4595569179859993], [" SELECT COUNT(DISTINCT frequency) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT frequency) FROM w WHERE owner = 'cbc'", -3.4798169953360003], [" SELECT COUNT(DISTINCT(call sign)) FROM w WHERE owner = 'bell media'\nNeuralSQL2: SELECT COUNT(DISTINCT(call sign)) FROM w WHERE owner = 'canadian broadcasting corporation'", -4.2852930984215]]}, "4": {"question": "4 player score 3 goal total , and all 4 be in league 4", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.515083687687], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.521394685057], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.5247927965769996], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.525673554207], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.527318438737], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.529323636707], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.529673282407], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.529736706157], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.5325233581570004], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND player = 'four players'", -2.534752115757]]}, "22": {"question": "no 2 player attend the same college / junior / club team (league)", "gold_answer": 1, "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [0], [11]]}, "nsql": [[" SELECT COUNT(DISTINCT `college / junior / club team (league)`) FROM w", -2.12338549141], [" SELECT COUNT(DISTINCT `college / junior / club team (league)`) FROM w", -2.128124899409999], [" SELECT COUNT(DISTINCT `college / junior / club team (league)`) FROM w", -2.13460967216], [" SELECT COUNT(DISTINCT `college / junior / club team (league)`) FROM w", -2.1672911325999995], [" SELECT COUNT(DISTINCT `college / junior / club team (league)`) FROM w", -2.187408939879999], [" SELECT COUNT(DISTINCT(`college / junior / club team (league)`)) FROM w", -2.667572585519999], [" SELECT COUNT(DISTINCT(`college / junior / club team (league)`)) FROM w", -2.704232871609999], [" SELECT COUNT(DISTINCT(college / junior / club team (league))) FROM w", -3.79413232317], [" SELECT COUNT(*) FROM w WHERE college / junior / club team (league) IN (SELECT college / junior / club team (league) FROM w GROUP BY college / junior / club team (league) HAVING COUNT(*) > 1)", -4.625270049989999], [" SELECT COUNT(*) FROM w WHERE college / junior / club team (league) LIKE '%(%)'", -6.977517363670001]]}, "47": {"question": "the jazz have at least 3 guard that be on the team 1979 - 80", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], "<error>", [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE years for jazz = '1979 - 80' AND position LIKE '%guard%'", -2.6674307227700003], [" SELECT COUNT(*) FROM w WHERE years for jazz = '1979 - 80' AND position LIKE '%guard%'", -2.678672326609999], [" SELECT COUNT(*) FROM w WHERE years for jazz = '1979 - 80' AND position LIKE '%guard%'", -2.6875028991899996], [" SELECT COUNT(*) FROM w WHERE `years for jazz` = '1979 - 80' AND position LIKE '%guard%'", -3.5396592213599996], [" SELECT COUNT(*) FROM w WHERE position LIKE '%guard%' AND years for jazz = '1979 - 80'", -3.69844541282], [" SELECT COUNT(*) FROM w WHERE position LIKE '%guard%' AND years for jazz = '1979 - 80'", -3.81397362829], [" SELECT COUNT(*) FROM w WHERE position = 'guard' AND years for jazz = '1979 - 80'", -3.9529552993699997], [" SELECT COUNT(*) FROM w WHERE position LIKE '%guard%' AND `years for jazz` LIKE '1979-80'", -6.63921411539], [" SELECT COUNT(*) FROM w WHERE year for jazz = '1979 - 80' AND position LIKE '%guard%'", -7.436718315859999], [" SELECT COUNT(*) FROM w WHERE position LIKE '%guard%' AND (years for jazz LIKE '1979 - 80' OR years for jazz LIKE '1979 - 1980')", -10.558119831649996]]}, "72": {"question": "galina voskoboeva play a total of 3 game on a hard tennis court", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68142636915], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68343390335], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68349376911], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68354128229], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68423422122], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68426474391], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68733223337], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.68800320877], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.6887379861499999], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'", -0.6894475568499999]]}, "97": {"question": "jerry mitchell be 1 of 2 winner of a tony award", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [2], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.498878945488], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.5043401917450008], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.50599843896], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.506821417657001], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.5077934276600002], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'tony award' AND result = 'won'", -2.5118335738659994], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND result = 'won'", -2.6860565916550003], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won' AND nominee = 'jerry mitchell'", -3.9526822093950007], [" SELECT COUNT(*) FROM w WHERE result = 'won' AND award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND result = 'won' AND award = 'tony award'", -4.525180708352], [" SELECT COUNT(*) FROM w WHERE `award` = 'tony award' AND `result` = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `nominee` = 'jerry mitchell' AND `award` = 'tony award' AND `result` = 'won'", -6.108532673585999]]}, "205": {"question": "more viewer in the us watch episode 4 of dexter (season 3) than watch episode 2", "gold_answer": 1, "pred_answer": {"0": [["0.86"], ["0.86"], ["0.86"], [], [], ["0.86"], ["n / a"], ["n / a"], [0], [1]], "1": [["0.79"], ["0.79"], ["0.79"], [], [], ["0.79"], ["0.79"], ["0.79"], [0], [1]]}, "nsql": [[" SELECT `us viewers (millions)` FROM w WHERE `no in season` = 4\nNeuralSQL2: SELECT `us viewers (millions)` FROM w WHERE `no in season` = 2", -2.4838234809900004], [" SELECT `us viewers (millions)` FROM w WHERE `no in season` = 4\nNeuralSQL2: SELECT `us viewers (millions)` FROM w WHERE `no in season` = 2", -2.4855113758400003], [" SELECT `us viewers (millions)` FROM w WHERE `no in season` = 4\nNeuralSQL2: SELECT `us viewers (millions)` FROM w WHERE `no in season` = 2", -2.4862975011860002], [" SELECT `us viewers (millions)` FROM w WHERE `no in series` = 4\nNeuralSQL2: SELECT `us viewers (millions)` FROM w WHERE `no in series` = 2", -3.2747252352700005], [" SELECT `us viewers (millions)` FROM w WHERE `no in series` = 4\nNeuralSQL2: SELECT `us viewers (millions)` FROM w WHERE `no in series` = 2", -3.2800565599500007], [" SELECT `us viewers (millions)` FROM w WHERE no in season = 4\nNeuralSQL2: SELECT `us viewers (millions)` FROM w WHERE no in season = 2", -3.5710917481599997], [" SELECT `us viewers (millions)` FROM w WHERE `no in series` = 34\nNeuralSQL2: SELECT `us viewers (millions)` FROM w WHERE `no in series` = 26", -4.813150204199999], [" SELECT `us viewers (millions)` FROM w WHERE `no in series` = '35'\nNeuralSQL2: SELECT `us viewers (millions)` FROM w WHERE `no in series` = '26'", -6.548331308960002], [" SELECT COUNT(*) FROM w WHERE `no in series` = 4 AND `no in season` = 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `no in series` = 2 AND `no in season` = 2", -7.170649613809999], [" SELECT COUNT(*) FROM w WHERE `no in season` = 4 AND `us viewers (millions)` IS NOT NULL\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `no in season` = 2 AND `us viewers (millions)` IS NOT NULL", -7.340864160573]]}, "230": {"question": "19 player be transfer during the summer window as oppose to 6 during the winter window", "gold_answer": 1, "pred_answer": {"0": [[19], [19], [19], [19], [19], [19], [19], [19], [19], [19]], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1763263542199998], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1780093066800001], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1806686498399996], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1810842993900004], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1824317940399995], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1828994805499995], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.18377891525], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1872812510699997], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1876633258900002], [" SELECT COUNT(*) FROM w WHERE `transfer window` = 'su'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer window` = 'wi'", -1.1878692156600004]]}, "255": {"question": "a total of 2 game and 2 leg that have the score of 0 - 0", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [2], [2], [1], [1], [1], [1]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0' AND `2nd leg` = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0' OR `2nd leg` = '0 - 0'", -2.8898936138460005], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0' AND `2nd leg` = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0' OR `2nd leg` = '0 - 0'", -2.895063797520001], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0' AND `2nd leg` = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0' OR `2nd leg` = '0 - 0'", -2.9195261475200014], [" SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' AND 2nd leg = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' OR 2nd leg = '0 - 0'", -3.2078559491749976], [" SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' OR 2nd leg = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' OR 2nd leg = '0 - 0'", -3.928969473020001], [" SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' OR 2nd leg = '0 - 0'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' OR 2nd leg = '0 - 0'", -3.93369855463], [" SELECT COUNT(*) FROM w WHERE (1st leg = '0 - 0' AND 2nd leg = '0 - 0') OR (1st leg = '0 - 0' AND 2nd leg = '0 - 0')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' OR 2nd leg = '0 - 0'", -5.7355197777999996], [" SELECT COUNT(*) FROM w WHERE (1st leg = '0 - 0' AND 2nd leg = '0 - 0') OR (1st leg = '0 - 0' AND 2nd leg = '0 - 0')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' OR 2nd leg = '0 - 0'", -5.750013598170004], [" SELECT COUNT(*) FROM w WHERE (`1st leg` LIKE '0 - 0' AND `2nd leg` LIKE '0 - 0') OR (`1st leg` LIKE '0 - 0' AND `2nd leg` LIKE '0 - 0')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `1st leg` LIKE '0 - 0' OR `2nd leg` LIKE '0 - 0'", -8.120239465464998], [" SELECT COUNT(*) FROM w WHERE (1st leg = '0 - 0' AND 2nd leg = '0 - 0') OR (1st leg = '0 - 0 (0 - 0)' AND 2nd leg = '0 - 0') OR (1st leg = '0 - 0 (0 - 0)' AND 2nd leg = '0 - 0 (0 - 0)')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0' OR 1st leg = '0 - 0 (0 - 0)' OR 2nd leg = '0 - 0' OR 2nd leg = '0 - 0 (0 - 0)'", -15.180673367269996]]}, "272": {"question": "all of alberto pagain 's win be of the 500cc class", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT SUM(wins) FROM w WHERE class = '500cc'", -1.91350526115], [" SELECT COUNT(*) FROM w WHERE class = '500cc' AND wins = 1", -2.87002400445], [" SELECT COUNT(*) FROM w WHERE class = '500cc' AND wins = 1", -2.8719737482500003], [" SELECT COUNT(*) FROM w WHERE class = '500cc' AND wins = 1", -2.87720942065], [" SELECT COUNT(*) FROM w WHERE class = '500cc' AND wins = 1", -2.8777346399499995], [" SELECT COUNT(*) FROM w WHERE class = '500cc' AND wins > 0", -2.95232307315], [" SELECT COUNT(*) FROM w WHERE class = '500cc' AND wins > 0", -2.95320166555], [" SELECT COUNT(*) FROM w WHERE class = '500cc' AND wins > 0", -2.9582880415499995], [" SELECT COUNT(*) FROM w WHERE class = '500cc' AND wins > 0", -2.9704758663499997], [" SELECT COUNT(*) FROM w WHERE `class` = '500cc' AND wins > 0", -4.377349364550001]]}, "280": {"question": "the new york jet take the same amount of win as loss during the 1993 season", "gold_answer": 1, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [0]], "1": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6698080038699996], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6971059574639995], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6988722622939998], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.717121179894], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.7187092222540004], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -2.233902628399999], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -2.2360379146950002], [" SELECT COUNT(*) FROM w WHERE result LIKE '%w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '%l%'", -2.23903643174], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l % - %'", -3.205935242799999], [" SELECT COUNT(*) FROM w WHERE result LIKE '% w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '% l %'", -3.8724263002]]}, "365": {"question": "there be 4 differnt game where no goal be score by either side", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -1.9920897851000001], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.5032377716], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.5094445501], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.5102568094], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.5114723979], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.5224405479], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.5353191063], [" SELECT COUNT(*) FROM w WHERE (result LIKE '0 - 0' OR result LIKE '0 - 0')", -6.6880257774], [" SELECT COUNT(*) FROM w WHERE result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) = 0 AND CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) = 0)", -6.953181756185], [" SELECT COUNT(*) FROM w WHERE result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) = 0 AND CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) = 0)", -6.987584209066996]]}, "388": {"question": "raymond felton lead the team in assist less than 4 different time", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [3], [3], [1], [3], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high assists = 'raymond felton'", -1.9755921234500002], [" SELECT COUNT(*) FROM w WHERE high assists = 'raymond felton'", -1.9866619302900004], [" SELECT COUNT(*) FROM w WHERE high assists = 'raymond felton (7)'", -2.59303064068], [" SELECT COUNT(*) FROM w WHERE high assists = 'raymond felton (7)'", -2.609057439176], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE 'raymond felton%'", -2.9280771135899997], [" SELECT COUNT(*) FROM w WHERE `high assists` LIKE 'raymond felton%'", -2.9543358283799996], [" SELECT COUNT(*) FROM w WHERE `high assists` = 'raymond felton (7)'", -3.3826625389599996], [" SELECT COUNT(*) FROM w WHERE high assists LIKE 'raymond felton%'", -3.9868723182499997], [" SELECT COUNT(DISTINCT game) FROM w WHERE high assists = 'raymond felton'", -4.268745500686], [" SELECT COUNT(*) FROM w WHERE (high assists LIKE 'raymond felton%' OR high assists LIKE '%raymond felton%') AND high assists NOT LIKE '%raymond felton%'", -12.09455157206]]}, "413": {"question": "kardinia park have less crowd than moorabbin oval", "gold_answer": 1, "pred_answer": {"0": [[13328], [13328], [13328], [13328], [13328], [13328], [13328], [13328], [13328], [13328]], "1": [[17811], [17811], [17811], [17811], [17811], [17811], [17811], [17811], [17811], [17811]]}, "nsql": [[" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.8814080179199999], [" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.8872393425000002], [" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.8873514077100001], [" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.88755107338], [" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.8878020111799995], [" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.8890329842900001], [" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.8899429077399997], [" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.89016224728], [" SELECT crowd FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT crowd FROM w WHERE venue = 'moorabbin oval'", -0.8905921515700002], [" SELECT SUM(crowd) FROM w WHERE venue = 'kardinia park'\nNeuralSQL2: SELECT SUM(crowd) FROM w WHERE venue = 'moorabbin oval'", -2.4421659727300007]]}, "438": {"question": "annika s\u00f6renstam and yani tseng win with the lowest number of stroke", "gold_answer": 1, "pred_answer": {"0": [["1 stroke"], ["1 stroke"], ["1 stroke"], ["1 stroke"], [1], [1], [1], [1], [1], [1]], "1": [["4 strokes", "1 stroke"], ["4 strokes", "1 stroke"], ["4 strokes", "1 stroke"], ["4 strokes", "1 stroke"], [4, 1], [4, 1], [4, 1], [2], [2], [2]]}, "nsql": [[" SELECT `margin of victory` FROM w WHERE champion = 'annika s\u00f6renstam'\nNeuralSQL2: SELECT `margin of victory` FROM w WHERE champion = 'yani tseng'", -2.166327175425001], [" SELECT `margin of victory` FROM w WHERE champion = 'annika s\u00f6renstam'\nNeuralSQL2: SELECT `margin of victory` FROM w WHERE champion = 'yani tseng'", -2.1720958268099997], [" SELECT `margin of victory` FROM w WHERE champion = 'annika s\u00f6renstam'\nNeuralSQL2: SELECT `margin of victory` FROM w WHERE champion = 'yani tseng'", -2.17412161512], [" SELECT `margin of victory` FROM w WHERE champion = 'annika s\u00f6renstam'\nNeuralSQL2: SELECT `margin of victory` FROM w WHERE champion = 'yani tseng'", -2.1756234834500003], [" SELECT CAST(REPLACE(`margin of victory`,'stroke','') AS INT) FROM w WHERE champion = 'annika s\u00f6renstam'\nNeuralSQL2: SELECT CAST(REPLACE(`margin of victory`,'stroke','') AS INT) FROM w WHERE champion = 'yani tseng'", -6.440695299353], [" SELECT CAST(SUBSTR(`margin of victory`, 1, INSTR(`margin of victory`, 'stroke') - 1) AS INT) FROM w WHERE champion = 'annika s\u00f6renstam'\nNeuralSQL2: SELECT CAST(SUBSTR(`margin of victory`, 1, INSTR(`margin of victory`, 'stroke') - 1) AS INT) FROM w WHERE champion = 'yani tseng'", -6.472557814091999], [" SELECT CAST(SUBSTR(`margin of victory`, 1, INSTR(`margin of victory`, 'stroke') - 1) AS INT) FROM w WHERE champion = 'annika s\u00f6renstam'\nNeuralSQL2: SELECT CAST(SUBSTR(`margin of victory`, 1, INSTR(`margin of victory`, 'stroke') - 1) AS INT) FROM w WHERE champion = 'yani tseng'", -6.477492203485001], [" SELECT COUNT(*) FROM w WHERE champion = 'annika s\u00f6renstam' AND `margin of victory` LIKE '%stroke%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE champion = 'yani tseng' AND `margin of victory` LIKE '%stroke%'", -6.733873299405], [" SELECT COUNT(*) FROM w WHERE champion = 'annika s\u00f6renstam' AND margin of victory LIKE '% stroke%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE champion = 'yani tseng' AND margin of victory LIKE '% stroke%'", -6.750998949890001], [" SELECT CAST(`margin of victory` AS INT) FROM w WHERE champion = 'annika s\u00f6renstam'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE champion = 'yani tseng'", -7.929654612720001]]}, "463": {"question": "the most the wildcat outscore an opponent be by 26 point", "gold_answer": 0, "pred_answer": {"0": [[36], [36], [36], [36], [36], [36], [36], [36], [36], [36]], "1": ["<error>"], "2": [[36]], "3": ["<error>"], "4": [[36]], "5": ["<error>"], "6": [[36]], "7": ["<error>"]}, "nsql": [[" SELECT MAX(wildcats points - opponents) FROM w", -1.5185492045399998], [" SELECT MAX(wildcats points - opponents) FROM w", -1.5217625688400003], [" SELECT MAX(wildcats points - opponents) FROM w", -1.5252919966399998], [" SELECT MAX(wildcats points - opponents) FROM w", -1.5313971222400002], [" SELECT MAX(wildcats points - opponents) FROM w", -1.5389666025400004], [" SELECT MAX(wildcats points - opponents) FROM w", -1.5431384700400002], [" SELECT MAX(wildcats points - opponents) FROM w", -1.54517079954], [" SELECT MAX(`wildcats points` - opponents) FROM w", -2.0868622239400003], [" SELECT MAX(`wildcats points` - `opponents`) FROM w", -2.2069107465399997], [" SELECT MAX(wildcats points - opponents) FROM w\nQ2: the most the wildcats outscored an opponent is by {how many = a2} points.\nNeuralSQL2: SELECT MAX(wildcats points - opponents) FROM w\nQ3: the most the wildcats outscored an opponent is by {how many = a3} points.\nNeuralSQL3: SELECT MAX(wildcats points - opponents) FROM w\nQ4: the most the wildcats outscored an opponent is by {how many = a4} points.\nNeuralSQL4: SELECT MAX(wildcats points - opponents) FROM w\nQ5: the most the wildcats outscored", -14.718500071220998]]}, "488": {"question": "stage 1 be the only stage where a mountain classification wasn't award", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [1], [0], [0], [1]], "1": [[0], [0], [0], [0], [0], [0], [1], [0], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE mountains classification IS NULL\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage = 1 AND mountains classification IS NULL", -4.80507406836], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'n / a' AND stage = 1", -5.137047957970002], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'n / a' AND stage = 1", -5.141745032536001], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'n / a' AND stage = 1", -5.141818377835999], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'n / a' AND stage = 1", -5.147926301610001], [" SELECT COUNT(*) FROM w WHERE mountains classification = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = 'n / a' AND stage = 1", -5.536921752220002], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = 'not awarded'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage = 1 AND `mountains classification` = 'not awarded'", -5.557687136749999], [" SELECT COUNT(*) FROM w WHERE mountains classification = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = 'n / a' AND stage = 1", -5.568255088790001], [" SELECT COUNT(*) FROM w WHERE mountains classification = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = 'n / a' AND stage = '1'", -6.2968204523599995], [" SELECT COUNT(DISTINCT stage) FROM w WHERE mountains classification = 'not awarded'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage = 1 AND mountains classification = 'not awarded'", -7.4122687699459995]]}, "540": {"question": "1 grid have 105 lap and a time / retire of + 6.18", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps = 105 AND `time / retired` = '+ 6.18'", -1.5991365605449999], [" SELECT COUNT(*) FROM w WHERE laps = 105 AND `time / retired` = '+ 6.18'", -1.6050066164449999], [" SELECT COUNT(*) FROM w WHERE laps = 105 AND `time / retired` = '+ 6.18'", -1.607213175225], [" SELECT COUNT(*) FROM w WHERE laps = 105 AND `time / retired` = '+ 6.18'", -1.6082139790649999], [" SELECT COUNT(*) FROM w WHERE laps = 105 AND `time / retired` = '+ 6.18'", -1.612678284305], [" SELECT COUNT(*) FROM w WHERE laps = 105 AND `time / retired` = '+ 6.18'", -1.614851929175], [" SELECT COUNT(*) FROM w WHERE laps = 105 AND `time / retired` = '+ 6.18'", -1.6148607527249996], [" SELECT COUNT(*) FROM w WHERE laps = 105 AND `time / retired` = '+ 6.18'", -1.6325398776650004], [" SELECT COUNT(*) FROM w WHERE laps = 105 AND time / retired = '+ 6.18'", -2.9975162062050003], [" SELECT COUNT(*) FROM w WHERE `time / retired` = '+ 6.18' AND laps = 105", -3.092284511745]]}, "596": {"question": "0 goal occur with diego milito in a debut year before 2008", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name = 'diego milito' AND debut year < 2008", -1.93748016775], [" SELECT COUNT(*) FROM w WHERE name = 'diego milito' AND debut year < 2008", -1.9625509878499998], [" SELECT COUNT(*) FROM w WHERE name = 'diego milito' AND debut year < 2008", -1.98973931751], [" SELECT COUNT(*) FROM w WHERE name = 'diego milito' AND debut year < 2008", -2.04736733902], [" SELECT COUNT(*) FROM w WHERE debut year < 2008 AND name = 'diego milito'", -2.6133049917099997], [" SELECT COUNT(*) FROM w WHERE debut year < 2008 AND name = 'diego milito'", -2.6196496791999992], [" SELECT COUNT(*) FROM w WHERE `debut year` < 2008 AND name = 'diego milito'", -2.82875264541], [" SELECT COUNT(*) FROM w WHERE `debut year` < 2008 AND name = 'diego milito'", -2.8395649521100004], [" SELECT COUNT(*) FROM w WHERE `debut year` < 2008 AND name = 'diego milito'", -2.8479221108999995], [" SELECT COUNT(*) FROM w WHERE name = 'diego milito' AND `debut year` < 2008", -3.2147658286200005]]}, "27": {"question": "every player come from either a college program or a junior / club team", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%junior%' OR `college / junior / club team (league)` LIKE '%club%'", -4.459725339459999], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%junior%' OR `college / junior / club team (league)` LIKE '%club%'", -4.46143527733], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%junior%' OR `college / junior / club team (league)` LIKE '%club%'", -4.4628213350740005], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%junior%' OR `college / junior / club team (league)` LIKE '%club%'", -4.468585552333998], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%junior%' OR `college / junior / club team (league)` LIKE '%club%'", -4.4774177350299995], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%club%'", -4.860650579950001], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%club%'", -4.8887830034399995], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '% college %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '% junior %' OR `college / junior / club team (league)` LIKE '% club %'", -5.687418861024001], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%club team%'", -5.710132761209999], [" SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%college%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `college / junior / club team (league)` LIKE '%junior / club%'", -5.938655982949999]]}, "34": {"question": "west berkshire brewery 's dr hexter healer beer have only receive a silver medal between 1995 and 2009", "gold_answer": 0, "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND `prize` = 'silver medal' AND `year` BETWEEN 1995 AND 2009", -4.8776426421900005], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND `prize` = 'silver medal' AND `year` BETWEEN 1995 AND 2009", -4.884221237790001], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND `prize` = 'silver medal' AND `year` BETWEEN 1995 AND 2009", -4.889397576270001], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND `prize` = 'silver medal' AND `year` BETWEEN 1995 AND 2009", -4.892650897440002], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND `prize` = 'silver medal' AND `year` BETWEEN 1995 AND 2009", -4.8957077366], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND `prize` = 'silver medal' AND `year` BETWEEN 1995 AND 2009", -4.907882670549999], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'dr hexter 's healer' AND prize = 'silver medal' AND year BETWEEN 1995 AND 2009", -4.92508752038], [" SELECT COUNT(*) FROM w WHERE beer name = 'dr hexter 's healer' AND prize = 'silver medal' AND year >= 1995 AND year <= 2009", -5.145279116120001], [" SELECT COUNT(*) FROM w WHERE beer name = 'dr hexter 's healer' AND year >= 1995 AND year <= 2009 AND prize = 'silver medal'", -5.7343818978400005], [" SELECT COUNT(*) FROM w WHERE (year >= 1995 AND year <= 2009) AND prize = 'silver medal' AND beer name = 'dr hexter 's healer'", -9.045553978620001]]}, "52": {"question": "9 viral family have a replication site in the nucleus", "gold_answer": 1, "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'nucleus'", -1.602094191015], [" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'nucleus'", -1.6472221761850003], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -1.664154066785], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -1.6867626028349998], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -1.690144489485], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.8149172245549998], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.840723163955], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.848570266415], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.8530118086349996], [" SELECT COUNT(DISTINCT family) FROM w WHERE `replication site` = 'nucleus'", -2.331004658275001]]}, "77": {"question": "galina voskoboeva play a total of 3 game on a hard tennis court , and 1 on clay", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [2], [2], [2], [2], [2], [3]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE surface = 'hard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -1.2967796129249995], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -1.3054807047999997], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -1.3089382319000002], [" SELECT COUNT(*) FROM w WHERE surface = 'hard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -1.3134244818750005], [" SELECT COUNT(*) FROM w WHERE surface = 'hard (i)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -2.0091342706], [" SELECT COUNT(*) FROM w WHERE surface = 'hard (i)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -2.01122578996], [" SELECT COUNT(*) FROM w WHERE surface = 'hard (i)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -2.0165057767900008], [" SELECT COUNT(*) FROM w WHERE surface = 'hard (i)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -2.0168535530499994], [" SELECT COUNT(*) FROM w WHERE surface = 'hard (i)'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -2.01826491242], [" SELECT COUNT(*) FROM w WHERE surface = 'hard (i)' OR surface = 'hard'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'clay'", -2.329088098329999]]}, "102": {"question": "gary beach be 1 of 4 winner of a tony award", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND result = 'won'", -2.5523411322039995], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND result = 'won'", -2.552637455006], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND result = 'won'", -2.557226053201], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND result = 'won'", -2.557514316586001], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND result = 'won'", -2.557530007148], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND result = 'won'", -2.5737960688459998], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award' AND result = 'won'", -2.682758533741], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award' AND result = 'won'", -2.694103398565001], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won' AND nominee = 'gary beach'", -2.996024755909], [" SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE award = 'tony award' AND result = 'won' AND nominee = 'gary beach'", -3.004314582465]]}, "127": {"question": "the buffalo bill lose 3 more game than they win", "gold_answer": 0, "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.4733288202700006], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.4748469772199995], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.4774880037199993], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.4777088125699998], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.4805062306100003], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.4817194554199997], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.4840940412100003], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.4846065822899999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w %'", -2.3539564178499988], [" SELECT COUNT(*) FROM w WHERE result LIKE 'l % - %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'w % - %'", -2.6872736780800004]]}, "235": {"question": "more than half of the away team have a score greater than 10", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `away team score` > 10", -2.137670806365], [" SELECT COUNT(*) FROM w WHERE `away team score` > 10", -2.1420624473650003], [" SELECT COUNT(*) FROM w WHERE `away team score` > 10", -2.1453781377650003], [" SELECT COUNT(*) FROM w WHERE `away team score` > 10", -2.152002949265], [" SELECT COUNT(*) FROM w WHERE `away team score` > 10", -2.156070100365], [" SELECT COUNT(*) FROM w WHERE `away team score` > 10", -2.1600055721649998], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) > 10", -3.6247973702489986], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) > 10", -3.627968575574999], [" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(away team score, 1, INSTR(away team score, '(') - 1) AS INT) > 10", -4.222000471204999], [" SELECT COUNT(*) FROM w WHERE CAST(REPLACE(`away team score`, ' ( ', '.') AS DECIMAL(10, 2)) > 10", -11.462822024464996]]}, "260": {"question": "4 of the competition out of 10 be world wide championship", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [7], [7], [4]], "1": ["<error>", "<error>"], "2": [[0], [1]], "3": ["<error>", "<error>"], "4": [[1]], "5": ["<error>"], "6": [[1]], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition LIKE '%world%'", -2.65388000943], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world%'", -2.65474746293], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world%'", -2.66587878373], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world%'", -2.67125570543], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world%'", -2.6728721816300003], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world%'", -2.6734609100299997], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world%'", -2.67366679813], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%championships%'", -3.8084264834300003], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% championships'\nQ2: {how many = a2} records have a position the first number larger than the second number.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position LIKE '%th' AND (CAST(SUBSTR(position, 1, INSTR(position, 'th') - 1) AS INT) - CAST(SUBSTR(position, INSTR(position, ' - ') + 1, LENGTH(position) - (INSTR(position, ' - ') + 1)) AS INT)) > 0\nQ3: {how many = a3} records have a position the first number larger", -26.957769382775513], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%world%'\nQ2: there are {how many = a2} of the competitions in the year of 2008.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 2008\nQ3: there are {how many = a3} of the competitions in the year of 2008.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE year = 2008\nQ4: there are {how many = a4} of the competitions in the year of 2008.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE year = 2008\nQ5: there are {how many = a5} of the competitions in", -29.72376316778998]]}, "285": {"question": "the cleveland brown have tie a total of 10 game", "gold_answer": 1, "pred_answer": {"0": [[10], [10], [10], [10], [10], [0, 1, 2, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 2, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [7], [7], [7]]}, "nsql": [[" SELECT SUM(ties) FROM w", -0.8675308203540001], [" SELECT SUM(ties) FROM w", -0.8735168422540001], [" SELECT SUM(ties) FROM w", -0.874100918454], [" SELECT SUM(ties) FROM w", -0.874628388054], [" SELECT SUM(ties) FROM w", -0.8754537477540001], [" SELECT ties FROM w", -1.4387768758539998], [" SELECT ties FROM w", -1.462156606854], [" SELECT COUNT(*) FROM w WHERE ties > 0", -2.573397344854], [" SELECT COUNT(*) FROM w WHERE ties > 0", -2.582529324854], [" SELECT COUNT(*) FROM w WHERE ties > 0", -2.589909807854]]}, "302": {"question": "8 game in the 2005 milwaukee brewer season be attend by more than 30000 crowd", "gold_answer": 1, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20116127064], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20120125646], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20125119386], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20147764407000002], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20155574770999998], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20221528690999999], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20227663736999998], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20229684294], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20247434423000002], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.20263342502999998]]}, "310": {"question": "jordan farmar lead the team in point for 5 straight game", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.2426318914499994], [" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.2446420226600003], [" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.24694533366], [" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.2506074074400004], [" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.2521726993500004], [" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.2522019713699994], [" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.2529705994399998], [" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.2537675867100004], [" SELECT COUNT(*) FROM w WHERE high points = 'jordan farmar'", -2.25660058206], [" SELECT COUNT(*) FROM w WHERE high points LIKE 'jordan farmar%'", -4.11941826339]]}, "395": {"question": "there be 2 project in rankin county , sonford product and flowood site", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.69623023579], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.69708656985], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.7001227254600009], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.7010552363800002], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.7033730242800003], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.7049523626800005], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.7188169471799999], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.7194898797300004], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.7275970291800005], [" SELECT COUNT(*) FROM w WHERE county = 'rankin'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'sonford products' AND county = 'rankin'", -1.73037283716]]}, "418": {"question": "shane hall run more race on the stegell motorsports team than any of his other team", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.4784200086100001], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.4814081596], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.4844743954699995], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.4851806590300003], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.48624078639], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.48681526098], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.48798165461], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.4896519950700002], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'", -1.49026665966], [" SELECT COUNT(*) FROM w WHERE `team (s)` = 'stegell motorsports'\n```", -4.64210238307]]}, "443": {"question": "the dolphins' final 10 game be victory", "gold_answer": 0, "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6320770882400002], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6323119913400002], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6335130156400002], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.63363843044], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.66018253134], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6610796029400001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.66190336614], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.6626804719400001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'", -1.66394448054], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w %'", -2.46589484844]]}, "468": {"question": "there be more brm then any other with alfa romeo and matra tying for the least", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.8038650561559997], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.803918450195], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.8043610732090004], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.804535818364], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.80499244948], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.8050848834139999], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.8061715338500001], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.80662335203], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.8078365859710003], [" SELECT COUNT(*) FROM w WHERE constructor = 'brm'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE constructor = 'alfa romeo'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE constructor = 'matra'", -0.8085833117540002]]}, "493": {"question": "stage 1 be the only stage where a team classification wasn't award", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team classification = ''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage = 1 AND team classification = ''", -4.45912165721], [" SELECT COUNT(*) FROM w WHERE team classification = ''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage = 1 AND team classification = ''", -4.4752008946199995], [" SELECT COUNT(*) FROM w WHERE team classification = ''\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team classification = '' AND stage = 1", -4.66341037339], [" SELECT COUNT(*) FROM w WHERE `team classification` = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team classification` = 'n / a' AND stage = 1", -5.185974529215999], [" SELECT COUNT(*) FROM w WHERE `team classification` = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team classification` = 'n / a' AND stage = 1", -5.1884105187800005], [" SELECT COUNT(*) FROM w WHERE team classification = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage = 1 AND team classification = 'n / a'", -5.2907512783140005], [" SELECT COUNT(*) FROM w WHERE team classification = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team classification = 'n / a' AND stage = 1", -5.331159994828999], [" SELECT COUNT(*) FROM w WHERE team classification = 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team classification = 'n / a' AND stage = 1", -5.335834232104], [" SELECT COUNT(*) FROM w WHERE `team classification` = '-'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `team classification` = '-' AND stage = 1", -6.13327582424], [" SELECT COUNT(DISTINCT stage) FROM w WHERE team classification = 'N/A'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage = 1 AND team classification = 'N/A'", -9.214175229809001]]}, "518": {"question": "the coquitlam adanacs have make 1177 point over 45 season", "gold_answer": 1, "pred_answer": {"0": [[2354], [2354], [2354], [2354], [2354], [2354], [2354], [2354], [2354], [1129]]}, "nsql": [[" SELECT SUM(points) FROM w", -0.21541325862999997], [" SELECT SUM(points) FROM w", -0.21547061883000002], [" SELECT SUM(points) FROM w", -0.21564926092999998], [" SELECT SUM(points) FROM w", -0.21574676913000002], [" SELECT SUM(points) FROM w", -0.21577185413], [" SELECT SUM(points) FROM w", -0.21588954783], [" SELECT SUM(points) FROM w", -0.21622220063], [" SELECT SUM(points) FROM w", -0.21651209882999997], [" SELECT SUM(points) FROM w", -0.21662649353000002], [" SELECT SUM(points) FROM w WHERE team name = 'coquitlam adanacs'", -3.134784029549999]]}, "570": {"question": "there be 3 year show when the reader 's vote be na and the lifetime achievement be na", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -1.112801514174], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -1.1130058401739997], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -1.1131298497440003], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -1.1157200155940004], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -1.1157503255740002], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -1.116556479324], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -1.1175951526640002], [" SELECT COUNT(DISTINCT year) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -2.236221299437001], [" SELECT COUNT(DISTINCT year) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -2.247159910348], [" SELECT COUNT(DISTINCT year) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -2.2540153625899997]]}, "57": {"question": "9 of the viral disease replicate in the nucleus", "gold_answer": 1, "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.5392859150659999], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.5393085867359999], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.540013789456], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.540131817156], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.5417283905360001], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.5419617958959999], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.542253984316], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.543224822396], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -0.546555390196], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'\n```", -3.516463568996]]}, "64": {"question": "2 viral family have a helical virion shape", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.5331756897799997], [" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.53421829848], [" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.54185883235], [" SELECT COUNT(*) FROM w WHERE virion shape = 'helical'", -1.5428548514740004], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'helical'", -1.8076935237499996], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'helical'", -1.81392715109], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'helical'", -1.8222426686999997], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'helical'", -1.8276413919399996], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'helical'", -2.39799576987], [" SELECT COUNT(*) FROM w WHERE `virion shape` LIKE '%helical%'", -2.6949972287499993]]}, "82": {"question": "ettore meini win 2 race in a row , on may 24 and 25th , during the 1933 giro d'italia", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [0], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.8159364796300002], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.8324791142], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.83532215364], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.83641504006], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.8438557276999998], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.8553904256], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini'", -1.86456519256], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND race leader = 'ettore meini'", -4.874395566769999], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND row_id < (SELECT row_id FROM w WHERE winner = 'ettore meini' LIMIT 1)", -9.306418966360003], [" SELECT COUNT(*) FROM w WHERE winner = 'ettore meini' AND row_id < (SELECT row_id FROM w WHERE winner = 'ettore meini' ORDER BY row_id DESC LIMIT 1)", -9.349548546869999]]}, "107": {"question": "lleyton hewitt never face the same opponent in more than 1 master series final", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [], [0], [1], [], []]}, "nsql": [[" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '%master series%' AND outcome = 'runner - up'", -6.035810721537], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '%master series%' AND outcome = 'runner - up'", -6.080624205674002], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '%master series%' AND outcome = 'runner - up'", -6.100932567208], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '%master series%' AND outcome = 'runner-up'", -6.472775014514498], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '%master series%' AND outcome = 'runner-up'", -6.480148147381], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '%(%' GROUP BY opponent HAVING COUNT(*) > 1", -6.982142216790001], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '% master series %' AND outcome = 'runner - up'", -7.675265644368001], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '%(%' AND outcome = 'runner - up'", -7.879590148389999], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE championship LIKE '% masters' GROUP BY opponent HAVING COUNT(*) > 1", -8.237468766771002], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up' AND championship LIKE '%(%' GROUP BY opponent HAVING COUNT(*) > 1", -10.783627231250001]]}, "132": {"question": "march be feature more often as a month in the date than any other month", "gold_answer": 1, "pred_answer": {"0": [[7], [7], [7], [7], [0], [0], [0], [0], [0], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '%-03-%'", -2.58328068174], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%-03-%'", -2.5844963472700004], [" SELECT COUNT(*) FROM w WHERE date LIKE '%-03-%'", -2.6316239016300007], [" SELECT COUNT(*) FROM w WHERE date LIKE '%-03-%'", -2.63639620528], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 03 - %'", -2.97833254496], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 03 - %'", -2.9871604938800003], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 03 - %'", -3.1624635788599997], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 03 - %'", -3.17919750667], [" SELECT COUNT(*) FROM w WHERE date LIKE '% - 03-%'", -5.32602828944], [" SELECT COUNT(*) FROM w WHERE SUBSTR(`date`, 6, 2) = '03'", -5.827610066040001]]}, "157": {"question": "the entrant be private on 2 occasion with the driver be harry schell and johnny claes", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[0], [0], [0], [0], [0], [0], [0], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'harry schell' AND driver = 'johnny claes'", -2.605298563971], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'harry schell' AND driver = 'johnny claes'", -2.610995436805], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'harry schell' AND driver = 'johnny claes'", -2.6113252038610004], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'harry schell' AND driver = 'johnny claes'", -2.6138816184790006], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'harry schell' AND driver = 'johnny claes'", -2.6139912648370003], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'harry schell' AND driver = 'johnny claes'", -2.614639183037], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'harry schell' AND driver = 'johnny claes'", -2.622283422027], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver IN ('harry schell', 'johnny claes')", -2.994529902097], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'harry schell' OR driver = 'johnny claes'", -3.259783201069], [" SELECT COUNT(*) FROM w WHERE entrant = 'private'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver IN ('harry schell','johnny claes')", -3.4744123071869994]]}, "265": {"question": "no game on the 18th of june draw a crowd of more than 20000", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date = '1938-06-18 00:00:00' AND crowd > 20000", -2.9653905715140003], [" SELECT COUNT(*) FROM w WHERE DATE(date) = '1938-06-18' AND crowd > 20000", -3.086150107564], [" SELECT COUNT(*) FROM w WHERE date = '1938-06-18' AND crowd > 20000", -3.7676677271440004], [" SELECT COUNT(*) FROM w WHERE date LIKE '1938-06-18%' AND crowd > 20000", -3.9904346763240004], [" SELECT COUNT(*) FROM w WHERE `crowd` > 20000 AND `date` LIKE '1938-06-18%'", -4.130716818204], [" SELECT COUNT(*) FROM w WHERE `crowd` > 20000 AND `date` LIKE '1938-06-18%'", -4.140201663664], [" SELECT COUNT(*) FROM w WHERE `crowd` > 20000 AND `date` LIKE '1938-06-18%'", -4.1476104382139996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1938-06-18%' AND crowd > 20000", -5.041177872664], [" SELECT COUNT(*) FROM w WHERE crowd > 20000 AND date = '1938-06-18'", -5.212790056264001], [" SELECT COUNT(*) FROM w WHERE crowd > 20000 AND `date` = '1938-06-18'", -5.630590317463999]]}, "290": {"question": "the cleveland brown have tie a total of 12 game", "gold_answer": 0, "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [0, 1, 2, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [7], [7], [9]]}, "nsql": [[" SELECT SUM(ties) FROM w", -0.87683399924], [" SELECT SUM(ties) FROM w", -0.87989947254], [" SELECT SUM(ties) FROM w", -0.8879840833399999], [" SELECT SUM(ties) FROM w", -0.88821203494], [" SELECT SUM(ties) FROM w", -0.8916280610400001], [" SELECT SUM(ties) FROM w", -0.8919990263400001], [" SELECT ties FROM w", -1.77384065154], [" SELECT COUNT(*) FROM w WHERE ties > 0", -2.2520363645400003], [" SELECT COUNT(*) FROM w WHERE ties > 0", -2.26153570654], [" SELECT COUNT(*) FROM w WHERE `winning pct` = 0", -6.842668665490001]]}, "315": {"question": "there be 2 zakspeed chassis make in the year 1987", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year = 1987", -0.9992373238849999], [" SELECT COUNT(*) FROM w WHERE year = 1987", -1.000840623785], [" SELECT COUNT(DISTINCT chassis) FROM w WHERE year = 1987", -2.0782867922809998], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed%'", -3.228396629485], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE '%zakspeed%'", -3.570339899385], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed %'", -3.775760414385], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed %'", -3.777805563385], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed %'", -3.7799593371849998], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed %'", -3.7802275112849997], [" SELECT COUNT(*) FROM w WHERE year = 1987 AND chassis LIKE 'zakspeed %'", -3.7905994584849996]]}, "332": {"question": "manchester unite have lose to the blackburn rover 2 out of 2 time since 13 august 2005", "gold_answer": 1, "pred_answer": {"0": ["<error>", "<error>", [2], [1], "<error>", [2], "<error>", [2], [2], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) < 0", -7.002717145081202], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) < 0", -7.032707618966196], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND `result f - a` LIKE '% - %' AND (CAST(SUBSTR(`result f - a`, 1, INSTR(`result f - a`, '-') - 1) AS INT) - CAST(SUBSTR(`result f - a`, INSTR(`result f - a`, '-') + 1, LENGTH(`result f - a`) - (INSTR(`result f - a`, ' - ') + 1)) AS INT)) < 0", -7.8247340183632], [" SELECT COUNT(*) FROM w WHERE `h / a` = 'a' AND `opponents` = 'blackburn rovers' AND `date` > '2005-08-13 00:00:00'", -8.898284907959999], [" SELECT COUNT(*) FROM w WHERE `opponents` = 'blackburn rovers' AND `result f - a` LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -9.679743727180503], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND (date > '2005-08-13' AND date < '2006-05-07')", -11.010673616260005], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND result LIKE '%-%' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) < CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) AND date > '2005-08-13 00:00:00'", -12.364740294919], [" SELECT COUNT(*) FROM w WHERE `opponents` = 'blackburn rovers' AND (`result f - a` LIKE '%-%' AND CAST(SUBSTR(`result f - a`, 1, INSTR(`result f - a`, '-') - 1) AS INT) < CAST(SUBSTR(`result f - a`, INSTR(`result f - a`, '-') + 1, LENGTH(`result f - a`) - (INSTR(`result f - a`, ' - ') + 1)) AS INT))", -12.714849374379993], [" SELECT COUNT(*) FROM w WHERE opponents = 'blackburn rovers' AND result f - a LIKE '%-%' AND (CAST(SUBSTR(result f - a, 1, INSTR(result f - a, '-') - 1) AS INT) - CAST(SUBSTR(result f - a, INSTR(result f - a, '-') + 1, LENGTH(result f - a) - (INSTR(result f - a, ' - ') + 1)) AS INT)) < 0 AND date >= '2005-08-13'", -14.130862137763396], [" SELECT COUNT(*) FROM w WHERE (opponents = 'blackburn rovers' OR opponents = 'blackburn') AND (result LIKE '% - %' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) < CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) AND `date` >= '2005-08-13'", -18.57443044142205]]}, "340": {"question": "in 3 different baseball game the final score be 8 - 1", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [1], [1], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score = '8 - 1'", -1.2074980476400001], [" SELECT COUNT(*) FROM w WHERE score = '8 - 1'", -1.21101579184], [" SELECT COUNT(*) FROM w WHERE score = '8 - 1'", -1.2131381482399999], [" SELECT COUNT(*) FROM w WHERE score = '8 - 1'", -1.2134629647400001], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE score = '8 - 1'", -2.1877201147014], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE score = '8 - 1'", -2.1904062188913995], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE score = '8 - 1'", -2.1982790675813995], [" SELECT COUNT(DISTINCT score) FROM w WHERE score = '8 - 1'", -2.5721748632824006], [" SELECT COUNT(DISTINCT score) FROM w WHERE score = '8 - 1'", -2.6006824318624004], [" SELECT COUNT(DISTINCT(opponent)) FROM w WHERE score = '8 - 1'", -3.640593105991]]}, "425": {"question": "kardinia park be 1 of the 4 venue that be put to use on 3 june 1961", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND date = '1961-06-03 00:00:00'", -3.5593440469330013], [" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND date = '1961-06-03 00:00:00'", -3.577628174871], [" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND date = '1961-06-03 00:00:00'", -3.5786517278879995], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND `date` = '1961-06-03 00:00:00'", -3.928701885207], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND `date` = '1961-06-03 00:00:00'", -3.934671196381], [" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1961-06-03 00:00:00' AND venue = 'kardinia park'", -4.023462342805001], [" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1961-06-03 00:00:00' AND venue = 'kardinia park'", -4.0288366917200005], [" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date = '1961-06-03 00:00:00' AND venue = 'kardinia park'", -4.035757544456999], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` LIKE '1961-06-03%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1961-06-03%' AND venue = 'kardinia park'", -4.976225775260997], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00' AND venue = 'kardinia park'", -5.483460722839]]}, "448": {"question": "the lion finish with a record of 6 win and 8 loss", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.472017018875], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.4819668549359999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.4837876027139998], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.4853892164560005], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.48648334536], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.4865398224], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.4868016790839997], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l %'", -2.4078461696700004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l %'", -2.4122994624899996], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l %'", -2.4734757207199998]]}, "473": {"question": "team australia be the only football club locate in oceania", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.2562364250579994], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.2596723378500005], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.2606868304960004], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.262971143205], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.2634983136229996], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.26390923377], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.26463310109], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.2705851330899998], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club = 'team australia' AND continent = 'oceania'", -1.2737424706619997], [" SELECT COUNT(*) FROM w WHERE continent = 'oceania'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE continent = 'oceania' AND football club = 'team australia'", -2.749904069046]]}, "498": {"question": "reason to be pretty be nominate for best play more than 1 time", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE category = 'best play'", -2.550628110745], [" SELECT COUNT(*) FROM w WHERE award ceremony = 'drama desk award' AND category = 'outstanding play'", -2.734472644485], [" SELECT COUNT(*) FROM w WHERE category = 'outstanding play' AND result = 'nominated'", -2.9008542826450006], [" SELECT COUNT(*) FROM w WHERE category = 'best play' AND result = 'nominated'", -3.4903879296450007], [" SELECT COUNT(*) FROM w WHERE award ceremony = 'drama desk award' AND category = 'outstanding play' AND result = 'nominated'", -3.566564750195001], [" SELECT COUNT(*) FROM w WHERE award ceremony = 'drama desk award' AND category = 'outstanding play' AND result = 'nominated'", -3.5879796675950004], [" SELECT COUNT(*) FROM w WHERE award ceremony = 'drama desk award' AND category = 'outstanding play' AND result = 'nominated'", -3.5923009862849997], [" SELECT COUNT(*) FROM w WHERE award ceremony = 'tony award' AND category = 'best play'", -4.104579935004999], [" SELECT COUNT(*) FROM w WHERE `award ceremony` = 'drama desk award' AND category = 'outstanding play'", -4.346574743965001], [" SELECT COUNT(*) FROM w WHERE `award ceremony` = 'drama desk award' AND category = 'outstanding play' AND result = 'nominated'", -5.238420486315]]}, "523": {"question": "there be 12 t - 260 eu aircraft currently in service", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` > 0", -3.90787922727], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0'", -4.35686772507], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0'", -4.36989690967], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0'", -4.37684741877], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND `in service` != '0'", -4.37909423827], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service != '0'", -4.6631471517700005], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service != '0'", -4.67573598227], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service != '0'", -4.67781227267], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service != '0'", -4.67964865367], [" SELECT COUNT(*) FROM w WHERE aircraft = 't - 260 eu' AND in service != '0'", -4.68307280197]]}, "548": {"question": "on march 15 , 2007 and in region 2 the highest number of episode be 3", "gold_answer": 0, "pred_answer": {"0": [[null], [null], [null], [null], [null], [null], [null], [null], [null], [null]]}, "nsql": [[" SELECT MAX(episodes) FROM w WHERE region 2 = '2007-03-15 00:00:00'", -3.14580378403], [" SELECT MAX(episodes) FROM w WHERE region 2 = '2007-03-15 00:00:00'", -3.14948880467], [" SELECT MAX(episodes) FROM w WHERE region 2 = '2007-03-15 00:00:00'", -3.1558009702299996], [" SELECT MAX(episodes) FROM w WHERE region 2 = '2007-03-15 00:00:00'", -3.1558069122299997], [" SELECT MAX(episodes) FROM w WHERE `region 2` LIKE '2007-03-15%'", -3.6823611428299996], [" SELECT MAX(episodes) FROM w WHERE `region 2` = '2007-03-15 00:00:00'", -3.737432963429999], [" SELECT MAX(episodes) FROM w WHERE `region 2` = '2007-03-15 00:00:00'", -3.74193664383], [" SELECT MAX(episodes) FROM w WHERE `region 2` LIKE '2007-03-15 00:00:00'", -4.76438828073], [" SELECT MAX(episodes) FROM w WHERE region 2 LIKE '2007-03-15%'", -4.76695602133], [" SELECT MAX(episodes) FROM w WHERE `region 2` LIKE '2007-03-15 00:00:00'", -4.76712442593]]}, "600": {"question": "pdip - 20 be the package when eeprom be less than 128 on 1 occasion", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT package) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE package = 'pdip - 20' AND eeprom < 128", -2.723452749811], [" SELECT COUNT(DISTINCT package) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE package = 'pdip - 20' AND eeprom < 128", -2.725777293859], [" SELECT COUNT(DISTINCT package) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE package = 'pdip - 20' AND eeprom < 128", -2.730933159661], [" SELECT COUNT(DISTINCT package) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE package = 'pdip - 20' AND eeprom < 128", -2.7342062538259997], [" SELECT COUNT(DISTINCT package) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eeprom < 128 AND package = 'pdip - 20'", -3.17459814931], [" SELECT COUNT(*) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE package = 'pdip - 20' AND eeprom < 128", -3.595972845984499], [" SELECT COUNT(DISTINCT(package)) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE package = 'pdip - 20' AND eeprom < 128", -3.885553630544], [" SELECT COUNT(DISTINCT(package)) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eeprom < 128 AND package = 'pdip - 20'", -4.0823013555930014], [" SELECT COUNT(DISTINCT(package)) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eeprom < 128 AND package = 'pdip - 20'", -4.095650630881], [" SELECT COUNT(DISTINCT(package)) FROM w WHERE eeprom < 128\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE eeprom < 128 AND package = 'pdip -20'\n```", -7.887792562845001]]}, "1": {"question": "lucy watkins only write 1 episode of series 2", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9612055421900002], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9672726025100001], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9677132616999999], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9686511470600001], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.96964154494], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9704205348900001], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9707597569499999], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9708437491999997], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9739059368799998], [" SELECT COUNT(*) FROM w WHERE written by = 'lucy watkins'", -1.9508824928700002]]}, "87": {"question": "more player be draft from usc than from clemson", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.45245192508499993], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.455844176107], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.456465142846], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.45715384599300013], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.45801175614999995], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.45819956031000003], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.4582831948740001], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.45861768908499995], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.45865791551499996], [" SELECT COUNT(*) FROM w WHERE college = 'usc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE college = 'clemson'", -0.4599296485220001]]}, "94": {"question": "8 different country receive the same number of bronze medal", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(DISTINCT bronze) FROM w", -0.836027514938], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.83831860422], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.8400779803999999], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.8407123034069999], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.8417450049869999], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.8438611032330001], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.844615514747], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.844881013335], [" SELECT COUNT(DISTINCT bronze) FROM w", -0.845921801373], [" SELECT COUNT(DISTINCT `bronze`) FROM w", -3.919830777203]]}, "112": {"question": "the world cup have 4 game throughout june 1998 , all of which be in france", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [3], [0], [3], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND `date` LIKE '1998-06-%'", -4.031109735869999], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND `date` LIKE '1998-06-%'", -4.07157900817], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND date LIKE '1998-06-%'", -4.25055594077], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND date LIKE '1998-06-%'", -4.2677457489699995], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND date LIKE '1998-06-%'", -4.295524593970001], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND `date` LIKE '1998-06%-%'", -4.55597518952], [" SELECT COUNT(*) FROM w WHERE comp = 'f' AND `date` LIKE '1998-06-%'", -4.895807218999999], [" SELECT COUNT(*) FROM w WHERE comp = 'world cup' AND date LIKE '1998-06-%-%'", -5.09195926627], [" SELECT COUNT(*) FROM w WHERE comp = 'f' AND date LIKE '1998-06-%'", -5.198596054470001], [" SELECT COUNT(*) FROM w WHERE comp = 'wc' AND `date` LIKE '1998-06-%'", -5.672656234269998]]}, "137": {"question": "3 of the total game feature have an attendance in the 3000s and 1 in the 12000s", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [17]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.7116858841430003], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.7147657584260003], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.7154128976949998], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.7155264042699996], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.71575553741], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.7157791589619995], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.7158776888099996], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.7180464035879999], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance BETWEEN 12000 AND 12999", -1.719278248185], [" SELECT COUNT(*) FROM w WHERE attendance LIKE '3%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance LIKE '12%'", -4.24741909253]]}, "162": {"question": "none of the england player take as many wicket as bill johnston", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = (SELECT wickets FROM w WHERE player = 'bill johnston')", -1.3661283686599999], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = (SELECT wickets FROM w WHERE player = 'bill johnston')", -1.36713878755], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = (SELECT wickets FROM w WHERE player = 'bill johnston')", -1.3677964790699997], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = (SELECT wickets FROM w WHERE player = 'bill johnston')", -1.3692133753599998], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = (SELECT wickets FROM w WHERE player = 'bill johnston')", -1.3692994653099997], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = (SELECT wickets FROM w WHERE player = 'bill johnston')", -1.3694525397100004], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = (SELECT wickets FROM w WHERE player = 'bill johnston')", -1.3746789870599998], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = (SELECT wickets FROM w WHERE player = 'bill johnston')", -1.39774782667], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = 27", -1.86301290696], [" SELECT COUNT(*) FROM w WHERE team = 'england' AND wickets = 27", -1.86839087834]]}, "187": {"question": "both pakistan and yemen have win 1 bronze medal for wushu at the asian game", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[], [], [], [1], [1], [1], [1], [1], [1], []], "2": ["<error>"]}, "nsql": [[" SELECT bronze FROM w WHERE nation = 'pakistan'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen'", -2.11052187606], [" SELECT bronze FROM w WHERE nation = 'pakistan'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen'", -2.1141800517899996], [" SELECT bronze FROM w WHERE nation = 'pakistan'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen'", -2.1168597996200003], [" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.23413522183], [" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.2356700271000003], [" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.2368631401500005], [" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.2381341015399996], [" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.23943253451], [" SELECT `bronze` FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT `bronze` FROM w WHERE nation = 'yemen (yem)'", -3.3336967656175], [" SELECT bronze FROM w WHERE nation = 'pakistan'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen'\n```", -4.973352911]]}, "295": {"question": "england and the united state have the same number of player in the 1981 open championship with 5 each", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.75684101472], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7571268963600003], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7579405761000001], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7579450248199999], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7579584265699999], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7579660309499998], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7580559818999997], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7583684583200002], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.7601626005], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.76016295378]]}, "320": {"question": "2 of the team hold the first 2 position with an equal number of point", "gold_answer": 1, "pred_answer": {"0": [[0], [1], [1], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 1 AND position = 2", -4.73928839374], [" SELECT COUNT(*) FROM w WHERE position = 1 AND points = (SELECT points FROM w WHERE position = 2)", -4.7940805632900005], [" SELECT COUNT(*) FROM w WHERE position = 1 AND points = (SELECT points FROM w WHERE position = 2)", -4.84421448671], [" SELECT COUNT(*) FROM w WHERE position <= 2 AND points = (SELECT points FROM w WHERE position = 2)", -5.291174707410001], [" SELECT COUNT(*) FROM w WHERE position <= 2 AND points = (SELECT points FROM w WHERE position = 2)", -5.334326485510001], [" SELECT COUNT(*) FROM w WHERE position < 3 AND points = (SELECT points FROM w WHERE position = 2)", -5.64921040406], [" SELECT COUNT(*) FROM w WHERE position = 1 OR position = 2 AND points = 13", -6.06692912999], [" SELECT COUNT(*) FROM w WHERE position = 1 OR position = 2 GROUP BY points HAVING COUNT(*) > 1", -6.1537406559], [" SELECT COUNT(*) FROM w WHERE position IN (1,2) AND points = 13", -6.889704990509999], [" SELECT COUNT(*) FROM w WHERE position IN (1,2) AND points IN (13,13)", -9.53926296707]]}, "345": {"question": "there be only 2 new episode of gary unmarried in december 2009", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.2900456644469998], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.29279392738], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.299666206874], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.300676443415], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.3008847516740003], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.3059726270259997], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%'", -2.306212639626], [" SELECT COUNT(*) FROM w WHERE `air date` LIKE '2009-12-%-%'", -2.947854439515], [" SELECT COUNT(*) FROM w WHERE air date LIKE '2009-12-%'", -3.2456639131800005], [" SELECT COUNT(*) FROM w WHERE air date LIKE '2009-12-%'", -3.2551396780469997]]}, "362": {"question": "gold coast blaze win the most game in the season", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [0], [3], [1]]}, "nsql": [[" SELECT CAST(SUBSTR(home, 1, INSTR(home, '-') - 1) AS INT) + CAST(SUBSTR(away, 1, INSTR(away, '-') - 1) AS INT) FROM w WHERE team = 'gold coast blaze'", -4.503586156560599], [" SELECT CAST(SUBSTR(home, 1, INSTR(home, '-') - 1) AS INT) + CAST(SUBSTR(away, 1, INSTR(away, '-') - 1) AS INT) FROM w WHERE team = 'gold coast blaze'", -4.5121666367255004], [" SELECT CAST(SUBSTR(home, 1, INSTR(home, '-') - 1) AS INT) + CAST(SUBSTR(away, 1, INSTR(away, '-') - 1) AS INT) FROM w WHERE team = 'gold coast blaze'", -4.5123358328766], [" SELECT SUM(CAST(SUBSTR(home, 1, INSTR(home, '-') - 1) AS INT) + CAST(SUBSTR(away, 1, INSTR(away, '-') - 1) AS INT)) FROM w WHERE team = 'gold coast blaze'", -5.06807631668], [" SELECT SUM(CAST(SUBSTR(home, 1, INSTR(home, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(away, 1, INSTR(away, '-') - 1) AS INT)) FROM w WHERE team = 'gold coast blaze'", -5.558220206767002], [" SELECT SUM(CAST(SUBSTR(home, 1, INSTR(home, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(away, 1, INSTR(away, '-') - 1) AS INT)) FROM w WHERE team = 'gold coast blaze'", -5.6239366069570025], [" SELECT SUM(CAST(SUBSTR(home, 1, INSTR(home, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(away, 1, INSTR(away, '-') - 1) AS INT)) FROM w WHERE team = 'gold coast blaze'", -5.624946375000997], [" SELECT COUNT(*) FROM w WHERE team = 'gold coast blaze' AND % won = 100", -5.66278484779], [" SELECT SUM(CAST(SUBSTR(last 5, 1, INSTR(last 5, ' - ') - 1) AS INT)) FROM w WHERE team = 'gold coast blaze'", -6.429743014630001], [" SELECT COUNT(*) FROM w WHERE team = 'gold coast blaze' AND LOWER(streak) LIKE '%won%'", -9.536461372289999]]}, "370": {"question": "only 1 match result in the result of a draw", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.5170139042299999], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.5191438895700001], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.51919621033], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.5193318799700001], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.5196531578700001], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.52024924407], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.52036395881], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.52055251172], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.52098107897], [" SELECT COUNT(*) FROM w WHERE res = 'draw'", -0.52153298837]]}, "455": {"question": "the wildcat keep the oppose team scoreless in 4 game", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.64182604152], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.64211942981], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.64224815555], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.64407190585], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.64419285815], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.6447977534899999], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.64523533291], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.6455652351500001], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.64564551985], [" SELECT COUNT(*) FROM w WHERE opponents = 0", -0.6457818256000001]]}, "478": {"question": "team brazil , team australia , and team england be 3 of the club that participate in the 2008 season", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2008%' AND (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england')", -3.8323808489399993], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2008%' AND (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england')", -3.8381176517399997], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2008%' AND (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england')", -3.839404711320001], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2008%' AND (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england')", -3.839517032589999], [" SELECT COUNT(*) FROM w WHERE (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england') AND seasons LIKE '%2008%'", -3.9424940468700003], [" SELECT COUNT(*) FROM w WHERE (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england') AND seasons LIKE '%2008%'", -3.9707326985299995], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2008%' AND football club IN ('team brazil' , 'team australia' , 'team england')", -5.40884946741], [" SELECT COUNT(DISTINCT football club) FROM w WHERE seasons LIKE '%2008%' AND (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england')", -5.5675420121300006], [" SELECT COUNT(*) FROM w WHERE `football club` IN ('team brazil', 'team australia', 'team england') AND `seasons` LIKE '%2008%'", -6.04142478046], [" SELECT COUNT(DISTINCT football club) FROM w WHERE football club IN ('team brazil' , 'team australia' , 'team england') AND seasons = '2008'", -8.582885110740003]]}, "503": {"question": "there be more republican than democratic incumbent who be first elect in 1974", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND first elected = 1974", -1.94344853832], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND first elected = 1974", -1.9462706757780006], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND first elected = 1974", -1.9828932153700003], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND first elected = 1974", -1.9884927122680003], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND first elected = 1974", -1.991116693172], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND first elected = 1974", -1.999034061426], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND `first elected` = 1974\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'democratic' AND `first elected` = 1974", -2.543370299106], [" SELECT COUNT(*) FROM w WHERE first elected = 1974 AND party = 'republican'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE first elected = 1974 AND party = 'democratic'", -2.70534409158], [" SELECT COUNT(*) FROM w WHERE first elected = 1974 AND party = 'republican'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE first elected = 1974 AND party = 'democratic'", -2.7192081029240014], [" SELECT COUNT(*) FROM w WHERE `first elected` = 1974 AND party = 'republican'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `first elected` = 1974 AND party = 'democratic'", -2.9026163444559994]]}, "528": {"question": "there be only 1 game play on may 20", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date = 'may 20'", -0.8557119063359999], [" SELECT COUNT(*) FROM w WHERE date = 'may 20'", -0.8605889422560001], [" SELECT COUNT(*) FROM w WHERE date = 'may 20'", -0.8611705793960001], [" SELECT COUNT(*) FROM w WHERE date = 'may 20'", -0.861832143896], [" SELECT COUNT(*) FROM w WHERE date = 'may 20'", -0.863463331936], [" SELECT COUNT(*) FROM w WHERE date = 'may 20'", -0.866342933196], [" SELECT COUNT(*) FROM w WHERE `date` = 'may 20'", -1.745666655836], [" SELECT COUNT(*) FROM w WHERE `date` = 'may 20'", -1.7515700629359998], [" SELECT COUNT(*) FROM w WHERE `date` = 'may 20'", -1.7605468947959997], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'may 20%'", -3.1288277632959995]]}, "553": {"question": "there 's no country that have 1 gold and a rank smaller then 2", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.5974563407699999], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.5992366126050002], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.6012344355649999], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.603559023105], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.605978173296], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.6063588862199999], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.6070129989940001], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.607228711585], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.6073160747540002], [" SELECT COUNT(*) FROM w WHERE gold = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE rank < 2", -0.612962350744]]}, "578": {"question": "hurac\u00e1n have a 40 in 1991 - 92 and a 43 in 1993 - 94", "gold_answer": 1, "pred_answer": {"0": [["40"], ["40"], ["40"], ["40"], ["40"], ["40"], ["40"], ["40"], ["40"], ["40"]], "1": [[43], [43], [43], [43], [43], [43], [43], [43], [43], [43]]}, "nsql": [[" SELECT 1991 - 92 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.1108551205500001], [" SELECT 1991 - 92 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.1147486522899999], [" SELECT 1991 - 92 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.11487629174], [" SELECT 1991 - 92 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.11530848047], [" SELECT 1991 - 92 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.1153917570599998], [" SELECT 1991 - 92 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.1158157665400001], [" SELECT 1991 - 92 FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'hurac\u00e1n'", -1.1160910426900001], [" SELECT `1991 - 92` FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT `1993 - 94` FROM w WHERE team = 'hurac\u00e1n'", -1.6705090552100001], [" SELECT `1991 - 92` FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT `1993 - 94` FROM w WHERE team = 'hurac\u00e1n'", -1.6862010448099995], [" SELECT `1991 - 92` FROM w WHERE team = 'hurac\u00e1n'\nNeuralSQL2: SELECT `1993 - 94` FROM w WHERE team = 'hurac\u00e1n'", -1.6902622094899993]]}, "9": {"question": "4 player score 3 goal total , and all 4 be in league 5", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8266397872300001], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8267863807799999], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8280871894949999], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8298834584799997], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8298834584799997], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8298839284799997], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.82997401425], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8311219312499999], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8311223712499999], [" SELECT COUNT(*) FROM w WHERE total = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total = 3 AND league = 5", -0.8311223712499999]]}, "31": {"question": "3 of west berkshire brewery 's beer each win a single award between 1995 and 2009", "gold_answer": 0, "pred_answer": {"0": [[28], [9], [9], [9], [1, 1, 1, 1], [1, 1, 1, 1], [11], [16], [9], [22]], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[10]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year BETWEEN 1995 AND 2009", -2.58553039713], [" SELECT COUNT(DISTINCT beer name) FROM w WHERE year BETWEEN 1995 AND 2009", -3.251710272769], [" SELECT COUNT(DISTINCT beer name) FROM w WHERE year >= 1995 AND year <= 2009", -3.764167471225], [" SELECT COUNT(DISTINCT(beer name)) FROM w WHERE year BETWEEN 1995 AND 2009", -4.209915496191], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1995 AND 2009 GROUP BY beer name HAVING COUNT(*) = 1", -4.960688298880999], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1995 AND 2009 GROUP BY beer name HAVING COUNT(DISTINCT prize) = 1", -7.615257392425], [" SELECT COUNT(*) FROM w WHERE year >= 1995 AND year <= 2009 AND prize = 'gold medal'", -8.103055325595001], [" SELECT COUNT(*) FROM w WHERE (year BETWEEN 1995 AND 2009) AND (beer name, prize) IN (SELECT beer name, prize FROM w GROUP BY beer name, prize HAVING COUNT(*) = 1)", -9.833101505194998], [" SELECT COUNT(DISTINCT beer name) FROM w WHERE (year >= 1995 AND year <= 2009) AND prize != 'no award'", -12.173760863565], [" SELECT COUNT(*) FROM w WHERE year >= 1995 AND year <= 2009 AND prize LIKE '% medal'\nQ2: {how many = a2} of west berkshire brewery 's beers won a gold medal in the camra reading branch beer festival.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE prize = 'gold medal' AND competition = 'camra reading branch beer festival'\nQ3: {how many = a3} of west berkshire brewery 's beers won a prize in the camra reading branch beer festival.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE competition = 'camra reading branch beer festival'\nQ4: {how many", -34.860372422826984]]}, "117": {"question": "the solheim cup be host in the us on 7 occassions from 1990 through 2013", "gold_answer": 0, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue LIKE '% , usa'", -3.9835314510700006], [" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue LIKE '% , usa'", -3.9926801233199996], [" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue LIKE '% , usa'", -3.998372512240001], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1990 AND 2013 AND venue LIKE '% , usa'", -4.010303370189999], [" SELECT COUNT(*) FROM w WHERE venue LIKE '% , usa' AND year BETWEEN 1990 AND 2013", -4.503927690874001], [" SELECT COUNT(*) FROM w WHERE venue LIKE '% , usa' AND year BETWEEN 1990 AND 2013", -4.521872864234], [" SELECT COUNT(*) FROM w WHERE venue LIKE '% , usa' AND year BETWEEN 1990 AND 2013", -4.528866659734], [" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue LIKE '%, usa'", -5.081480684330001], [" SELECT COUNT(*) FROM w WHERE `venue` LIKE '% , usa' AND `year` BETWEEN 1990 AND 2013", -5.84657679635], [" SELECT COUNT(*) FROM w WHERE `venue` LIKE '% , usa' AND `year` >= 1990 AND `year` <= 2013", -6.370342627437]]}, "124": {"question": "there be 2 game that take place in the month of december", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [0], [0], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -3.4947468598699998], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -3.4968067727300003], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12%-%'", -3.5002171378500004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -3.5051361738800004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -3.53194966879], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -3.5366196327499995], [" SELECT COUNT(*) FROM w WHERE date LIKE '1976-12-%'", -3.78609025443], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%-%'", -4.033013738719999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 12 - %'", -4.12578366603], [" SELECT COUNT(*) FROM w WHERE SUBSTR(date, 6, 2) = '12'", -4.611655760620001]]}, "142": {"question": "michael phelps have less medal than larisa latyna", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [18, 19, 20, 21, 22], [18, 19, 20, 21, 22], [18, 19, 20, 21, 22], [100], [100], "<error>"], "1": [[6], [6], [6], [6], [13, 14, 15, 16, 17, 18], [13, 14, 15, 16, 17, 18], [13, 14, 15, 16, 17, 18], [93], [93], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE athlete = 'larisa latynina'", -2.510490194665], [" SELECT COUNT(*) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE athlete = 'larisa latynina'", -2.5132214854649995], [" SELECT COUNT(*) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE athlete = 'larisa latynina'", -2.5192709555149997], [" SELECT COUNT(*) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE athlete = 'larisa latynina'", -2.522792048785], [" SELECT medal count FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT medal count FROM w WHERE athlete = 'larisa latynina'", -2.6340882472850002], [" SELECT `medal count` FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT `medal count` FROM w WHERE athlete = 'larisa latynina'", -3.0506387013150005], [" SELECT `medal count` FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT `medal count` FROM w WHERE athlete = 'larisa latynina'", -3.0785589839449985], [" SELECT SUM(medal count) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT SUM(medal count) FROM w WHERE athlete = 'larisa latynina'", -3.647640694345], [" SELECT SUM(medal count) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT SUM(medal count) FROM w WHERE athlete = 'larisa latyna'", -4.254786325645], [" SELECT SUM(medal_count) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT SUM(medal_count) FROM w WHERE athlete = 'larisa latyna'", -6.340395132725]]}, "167": {"question": "the only player that doesn't have 0 fa cup goal be peter hart", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE fa cup goals != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals != 0", -2.9442060900900002], [" SELECT COUNT(*) FROM w WHERE fa cup goals != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals != 0", -2.9449841173299998], [" SELECT COUNT(*) FROM w WHERE fa cup goals != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals != 0", -2.9552590229600004], [" SELECT COUNT(*) FROM w WHERE fa cup goals != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals != 0", -2.9621960553699993], [" SELECT COUNT(*) FROM w WHERE fa cup goals != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals != 0", -2.962925423389999], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` != 0 AND name = 'peter hart'", -3.184928663449999], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` != 0 AND name = 'peter hart'", -3.192035936710001], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` != 0 AND name = 'peter hart'", -3.198871271619999], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` != 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` != 0 AND name = 'peter hart'", -3.2037968051199996], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0 AND name = 'peter hart'", -3.8084216607900006]]}, "192": {"question": "pakistan and yemen have win 3 bronze medal for wushu at the asian game", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [], [1]]}, "nsql": [[" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.249919908386999], [" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.252557600586999], [" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.265537076377], [" SELECT bronze FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT bronze FROM w WHERE nation = 'yemen (yem)'", -2.2661441386370003], [" SELECT `bronze` FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT `bronze` FROM w WHERE nation = 'yemen (yem)'", -2.7561348558770002], [" SELECT `bronze` FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT `bronze` FROM w WHERE nation = 'yemen (yem)'", -2.7572515553175014], [" SELECT `bronze` FROM w WHERE nation = 'pakistan (pak)'\nNeuralSQL2: SELECT `bronze` FROM w WHERE nation = 'yemen (yem)'", -2.7620106422345008], [" SELECT bronze FROM w WHERE nation LIKE '%pakistan%'\nNeuralSQL2: SELECT bronze FROM w WHERE nation LIKE '%yemen%'", -3.037542910347001], [" SELECT `bronze` FROM w WHERE nation = 'pakistan'\nNeuralSQL2: SELECT `bronze` FROM w WHERE nation = 'yemen'", -3.3207316760609995], [" SELECT bronze FROM w WHERE nation LIKE '%pak%'\nNeuralSQL2: SELECT bronze FROM w WHERE nation LIKE '%yem%'", -5.842226794567002]]}, "217": {"question": "there be 3 episode that air in january , while only 2 air in february", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [0], [0], [0]], "1": [[2], [2], [2], [2], [2], [2], [2], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'", -2.038089933583], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'", -2.038211536897999], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'", -2.0403991218905007], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'", -2.042769715688001], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'", -2.0437202464919997], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'", -2.0446978877979998], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02%-%'", -2.354804492956001], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%-%'", -2.733758980413], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%-%'", -2.733910584347001], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%-%'", -2.7362196800900005]]}, "325": {"question": "none team tie on point , but most be separate by more than 1 goal difference", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT points) FROM w", -1.1557615853410002], [" SELECT COUNT(DISTINCT points) FROM w", -1.157794953654], [" SELECT COUNT(DISTINCT points) FROM w", -1.1581221668000001], [" SELECT COUNT(DISTINCT points) FROM w", -1.159195590114], [" SELECT COUNT(DISTINCT points) FROM w", -1.1592310850979997], [" SELECT COUNT(DISTINCT points) FROM w", -1.1593794275680003], [" SELECT COUNT(DISTINCT points) FROM w", -1.1600825961860002], [" SELECT COUNT(DISTINCT points) FROM w", -1.1613626275739999], [" SELECT COUNT(DISTINCT points) FROM w", -1.1642895525739998], [" SELECT COUNT(*) FROM w WHERE points = (SELECT points FROM w WHERE position = 1)", -7.041476908494]]}, "350": {"question": "the new york knicks win all home game play against the boston celtic in the 1984 - 1985 season", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [0], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -4.927545144474702], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -5.013565483282603], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -5.076405915753003], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND score LIKE '% - %' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) < CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)", -6.207249923227996], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -6.431779581065499], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND (score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0)", -6.841720394316997], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND (SUBSTR(score, 1, INSTR(score, '-') - 1) > SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)))", -6.8896032507169975], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -7.614229214614498], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0", -7.631220032186002], [" SELECT COUNT(*) FROM w WHERE opponent = 'new york knicks' AND location = 'boston garden' AND (SUBSTR(score, 1, INSTR(score, ' - ') - 1) - SUBSTR(score, INSTR(score, ' - ') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) > 0)", -9.382586352977]]}, "375": {"question": "more than 2 match be play through 3 round", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE round = 3", -0.68149641765], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68231278589], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.6830445918999999], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68332278535], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68420347415], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68425739548], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68523394405], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68600268025], [" SELECT COUNT(*) FROM w WHERE round > 2", -2.7134452981800004], [" SELECT COUNT(*) FROM w WHERE round > 2", -2.71882170515]]}, "392": {"question": "the dundee hurricane have 4 losing season , 2003 , 2005 , 2007 , 2008", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE losses > wins", -1.6036289929399998], [" SELECT COUNT(*) FROM w WHERE losses > wins", -1.6036293529399999], [" SELECT COUNT(*) FROM w WHERE losses > wins", -1.60428647301], [" SELECT COUNT(*) FROM w WHERE losses > wins", -1.60622892668], [" SELECT COUNT(*) FROM w WHERE losses > wins", -1.60622892668], [" SELECT COUNT(*) FROM w WHERE losses > wins", -1.6112280278], [" SELECT COUNT(*) FROM w WHERE wins < losses", -1.74540552801], [" SELECT COUNT(*) FROM w WHERE wins < losses", -1.7465803962299997], [" SELECT COUNT(*) FROM w WHERE wins < losses", -1.74710366212], [" SELECT COUNT(*) FROM w WHERE losses > 0", -3.06383032636]]}, "400": {"question": "there be 5 match hold in october of 1978", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [0], [5], [5], [5]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%'", -2.0721122902399998], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%'", -2.0726370152399998], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%'", -2.07341714604], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%'", -2.08048749084], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%'", -2.08891171624], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%'", -2.08926689704], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%-%'", -2.8929438036399997], [" SELECT COUNT(*) FROM w WHERE date LIKE '1978-10-%'", -3.07181681834], [" SELECT COUNT(*) FROM w WHERE date LIKE '1978-10-%'", -3.07888886564], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%'\n```", -4.96646650777]]}, "485": {"question": "3 episode have title begin with the letter t", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.9296729315799999], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.93105511654], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.9336416981000001], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.93371877335], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.93530336926], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.93537584711], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.9354624919600001], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.9360910675599999], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.93693245541], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -0.9379970577400001]]}, "508": {"question": "the total sum of the agriculture be 54 when include all 5 year list", "gold_answer": 1, "pred_answer": {"0": [[54], [54], [54], [54], [54], [54], [54], [54], [54], [54]]}, "nsql": [[" SELECT SUM(agriculture) FROM w", -0.31184987243], [" SELECT SUM(agriculture) FROM w", -0.31224699612], [" SELECT SUM(agriculture) FROM w", -0.31413354914999997], [" SELECT SUM(agriculture) FROM w", -0.31418143691], [" SELECT SUM(agriculture) FROM w", -0.31436036961], [" SELECT SUM(agriculture) FROM w", -0.31460272895999997], [" SELECT SUM(agriculture) FROM w", -0.31637889875999997], [" SELECT SUM(agriculture) FROM w", -0.31672645745999994], [" SELECT SUM(agriculture) FROM w", -0.31694666608999994], [" SELECT SUM(agriculture) FROM w", -0.3169541827599999]]}, "533": {"question": "13 be the only season list", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT season) FROM w", -0.767626026946], [" SELECT COUNT(DISTINCT season) FROM w", -0.767644752694], [" SELECT COUNT(DISTINCT season) FROM w", -0.7684551361999998], [" SELECT COUNT(DISTINCT season) FROM w", -0.7686962617800001], [" SELECT COUNT(DISTINCT season) FROM w", -0.768782549488], [" SELECT COUNT(DISTINCT season) FROM w", -0.7697150422000001], [" SELECT COUNT(DISTINCT season) FROM w", -0.7697793455499999], [" SELECT COUNT(DISTINCT season) FROM w", -0.77030754217], [" SELECT COUNT(DISTINCT season) FROM w", -0.7708923879520001], [" SELECT COUNT(DISTINCT(season)) FROM w", -1.9658512881860002]]}, "558": {"question": "there be no game that have rebound larger than 1048", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.8103674299899999], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.8112078389899999], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.81163635374], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.81229879921], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.81256251521], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.8139434582400001], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.8142825808599999], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.8143020041599999], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.81526225809], [" SELECT COUNT(*) FROM w WHERE total rebounds > 1048", -0.8182953518899999]]}, "583": {"question": "there be more than 23 episode where the season premier be september 23 , 2009", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `season premiere` = '2009-09-23 00:00:00'", -1.6141135227600003], [" SELECT COUNT(*) FROM w WHERE `season premiere` = '2009-09-23 00:00:00'", -1.6186085889700002], [" SELECT COUNT(*) FROM w WHERE `season premiere` = '2009-09-23 00:00:00'", -1.61893834462], [" SELECT COUNT(*) FROM w WHERE `season premiere` = '2009-09-23 00:00:00'", -1.62009616171], [" SELECT COUNT(*) FROM w WHERE `season premiere` = '2009-09-23 00:00:00'", -1.6201318427599998], [" SELECT COUNT(*) FROM w WHERE `season premiere` = '2009-09-23 00:00:00'", -1.6208325784600004], [" SELECT COUNT(*) FROM w WHERE `season premiere` = '2009-09-23 00:00:00'", -1.6229613301900003], [" SELECT COUNT(*) FROM w WHERE `season premiere` = '2009-09-23 00:00:00'", -1.62448307807], [" SELECT COUNT(*) FROM w WHERE `season premiere` LIKE '2009-09-23%'", -3.233435481580001], [" SELECT COUNT(DISTINCT episodes) FROM w WHERE `season premiere` LIKE '2009-09-23%'", -4.704707168585001]]}, "14": {"question": "3 of the people tie for ninth place be from the united state", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [6]], "1": ["<error>"], "2": [[6]], "3": ["<error>"], "4": [[6]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE place = 't9' AND country = 'united states'", -1.1509650642599998], [" SELECT COUNT(*) FROM w WHERE place = 't9' AND country = 'united states'", -1.1558628614600002], [" SELECT COUNT(*) FROM w WHERE place = 't9' AND country = 'united states'", -1.15868442146], [" SELECT COUNT(*) FROM w WHERE place = 't9' AND country = 'united states'", -1.1613332782599999], [" SELECT COUNT(*) FROM w WHERE place = 't9' AND country = 'united states'", -1.16276301906], [" SELECT COUNT(*) FROM w WHERE place = 't9' AND country = 'united states'", -1.1637153460600003], [" SELECT COUNT(*) FROM w WHERE place = 't9' AND country = 'united states'", -1.1640325416600001], [" SELECT COUNT(*) FROM w WHERE country = 'united states' AND place = 't9'", -2.38455080096], [" SELECT COUNT(DISTINCT player) FROM w WHERE place = 't9' AND country = 'united states'", -3.2155160186134997], [" SELECT COUNT(*) FROM w WHERE country = 'united states' AND place LIKE 't%'\nQ2: {how many = a2} of the people tied for ninth place are from the united states.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states' AND place LIKE 't%'\nQ3: {how many = a3} of the people tied for ninth place are from the united states.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE country = 'united states' AND place LIKE 't%'\nQ4: {how many = a4} of the people tied for ninth place are from the united states.\nNe", -18.557976058560005]]}, "39": {"question": "west germany have 2 of the top 6 and win a gold medal", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.0697686284480006], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.0712537137029994], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.0736371010250005], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.07654334608], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.0788974237799995], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.0794678200410006], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.0829025175149996], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.0831669450019996], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank <= 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -2.083179548163], [" SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank < 6\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nation = 'west germany' AND rank = 1", -3.6002562664659994]]}, "61": {"question": "only 1 of the viral disease have not be assign to a family", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.313216474641], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.314085687639], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.314117051035], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.314175605401], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.314558695075], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.314611148705], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.314756801065], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.315019098695], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.315368855505], [" SELECT COUNT(*) FROM w WHERE family = 'unassigned'", -0.319549951381]]}, "147": {"question": "illinois and indiana each have 3 translator", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.9373978835359997], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.9384804478659998], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.9410586829410004], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.9433868137420007], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.9460376827260002], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.9501201527020002], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.951597373096], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.9533226712260006], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '%illinois%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '%indiana%'", -1.9561185271360002], [" SELECT COUNT(*) FROM w WHERE city of license LIKE '% , illinois'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE city of license LIKE '% , indiana'", -3.0232762596559994]]}, "154": {"question": "the 1962 vfl season be play by a total of 12 different team", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[6]]}, "nsql": [[" SELECT COUNT(*) FROM w", -1.7886620760499998], [" SELECT COUNT(DISTINCT `home team`) FROM w", -2.2520259261800004], [" SELECT COUNT(DISTINCT `home team`) FROM w", -2.2536214395239997], [" SELECT COUNT(DISTINCT home team) FROM w", -2.3427887888940004], [" SELECT COUNT(DISTINCT(home team)) FROM w", -2.6057981800400007], [" SELECT COUNT(DISTINCT(home team)) FROM w", -2.6108358228], [" SELECT COUNT(DISTINCT(home team)) FROM w", -2.6121608789859994], [" SELECT COUNT(DISTINCT(home team)) FROM w", -2.61448418566], [" SELECT COUNT(DISTINCT `home team`) FROM w UNION SELECT COUNT(DISTINCT `away team`) FROM w", -4.252050198589999], [" SELECT COUNT(DISTINCT home team) FROM w\nNeuralSQL1: SELECT COUNT(DISTINCT away team) FROM w", -6.822906969175999]]}, "172": {"question": "the toronto blue jays lose 3 consecutive game between the 25th and the 28 may 1991", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [3], [3], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date BETWEEN '1991-05-25' AND '1991-05-28' AND loss IS NOT NULL", -5.536114103720001], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1991-05-25' AND '1991-05-28' AND loss IS NOT NULL", -5.54045251626], [" SELECT COUNT(*) FROM w WHERE date BETWEEN 'may 25' AND 'may 28' AND loss IS NOT NULL", -6.717170664219999], [" SELECT COUNT(*) FROM w WHERE date BETWEEN 'may 25' AND 'may 28' AND loss IS NOT NULL", -6.82833222526], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1991-05-25' AND '1991-05-28' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -7.570177141566], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1991-05-25' AND '1991-05-28' AND `loss` IS NOT NULL", -7.733086718399999], [" SELECT COUNT(*) FROM w WHERE date BETWEEN '1991-05-25' AND '1991-05-28' AND loss NOT NULL", -7.89436443128], [" SELECT COUNT(*) FROM w WHERE date > '1991-05-25' AND date < '1991-05-29' AND `loss` IS NOT NULL", -11.13171248486], [" SELECT COUNT(*) FROM w WHERE (date > '1991-05-25' AND date < '1991-05-28') AND loss != ''", -11.22321533046], [" SELECT COUNT(*) FROM w WHERE (date > '1991-05-24' AND date < '1991-05-29') AND record LIKE '%-%' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) < 0", -16.057343587927004]]}, "197": {"question": "rodney stuckey lead the detroit piston in point score in 2 game during this period of the 2010 - 2011 season", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high points = 'rodney stuckey'", -1.80972776318], [" SELECT COUNT(*) FROM w WHERE high points = 'rodney stuckey'", -1.8104609015600002], [" SELECT COUNT(*) FROM w WHERE high points = 'rodney stuckey'", -1.81335887469], [" SELECT COUNT(*) FROM w WHERE high points = 'rodney stuckey'", -1.8148488336700002], [" SELECT COUNT(*) FROM w WHERE high points = 'rodney stuckey'", -1.8149774381399997], [" SELECT COUNT(*) FROM w WHERE high points = 'rodney stuckey'", -1.8175784550400003], [" SELECT COUNT(*) FROM w WHERE `high points` = 'rodney stuckey'", -1.99555048401], [" SELECT COUNT(*) FROM w WHERE `high points` = 'rodney stuckey'", -1.99685921263], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%rodney stuckey%'", -2.7815477565599998], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%rodney stuckey%'", -2.7900743871899993]]}, "222": {"question": "there be 3 episode that air in february , while only 2 air in january", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [0]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.528310398652], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.529003929365], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.529687597588], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.530648347283999], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.5331342134430006], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.5338937061160003], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.537564966226], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%'", -2.5429185910089998], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01%-%'", -3.1149865392520004], [" SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-02-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `original airdate` LIKE '2010-01-%-%'", -3.283737618585999]]}, "247": {"question": "the giant play 7 game within the month of september", "gold_answer": 1, "pred_answer": {"0": [[7], [7], [7], [7], [7], [7], [7], [7], [7], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND `date` LIKE 'september%'", -2.9091905707490002], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND `date` LIKE 'september%'", -2.911170589108], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND `date` LIKE 'september%'", -2.9113022750079995], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND `date` LIKE 'september%'", -2.916310707366], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND date LIKE 'september%'", -3.2865755911080003], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND date LIKE 'september%'", -3.290974771066], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND date LIKE 'september%'", -3.2923271542090005], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND `date` LIKE 'september %'", -3.3207631056960003], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND date LIKE 'september %'", -3.587795287048], [" SELECT COUNT(*) FROM w WHERE opponent = 'giants' AND `date` LIKE '%-09-%'", -4.102319275608]]}, "355": {"question": "after 2000 england , the united state , brazil , and and puerto rico each contribute 1 player", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [0], [0], [9], [0], [0], [5], [0], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality IN ('england', 'united states', 'brazil', 'puerto rico') AND CAST(SUBSTR(years for jazz, 1, 4) AS INT) > 2000", -7.612370387950001], [" SELECT COUNT(*) FROM w WHERE nationality IN ('england', 'united states', 'brazil', 'puerto rico') AND CAST(SUBSTR(`years for jazz`, 1, 4) AS INT) > 2000", -7.866045600829999], [" SELECT COUNT(*) FROM w WHERE nationality IN ('england', 'united states', 'brazil', 'puerto rico') AND years for jazz LIKE '% - %' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, ' - ') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 2000", -11.557259855270004], [" SELECT COUNT(*) FROM w WHERE nationality IN ('england', 'united states', 'brazil', 'puerto rico') AND years for jazz LIKE '% - %' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, ' - ') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, ' - ') + 1)) AS INT) > 2000", -11.596878520879995], [" SELECT COUNT(*) FROM w WHERE nationality IN ('england', 'united states', 'brazil', 'puerto rico') AND SUBSTR(`years for jazz`, INSTR(`years for jazz`, '-') + 1, LENGTH(`years for jazz`) - (INSTR(`years for jazz`, '-') + 1)) > 2000", -12.362981820159996], [" SELECT COUNT(*) FROM w WHERE nationality IN ('england','united states','brazil','puerto rico') AND years for jazz LIKE '%-%' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, '-') + 1)) AS INT) > 2000", -12.664240876420001], [" SELECT COUNT(DISTINCT player) FROM w WHERE nationality IN ('england', 'united states', 'brazil', 'puerto rico') AND `years for jazz` LIKE '%-%' AND CAST(SUBSTR(`years for jazz`, INSTR(`years for jazz`, '-') + 1, LENGTH(`years for jazz`) - (INSTR(`years for jazz`, '-') + 1)) AS INT) > 2000", -13.386642199689994], [" SELECT COUNT(*) FROM w WHERE nationality IN ('england', 'united states', 'brazil', 'puerto rico') AND `years for jazz` LIKE '% - %' AND (CAST(SUBSTR(`years for jazz`, 1, INSTR(`years for jazz`, '-') - 1) AS INT) - CAST(SUBSTR(`years for jazz`, INSTR(`years for jazz`, '-') + 1, LENGTH(`years for jazz`) - (INSTR(`years for jazz`, ' - ') + 1)) AS INT)) > 0", -13.820915486286694], [" SELECT COUNT(DISTINCT player) FROM w WHERE nationality IN ('england','united states','brazil','puerto rico') AND years for jazz LIKE '%-%' AND CAST(SUBSTR(years for jazz, INSTR(years for jazz, '-') + 1, LENGTH(years for jazz) - (INSTR(years for jazz, '-') + 1)) AS INT) > 2000", -14.035346667389998], [" SELECT COUNT(*) FROM w WHERE nationality = 'england' OR nationality = 'united states' OR nationality = 'brazil' OR nationality = 'puerto rico' AND years for jazz LIKE '% - % - %' AND CAST(SUBSTR(years for jazz, 1, 4) AS INT) > 2000", -18.6064790868]]}, "380": {"question": "carmelo anthony be the leading scorer on the nugget for 10 out of the 13 game play in november", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [12], [12], [12], [12], [12], [0], [12]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND high points = 'carmelo anthony'", -4.79274839049], [" SELECT COUNT(*) FROM w WHERE date LIKE '%november%' AND high points = 'carmelo anthony'", -4.94117455522], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november %' AND high points = 'carmelo anthony'", -5.095903209205001], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE 'carmelo anthony%' AND `date` LIKE 'november%'", -5.28327959119], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE 'carmelo anthony%' AND `date` LIKE 'november%'", -5.28374490085], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND `high points` LIKE 'carmelo anthony%'", -5.62300199009], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND `high points` LIKE 'carmelo anthony%'", -5.63753647489], [" SELECT COUNT(*) FROM w WHERE (date LIKE 'november%' OR date LIKE '%november%') AND high points LIKE '%carmelo anthony%'", -11.728639163209998], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND score LIKE '% - %' AND SUBSTR(score, 1, INSTR(score, '-') - 1) = 'carmelo anthony'", -14.890290041950003], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE 'carmelo anthony%' AND `date` LIKE 'november%'\nQ2: the nuggets played {how many = a2} games in november where the leading scorer had at least 30 points.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `high points` LIKE '%30%' AND `date` LIKE 'november%'\nQ3: the nuggets played {how many = a3} games in november where the leading scorer had at least 30 points and the nuggets won.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `high points` LIKE", -33.654825348390006]]}, "405": {"question": "all of the constituency have 3rd snp 's place 2003", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'", -0.85602228602], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'", -0.8561635919499999], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'", -0.8564512893999998], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'", -0.8589289632900002], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'", -0.8598274657800001], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'", -0.8598471398599998], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'", -0.8598883995899999], [" SELECT COUNT(*) FROM w WHERE snp 's place 2003 = '3rd'", -2.2240905147600003], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'\n```", -3.39615183799], [" SELECT COUNT(*) FROM w WHERE `snp 's place 2003` = '3rd'\n```", -3.3974167339299997]]}, "422": {"question": "shane hall have place top 5 more than he place top 10", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[6], [6], [6], [6], [6], [6], [6], [4], [4], [4]]}, "nsql": [[" SELECT SUM(`top 5`) FROM w\nNeuralSQL2: SELECT SUM(`top 10`) FROM w", -1.6722581872600004], [" SELECT SUM(`top 5`) FROM w\nNeuralSQL2: SELECT SUM(`top 10`) FROM w", -1.67431612701], [" SELECT SUM(`top 5`) FROM w\nNeuralSQL2: SELECT SUM(`top 10`) FROM w", -1.6757440826299999], [" SELECT SUM(`top 5`) FROM w\nNeuralSQL2: SELECT SUM(`top 10`) FROM w", -1.6799646000399997], [" SELECT SUM(top 5) FROM w\nNeuralSQL2: SELECT SUM(top 10) FROM w", -1.8568044327499997], [" SELECT SUM(top 5) FROM w\nNeuralSQL2: SELECT SUM(top 10) FROM w", -1.86672784718], [" SELECT SUM(top 5) FROM w\nNeuralSQL2: SELECT SUM(top 10) FROM w", -1.8679677111500002], [" SELECT COUNT(*) FROM w WHERE `top 5` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `top 10` > 0", -1.9789981590400005], [" SELECT COUNT(*) FROM w WHERE `top 5` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `top 10` > 0", -1.9814333209050004], [" SELECT COUNT(*) FROM w WHERE `top 5` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `top 10` > 0", -1.98185620462]]}, "430": {"question": "the gold medalist for equestrian at the asian game have be different in every year they have occur except 1994 and 1998", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [0], [0]], "1": ["<error>"], "2": [[0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE year NOT IN (1994, 1998)", -2.99977333533], [" SELECT COUNT(*) FROM w WHERE year NOT IN (1994, 1998)", -3.00157195949], [" SELECT COUNT(*) FROM w WHERE year NOT IN (1994, 1998)", -3.00527738562], [" SELECT COUNT(DISTINCT gold) FROM w WHERE year NOT IN (1994, 1998)", -3.749951005935], [" SELECT COUNT(DISTINCT gold) FROM w WHERE year NOT IN (1994, 1998)", -3.7558401703280007], [" SELECT COUNT(DISTINCT gold) FROM w WHERE year != 1994 AND year != 1998", -4.338529190579999], [" SELECT COUNT(DISTINCT year) FROM w WHERE year NOT IN (1994,1998)", -6.076871078865999], [" SELECT COUNT(*) FROM w WHERE year NOT IN (1994, 1998) AND gold != (SELECT gold FROM w WHERE year = 1994) AND gold != (SELECT gold FROM w WHERE year = 1998)", -9.169756718790001], [" SELECT COUNT(*) FROM w WHERE year NOT IN (1994,1998) AND gold <> 'gold'", -10.62243253929], [" SELECT COUNT(*) FROM w WHERE year NOT IN (1994, 1998) AND gold != 'gold'\nQ2: the gold medalist for equestrian at the asian games has been different in {how many = a2} year they have occurred except 1994 and 1998.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year NOT IN (1994, 1998) AND gold != 'gold'", -20.96227387328501]]}, "515": {"question": "the carlton center , in cape town , have 50 floor", "gold_answer": 0, "pred_answer": {"0": [[], [], [], [], [], [], [], [], [50], [50]]}, "nsql": [[" SELECT floors FROM w WHERE name = 'carlton center' AND city = 'cape town'", -1.7098918248200001], [" SELECT floors FROM w WHERE name = 'carlton center' AND city = 'cape town'", -1.7153912396700002], [" SELECT floors FROM w WHERE name = 'carlton center' AND city = 'cape town'", -1.72109507157], [" SELECT floors FROM w WHERE name = 'carlton center' AND city = 'cape town'", -1.7276138316039997], [" SELECT floors FROM w WHERE name = 'carlton center' AND city = 'cape town'", -1.7394162813199998], [" SELECT floors FROM w WHERE name = 'carlton centre' AND city = 'cape town'", -2.56086813615], [" SELECT floors FROM w WHERE name = 'carlton centre' AND city = 'cape town'", -2.5621201015], [" SELECT floors FROM w WHERE name = 'carlton centre' AND city = 'cape town'", -2.57723850898], [" SELECT floors FROM w WHERE name = 'carlton centre' AND city = 'johannesburg'", -3.1649977816500003], [" SELECT floors FROM w WHERE name = 'carlton centre' AND city = 'johannesburg'", -3.1753168342599998]]}, "538": {"question": "more than 100 game be play for the series with the sawhorse dollar trophy", "gold_answer": 0, "pred_answer": {"0": [[1], [1], ["90 games"], [90], [90], [90], [90], [90], [90], [90]], "1": ["<error>", "<error>"], "2": [["43 - 43 - 4"]], "3": ["<error>"], "4": [["43 - 43 - 4"]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE trophy = 'sawhorse dollar'", -1.8563422378300005], [" SELECT COUNT(*) FROM w WHERE trophy = 'sawhorse dollar'", -1.8656993112300002], [" SELECT `games played` FROM w WHERE trophy = 'sawhorse dollar'", -2.5388237405300003], [" SELECT CAST(REPLACE(`games played`,'games','') AS INT) FROM w WHERE trophy = 'sawhorse dollar'", -3.5517274929999996], [" SELECT CAST(REPLACE(`games played`,'games','') AS INT) FROM w WHERE trophy = 'sawhorse dollar'", -3.5978395318300005], [" SELECT CAST(SUBSTR(`games played`, 1, INSTR(`games played`, ' ') - 1) AS INT) FROM w WHERE trophy = 'sawhorse dollar'", -5.353100905350001], [" SELECT CAST(REPLACE(`games played`,'games','') AS INT) FROM w WHERE `trophy` = 'sawhorse dollar'", -5.70086592864], [" SELECT CAST(REPLACE(`games played`,' games','') AS INT) FROM w WHERE `trophy` = 'sawhorse dollar'", -5.947912280360001], [" SELECT CAST(REPLACE(`games played`,' games','') AS INT) FROM w WHERE trophy = 'sawhorse dollar'\n```", -6.24858416209], [" SELECT CAST(REPLACE(`games played`,' games','') AS INT) FROM w WHERE trophy = 'sawhorse dollar'\nQ2: the series record for the series with the sawhorse dollar trophy is {how many = a2}.\nNeuralSQL2: SELECT `series record` FROM w WHERE trophy = 'sawhorse dollar'\nQ3: the series record for the series with the sawhorse dollar trophy is {how many = a3}.\nNeuralSQL3: SELECT `series record` FROM w WHERE trophy = 'sawhorse dollar'\nQ4: the series record for the series with the sawhorse dollar trophy is {how many = a4}.\nNe", -25.337419563576]]}, "563": {"question": "there be no win when the top 25 and even the top 10 be less than 4", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [2], [0], [0], [0], [0], [0], [0], [2]]}, "nsql": [[" SELECT SUM(wins) FROM w WHERE `top - 25` < 4 AND `top - 10` < 4", -2.4280451302600006], [" SELECT SUM(wins) FROM w WHERE `top - 25` < 4 AND `top - 10` < 4", -2.535382234259999], [" SELECT COUNT(*) FROM w WHERE `top - 25` < 4 AND `top - 10` < 4", -2.6596683113600004], [" SELECT COUNT(*) FROM w WHERE wins > 0 AND `top - 25` < 4 AND `top - 10` < 4", -4.017242701960001], [" SELECT COUNT(*) FROM w WHERE `top - 25` < 4 AND `top - 10` < 4 AND wins > 0", -4.0282551690599995], [" SELECT COUNT(*) FROM w WHERE `top - 25` < 4 AND `top - 10` < 4 AND wins > 0", -4.03508919706], [" SELECT COUNT(*) FROM w WHERE wins > 0 AND `top - 25` < 4 AND `top - 10` < 4", -4.064781290259999], [" SELECT COUNT(*) FROM w WHERE wins = 1 AND `top - 25` < 4 AND `top - 10` < 4", -5.13024801446], [" SELECT COUNT(*) FROM w WHERE wins = 1 AND `top - 25` < 4 AND `top - 10` < 4", -5.150536392660001], [" SELECT COUNT(*) FROM w WHERE wins = '0' AND top - 25 < 4 AND top - 10 < 4", -6.74046410676]]}, "588": {"question": "\u00e1lvaro campos be goalkeeper for the team that have no match with an average higher than 0.61", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 0.61 AND goalkeeper = 'alvaro campos'", -2.444673878744], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 0.61 AND goalkeeper = 'alvaro campos'", -2.449668895634], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 0.61 AND goalkeeper = 'alvaro campos'", -2.4534093074739998], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 0.61 AND goalkeeper = 'alvaro campos'", -2.455810011134], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 0.61 AND goalkeeper = 'alvaro campos'", -2.459903797934], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE goalkeeper = 'alvaro campos' AND average > 0.61", -2.4660209726440003], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 0.61 AND goalkeeper = 'alvaro campos'", -2.4690379402839997], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 0.61 AND goalkeeper = 'alvaro campos'", -2.472411243643999], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE goalkeeper = 'alvaro campos' AND average > 0.61", -2.4794365799439997], [" SELECT COUNT(*) FROM w WHERE average > 0.61\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE average > 0.61 AND team = (SELECT team FROM w WHERE goalkeeper = 'alvaro campos')", -4.889307367664001]]}, "19": {"question": "there be a total of 5 country represent by the player", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT country) FROM w", -0.5595193208049999], [" SELECT COUNT(DISTINCT country) FROM w", -0.5616186166680001], [" SELECT COUNT(DISTINCT country) FROM w", -0.561639017811], [" SELECT COUNT(DISTINCT country) FROM w", -0.561693242198], [" SELECT COUNT(DISTINCT country) FROM w", -0.561992647503], [" SELECT COUNT(DISTINCT country) FROM w", -0.5619926563850001], [" SELECT COUNT(DISTINCT country) FROM w", -0.5622352087489999], [" SELECT COUNT(DISTINCT country) FROM w", -0.5623882423809999], [" SELECT COUNT(DISTINCT country) FROM w", -0.5626682229619999], [" SELECT COUNT(DISTINCT country) FROM w", -0.56293113565]]}, "44": {"question": "only 1 person have be a member of the socialist party of albania", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `political party` = 'socialist party of albania'", -1.3477282086649995], [" SELECT COUNT(*) FROM w WHERE `political party` = 'socialist party of albania'", -1.35477936559], [" SELECT COUNT(*) FROM w WHERE `political party` = 'socialist party of albania'", -1.35613332006], [" SELECT COUNT(*) FROM w WHERE `political party` = 'socialist party of albania'", -1.35761806622], [" SELECT COUNT(*) FROM w WHERE `political party` = 'socialist party of albania'", -1.359374060775], [" SELECT COUNT(*) FROM w WHERE `political party` = 'socialist party of albania'", -1.3613500195960002], [" SELECT COUNT(*) FROM w WHERE political party = 'socialist party of albania'", -1.4233865614050003], [" SELECT COUNT(*) FROM w WHERE political party = 'socialist party of albania'", -1.4265104216999998], [" SELECT COUNT(*) FROM w WHERE political party = 'socialist party of albania'", -1.4276084552860004], [" SELECT COUNT(*) FROM w WHERE political party = 'socialist party of albania'", -1.42913143859]]}, "69": {"question": "8 of the viral disease possess an enveloped", "gold_answer": 0, "pred_answer": {"0": [[15], [15], [15], [15], [15], [15], [15], [15], [15], [15]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.52550657888], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.52593117411], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.5272520202500001], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.5272531521699998], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.5275637547199999], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.52815404271], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.5294287090100002], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.52951747229], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.5318364719399999], [" SELECT COUNT(*) FROM w WHERE envelopment = 'enveloped'", -0.5318383945399999]]}, "91": {"question": "there be 3 run back position pick by the 6th round", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.1092348023699998], [" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.11186693207], [" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.1134142101799998], [" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.11469655478], [" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.11484923743], [" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.1152934092800002], [" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.1157164865299998], [" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.11717031273], [" SELECT COUNT(*) FROM w WHERE round = 6 AND position = 'running back'", -1.12361547913], [" SELECT COUNT(*) FROM w WHERE `round` = 6 AND position = 'running back'", -2.6598459852700005]]}, "177": {"question": "alex bogdanovic have never play against wesley moodie yet", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `opponent in the final` = 'wesley moodie'", -0.784444712406], [" SELECT COUNT(*) FROM w WHERE `opponent in the final` = 'wesley moodie'", -0.7860695648260002], [" SELECT COUNT(*) FROM w WHERE `opponent in the final` = 'wesley moodie'", -0.787945366356], [" SELECT COUNT(*) FROM w WHERE `opponent in the final` = 'wesley moodie'", -0.7891577168060002], [" SELECT COUNT(*) FROM w WHERE `opponent in the final` = 'wesley moodie'", -0.7897494064159998], [" SELECT COUNT(*) FROM w WHERE `opponent in the final` = 'wesley moodie'", -0.792175316786], [" SELECT COUNT(*) FROM w WHERE `opponent in the final` = 'wesley moodie'", -0.7955300033660003], [" SELECT COUNT(*) FROM w WHERE opponent in the final = 'wesley moodie'", -1.5743728887360005], [" SELECT COUNT(*) FROM w WHERE opponent in the final = 'wesley moodie'", -1.576832957256], [" SELECT COUNT(*) FROM w WHERE opponent in the final = 'wesley moodie'", -1.5926724276559998]]}, "184": {"question": "amy sherman - palladino be direct a single episode in 2003", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [0], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003%-%-%'", -3.068259577116], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003%-%-%'", -3.071360068916001], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003%-%-%'", -3.0743865855460006], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -3.2814686698360007], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -3.281498492736], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -3.2881447212009993], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -3.297100090956], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%-%'", -3.341115130051], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%-%'", -3.346657133012], [" SELECT COUNT(DISTINCT director) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -8.253179262786]]}, "202": {"question": "the detroit piston lose over 8 game during this period of their 2010 - 2011 season", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE 'l%'", -2.32434873159], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l%'", -2.32951834335], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l%'", -2.3300257296200004], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l%'", -2.33144566835], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l%'", -2.33702781359], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l %'", -3.28994917862], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l % - %'", -3.35866207062], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l % - %'", -3.3698315377799997], [" SELECT COUNT(*) FROM w WHERE score LIKE 'l % - %'", -3.3755238896199997], [" SELECT COUNT(*) FROM w WHERE team = 'detroit' AND score LIKE 'l % - %'", -6.16862362488]]}, "227": {"question": "sco have the highest amount of transfer at 22 , more than every other team combine", "gold_answer": 1, "pred_answer": {"0": [[22], [22], [22], [22], [22], [22], [22], [22], [1], [22]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nat = 'sco'", -1.2766322279499998], [" SELECT COUNT(*) FROM w WHERE nat = 'sco'", -1.2766468204499999], [" SELECT COUNT(*) FROM w WHERE nat = 'sco'", -1.2796497595499998], [" SELECT COUNT(*) FROM w WHERE nat = 'sco'", -1.2825746559000002], [" SELECT COUNT(*) FROM w WHERE nat = 'sco'", -1.2845662499], [" SELECT COUNT(*) FROM w WHERE nat = 'sco'", -1.2849651734500003], [" SELECT COUNT(*) FROM w WHERE nat = 'sco'", -1.2854376080499998], [" SELECT COUNT(*) FROM w WHERE nat = 'sco'", -1.2876780615], [" SELECT COUNT(*) FROM w WHERE nat = 'sco' AND type = 'transfer'", -4.19141404785], [" SELECT COUNT(*) FROM w WHERE nat = 'sco' GROUP BY nat ORDER BY COUNT(*) DESC LIMIT 1", -4.97762552345]]}, "252": {"question": "there be more than 2 game that have a score higher than 10 point", "gold_answer": 0, "pred_answer": {"0": [[2], [0], [0], [0], [5], [5], [5], [5], [2], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > 10", -3.3741863984999987], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.8120143484393996], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.826346076604699], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.8304474814696987], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.998336957124999], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -3.9995203425779997], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -4.007139894918996], [" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -4.371742323569501], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) > 10 OR CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) > 10)", -4.703302554519997], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) + CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -5.752836036795999]]}, "277": {"question": "1971 be the only year alberto pagani win 2 time in the same year , in the 250cc class", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT year) FROM w WHERE wins = 2 AND class = '250cc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins = 2 AND class = '250cc'", -4.605288791617002], [" SELECT COUNT(*) FROM w WHERE wins = 2 AND class = '250cc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins = 2 AND class = '250cc'", -4.609348942869999], [" SELECT COUNT(*) FROM w WHERE wins = 2 AND class = '250cc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins = 2 AND class = '250cc'", -4.618425177560001], [" SELECT COUNT(*) FROM w WHERE wins = 2 AND class = '250cc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND wins = 2 AND class = '250cc'", -4.624748254930002], [" SELECT COUNT(*) FROM w WHERE wins = 2 AND class = '250cc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wins = 2 AND class = '250cc' AND year = 1971", -4.702445513620001], [" SELECT COUNT(DISTINCT year) FROM w WHERE class = '250cc' AND wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND class = '250cc' AND wins = 2", -4.731734992273001], [" SELECT COUNT(DISTINCT year) FROM w WHERE class = '250cc' AND wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND class = '250cc' AND wins = 2", -4.807111982346998], [" SELECT COUNT(*) FROM w WHERE class = '250cc' AND wins = 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = '250cc' AND wins = 2 AND year = 1971", -5.101607100229998], [" SELECT COUNT(DISTINCT year) FROM w WHERE wins = 2 AND class = '250cc'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE wins = 2 AND class = '250cc' AND year = 1971", -5.254295642955], [" SELECT COUNT(DISTINCT year) FROM w WHERE class = '250cc' AND wins > 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE year = 1971 AND class = '250cc' AND wins > 1", -6.687992108875001]]}, "385": {"question": "raymond felton lead the team in assist 4 different time", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [4], [1], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high assists = 'raymond felton'", -2.8114125564099997], [" SELECT COUNT(DISTINCT game) FROM w WHERE high assists = 'raymond felton'", -3.0245151548609996], [" SELECT COUNT(DISTINCT game) FROM w WHERE high assists = 'raymond felton'", -3.0376981048019998], [" SELECT COUNT(*) FROM w WHERE high assists LIKE '%raymond felton%'", -3.14460731268], [" SELECT COUNT(DISTINCT game) FROM w WHERE high assists = 'raymond felton'", -3.182927802182], [" SELECT COUNT(DISTINCT high assists) FROM w WHERE high assists LIKE '%raymond felton%'", -3.874027479395], [" SELECT COUNT(DISTINCT `high assists`) FROM w WHERE `high assists` LIKE '%raymond felton%'", -3.992850976700001], [" SELECT COUNT(DISTINCT `high assists`) FROM w WHERE `high assists` LIKE '%raymond felton%'", -4.082402376577001], [" SELECT COUNT(DISTINCT(`high assists`)) FROM w WHERE `high assists` LIKE '%raymond felton%'", -4.256059053803001], [" SELECT COUNT(DISTINCT(`high assists`)) FROM w WHERE `high assists` LIKE '%raymond felton%'", -4.346789095531001]]}, "410": {"question": "p\u00e1draig harrington and graeme mcdowell be both fron northern ireland", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'graeme mcdowell' AND country = 'northern ireland'", -1.1804156819219997], [" SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'graeme mcdowell' AND country = 'northern ireland'", -1.1806618005899996], [" SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'graeme mcdowell' AND country = 'northern ireland'", -1.1811719499800004], [" SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'graeme mcdowell' AND country = 'northern ireland'", -1.1820221573300005], [" SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'graeme mcdowell' AND country = 'northern ireland'", -1.1830472785600004], [" SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'graeme mcdowell' AND country = 'northern ireland'", -1.1871253367159997], [" SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'graeme mcdowell' AND country = 'northern ireland'", -1.1928241636199997], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland' AND player = 'p\u00e1draig harrington'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'northern ireland' AND player = 'graeme mcdowell'", -2.4195008017029993], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland' AND player = 'p\u00e1draig harrington'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'northern ireland' AND player = 'graeme mcdowell'", -2.420014484137001], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland' AND player = 'p\u00e1draig harrington'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'northern ireland' AND player = 'graeme mcdowell'", -2.4218625009199988]]}, "435": {"question": "the 49ers lose 8 of the game in the 1947 season", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6425032964], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6435725834999999], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6436743171999999], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6609593103], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6615668538], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6626461198], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6632832025], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6647252785], [" SELECT COUNT(*) FROM w WHERE result = 'l'", -0.6662733202], [" SELECT COUNT(*) FROM w WHERE result = 'l'\n```", -3.4760806996]]}, "452": {"question": "the lion finish with a record of 4 win and 8 loss", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [0], [6]], "1": [[8], [8], [8], [8], [8], [8], [8], [8], [0], [8]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6368281338139998], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6386976032800007], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6397670387499999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6419475516100002], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6421568284800006], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6450684034099996], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.6451755756599997], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l %'", -2.468071905799999], [" SELECT COUNT(*) FROM w WHERE result LIKE '% w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '% l %'", -3.93303499189], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'\n```", -4.344483933029999]]}, "460": {"question": "the wildcat never score more than 7 point in any game they win", "gold_answer": 0, "pred_answer": {"0": [[138], [138], [138], [138], [138], [138], [138], [138], [138], [138]], "1": ["<error>"], "2": [[3]], "3": ["<error>"], "4": [[10]], "5": ["<error>"], "6": [[2]], "7": ["<error>"]}, "nsql": [[" SELECT SUM(wildcats points) FROM w WHERE result = 'win'", -1.08890626898], [" SELECT SUM(wildcats points) FROM w WHERE result = 'win'", -1.09411899268], [" SELECT SUM(wildcats points) FROM w WHERE result = 'win'", -1.09473686928], [" SELECT SUM(wildcats points) FROM w WHERE result = 'win'", -1.09515873168], [" SELECT SUM(wildcats points) FROM w WHERE result = 'win'", -1.0957518243800002], [" SELECT SUM(wildcats points) FROM w WHERE result = 'win'", -1.0961130985799998], [" SELECT SUM(`wildcats points`) FROM w WHERE result = 'win'", -1.56224710948], [" SELECT SUM(`wildcats points`) FROM w WHERE result = 'win'", -1.56348843568], [" SELECT SUM(`wildcats points`) FROM w WHERE result = 'win'", -1.56392371768], [" SELECT SUM(wildcats points) FROM w WHERE result = 'win'\nQ2: the number of games the wildcats lost is {how many = a2}.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss'\nQ3: the number of games the wildcats played is {how many = a3}.\nNeuralSQL3: SELECT COUNT(*) FROM w\nQ4: the number of games the wildcats lost to a team that was not ranked is {how many = a4}.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE result = 'loss' AND opponent NOT LIKE '% alabama%'\nQ5: the number", -37.031258517953994]]}, "545": {"question": "there be 4 episode in region 4 on march 13 , 2008", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `region 4` LIKE '2008-03-13%'", -2.480242066594], [" SELECT COUNT(*) FROM w WHERE `region 4` LIKE '2008-03-13%'", -2.4831638339940003], [" SELECT COUNT(*) FROM w WHERE `region 4` LIKE '2008-03-13%'", -2.483622165494], [" SELECT COUNT(*) FROM w WHERE `region 4` LIKE '2008-03-13%'", -2.4838758367940006], [" SELECT COUNT(*) FROM w WHERE `region 4` LIKE '2008-03-13%'", -2.486286216094], [" SELECT COUNT(*) FROM w WHERE `region 4` LIKE '2008-03-13%'", -2.487077718094], [" SELECT COUNT(*) FROM w WHERE `region 4` LIKE '2008-03-13%'", -2.490293885294], [" SELECT COUNT(*) FROM w WHERE `region 4` LIKE '2008-03-13%'", -2.492050609494], [" SELECT COUNT(*) FROM w WHERE region 4 = '2008-03-13 00:00:00'", -2.794625858144], [" SELECT COUNT(*) FROM w WHERE region 4 = '2008-03-13 00:00:00'", -2.7994569248439993]]}, "568": {"question": "the nation of croatia receive less than 2 silver medal with a total medal of only 1", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.6183944144079999], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.619933782499], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.6201747261959998], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.6211952141989999], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.621647672676], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.6219751681389999], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.6224441021520001], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.6253320962159998], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.6275570141160001], [" SELECT silver FROM w WHERE nation = 'croatia'\nNeuralSQL2: SELECT total FROM w WHERE nation = 'croatia'", -0.6306107601389999]]}, "593": {"question": "223 be the only episode number with q147 format", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'q147' AND episode = 223", -2.2101689895299996], [" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'q147' AND episode = 223", -2.2145148614199996], [" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'q147' AND episode = 223", -2.21670871019], [" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'q147' AND episode = 223", -2.22053018431], [" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'q147' AND episode = 223", -2.23132888513], [" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'q147' AND episode = 223", -2.23235381868], [" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'q147' AND episode = 223", -2.23789051746], [" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE format = 'q147' AND episode = 223", -2.2388058555999995], [" SELECT COUNT(*) FROM w WHERE format = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE episode = 223 AND format = 'q147'", -2.9852085823600008], [" SELECT COUNT(*) FROM w WHERE `format` = 'q147'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `format` = 'q147' AND `episode` = 223", -4.869788270039998]]}, "24": {"question": "triston grant be the only player list for left wing", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'triston grant' AND position = 'left wing'", -1.2407420765240005], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'triston grant' AND position = 'left wing'", -1.24107591688], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'triston grant' AND position = 'left wing'", -1.244220370835], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'triston grant' AND position = 'left wing'", -1.2444186877000003], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'triston grant' AND position = 'left wing'", -1.2456247623200003], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'triston grant' AND position = 'left wing'", -1.2465676981900005], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'triston grant' AND position = 'left wing'", -1.2499745591530003], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'triston grant' AND position = 'left wing'", -1.25027723653], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'left wing' AND player = 'triston grant'", -1.612589588814], [" SELECT COUNT(*) FROM w WHERE position = 'left wing'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE position = 'left wing' AND player = 'triston grant'", -1.6172327799100001]]}, "49": {"question": "james donaldson have 2 stint on the jazz 's roster , total 5 year in total", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1993], [1993], [1993], [1993], [1993], [1993], [1993], [1993], [1993], [1993]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`years for jazz`,'-','') AS INT)) FROM w WHERE player = 'james donaldson'", -5.71767925439], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`years for jazz`, ' ', '') AS INT)) FROM w WHERE player = 'james donaldson'", -6.047314192918], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`years for jazz`, ' - ', '') AS INT)) FROM w WHERE player = 'james donaldson'", -6.805174846512001], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(years for jazz, '-', '') AS INT)) FROM w WHERE player = 'james donaldson'", -7.307090173619997], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`years for jazz`, '-', ' ') AS INT)) FROM w WHERE player = 'james donaldson'", -7.598189852842999], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`years for jazz`, '-', ' ') AS INT)) FROM w WHERE player = 'james donaldson'", -7.6415641759], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`years for jazz`, ' - ', ' - ') AS INT)) FROM w WHERE player = 'james donaldson'", -7.739316196999998], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`years for jazz`, ' - ', ' - ') AS INT)) FROM w WHERE player = 'james donaldson'", -7.741065836446], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`years for jazz`, '-', ' - ') AS INT)) FROM w WHERE player = 'james donaldson'", -7.911212966463], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(years for jazz, '-', '+') AS INT)) FROM w WHERE player = 'james donaldson'", -9.231971124526003]]}, "74": {"question": "galina voskoboeva have an equal winrate between both clay and hard court", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard'", -1.33146297643], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard'", -1.3333518960000001], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard'", -1.3342096843959999], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard'", -1.3346094744800001], [" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'clay'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND surface = 'hard'", -1.3349416072800004], [" SELECT COUNT(*) FROM w WHERE surface = 'clay' AND outcome = 'winner'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard' AND outcome = 'winner'", -1.5062538106199999], [" SELECT COUNT(*) FROM w WHERE surface = 'clay' AND outcome = 'winner'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard' AND outcome = 'winner'", -1.5066392750699997], [" SELECT COUNT(*) FROM w WHERE surface = 'clay' AND outcome = 'winner'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard' AND outcome = 'winner'", -1.5085446797100004], [" SELECT COUNT(*) FROM w WHERE surface = 'clay' AND outcome = 'winner'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard' AND outcome = 'winner'", -1.5116673798000004], [" SELECT COUNT(*) FROM w WHERE surface = 'clay' AND outcome = 'winner'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE surface = 'hard' AND outcome = 'winner'", -1.5122986925300006]]}, "99": {"question": "gary beach be 1 of 4 nominee for a tony award", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach'", -1.6284852007679993], [" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.0379365446080007], [" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.0385656136179997], [" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.047972434907], [" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.0513621811], [" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.0517557938900004], [" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.0559180774930006], [" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.0571302243519995], [" SELECT COUNT(*) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.0574080828629997], [" SELECT COUNT(DISTINCT nominee) FROM w WHERE award = 'tony award'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nominee = 'gary beach' AND award = 'tony award'", -2.809819158382001]]}, "121": {"question": "patty sheehan , judy rankin and kathy whitworth be all captain that win the solheim cup 1 time", "gold_answer": 0, "pred_answer": {"0": [[2], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "2": [[2], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth'", -2.9776589786695005], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -3.5492159246440016], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -3.552368153790998], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -3.5559968577530006], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -3.559421814907], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -3.5599191105729986], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -3.559936161746998], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -3.5630563125770016], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `usa captain` = 'kathy whitworth' AND `winning team` = 'united states'", -3.564056850887001], [" SELECT COUNT(*) FROM w WHERE `usa captain` = 'patty sheehan' AND `winning team` = 'europe'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `usa captain` = 'judy rankin' AND `winning team` = 'united states'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE (`usa captain` = 'kathy whitworth' OR `europe captain` = 'kathy whitworth') AND `winning team` = 'united states'", -6.371047855449999]]}, "207": {"question": "the tv series dexter have 11 episode in its third season", "gold_answer": 1, "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], [10], [10], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w", -0.426793758744], [" SELECT COUNT(*) FROM w", -0.43026926479399996], [" SELECT COUNT(*) FROM w", -0.430717720444], [" SELECT COUNT(*) FROM w", -0.43078427757399995], [" SELECT COUNT(*) FROM w", -0.431194900444], [" SELECT COUNT(*) FROM w", -0.43148563094400005], [" SELECT COUNT(*) FROM w", -0.431832113744], [" SELECT COUNT(*) FROM w", -0.431845138444], [" SELECT COUNT(*) FROM w", -0.432146384194], [" SELECT COUNT(*) FROM w", -0.432907927094]]}, "214": {"question": "there be only 1 event in 2011 and it be on 10 - 12 june 2011", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [1], [0], [1], [0], [0]], "1": [[0], [0], [0], [0], [1], [1], [0], [0], [0], [0]], "2": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-06-10'", -6.208814801926], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-06-10'", -6.241498881073], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-06-10%'", -6.281088014103999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-06-10' OR `date` LIKE '2011-06-11' OR `date` LIKE '2011-06-12'", -7.368324273030997], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-6-102011-6-12'", -7.75703697155], [" SELECT COUNT(*) FROM w WHERE season = '2011'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season = '2011' AND date LIKE '%2011-6-10%'", -7.861182052144], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '2011-06-10%' AND `date` LIKE '%2011-06-12%'", -9.052102023901003], [" SELECT COUNT(*) FROM w WHERE season LIKE '2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE season LIKE '2011%' AND date LIKE '2011-06-10%'\n```", -12.025222549804997], [" SELECT COUNT(*) FROM w WHERE season LIKE '% - 11'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '2011-06-10%' OR date LIKE '2011-06-11%' OR date LIKE '2011-06-12%'\n```", -13.952424424368994], [" SELECT COUNT(*) FROM w WHERE SUBSTR(date, 1, 4) = '2011'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE SUBSTR(date, 1, 4) = '2011' AND SUBSTR(date, INSTR(date, '-') + 1, LENGTH(date) - (INSTR(date, '-') + 1)) = '6' AND SUBSTR(date, INSTR(date, ',') - 2, 2) = '10'", -19.391942802534007]]}, "232": {"question": "chris burke be 1 of 5 player to have a free transfer fee", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.5384570665819997], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.540370294202], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.5411666553919998], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.543127582152], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.545738686992], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE transfer fee = 'free' AND name = 'chris burke'", -2.2870282622020004], [" SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND `transfer fee` = 'free'", -2.4207010280220005], [" SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND `transfer fee` = 'free'", -2.434311887202], [" SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free' AND name = 'chris burke'", -2.7029001361419995], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'\n```", -4.433801248061999]]}, "257": {"question": "luk\u00e1\u0161 melich complete in the olympic game 2 time", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition = 'olympic games'", -0.9906639385800001], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games'", -0.9914127423699999], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games'", -0.99267113626], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games'", -0.9932462495199998], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games'", -0.9939522283500001], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games'", -0.9971180157699999], [" SELECT COUNT(DISTINCT year) FROM w WHERE competition = 'olympic games'", -2.23032069513], [" SELECT COUNT(DISTINCT year) FROM w WHERE competition = 'olympic games'", -2.2406018067980003], [" SELECT COUNT(DISTINCT year) FROM w WHERE competition = 'olympic games'", -2.2464413346280003], [" SELECT COUNT(*) FROM w WHERE competition = 'olympic games'\n```", -3.90590841159]]}, "282": {"question": "the new york jet take 3 more win over loss during the 1993 season", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [0]], "1": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.54011987095], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.5418368331799999], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.542968943074], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.54454553375], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.5450993298], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l%'", -1.5459201633450004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l %'", -2.1866617514700004], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l %'", -2.1870139546799994], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE 'l % - %'", -3.172076095814], [" SELECT COUNT(*) FROM w WHERE result LIKE '% w %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result LIKE '% l %'", -3.6558596423900007]]}, "307": {"question": "brook lopez lead the team in point for 5 straight game", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [5], [0]], "1": ["<error>"], "2": [[7]], "3": ["<error>"], "4": [[1]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez'", -2.23527075319], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez'", -2.24254730706], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez'", -2.2438371217400004], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez'", -2.24506761941], [" SELECT COUNT(*) FROM w WHERE high points = 'brook lopez'", -2.25879628156], [" SELECT COUNT(*) FROM w WHERE `high points` = 'brook lopez'", -2.68210553479], [" SELECT COUNT(*) FROM w WHERE `high points` = 'brook lopez'", -2.6915778539999993], [" SELECT COUNT(DISTINCT game) FROM w WHERE high points = 'brook lopez'", -5.198069816136001], [" SELECT COUNT(*) FROM w WHERE (high points LIKE 'brook lopez%' AND game != '76') OR (high points LIKE '%brook lopez%' AND game != '80')", -18.73066074300001], [" SELECT COUNT(*) FROM w WHERE `high points` = 'brook lopez'\nQ2: {how many = a2} games ended in overtime.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE score LIKE '%(ot)%'\nQ3: {how many = a3} games had a higher attendance than the game on april 6.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `location attendance` > (SELECT `location attendance` FROM w WHERE date = 'april 6')\nQ4: {how many = a4} games had a higher attendance than the game on april 6.\nNeuralSQL4: SELECT COUNT", -40.80459524380299]]}, "415": {"question": "all of the match be on different date", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], "<error>", [6]]}, "nsql": [[" SELECT COUNT(DISTINCT date) FROM w", -1.0470797133829999], [" SELECT COUNT(DISTINCT date) FROM w", -1.0471949126239999], [" SELECT COUNT(DISTINCT date) FROM w", -1.047678462938], [" SELECT COUNT(DISTINCT date) FROM w", -1.0490104300119998], [" SELECT COUNT(DISTINCT date) FROM w", -1.04964968977], [" SELECT COUNT(DISTINCT date) FROM w", -1.051932636712], [" SELECT COUNT(DISTINCT date) FROM w", -1.0524512146719998], [" SELECT COUNT(DISTINCT(date)) FROM w", -2.0456313017300003], [" SELECT COUNT(*) FROM w WHERE DISTINCT(date)", -5.511239244049999], [" SELECT COUNT(*) FROM w WHERE `date` IN (SELECT DISTINCT `date` FROM w)", -7.87381889037]]}, "440": {"question": "9 of the dolphin final 10 game be victory", "gold_answer": 1, "pred_answer": {"0": [[12], [5], [5], [5], [5], [6], [6], [0], [5], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE 'w %'", -3.35687289245], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND week > 10", -5.165917626600001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND week > 10", -5.16876322945], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND week > 10", -5.1694585771499995], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND week > 10", -5.172760649500001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND week >= 10", -5.4849650539], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w%' AND week >= 10", -5.49280549597], [" SELECT COUNT(*) FROM w WHERE result = 'w' AND week > 5", -7.4932578075], [" SELECT COUNT(*) FROM w WHERE `week` > 10 AND `result` LIKE 'w%'", -7.5633506198000005], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w %' AND row_id >= (SELECT COUNT(*) FROM w) - 10", -8.627937281899998]]}, "465": {"question": "oh the issue affect time engine trouble be the most common", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [25], [0], [0], [15], [0], [15]], "1": [[0], [0], [4], [4], [4], [0], [0], [4], [0], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%engine trouble%'", -4.642655550964], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%engine trouble%'", -4.65880293215], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%engine%'", -4.770880862984], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%engine%'", -4.779715941250001], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%engine%'", -4.8681032039100005], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%' AND `time / retired` LIKE '%engine trouble%'", -5.719252373210001], [" SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%' AND `time / retired` LIKE '%engine trouble%'", -5.757076292774002], [" SELECT COUNT(DISTINCT time / retired) FROM w\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE time / retired LIKE '%engine%'", -6.539717604517003], [" SELECT COUNT(DISTINCT(`time / retired`)) FROM w WHERE `time / retired` LIKE '%issue%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` LIKE '%issue%' AND `time / retired` LIKE '%engine trouble%'", -9.905990750982], [" SELECT COUNT(DISTINCT `time / retired`) FROM w WHERE `time / retired` <> '+'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `time / retired` = 'engine'", -12.106882478976]]}, "482": {"question": "both female leave the cube alive", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.6237926801650002], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.6285464594049999], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.6295793677350001], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.6319448427449998], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.6346484135149995], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.6349820045749999], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.635987389375], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.6382384108750003], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.638527633475], [" SELECT COUNT(*) FROM w WHERE gender = 'female' AND status = 'alive after exiting the cube'", -1.6396942815349995]]}, "490": {"question": "tyler farrar be the winner of the stage 3 time", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6468517425299999], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6470878922600001], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6471750551100002], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6473301832099999], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6477574081899999], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6479806111099998], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6484985534900002], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6488260785100001], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.6489564932499998], [" SELECT COUNT(*) FROM w WHERE winner = 'tyler farrar'", -0.64901887517]]}, "575": {"question": "only 2 game be play on november 27", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` = 'november 27'", -1.5620093445400003], [" SELECT COUNT(*) FROM w WHERE date = 'november 27'", -1.58059193742], [" SELECT COUNT(*) FROM w WHERE date = 'november 27'", -1.5873967045999997], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%november 27%'", -3.0946129219900005], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%november 27%'", -3.09574441079], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'november 27%'", -3.4139851783900004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%27'", -4.18770431972], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '%27'", -4.20237657963], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% november 27 %'", -4.305081721930001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% november 27 %'", -4.310653739559999]]}, "598": {"question": "10 be the lowest value of blank end when the win (w) be 6", "gold_answer": 1, "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [10], [10], [10], [10]]}, "nsql": [[" SELECT MIN(`blank ends`) FROM w WHERE w = 6", -0.9388214044800001], [" SELECT MIN(`blank ends`) FROM w WHERE w = 6", -0.9389136068799999], [" SELECT MIN(`blank ends`) FROM w WHERE w = 6", -0.9399223407799999], [" SELECT MIN(`blank ends`) FROM w WHERE w = 6", -0.9400382275800001], [" SELECT MIN(`blank ends`) FROM w WHERE w = 6", -0.9409081768800001], [" SELECT MIN(`blank ends`) FROM w WHERE w = 6", -0.9435946558799999], [" SELECT MIN(blank ends) FROM w WHERE w = 6", -1.4304019097799998], [" SELECT MIN(blank ends) FROM w WHERE w = 6", -1.4312644289799998], [" SELECT MIN(blank ends) FROM w WHERE w = 6", -1.43224889238], [" SELECT MIN(blank ends) FROM w WHERE w = 6", -1.4323544849799998]]}, "29": {"question": "west berkshire brewery 's good old boy beer have 5 award between 1995 and 2009", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": ["<error>"], "2": [[5]], "3": ["<error>"], "4": [[10]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009", -2.90495354588], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009", -2.90944197845], [" SELECT COUNT(*) FROM w WHERE beer name = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.005578772334], [" SELECT COUNT(*) FROM w WHERE beer name = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.0087915648099997], [" SELECT COUNT(*) FROM w WHERE beer name = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.0125534876300004], [" SELECT COUNT(*) FROM w WHERE beer name = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.0186981787339997], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year >= 1995 AND year <= 2009", -3.5915862604099997], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year >= 1995 AND year <= 2009", -3.59271481338], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year >= 1995 AND year <= 2009", -3.60208067094], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009\nQ2: west berkshire brewery 's good old boy beer had {how many = a2} awards between 1995 and 2009.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009\nQ3: {how many = a3} of the beer name is maggs magnificent mild.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild'\nQ4: {how many = a4} of the beer name", -31.97771084438001]]}, "54": {"question": "2 viral family have a complex virion shape", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [1], [2], [2], [2], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE virion shape = 'complex'", -2.2580929330769997], [" SELECT COUNT(*) FROM w WHERE virion shape = 'complex'", -2.2643824663950003], [" SELECT COUNT(*) FROM w WHERE virion shape = 'complex'", -2.26502290613], [" SELECT COUNT(*) FROM w WHERE virion shape LIKE '% , %'", -2.523763331309], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'complex'", -2.92827791592], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'complex'", -2.947283916037], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'complex'", -2.9607186335000004], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape LIKE '% , %'", -3.27245845099], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape LIKE '% , %'", -3.27903809911], [" SELECT COUNT(*) FROM w WHERE virion shape LIKE '% - %'", -4.715745064617]]}, "79": {"question": "on average , galina voskoboeva lose with only 4 point against oleksandra kravets and alice canepa", "gold_answer": 0, "pred_answer": {"0": [[1], [], [], [], [0], [6], [0], [0], [0], [0]], "1": [[1], [], [], [], [0], [1], [0], "<error>", "<error>", [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent = 'oleksandra kravets'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE outcome = 'winner' AND opponent = 'alice canepa'", -5.96068343336], [" SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'runner - up'\nNeuralSQL2: SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) FROM w WHERE opponent = 'alice canepa' AND outcome = 'runner - up'", -6.524225875633997], [" SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'runner - up'\nNeuralSQL2: SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) FROM w WHERE opponent = 'alice canepa' AND outcome = 'runner - up'", -6.533978271850001], [" SELECT CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'runner - up'\nNeuralSQL2: SELECT CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT) FROM w WHERE opponent = 'alice canepa' AND outcome = 'runner - up'", -7.355738624510001], [" SELECT COUNT(*) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'runner - up' AND score = '3 - 6 , 4 - 6'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'alice canepa' AND outcome = 'runner - up' AND score = '3 - 6 , 4 - 6'", -8.858398098600002], [" SELECT CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'winner'\nNeuralSQL2: SELECT CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) FROM w WHERE opponent = 'alice canepa' AND outcome = 'winner'", -9.142964778570002], [" SELECT COUNT(*) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'runner - up' AND score LIKE '% - %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'alice canepa' AND outcome = 'runner - up' AND score LIKE '% - %'", -9.5918071838], [" SELECT COUNT(*) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'runner - up' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) = 1\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'alice canepa' AND outcome = 'runner - up' AND score LIKE '% - %' AND (CAST(S", -11.592018188513697], [" SELECT COUNT(*) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'runner - up' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) = 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'alice canepa' AND outcome = 'runner - up' AND score LIKE '% - %' AND (CAST(S", -12.058508997547788], [" SELECT COUNT(*) FROM w WHERE opponent = 'oleksandra kravets' AND outcome = 'runner - up' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) = 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'alice canepa' AND outcome = 'winner' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) = 6", -13.901922432557994]]}, "104": {"question": "19 of lleyton hewitt master series final have 1 side or the other finishing with 6 point", "gold_answer": 0, "pred_answer": {"0": [[4], [6], [6], [6], [7], [6], [4], [4], [4], [4]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '% - 6%'", -3.36325907833], [" SELECT COUNT(*) FROM w WHERE score LIKE '6 - %' OR score LIKE '% - 6'", -3.6433456195300007], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 6' OR score LIKE '6 - %'", -3.8035928514300004], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 6%' OR score LIKE '6 - %'", -4.96576787493], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 6%' OR score LIKE '%6 - %'", -5.28973137863], [" SELECT COUNT(*) FROM w WHERE `score` LIKE '6 - %' OR `score` LIKE '% - 6'", -5.764198323229999], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 6%' OR score LIKE '% - 6'", -6.33973866869], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 6%' OR score LIKE '% - 6%'", -6.65108138449], [" SELECT COUNT(*) FROM w WHERE `score` LIKE '% - 6%' OR `score` LIKE '% - 6'", -8.119968412270001], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 6%' OR score LIKE '% - 6'\n```", -9.22716570969]]}, "129": {"question": "the yugoslavian national team score 7 goal and allow 3 against in the 3 1982 world cup qualify match", "gold_answer": 1, "pred_answer": {"0": [[14], [14], [14], [14], [14], [14], [14], [14], [14], [14]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0.0]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.189991633537001], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.194219723665999], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.194840048714], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.1964730733069993], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.197693962236001], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.200040132457], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.2020522053680005], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.2022774866579993], [" SELECT SUM(CAST(SUBSTR(results, 1, INSTR(results, ':') - 1) AS INT)) FROM w\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1)) AS INT)) FROM w", -3.2031833725839998], [" SELECT SUM(SUBSTR(results, 1, INSTR(results, ':') - 1)) FROM w\nNeuralSQL2: SELECT SUM(SUBSTR(results, INSTR(results, ':') + 1, LENGTH(results) - (INSTR(results, ':') + 1))) FROM w", -4.21163310495]]}, "151": {"question": "englewood , illinois have 2 translator", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.6896195361499998], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.6897201620700001], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.69050182797], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.6918200236900001], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.69278551682], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.6932829936699999], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.6933635679400001], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.6935631660899999], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.6937762494399999], [" SELECT COUNT(*) FROM w WHERE city of license = 'englewood , illinois'", -0.69528681818]]}, "237": {"question": "the party with 21 total member have 18 more member than the party with the fewest total member", "gold_answer": 1, "pred_answer": {"0": [[21], [60], [21], [21], [21], [21], [21], [21], [21], [21]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "2": ["<error>"]}, "nsql": [[" SELECT total FROM w WHERE party = 'fianna f\u00e1il'\nNeuralSQL2: SELECT MIN(total) FROM w", -2.3760059106749996], [" SELECT MAX(total) FROM w\nNeuralSQL2: SELECT MIN(total) FROM w", -2.7243805142950004], [" SELECT `total` FROM w WHERE party = 'fianna f\u00e1il'\nNeuralSQL2: SELECT MIN(`total`) FROM w", -3.8672740451050003], [" SELECT total FROM w WHERE party = 'fianna f\u00e1il'\nNeuralSQL2: SELECT MIN(total) FROM w WHERE party != 'total'", -4.563063998155], [" SELECT MAX(total) FROM w WHERE total = 21\nNeuralSQL2: SELECT MIN(total) FROM w", -4.751128309954999], [" SELECT total FROM w WHERE party = 'fianna f\u00e1il'\nNeuralSQL2: SELECT MIN(total) FROM w WHERE row_id != 4", -4.920303004455], [" SELECT total FROM w WHERE party = 'fianna f\u00e1il'\nNeuralSQL2: SELECT MIN(total) FROM w\n```", -5.212844150005], [" SELECT total FROM w WHERE party = 'fianna f\u00e1il'\nNeuralSQL2: SELECT MIN(total) FROM w WHERE row_id <> 4", -5.564948679324999], [" SELECT total FROM w WHERE party = 'fianna f\u00e1il'\nNeuralSQL2: SELECT MIN(total) FROM w WHERE row_id <> 4", -5.5830403169750005], [" SELECT `total` FROM w WHERE party = 'fianna f\u00e1il'\nNeuralSQL2: SELECT `total` FROM w WHERE party = (SELECT party FROM w WHERE `total` = (SELECT MIN(`total`) FROM w))", -9.800114713274999]]}, "244": {"question": "the young african score zero point in the 1971 african cup of champion club", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], "<error>", [2], [2]]}, "nsql": [[" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'young africans'", -5.138762363580001], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'young africans'", -5.138838253920001], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'young africans'", -5.148662885049999], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'young africans' OR team 2 = 'young africans'", -5.950727530010002], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'young africans' OR team 2 = 'young africans'", -5.958119987379998], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'the young africans'", -6.11993225902], [" SELECT SUM(CAST(SUBSTR(agg, 1, INSTR(agg, ' - ') - 1) AS INT)) FROM w WHERE team 1 = 'young africans'", -6.173747163910001], [" SELECT SUM(CAST(SUBSTR(1st leg, 1, INSTR(1st leg, '-') - 1) AS INT) + CAST(SUBSTR(1st leg, INSTR(1st leg, '-') + 1, LENGTH(1st leg) - (INSTR(1st leg, ' - ') + 1)) AS INT) + CAST(SUBSTR(2nd leg, 1, INSTR(2nd leg, '-') - 1) AS INT) + CAST(SUBSTR(2nd leg, INSTR(2nd leg, '-') + 1, LENGTH(2nd leg) - (INSTR(", -6.823879734802497], [" SELECT SUM(`1st leg` + `2nd leg`) FROM w WHERE team 1 = 'young africans' OR team 2 = 'young africans'", -7.567441909319998], [" SELECT SUM(CAST(SUBSTR(1st leg, 1, INSTR(1st leg, '-') - 1) AS INT)) FROM w WHERE team 1 = 'young africans' OR team 2 = 'young africans'", -9.809314174839995]]}, "262": {"question": "luk\u00e1\u0161 melich never throw for greater than 78 m", "gold_answer": 0, "pred_answer": {"0": [[79], [79], [79], [79], [79], [79], [79], [29], [79], [29]]}, "nsql": [[" SELECT MAX(CAST(REPLACE(notes, 'm', '') AS INT)) FROM w", -4.151990749590001], [" SELECT MAX(CAST(REPLACE(notes, 'm', '') AS INT)) FROM w", -4.1702358763200005], [" SELECT MAX(CAST(REPLACE(notes, 'm', '') AS INT)) FROM w", -4.180540242759999], [" SELECT MAX(CAST(REPLACE(notes, 'm', '') AS INT)) FROM w", -4.185992384330001], [" SELECT MAX(CAST(SUBSTR(notes, 1, INSTR(notes, 'm') - 1) AS INT)) FROM w", -4.3037167924499995], [" SELECT MAX(CAST(REPLACE(notes,'m','') AS INT)) FROM w", -4.51477754424], [" SELECT MAX(CAST(REPLACE(notes,'m','') AS INT)) FROM w", -4.536376913810001], [" SELECT MAX(CAST(REPLACE(position, 'm', '') AS INT)) FROM w", -4.763353775529999], [" SELECT MAX(CAST(SUBSTR(notes, 1, LENGTH(notes) - 2) AS INT)) FROM w", -5.229979614040001], [" SELECT MAX(CAST(REPLACE(`position`,'m','') AS INT)) FROM w", -5.406588414069999]]}, "287": {"question": "otto graham have win 44 more game than he lose", "gold_answer": 1, "pred_answer": {"0": [[], [], [], [], [], [], [], [], [null], []], "1": [[], [], [], [], [], [], [], [], [null], []]}, "nsql": [[" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT losses FROM w WHERE quarterback = 'otto graham'", -1.089639103205], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT losses FROM w WHERE quarterback = 'otto graham'", -1.090567987215], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT losses FROM w WHERE quarterback = 'otto graham'", -1.0920600975949992], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT losses FROM w WHERE quarterback = 'otto graham'", -1.0924450845250002], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT losses FROM w WHERE quarterback = 'otto graham'", -1.0926489482149997], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT losses FROM w WHERE quarterback = 'otto graham'", -1.0931766895349997], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT losses FROM w WHERE quarterback = 'otto graham'", -1.0961831154349997], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT losses FROM w WHERE quarterback = 'otto graham'", -1.0992332643050005], [" SELECT SUM(wins) FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT SUM(losses) FROM w WHERE quarterback = 'otto graham'", -3.1828551510649996], [" SELECT `wins` FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT `losses` FROM w WHERE quarterback = 'otto graham'", -3.521115559965001]]}, "312": {"question": "frank nobilo be the only player from new zealand", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.0927383214299997], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.0933337222069996], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.0939359361870002], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.0959488668409998], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.0960411039870004], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.0990362809669998], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.0996434091], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.102061138373], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.102530513139], [" SELECT COUNT(*) FROM w WHERE country = 'new zealand'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'frank nobilo' AND country = 'new zealand'", -1.1091000036229997]]}, "337": {"question": "in the 2006 season the texas ranger play the mariner 9 time", "gold_answer": 1, "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.4339072092800001], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.43458255286999997], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.4346496868], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.43489015705], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.43498762836999993], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.43510159072000004], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.4354931887], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.43675736528], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.43789176787], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners'", -0.44368825844]]}, "445": {"question": "during the 2007 - 08 minnesota wild season , the decision be backstrom 11 time more than it be harding", "gold_answer": 0, "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [11], [11]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.3918482034360001], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.39254516869199996], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.39274897310600004], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.392816711946], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.3928594091460001], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.39312245847599997], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.393251164826], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.39364472375600024], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.3939126722060001], [" SELECT COUNT(*) FROM w WHERE decision = 'backstrom'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE decision = 'harding'", -0.3939269801859999]]}, "470": {"question": "there be a 4 way tie for the most lap at 75 with a 2 way tie for the least amount at 7", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.9541103277099999], [" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.9550174103299999], [" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.95535707571], [" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.9553731164699998], [" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.95694785261], [" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.9571351584099999], [" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.9596045476849999], [" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.9602254474650003], [" SELECT COUNT(*) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE laps = 7", -0.9608812751899997], [" SELECT COUNT(DISTINCT laps) FROM w WHERE laps = 75\nNeuralSQL2: SELECT COUNT(DISTINCT laps) FROM w WHERE laps = 7", -3.024781386095999]]}, "495": {"question": "besides micka\u00ebl delage , there be only 1 other winner in the mountain classifcation", "gold_answer": 0, "pred_answer": {"0": ["<error>", "<error>", "<error>", [0], [0], "<error>", "<error>", [0], [0], "<error>"], "1": [[1], [1], [1], [1], [0], [0], [0], [0], [1], [0]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `mountains classification` = `winner`\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'mickael delage'", -3.544253119347], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = `winner`\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'mickael delage'", -3.5483188478569994], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = `winner`\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'mickael delage'", -3.555561697077], [" SELECT COUNT(*) FROM w WHERE mountains classification = winner\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = 'mickael delage'", -4.065517057357], [" SELECT COUNT(*) FROM w WHERE mountains classification = winner\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE mountains classification = winner AND winner = 'mickael delage'", -4.229196746187], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = `winner`\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = `winner` AND `winner` = 'mickael delage'", -5.317569629397002], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = `winner`\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = `winner` AND `winner` = 'mickael delage'", -5.335208009436999], [" SELECT COUNT(DISTINCT winner) FROM w WHERE `mountains classification` = 'winner'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'mickael delage' AND `mountains classification` = 'winner'", -6.648962945617002], [" SELECT COUNT(DISTINCT(winner)) FROM w WHERE `mountains classification` = 'winner'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'mickael delage'", -7.0852808017869995], [" SELECT COUNT(*) FROM w WHERE `mountains classification` = `winner`\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `mountains classification` = 'mickael delage' AND `winner` = 'mickael delage'\n```", -8.168523826166998]]}, "512": {"question": "the player on the patrick race team with fewer than 2 point and grid larger than 4 be ryan hunter - reay and oriol servi\u00e0", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'ryan hunter - reay'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'oriol servi\u00e0'", -3.3894020414759995], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'ryan hunter - reay'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'oriol servi\u00e0'", -3.41133426984], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'ryan hunter - reay' AND team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'oriol servi\u00e0' AND team = 'patrick racing' AND points < 2 AND grid > 4", -3.4997744228050003], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'ryan hunter - reay' AND team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'oriol servi\u00e0' AND team = 'patrick racing' AND points < 2 AND grid > 4", -3.5014556280599995], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'ryan hunter - reay'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'oriol servi\u00e0'", -3.5061341779049986], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'ryan hunter - reay'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'oriol servi\u00e0'", -3.506845136749], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'ryan hunter - reay' AND team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'oriol servi\u00e0' AND team = 'patrick racing' AND points < 2 AND grid > 4", -3.5544111173099977], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'ryan hunter - reay' AND team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'oriol servi\u00e0' AND team = 'patrick racing' AND points < 2 AND grid > 4", -3.63854825998], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE driver = 'ryan hunter - reay' AND team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE driver = 'oriol servi\u00e0' AND team = 'patrick racing' AND points < 2 AND grid > 4", -3.716436105239999], [" SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND points < 2 AND grid > 4 AND driver = 'ryan hunter - reay'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE team = 'patrick racing' AND driver = 'oriol servi\u00e0'", -4.434518296]]}, "520": {"question": "there be no defensive end pick and an overall smaller than 2", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.8952655903139999], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.8960338345399999], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.8966724364900001], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.8967634787700001], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.89687841526], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.8969006998639998], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.8975065629249999], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.898356667414], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.8993224069899998], [" SELECT COUNT(*) FROM w WHERE position = 'defensive end'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE overall < 2", -0.89977604614]]}, "605": {"question": "there be more than one classic rock station", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.548480020414], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.550085443754], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.55093345279], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.55132492315], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.5516205752099999], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.55191191116], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.5519545021000001], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.55212194041], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.55234822543], [" SELECT COUNT(*) FROM w WHERE format = 'classic rock'", -0.5530130099]]}, "6": {"question": "of the 4 player who play in the belgian cup , jonathan legear score more goal than the other player combine", "gold_answer": 0, "pred_answer": {"0": ["<error>", [18], [18], [18], [18], [18], [18], [18], [1], [1]], "1": ["<error>", [5], [5], [5], [5], [5], [7], [7], [1], [7]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `belgian cup` > 0\nNeuralSQL2: SELECT `belgian cup` FROM w WHERE player = 'jonathan legear'", -4.048465187260001], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -4.56701732491], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -4.5807241100399985], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -4.590799661359998], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -4.656701249809999], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'jonathan legear'", -4.65844895903], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'jonathan legear'", -5.073166897640001], [" SELECT COUNT(*) FROM w WHERE (league + title playoff + super cup) > 0\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'jonathan legear'", -6.322635755769998], [" SELECT COUNT(*) FROM w WHERE `title playoff` > 0\nNeuralSQL2: SELECT `title playoff` FROM w WHERE player = 'jonathan legear'", -6.490841071820001], [" SELECT COUNT(*) FROM w WHERE title playoff > 0\nNeuralSQL2: SELECT SUM(total) FROM w WHERE player = 'jonathan legear'", -6.634573842349999]]}, "59": {"question": "8 of the viral disease be non - envelop", "gold_answer": 1, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.48724300761999995], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.50130237465], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.50144203485], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.5018806233800001], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.5022417414], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.5026974012200001], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.5030091789939999], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.5048068053599999], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.50524953708], [" SELECT COUNT(*) FROM w WHERE envelopment = 'non - enveloped'", -0.5065484083799999]]}, "84": {"question": "alfredo binda win 7 race of the 1933 giro d'italia , but he be the race leader for 15 race", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.9776574364100001], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.98152844425], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.9828786534], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.98385411149], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.992516799246], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.9936249686600003], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.99734838733], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader = 'alfredo binda ( ita )'", -1.9996333435799998], [" SELECT COUNT(*) FROM w WHERE winner = 'alfredo binda ( ita )'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `race leader` = 'alfredo binda ( ita )'", -3.001123883810001], [" SELECT COUNT(*) FROM w WHERE winner LIKE '%alfredo binda%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE race leader LIKE '%alfredo binda%'", -3.707625525579999]]}, "109": {"question": "19 of ileyton hewitt master series final have 1 side or the other finishing with 4 point", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4' OR score LIKE '4 - %'", -3.6901013231000004], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4%' OR score LIKE '4 - %'", -3.8724522787], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4%' OR score LIKE '4 - %'", -3.8880736288000004], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4%' OR score LIKE '4 - %'", -3.8953385591000003], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4%' OR score LIKE '4 - %'", -3.8968378226000007], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4%' OR score LIKE '4 - %'", -3.8971498127], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4%' OR score LIKE '4 - %'", -3.9054757064], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4%' OR score LIKE '4 - %'", -3.9087222968999997], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 4%' OR score LIKE '% - 4%'", -6.9896182921], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) = 4", -9.894343782280396]]}, "134": {"question": "3 of the total game feature have an attendance in the 3000s", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999", -1.6631761794039996], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999", -1.6645516142440002], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999", -1.665516444584], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999", -1.6670604746939999], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999", -1.6672657018539998], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999", -1.6684335639539998], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999", -1.671055867044], [" SELECT COUNT(*) FROM w WHERE attendance >= 3000 AND attendance < 4000", -2.210933074344], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\n```", -4.095787719244001], [" SELECT COUNT(*) FROM w WHERE attendance BETWEEN 3000 AND 3999\n```", -4.1155270739439995]]}, "159": {"question": "4 athlete have a mark of 28 foot", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE mark LIKE '%28ft%'", -2.93991353953], [" SELECT COUNT(*) FROM w WHERE mark LIKE '%28ft%'", -2.9463602682], [" SELECT COUNT(*) FROM w WHERE mark LIKE '%28ft%'", -2.9469023863999997], [" SELECT COUNT(*) FROM w WHERE mark LIKE '%28ft%'", -2.94786074395], [" SELECT COUNT(*) FROM w WHERE mark LIKE '%28ft%'", -2.9499834687], [" SELECT COUNT(*) FROM w WHERE mark LIKE '%28ft%'", -2.9515053824], [" SELECT COUNT(*) FROM w WHERE mark LIKE '%28ft%'", -2.95737422834], [" SELECT COUNT(*) FROM w WHERE mark LIKE '28%'", -4.16181483087], [" SELECT COUNT(*) FROM w WHERE mark LIKE '28%'", -4.1630928455800005], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE mark LIKE '28%'", -6.495142876570002]]}, "181": {"question": "amy sherman - palladino be the director of 4 episode in 2003", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003%-%-%'", -2.6242950288599998], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003%-%-%'", -2.6243273018599997], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -2.7568273366600002], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -2.78273699229], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -2.7956125602100004], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -2.7980772572100006], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%'", -2.79830481421], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%-%'", -2.9642844622100006], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%-%'", -2.9695370462899997], [" SELECT COUNT(*) FROM w WHERE director = 'amy sherman - palladino' AND `original air date` LIKE '2003-%-%-%'", -2.9850869806600002]]}, "267": {"question": "only 2 team (hawthorn and south melbourne) score more than 10", "gold_answer": 0, "pred_answer": {"0": [[6], [2], [0], "<error>", [0], "<error>", [0], "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `home team score` > 10 OR `away team score` > 10", -3.9697539345999995], [" SELECT COUNT(*) FROM w WHERE (home team = 'hawthorn' OR away team = 'hawthorn' OR home team = 'south melbourne' OR away team = 'south melbourne') AND (CAST(SUBSTR(home team score, 1, INSTR(home team score, '.') - 1) AS INT) > 10 OR CAST(SUBSTR(away team score, 1, INSTR(away team score, '.') - 1) AS INT) > 10)", -7.745546846881001], [" SELECT COUNT(*) FROM w WHERE (home team = 'hawthorn' OR away team = 'hawthorn') AND (home team = 'south melbourne' OR away team = 'south melbourne') AND (CAST(SUBSTR(home team score, 1, INSTR(home team score, '.') - 1) AS INT) > 10 OR CAST(SUBSTR(away team score, 1, INSTR(away team score, '.') - 1) AS INT) > 10)", -8.029777525443999], [" SELECT COUNT(*) FROM w WHERE (home team = 'hawthorn' OR away team = 'hawthorn' OR home team = 'south melbourne' OR away team = 'south melbourne') AND (CAST(REPLACE(home team score,'(','') AS INT) > 10 OR CAST(REPLACE(away team score,'(','') AS INT) > 10)", -8.652978438290999], [" SELECT COUNT(*) FROM w WHERE (home team = 'hawthorn' OR away team = 'hawthorn') AND (home team = 'south melbourne' OR away team = 'south melbourne') AND (CAST(SUBSTR(home team score, 1, INSTR(home team score, '(') - 1) AS INT) > 10 OR CAST(SUBSTR(away team score, 1, INSTR(away team score, '(') - 1) AS INT) > 10)", -8.9758893771775], [" SELECT COUNT(*) FROM w WHERE (home team = 'hawthorn' OR away team = 'hawthorn') AND (home team = 'south melbourne' OR away team = 'south melbourne') AND (CAST(REPLACE(home team score,'(','') AS INT) > 10 OR CAST(REPLACE(away team score,'(','') AS INT) > 10)", -9.249180750764996], [" SELECT COUNT(*) FROM w WHERE home team IN ('hawthorn', 'south melbourne') AND CAST(REPLACE(home team score, '.', '') AS INT) > 10", -9.344035797010003], [" SELECT COUNT(*) FROM w WHERE (home team = 'hawthorn' OR away team = 'hawthorn') AND (home team = 'south melbourne' OR away team = 'south melbourne') AND (CAST(REPLACE(home team score,'.','') AS INT) > 1000 OR CAST(REPLACE(away team score,'.','') AS INT) > 1000)", -10.006697678868996], [" SELECT COUNT(*) FROM w WHERE (home team = 'hawthorn' OR away team = 'hawthorn') AND (home team = 'south melbourne' OR away team = 'south melbourne') AND (CAST(REPLACE(home team score, '.', '') AS INT) > 100 OR CAST(REPLACE(away team score, '.', '') AS INT) > 100)", -10.144861779935999], [" SELECT COUNT(*) FROM w WHERE (away team = 'hawthorn' OR home team = 'hawthorn') AND (away team = 'south melbourne' OR home team = 'south melbourne') AND (CAST(REPLACE(home team score, '.', '') AS INT) > 100 OR CAST(REPLACE(away team score, '.', '') AS INT) > 100)", -12.682247027004003]]}, "274": {"question": "alberto pagani average 40 point in race he win", "gold_answer": 1, "pred_answer": {"0": [[40.0], [40.0], [40.0], [40.0], [40.0], [40.0], [40.0], [40.0], [40.0], "<error>"]}, "nsql": [[" SELECT AVG(points) FROM w WHERE wins > 0", -1.4346018394600002], [" SELECT AVG(points) FROM w WHERE wins > 0", -1.43491426446], [" SELECT AVG(points) FROM w WHERE wins > 0", -1.43510112246], [" SELECT AVG(points) FROM w WHERE wins > 0", -1.43537453346], [" SELECT AVG(points) FROM w WHERE wins > 0", -1.43616379646], [" SELECT AVG(points) FROM w WHERE wins > 0", -1.43707455446], [" SELECT AVG(points) FROM w WHERE wins > 0", -1.4374284749600001], [" SELECT AVG(points) FROM w WHERE wins > 0", -1.43851926696], [" SELECT AVG(points) FROM w WHERE wins > 0", -1.44032167796], [" SELECT AVERAGE(points) FROM w WHERE wins > 0", -2.43008059596]]}, "292": {"question": "otto graham have win 44 more game than brady quinn", "gold_answer": 0, "pred_answer": {"0": [[], [], [], [], [], [], [], [], [0], [0]], "1": [[], [], [], [], [], [], [], [], [0], [0]]}, "nsql": [[" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT wins FROM w WHERE quarterback = 'brady quinn'", -1.4511130672800001], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT wins FROM w WHERE quarterback = 'brady quinn'", -1.4517136094700003], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT wins FROM w WHERE quarterback = 'brady quinn'", -1.4523958836639996], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT wins FROM w WHERE quarterback = 'brady quinn'", -1.4556755940600006], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT wins FROM w WHERE quarterback = 'brady quinn'", -1.4560697166639995], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT wins FROM w WHERE quarterback = 'brady quinn'", -1.4574348729700004], [" SELECT wins FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT wins FROM w WHERE quarterback = 'brady quinn'", -1.4592454283], [" SELECT wins FROM w WHERE quarterback LIKE '%otto graham%'\nNeuralSQL2: SELECT wins FROM w WHERE quarterback LIKE '%brady quinn%'", -3.56862419385], [" SELECT COUNT(*) FROM w WHERE quarterback = 'otto graham'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE quarterback = 'brady quinn'", -3.7320456272640006], [" SELECT COUNT(*) FROM w WHERE quarterback = 'otto graham' AND wins > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE quarterback = 'brady quinn' AND wins > 0", -4.7031388630099995]]}, "317": {"question": "the zakspeed 891 chassis have multiple yamaha v8 engine", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.6717680177500003], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.6737408681700003], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.67423956074], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.6773114168499998], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.6774273610100001], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.6783038372399999], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.6785352255800003], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.6800423899299999], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND `engine (s)` = 'yamaha v8'", -1.6861646748499999], [" SELECT COUNT(*) FROM w WHERE chassis = 'zakspeed 891' AND engine (s) = 'yamaha v8'", -2.7571847662900004]]}, "342": {"question": "the texas mariner play the tiger 2 time in the 2008 season", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'mariners' AND opponent = 'tigers'", -2.85051799955], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners' AND opponent = 'tigers'", -2.85668347196], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers' AND date LIKE '%2008%'", -4.75907962045], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers' AND date LIKE '%2008%'", -4.76322616835], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers' AND date LIKE '%2008%'", -4.774766982819999], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners' AND date LIKE '%2008%'", -5.013297629819999], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners' AND date LIKE '%2008%'", -5.02089408924], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers' AND date LIKE '2008%'", -5.10324288496], [" SELECT COUNT(*) FROM w WHERE opponent = 'tigers' AND date LIKE '2008%'", -5.12635725504], [" SELECT COUNT(*) FROM w WHERE opponent = 'mariners' AND date LIKE '2008-%-%'", -5.856660912450001]]}, "367": {"question": "olga govortsova advance to the third round in the french open 2 year in a row", "gold_answer": 1, "pred_answer": {"0": [[1], [0], [0], [1], [0], [0], [0], [0], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND 2008 = '3r' AND 2009 = '3r' AND 2010 = '2r' AND 2011 = '2r'", -4.320271459199999], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND 2007 = '3r' AND 2008 = '3r' AND 2009 = '3r' AND 2010 = '2r' AND 2011 = '2r'", -4.854951151120002], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND `2007` = '3r' AND `2008` = '3r' AND `2009` = '3r' AND `2010` = '3r'", -5.2746056953], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (2007 = '3r' OR 2008 = '3r' OR 2009 = '3r' OR 2010 = '3r' OR 2011 = '3r')", -5.602653365119999], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND `2007` = '3r' AND `2008` = '3r' AND `2009` = '3r' AND `2010` = '2r' AND `2011` = '2r'", -5.607081419559997], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND `2007` = '3r' AND `2008` = '3r' AND `2009` = '3r' AND `2010` = '2r' AND `2011` = '2r'", -5.616997000800001], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND `2007` = '3r' AND `2008` = '3r' AND `2009` = '3r' AND `2010` = '2r' AND `2011` = '2r'", -5.654698022300001], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND `2007` = '3r' AND `2008` = '3r' AND `2009` = '3r' AND `2010` = '2r' AND `2011` = '2r'", -5.661286875019998], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (2008 = '3r' AND 2009 = '3r' AND 2010 = '2r' AND 2011 = '2r')", -6.266208883990001], [" SELECT COUNT(*) FROM w WHERE tournament = 'french open' AND (2007 = '3r' AND 2008 = '3r' AND 2009 = '3r' AND 2010 = '3r' AND 2011 = '3r')", -8.585186458790004]]}, "475": {"question": "team brazil , team australia , and team england be 3 of the club that participate in the 2011 season", "gold_answer": 1, "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [8], [8]], "1": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%' AND (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england')", -4.484625258355002], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%' AND (football club = 'team brazil' OR football club = 'team australia' OR football club = 'team england')", -4.499544989535], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%' AND football club IN ('team brazil' , 'team australia' , 'team england')", -5.314605195294999], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%' AND football club IN ('team brazil' , 'team australia' , 'team england')", -5.360061461964999], [" SELECT COUNT(*) FROM w WHERE `seasons` LIKE '%2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `seasons` LIKE '%2011%' AND (`football club` = 'team brazil' OR `football club` = 'team australia' OR `football club` = 'team england')", -6.630033038635005], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%' AND (football club LIKE 'team brazil' OR football club LIKE 'team australia' OR football club LIKE 'team england')", -6.800823714465001], [" SELECT COUNT(DISTINCT football club) FROM w WHERE seasons LIKE '%2011%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE football club IN ('team brazil' , 'team australia' , 'team england') AND seasons LIKE '%2011%'", -6.890021273299999], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '%2011%'\nNeuralSQL2: SELECT COUNT(DISTINCT football club) FROM w WHERE seasons LIKE '%2011%' AND football club IN ('team brazil' , 'team australia' , 'team england')", -7.084549270065001], [" SELECT COUNT(*) FROM w WHERE seasons = '2011'\nNeuralSQL2: SELECT COUNT(DISTINCT(football club)) FROM w WHERE football club IN ('team brazil', 'team australia', 'team england') AND seasons = '2011'", -9.209739779090997], [" SELECT COUNT(*) FROM w WHERE seasons LIKE '2011%'\nNeuralSQL2: SELECT COUNT(DISTINCT football club) FROM w WHERE football club IN ('team brazil' , 'team australia' , 'team england') AND seasons LIKE '2011%'", -9.616727057835002]]}, "500": {"question": "the chicago black hawk be the only opponent with 63 point", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago black hawks' AND points = 63", -1.6325505346550002], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago black hawks' AND points = 63", -1.643806997945], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago black hawks' AND points = 63", -1.6445899185749995], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago black hawks' AND points = 63", -1.6454581402950001], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago black hawks' AND points = 63", -1.646131548935], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago black hawks' AND points = 63", -2.295141511834999], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago black hawks' AND points = 63", -2.3025171060350003], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago black hawks' AND points = 63", -2.304074469825], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE points = 63 AND opponent = 'chicago black hawks'", -3.908883015514999], [" SELECT COUNT(*) FROM w WHERE points = 63\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = \"chicago black hawks\" AND points = 63", -5.221144044345002]]}, "525": {"question": "bell uh - 1 iroquois be the version of b - 58 aircraft model originate in the united state which have 2 in service", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [1], [0], [0]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'", -3.9382653108999994], [" SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'", -3.9411389739800007], [" SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'", -3.95906768426], [" SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'", -3.974824346230001], [" SELECT COUNT(DISTINCT versions) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT versions) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'", -4.4379376427045], [" SELECT COUNT(DISTINCT versions) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT versions) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'", -4.453401423396], [" SELECT COUNT(DISTINCT versions) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT versions) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'", -4.457576670186001], [" SELECT COUNT(DISTINCT versions) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(DISTINCT versions) FROM w WHERE aircraft = 'bell uh - 1 iroquois' AND origin = 'united states'", -5.3611003469138], [" SELECT COUNT(*) FROM w WHERE aircraft = 'b-58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 'b-58' AND origin = 'united states'", -5.673659855259997], [" SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE aircraft = 'b - 58' AND origin = 'united states'\n```", -6.9361416596600005]]}, "542": {"question": "from 1965 - 1970 , there be 998000 death per year and 3330000 live birth per year", "gold_answer": 1, "pred_answer": {"0": [[998000], [998000], [998000], [998000], [998000], [998000], [998000], [998000], [998000], [998000]], "1": [[3330000], [3330000], [3330000], [3330000], [3330000], [3330000], [3330000], [3330000], [3330000], [3330000]]}, "nsql": [[" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.03134430749], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.0333846407699998], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.03523779434], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.0370833081400002], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.0372627536200003], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.03853625238], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.0393010955500002], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.0399052117300003], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.0409691930999998], [" SELECT `deaths per year` FROM w WHERE period = '1965 - 1970'\nNeuralSQL2: SELECT `live births per year` FROM w WHERE period = '1965 - 1970'", -1.0417038628099997]]}, "550": {"question": "there be only 1 instance where robert bauman be the incumbent politician", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46098660636], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46143908587], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46152227280999997], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46172742679000006], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46232331144], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46332055558999996], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46344486395], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46414319928000003], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'", -0.46470521648], [" SELECT COUNT(*) FROM w WHERE incumbent = 'robert bauman'\n```", -3.4600989915700002]]}, "36": {"question": "west berkshire brewery 's maggs magnificent mild 2 time receive a bronze award at the siba national beer competition between 1995 and 2005", "gold_answer": 0, "pred_answer": {"0": [[1], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND competition = 'siba national beer competition' AND year BETWEEN 1995 AND 2005", -5.3676646660200005], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND `prize` = 'bronze medal' AND `competition` = 'siba national beer competition' AND `year` BETWEEN 1995 AND 2005", -6.571619374950002], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND competition = 'siba national beer competition' AND year BETWEEN 1995 AND 2005 AND prize = 'bronze medal'", -7.18431329337], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND category = 'bronze' AND competition = 'siba national beer competition' AND year BETWEEN 1995 AND 2005", -7.445536891080001], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND `competition` = 'siba national beer competition' AND `prize` = 'bronze' AND year BETWEEN 1995 AND 2005", -7.720748256620002], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND competition = 'siba national beer competition' AND (year >= 1995 AND year <= 2005) AND prize = 'bronze medal'", -8.4886188247], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND `competition` LIKE 'siba national beer competition' AND `prize` = 'bronze medal' AND `year` BETWEEN 1995 AND 2005", -8.905189235170003], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'maggs magnificent mild' AND prize = 'bronze medal' AND `competition` = 'siba national beer competition' AND year >= 1995 AND year <= 2005", -9.501999927730001], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND category = 'bronze medal' AND competition LIKE 'siba%' AND year BETWEEN 1995 AND 2005", -10.323147954240001], [" SELECT COUNT(*) FROM w WHERE beer name = 'maggs magnificent mild' AND (year BETWEEN 1995 AND 2005) AND (competition LIKE '%siba national beer competition%' OR competition LIKE '%siba national beer competition%') AND prize = 'bronze medal'", -15.328497044120002]]}, "89": {"question": "5 player be pick in the 2nd round of the draft", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE round = 2", -0.54446060143], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.54494217113], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.54499124847], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.5452273079700001], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.54557175468], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.54580433733], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.5464357346300001], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.54650579139], [" SELECT COUNT(*) FROM w WHERE round = 2", -0.54769428285], [" SELECT COUNT(*) FROM w WHERE `round` = 2\n```", -4.96201749533]]}, "114": {"question": "the world cup have 3 game throughout july 1998 , all of which be in japan", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE '1998-07-%'", -2.5794231831000003], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-07-%'", -2.5805617554200007], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-07-%'", -2.58151935856], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-07-%'", -2.5815638046999996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-07-%'", -2.6091484474200004], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-07-%'", -2.6091738855199997], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-07-%'", -2.6141229447599996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1998-07-%' AND comp = 'wc'", -4.835113505759999], [" SELECT COUNT(*) FROM w WHERE date LIKE '1998-07-%'\n```", -6.0728290358], [" SELECT COUNT(*) FROM w WHERE DATE LIKE '1998-07-%'", -6.6659666855]]}, "139": {"question": "michael phelps have more medal than larisa latyna", "gold_answer": 0, "pred_answer": {"0": [[18, 19, 20, 21, 22], [18, 19, 20, 21, 22], [18, 19, 20, 21, 22], [18, 19, 20, 21, 22], [18, 19, 20, 21, 22], [5], [5], [5], [5], [100]], "1": [[13, 14, 15, 16, 17, 18], [13, 14, 15, 16, 17, 18], [13, 14, 15, 16, 17, 18], [13, 14, 15, 16, 17, 18], [13, 14, 15, 16, 17, 18], [6], [6], [6], [6], [93]]}, "nsql": [[" SELECT medal count FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT medal count FROM w WHERE athlete = 'larisa latynina'", -2.2940396906699996], [" SELECT `medal count` FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT `medal count` FROM w WHERE athlete = 'larisa latynina'", -2.41839850877], [" SELECT `medal count` FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT `medal count` FROM w WHERE athlete = 'larisa latynina'", -2.42030721088], [" SELECT `medal count` FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT `medal count` FROM w WHERE athlete = 'larisa latynina'", -2.43709283874], [" SELECT `medal count` FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT `medal count` FROM w WHERE athlete = 'larisa latynina'", -2.440477521900001], [" SELECT COUNT(*) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE athlete = 'larisa latynina'", -2.5584182246064002], [" SELECT COUNT(*) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE athlete = 'larisa latynina'", -2.5619782315982], [" SELECT COUNT(*) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE athlete = 'larisa latynina'", -2.5633082383253996], [" SELECT COUNT(*) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE athlete = 'larisa latynina'", -2.5635101875363993], [" SELECT SUM(medal count) FROM w WHERE athlete = 'michael phelps'\nNeuralSQL2: SELECT SUM(medal count) FROM w WHERE athlete = 'larisa latynina'", -3.8995279769200013]]}, "164": {"question": "the bowler with 13 wicket appear in less match than the bowler with 11 wicket", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [1], [1], [1], [5], [1]], "1": [[4], [4], [4], [4], [4], [1], [1], [1], [4], [1]], "2": ["<error>"]}, "nsql": [[" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1337099351400002], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1338659916000002], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1344979392199996], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1345872825500003], [" SELECT matches FROM w WHERE wickets = 13\nNeuralSQL2: SELECT matches FROM w WHERE wickets = 11", -1.1356582813800002], [" SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 13\nNeuralSQL2: SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 11", -2.6664470229459996], [" SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 13\nNeuralSQL2: SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 11", -2.667758959808301], [" SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 13\nNeuralSQL2: SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 11", -2.6719457380733007], [" SELECT `matches` FROM w WHERE `wickets` = 13\nNeuralSQL2: SELECT `matches` FROM w WHERE `wickets` = 11", -4.828757272949998], [" SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 13\nNeuralSQL2: SELECT COUNT(DISTINCT matches) FROM w WHERE wickets = 11\n```", -5.441438642090301]]}, "189": {"question": "neither singapore nor mongolia have win a gold medal for wushu at the asian game", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'", -1.4962349172540002], [" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'", -1.4964280132239998], [" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'", -1.4974086077439999], [" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'", -1.499129295414], [" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'", -1.499581063024], [" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'", -1.5003943598440002], [" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'", -1.5013641607840003], [" SELECT `gold` FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT `gold` FROM w WHERE nation = 'mongolia (mgl)'", -2.4514901435839995], [" SELECT `gold` FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT `gold` FROM w WHERE nation = 'mongolia (mgl)'", -2.4596804832040005], [" SELECT gold FROM w WHERE nation LIKE '%singapore%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%mongolia%'", -3.4243516930739992]]}, "211": {"question": "the result be count in bhind district 3 time and 5 time in datia", "gold_answer": 0, "pred_answer": {"0": [[957898], [957898], [957898], [957898], [957898], [957898], [957898], [957898], [957898], [957898]], "1": [[413354], [413354], [413354], [413354], [413354], [413354], [413354], [413354], [413354], [413354]]}, "nsql": [[" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.4477803630000006], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.4503260152020006], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.4504607495719999], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.451575599925], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.4519703378369995], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.4522145448280006], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.4522353032570001], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.4534826284230005], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.453839347501], [" SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'bhind'\nNeuralSQL2: SELECT SUM(`number of electorates (2009)`) FROM w WHERE district = 'datia'", -1.4538902277409997]]}, "297": {"question": "in the 1981 open championship no player finish under par except isao aoki", "gold_answer": 0, "pred_answer": {"0": [[13], [13], [13], [13], [0], [15], [13], [0], [13], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `to par` < '0' AND player != 'isao aoki'", -4.972292271959999], [" SELECT COUNT(*) FROM w WHERE `to par` < '0' AND player != 'isao aoki'", -5.02737501586], [" SELECT COUNT(*) FROM w WHERE `to par` < 0 AND player <> 'isao aoki'", -5.52243720086], [" SELECT COUNT(*) FROM w WHERE `to par` < '0' AND player <> 'isao aoki'", -5.531120938260003], [" SELECT COUNT(*) FROM w WHERE player != 'isao aoki' AND score < 70", -5.744419434459999], [" SELECT COUNT(*) FROM w WHERE `to par` != '+' AND player != 'isao aoki'", -5.90239591179], [" SELECT COUNT(*) FROM w WHERE player != 'isao aoki' AND `to par` < '0'", -6.19151877796], [" SELECT COUNT(*) FROM w WHERE player != 'isao aoki' AND `to par` LIKE '%-%'", -6.237200403359999], [" SELECT COUNT(*) FROM w WHERE to par < 'e' AND player != 'isao aoki'", -6.939230088510001], [" SELECT COUNT(*) FROM w WHERE player NOT IN ('isao aoki') AND `to par` LIKE '-%'", -9.44480654616]]}, "304": {"question": "in the 2005 milwaukee brewer season be attend by more than 30000 crowd for every game", "gold_answer": 0, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.21997436291999997], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.22002654592], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.22011507478], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.2201687699], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.22030108661999998], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.22035605896999996], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.22046691112000005], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.22047202422999998], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.22071150099], [" SELECT COUNT(*) FROM w WHERE attendance > 30000", -0.22103689895]]}, "322": {"question": "2 of the team have the same number of goal score against them", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT against) FROM w", -1.4308884870600003], [" SELECT COUNT(DISTINCT against) FROM w", -1.4330750243959998], [" SELECT COUNT(DISTINCT against) FROM w", -1.438083052066], [" SELECT COUNT(DISTINCT against) FROM w", -1.4415923009959999], [" SELECT COUNT(DISTINCT against) FROM w", -1.4437346085159999], [" SELECT COUNT(DISTINCT against) FROM w", -1.4544467072860003], [" SELECT COUNT(DISTINCT `against`) FROM w", -2.226139215811], [" SELECT COUNT(DISTINCT `against`) FROM w", -2.231869175046], [" SELECT COUNT(DISTINCT(against)) FROM w", -2.239396550766], [" SELECT COUNT(*) FROM w WHERE `against` = 19", -4.846638890916]]}, "347": {"question": "the boston celtic only lose 3 game in the 1984 - 85 season", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -3.023156148220499], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -3.027535490803501], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -3.0284247539309996], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -3.0290902344540007], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -3.0305169561599987], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -3.030825373253998], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -3.0342648551849987], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -3.0588703356890012], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -5.467782966530999], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0", -5.5460581466555]]}, "372": {"question": "only 2 match be play through 3 round", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE round = 3", -0.68449433643], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.6860757264299999], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.6865517623799999], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68699520376], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68732133638], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.6874163649899999], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.68864198118], [" SELECT COUNT(*) FROM w WHERE round = 3", -0.6898147015299999], [" SELECT COUNT(*) FROM w WHERE round > 2", -2.6686541144300002], [" SELECT COUNT(*) FROM w WHERE round = 3\n```", -3.56286799623]]}, "397": {"question": "there be 13 tour match in the last 3 month of 1978", "gold_answer": 0, "pred_answer": {"0": [[18], [18], [18], [18], [18], [18], [14], [18], [18], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1978-10-01' AND '1978-12-31'", -3.54333334868], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1978-10-01' AND '1978-12-31'", -3.549103654359999], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1978-10-01 00:00:00' AND '1978-12-31 00:00:00'", -3.79909665709], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-10-%' OR `date` LIKE '1978-11-%' OR `date` LIKE '1978-12-%'", -4.871980703759999], [" SELECT COUNT(*) FROM w WHERE date >= '1978-10-01 00:00:00' AND date <= '1978-12-31 00:00:00'", -5.195445777260001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-1%-%' OR `date` LIKE '1978-2%-%' OR `date` LIKE '1978-3%-%'", -6.0511271106399995], [" SELECT COUNT(*) FROM w WHERE `date` BETWEEN '1978-10-01' AND '1978-12-31' AND status = 'tour match'", -6.0684305823899996], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-1%-%' OR `date` LIKE '1978-11%-%' OR `date` LIKE '1978-12%-%'", -6.5821979713599985], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-%-%' AND `date` BETWEEN '1978-10-01' AND '1978-12-31'", -9.34466048401], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1978-0%-%' AND `date` LIKE '%1978-12-%' AND `date` LIKE '%1978-11-%' AND `date` LIKE '%1978-10-%'", -14.845747537160003]]}, "505": {"question": "there be 2 republican imcubents that be first elect in 1974", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.84116509061], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.84396276041], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.8482667781000002], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.8518475299600001], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.8520521593000001], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.85261527876], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.8567173548599998], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.8573293631199999], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974", -1.8588766502199996], [" SELECT COUNT(*) FROM w WHERE party = 'republican' AND first elected = 1974\n```", -4.68415975256]]}, "530": {"question": "denis menchov score the most uci point of any cyclist from russia", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND cyclist = 'denis menchov'", -3.929913159044], [" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND cyclist = 'denis menchov'", -3.9531398990540003], [" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND uci points = (SELECT MAX(uci points) FROM w WHERE country = 'russia')", -4.473447561714002], [" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND uci points = (SELECT MAX(uci points) FROM w WHERE country = 'russia')", -4.490275246193999], [" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND uci points = (SELECT MAX(uci points) FROM w WHERE country = 'russia')", -4.502697956274], [" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND uci points = (SELECT MAX(uci points) FROM w WHERE country = 'russia')", -4.516398615754001], [" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND uci points = (SELECT MAX(uci points) FROM w WHERE country = 'russia')", -4.521329668363999], [" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND uci points = (SELECT MAX(uci points) FROM w WHERE country = 'russia')", -4.529800128004001], [" SELECT COUNT(*) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'russia' AND uci points = (SELECT MAX(uci points) FROM w WHERE country = 'russia')", -4.538162013264], [" SELECT COUNT(DISTINCT cyclist) FROM w WHERE country = 'russia'\nNeuralSQL2: SELECT COUNT(DISTINCT cyclist) FROM w WHERE country = 'russia' AND uci points = (SELECT MAX(uci points) FROM w WHERE country = 'russia')", -6.819850194620003]]}, "555": {"question": "there be no country that have 4 bronze medal", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": ["<error>"], "2": [[1]], "3": ["<error>"], "4": [[0]], "5": ["<error>"], "6": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.35872778107000003], [" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.35881962705], [" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.3596409406700001], [" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.35972084089], [" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.36033559446999996], [" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.36087333837], [" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.36102339636999997], [" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.36104840351], [" SELECT COUNT(*) FROM w WHERE bronze = 4", -0.36169020839], [" SELECT COUNT(*) FROM w WHERE bronze = 4\nQ2: there are {how many = a2} countries that have more than 4 medals.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE total > 4\nQ3: there are {how many = a3} countries that have more than 4 medals and the rank is larger than 3.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE total > 4 AND rank > 3\nQ4: there are {how many = a4} countries that have more than 4 medals and the rank is larger than 3 and the nation is not japan.\nNeuralSQL4: SELECT COUNT(*) FROM w WHERE total >", -31.706658752054988]]}, "572": {"question": "there be over 3 time when the reader 's vote be not n / a and the lifetime achievement be also na", "gold_answer": 0, "pred_answer": {"0": [[16], [16], [16], [16], [16], [2], [16], [16], [16], [16]], "1": [[3], [3], [3], [3], [3], [3], [16], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` = 'na'", -2.6576903955800004], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` = 'na'", -2.669764699069999], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` = 'na'", -2.6753025281640004], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` = 'na'", -2.6802922244700005], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` = 'na'", -2.68360153959], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'na'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` = 'na'", -3.21681667545], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` != 'n / a'", -4.8596676609], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` = 'na' AND `reader 's vote` = 'na'", -5.49175158317], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `lifetime achievement` = 'na' AND `best non - fiction` = 'na'", -5.594001491559999], [" SELECT COUNT(*) FROM w WHERE `reader 's vote` != 'n / a'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `reader 's vote` = 'na' AND `lifetime achievement` = 'na'", -6.072245861414]]}, "580": {"question": "1991 - 92 have a 42 and 1993 - 94 have a 43", "gold_answer": 0, "pred_answer": {"0": [["51", "45", "45", "45", "40", "40", "48", "40", "28", "38", "39", "n / a", "n / a", "38", "33", "39", "35", "36", "29", "n / a"], ["51", "45", "45", "45", "40", "40", "48", "40", "28", "38", "39", "n / a", "n / a", "38", "33", "39", "35", "36", "29", "n / a"], ["51", "45", "45", "45", "40", "40", "48", "40", "28", "38", "39", "n / a", "n / a", "38", "33", "39", "35", "36", "29", "n / a"], ["51", "45", "45", "45", "40", "40", "48", "40", "28", "38", "39", "n / a", "n / a", "38", "33", "39", "35", "36", "29", "n / a"], ["51", "45", "45", "45", "40", "40", "48", "40", "28", "38", "39", "n / a", "n / a", "38", "33", "39", "35", "36", "29", "n / a"], ["51", "45", "45", "45", "40", "40", "48", "40", "28", "38", "39", "n / a", "n / a", "38", "33", "39", "35", "36", "29", "n / a"], ["51", "45", "45", "45", "40", "40", "48", "40", "28", "38", "39", "n / a", "n / a", "38", "33", "39", "35", "36", "29", "n / a"], ["51", "45", "45", "45", "40", "40", "48", "40", "28", "38", "39", "n / a", "n / a", "38", "33", "39", "35", "36", "29", "n / a"], [669.0], ["45"]], "1": [[48, 46, 48, 45, 43, 41, 25, 36, 41, 38, 39, 37, 38, 37, 34, 38, 28, 33, 31, 30], [48, 46, 48, 45, 43, 41, 25, 36, 41, 38, 39, 37, 38, 37, 34, 38, 28, 33, 31, 30], [48, 46, 48, 45, 43, 41, 25, 36, 41, 38, 39, 37, 38, 37, 34, 38, 28, 33, 31, 30], [48, 46, 48, 45, 43, 41, 25, 36, 41, 38, 39, 37, 38, 37, 34, 38, 28, 33, 31, 30], [48, 46, 48, 45, 43, 41, 25, 36, 41, 38, 39, 37, 38, 37, 34, 38, 28, 33, 31, 30], [48, 46, 48, 45, 43, 41, 25, 36, 41, 38, 39, 37, 38, 37, 34, 38, 28, 33, 31, 30], [48, 46, 48, 45, 43, 41, 25, 36, 41, 38, 39, 37, 38, 37, 34, 38, 28, 33, 31, 30], [48, 46, 48, 45, 43, 41, 25, 36, 41, 38, 39, 37, 38, 37, 34, 38, 28, 33, 31, 30], [756], [46]]}, "nsql": [[" SELECT 1991 - 92 FROM w\nNeuralSQL2: SELECT 1993 - 94 FROM w", -2.2259937783300012], [" SELECT 1991 - 92 FROM w\nNeuralSQL2: SELECT 1993 - 94 FROM w", -2.2376174320100004], [" SELECT 1991 - 92 FROM w\nNeuralSQL2: SELECT 1993 - 94 FROM w", -2.23903793821], [" SELECT `1991 - 92` FROM w\nNeuralSQL2: SELECT `1993 - 94` FROM w", -2.2983809773600004], [" SELECT `1991 - 92` FROM w\nNeuralSQL2: SELECT `1993 - 94` FROM w", -2.30234742261], [" SELECT `1991 - 92` FROM w\nNeuralSQL2: SELECT `1993 - 94` FROM w", -2.30500791935], [" SELECT `1991 - 92` FROM w\nNeuralSQL2: SELECT `1993 - 94` FROM w", -2.30873230016], [" SELECT `1991 - 92` FROM w\nNeuralSQL2: SELECT `1993 - 94` FROM w", -2.30873694712], [" SELECT SUM(1991 - 92) FROM w\nNeuralSQL2: SELECT SUM(1993 - 94) FROM w", -3.6004205997999996], [" SELECT 1991 - 92 FROM w WHERE team = 'river plate'\nNeuralSQL2: SELECT 1993 - 94 FROM w WHERE team = 'river plate'", -5.438903926123999]]}, "11": {"question": "of the 4 player who play in the belgian cup , lucas biglia score more goal than the other player combine", "gold_answer": 0, "pred_answer": {"0": [[18], [18], "<error>", "<error>", [18], [18], [18], [18], [18], [18]], "1": [[2], [2], "<error>", "<error>", [2], [2], [2], [2], [2], [2]], "2": [[73], [73], "<error>", "<error>", [73], [73], [0], [73], [73], [73]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT league FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(league) FROM w WHERE player != 'lucas biglia'", -4.501379038006001], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT league FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(league) FROM w WHERE player != 'lucas biglia'", -4.572903897701999], [" SELECT COUNT(*) FROM w WHERE `belgian cup` > 0\nNeuralSQL2: SELECT `belgian cup` FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(`belgian cup`) FROM w WHERE player != 'lucas biglia'", -4.789865794116002], [" SELECT COUNT(*) FROM w WHERE `belgian cup` > 0\nNeuralSQL2: SELECT `belgian cup` FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(`belgian cup`) FROM w WHERE player != 'lucas biglia'", -4.7950317849560005], [" SELECT COUNT(DISTINCT player) FROM w WHERE league > 0\nNeuralSQL2: SELECT league FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(league) FROM w WHERE player != 'lucas biglia'", -5.198082805466002], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT SUM(league) FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(league) FROM w WHERE player != 'lucas biglia'", -5.598230619755998], [" SELECT COUNT(*) FROM w WHERE league > 0\nNeuralSQL2: SELECT league FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(league) - league FROM w WHERE player = 'lucas biglia'", -5.927173366546001], [" SELECT COUNT(DISTINCT player) FROM w WHERE league > 0\nNeuralSQL2: SELECT league FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(league) - (SELECT league FROM w WHERE player = 'lucas biglia') FROM w", -6.384458203162], [" SELECT COUNT(DISTINCT player) FROM w WHERE league > 0\nNeuralSQL2: SELECT league FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(league) - (SELECT league FROM w WHERE player = 'lucas biglia') FROM w", -6.399677836963996], [" SELECT COUNT(*) FROM w WHERE `league` > 0\nNeuralSQL2: SELECT `league` FROM w WHERE player = 'lucas biglia'\nNeuralSQL3: SELECT SUM(`league`) FROM w WHERE player != 'lucas biglia'", -7.491508706856001]]}, "66": {"question": "7 viral family have a icosahedral virion shape", "gold_answer": 0, "pred_answer": {"0": [[13], [13], [13], [13], [13], [13], [13], [13], [13], [13]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.2707770907199998], [" SELECT COUNT(*) FROM w WHERE virion shape = 'icosahedral'", -1.27873927102], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'icosahedral'", -1.7797042171500002], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'icosahedral'", -1.7821931493830003], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'icosahedral'", -1.7937632328500004], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'icosahedral'", -1.7950155443759999], [" SELECT COUNT(DISTINCT family) FROM w WHERE virion shape = 'icosahedral'", -1.80446089423], [" SELECT COUNT(*) FROM w WHERE `virion shape` = 'icosahedral'", -1.9565107195299998], [" SELECT COUNT(DISTINCT family) FROM w WHERE `virion shape` = 'icosahedral'", -2.487221671944], [" SELECT COUNT(DISTINCT family) FROM w WHERE `virion shape` = 'icosahedral'", -2.497181886484]]}, "119": {"question": "the solheim cup be host outside of the united state 6 time from 1990 - 2013", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [7], [6], [6]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE venue NOT LIKE '% , usa'", -4.14642410364], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1990 AND 2013 AND venue NOT LIKE '%usa%'", -4.256233554310001], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1990 AND 2013 AND venue NOT LIKE '%usa%'", -4.262127773895], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1990 AND 2013 AND venue NOT LIKE '%usa%'", -4.2647385479099995], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1990 AND 2013 AND venue NOT LIKE '% , usa'", -5.205138482894], [" SELECT COUNT(*) FROM w WHERE year >= 1990 AND year <= 2013 AND venue NOT LIKE '% , usa'", -5.42680808938], [" SELECT COUNT(*) FROM w WHERE venue NOT LIKE '%usa%' AND year BETWEEN 1990 AND 2013", -5.756826110920001], [" SELECT COUNT(*) FROM w WHERE year BETWEEN 1990 AND 2013 AND venue LIKE '% , % , usa'", -7.439752444260002], [" SELECT COUNT(*) FROM w WHERE (year > 1990 AND year < 2013) AND venue NOT LIKE '%usa%'", -7.822639520679998], [" SELECT COUNT(*) FROM w WHERE `venue` NOT LIKE '%usa%'\n```", -8.01431007433]]}, "144": {"question": "none of the athlete receive medal in gymnastics", "gold_answer": 0, "pred_answer": {"0": [[11], [11], [11], [11], [11], [11], [11], [11], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -0.7670117153200002], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -0.8039673947199999], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -0.8041915211799999], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -0.8045393683599998], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -0.805034687894], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -0.8073114346000002], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -0.8111312993600001], [" SELECT COUNT(*) FROM w WHERE sport = 'gymnastics'", -0.8118592534239998], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE sport = 'gymnastics'", -1.47105953682], [" SELECT COUNT(DISTINCT athlete) FROM w WHERE sport = 'gymnastics'", -1.47664606588]]}, "169": {"question": "2 other player apart from peter hart have fa cup goal", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0 AND name = 'peter hart'", -2.74627170193], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0 AND name = 'peter hart'", -2.746728574459999], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0 AND name = 'peter hart'", -2.75119072152], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0 AND name = 'peter hart'", -2.7512060562599996], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0 AND name = 'peter hart'", -2.7524196160400005], [" SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `fa cup goals` > 0 AND name = 'peter hart'", -2.7547087631000005], [" SELECT COUNT(*) FROM w WHERE fa cup goals > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals > 0", -2.9029627754400003], [" SELECT COUNT(*) FROM w WHERE fa cup goals > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals > 0", -2.90922969515], [" SELECT COUNT(*) FROM w WHERE fa cup goals > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals > 0", -2.9115596589899995], [" SELECT COUNT(DISTINCT(name)) FROM w WHERE fa cup goals > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'peter hart' AND fa cup goals > 0", -6.098038972285001]]}, "194": {"question": "neither singapore , mongolia , nor myanmar have win a gold medal for wushu at the asian game", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]], "2": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'myanmar (mya)'", -2.48622341058], [" SELECT gold FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia (mgl)'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'myanmar (mya)'", -2.4914282011100006], [" SELECT gold FROM w WHERE nation LIKE '%singapore%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%mongolia%'\nNeuralSQL3: SELECT gold FROM w WHERE nation LIKE '%myanmar%'", -2.711554376049999], [" SELECT gold FROM w WHERE nation LIKE '%singapore%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%mongolia%'\nNeuralSQL3: SELECT gold FROM w WHERE nation LIKE '%myanmar%'", -2.7179137841800007], [" SELECT gold FROM w WHERE nation LIKE '%singapore%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%mongolia%'\nNeuralSQL3: SELECT gold FROM w WHERE nation LIKE '%myanmar%'", -2.72107903358], [" SELECT gold FROM w WHERE nation LIKE '%singapore%'\nNeuralSQL2: SELECT gold FROM w WHERE nation LIKE '%mongolia%'\nNeuralSQL3: SELECT gold FROM w WHERE nation LIKE '%myanmar%'", -2.7219766973300006], [" SELECT gold FROM w WHERE nation = 'singapore'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'myanmar'", -2.7820655426800007], [" SELECT gold FROM w WHERE nation = 'singapore'\nNeuralSQL2: SELECT gold FROM w WHERE nation = 'mongolia'\nNeuralSQL3: SELECT gold FROM w WHERE nation = 'myanmar'", -2.795802216789999], [" SELECT `gold` FROM w WHERE nation LIKE '%singapore%'\nNeuralSQL2: SELECT `gold` FROM w WHERE nation LIKE '%mongolia%'\nNeuralSQL3: SELECT `gold` FROM w WHERE nation LIKE '%myanmar%'", -3.56341890376], [" SELECT `gold` FROM w WHERE nation = 'singapore (sin)'\nNeuralSQL2: SELECT `gold` FROM w WHERE nation = 'mongolia (mgl)'\nNeuralSQL3: SELECT `gold` FROM w WHERE nation = 'myanmar (mya)'", -3.5930269970800004]]}, "219": {"question": "there be 2 episode in the series that be direct by mike clattenburg", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.614205384644], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.6152917024799999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.6153561713], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.6156038493799999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.61616160317], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.6161938393699999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.6164823495099999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.6167745121100001], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.61746029469], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'mike clattenburg'", -0.617515883594]]}, "241": {"question": "national university of ireland be the only group of origin make up mostly of member from 2 party", "gold_answer": 0, "pred_answer": {"0": [[0], "<error>", [0], "<error>", [6], [6], [6], [3], [2], [0]], "1": [[0], [0], [1], [1], [6], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE party LIKE '% - %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'national university of ireland' AND party LIKE '% - %'", -7.936582938080002], [" SELECT COUNT(*) FROM w WHERE (administrative panel > 0 AND agricultural panel > 0) OR (administrative panel > 0 AND cultural and educational panel > 0) OR (administrative panel > 0 AND industrial and commercial panel > 0) OR (administrative panel > 0 AND labour panel > 0) OR (administrative panel > 0 AND national university of ireland > 0) OR (administrative panel > 0 AND university of dublin > 0) OR (administrative panel > 0 AND `nominated by the taoiseach` > 0) OR (agricultural panel > 0 AND cultural and educational panel > 0) OR (agricultural panel > 0 AND industrial and commercial panel > 0) OR (", -8.758655632010003], [" SELECT COUNT(*) FROM w WHERE party = 'national university of ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'national university of ireland'", -9.016205860664998], [" SELECT COUNT(*) FROM w WHERE (administrative panel = 2 AND agricultural panel = 2) OR (administrative panel = 2 AND cultural and educational panel = 2) OR (administrative panel = 2 AND industrial and commercial panel = 2) OR (administrative panel = 2 AND labour panel = 2) OR (administrative panel = 2 AND national university of ireland = 2) OR (administrative panel = 2 AND university of dublin = 2) OR (administrative panel = 2 AND nominated by the taoiseach = 2) OR (agricultural panel = 2 AND cultural and educational panel = 2) OR (agricultural panel = 2 AND industrial and commercial panel = 2) OR (agricultural", -10.612313280379986], [" SELECT COUNT(*) FROM w WHERE (administrative panel + agricultural panel + cultural and educational panel + industrial and commercial panel + labour panel + national university of ireland + university of dublin + nominated by the taoiseach) > 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE national university of ireland > 2", -10.624739782524006], [" SELECT COUNT(*) FROM w WHERE `administrative panel` + `agricultural panel` + `cultural and educational panel` + `industrial and commercial panel` + `labour panel` + `national university of ireland` + `university of dublin` + `nominated by the taoiseach` > 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `national university of ireland` > 2", -11.205527200504], [" SELECT COUNT(*) FROM w WHERE (administrative panel + agricultural panel + cultural and educational panel + industrial and commercial panel + labour panel + national university of ireland + university of dublin + nominated by the taoiseach) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (administrative panel + agricultural panel + cultural and educational panel + industrial and commercial panel + labour panel + national university of ireland + university of dublin + nominated by the taoiseach) > 0", -11.969300991166003], [" SELECT COUNT(*) FROM w WHERE party <> 'total' AND party <> 'independent' AND party <> 'labour party' AND party <> 'fine gael'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party = 'national university of ireland' AND party <> 'total' AND party <> 'independent' AND party <> 'labour party' AND party <> 'fine gael'", -13.99939136764001], [" SELECT COUNT(*) FROM w WHERE party IN ('clann na talmhan','independent') AND `administrative panel` + `agricultural panel` + `cultural and educational panel` + `industrial and commercial panel` + `labour panel` + `national university of ireland` + `university of dublin` + `nominated by the taoiseach` >= 2\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE party IN ('clann na talmhan','independent') AND `national university of ireland` >= 2", -15.885366949771997], [" SELECT COUNT(*) FROM w WHERE (party = 'clann na talmhan' AND `cultural and educational panel` > 0) OR (party = 'independent' AND `cultural and educational panel` > 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE (party = 'clann na talmhan' AND `cultural and educational panel` > 0) OR (party = 'independent' AND `cultural and educational panel` > 0)", -16.200761728895003]]}, "327": {"question": "kardinia park be 1 of 3 venue where the home team score be higher than the away team score", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], "<error>", [2], [3], [2], [2]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [1], [1], [1]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR", -6.049920333926796], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR", -6.0600556296672945], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR", -6.062987617913001], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR", -6.7583266427443975], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR", -6.821355529737001], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(home team score, 1, INSTR(home team score, '.') - 1) AS INT) - CAST(SUBSTR(home team score, INSTR(home team score, '.') + 1, LENGTH(home team score) - (INSTR(home team score, '.') + 1)) AS INT)) > (CAST(SUBSTR(away team score, 1, INSTR(away team score, '.') - 1) AS INT) - CAST(SUBSTR(away team score, INSTR(away team score, '.') + 1, LENGTH", -6.872484183891205], [" SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT)) > 0\nNeuralSQL2: SELECT COUNT(DISTINCT venue) FROM w WHERE (CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT) - CAST(SUBSTR(`away team score`, 1, INSTR(`away team", -6.9381399822346985], [" SELECT COUNT(DISTINCT venue) FROM w WHERE CAST(REPLACE(`home team score`,'.','') AS INT) > CAST(REPLACE(`away team score`,'.','') AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND CAST(REPLACE(`home team score`,'.','') AS INT) > CAST(REPLACE(`away team score`,'.','') AS INT)", -7.1792257026463995], [" SELECT COUNT(DISTINCT venue) FROM w WHERE CAST(REPLACE(`home team score`,'(','') AS INT) > CAST(REPLACE(`away team score`,'(','') AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND CAST(REPLACE(`home team score`,'(','') AS INT) > CAST(REPLACE(`away team score`,'(','') AS INT)\n```", -9.176585165151504], [" SELECT COUNT(DISTINCT venue) FROM w WHERE CAST(REPLACE(`home team score`, ' (', '.') AS FLOAT) > CAST(REPLACE(`away team score`, ' (', '.') AS FLOAT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND CAST(REPLACE(`home team score`, ' (', '.') AS FLOAT) > CAST(REPLACE(`away team score`, ' (', '.') AS FLOAT)", -9.761936353919998]]}, "334": {"question": "manchester unite have always lose 3 out of 3 time to portsmouth since 10 september 2005", "gold_answer": 0, "pred_answer": {"0": ["<error>", "<error>", [0], "<error>", [0], [0], "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) < 0", -7.475132920315203], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND result LIKE '% - %' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) < CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)", -8.245968754943], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND result f - a LIKE '% - %' AND (CAST(SUBSTR(result f - a, 1, INSTR(result f - a, '-') - 1) AS INT) - CAST(SUBSTR(result f - a, INSTR(result f - a, '-') + 1, LENGTH(result f - a) - (INSTR(result f - a, ' - ') + 1)) AS INT)) < 0", -8.809521509431196], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND result LIKE '%-%' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) < 0", -8.988546992220792], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND `result f - a` LIKE '%-%' AND (CAST(SUBSTR(`result f - a`, 1, INSTR(`result f - a`, '-') - 1) AS INT) - CAST(SUBSTR(`result f - a`, INSTR(`result f - a`, '-') + 1, LENGTH(`result f - a`) - (INSTR(`result f - a`, ' - ') + 1)) AS INT)) < 0", -9.034403745166506], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND `result f - a` LIKE '% - %' AND CAST(SUBSTR(`result f - a`, 1, INSTR(`result f - a`, '-') - 1) AS INT) < CAST(SUBSTR(`result f - a`, INSTR(`result f - a`, '-') + 1, LENGTH(`result f - a`) - (INSTR(`result f - a`, '-') + 1)) AS INT)", -9.216050370396001], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND (result LIKE '% - %' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) < CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT))", -10.406476165169], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND date >= '2005-09-10' AND result LIKE '% - %' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) < CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)", -11.525867256123494], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND (date >= '2005-09-10 00:00:00' AND date <= '2006-04-09 00:00:00') AND result = 'l'", -14.97449694947], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND (date >= '2005-09-10 00:00:00' AND date <= '2006-04-17 00:00:00') AND result = 'l'", -15.294232671619994]]}, "352": {"question": "the chicago bull be the only teamn to play the boston celtic in boston garden and win", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [7], [0]], "1": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)", -5.749074632626999], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)", -5.761377643395], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') -", -6.426031537580494], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') -", -6.456423771315796], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE location = 'boston garden' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND opponent = 'chicago bulls' AND score LIKE '% - %' AND (CAST(SUBSTR(score, 1, IN", -6.7328073575758], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '%-%' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) < CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '%-%' AND CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) < CAST(", -7.913909644499605], [" SELECT COUNT(DISTINCT opponent) FROM w WHERE location = 'boston garden' AND score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND score LIKE '%-%' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1)", -8.282147422792507], [" SELECT COUNT(*) FROM w WHERE `location` = 'boston garden' AND `score` LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) < 0\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `location` = 'boston garden' AND `score` LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '", -8.392986274410504], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND (score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND (score LIKE '% - %' AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1)", -8.631667257308997], [" SELECT COUNT(*) FROM w WHERE location = 'boston garden' AND SUBSTR(score, 1, INSTR(score, '-') - 1) < SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, '-') + 1))\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE opponent = 'chicago bulls' AND location = 'boston garden' AND SUBSTR(score, 1, INSTR(score, '-') - 1) < SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, '-')", -9.152347244309004]]}, "377": {"question": "the nugget win all 6 game play at the pepsi center during this span", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], "<error>", [6], [6], [6], [1], [6]], "1": ["<error>", "<error>", "<error>"], "2": [[6]], "3": ["<error>"], "4": [[6]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'", -3.01697823989], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'", -3.02708240571], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'", -3.03564129391], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'", -3.04037450443], [" SELECT COUNT(*) FROM w WHERE location = 'pepsi center' AND score LIKE 'w%'", -4.513850079389999], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center %' AND score LIKE 'w%'", -4.94036271801], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'\n```", -5.56902827931], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'\n```", -5.571436415070001], [" SELECT COUNT(*) FROM w WHERE location attendance = 'pepsi center' AND score LIKE 'w %'", -5.805245162139999], [" SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'\nQ2: the nuggets won {how many = a2} games played at the pepsi center during this span.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'\nQ3: the nuggets won {how many = a3} games played at the pepsi center during this span.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE location attendance LIKE 'pepsi center%' AND score LIKE 'w%'\nQ4: the nuggets won", -15.017337765638995]]}, "402": {"question": "the blue jay score 12 run 1 time during the month", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [0], [0], [0], [0], [0], [0], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '12 - %'", -2.1757589335599996], [" SELECT COUNT(*) FROM w WHERE score LIKE '12 - %'", -2.19101439266], [" SELECT COUNT(*) FROM w WHERE score LIKE '%12%'", -2.8565187912199996], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 12%'", -3.0135752034599994], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 12%'", -3.01391572656], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 12%'", -3.01911028961], [" SELECT COUNT(*) FROM w WHERE score LIKE '% - 12%'", -3.02444418756], [" SELECT COUNT(*) FROM w WHERE score LIKE '12-%'", -3.21759992346], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-12%'", -3.8864145856100003], [" SELECT COUNT(*) FROM w WHERE score LIKE '%-%12' OR score LIKE '12%-%'", -8.35847818186]]}, "427": {"question": "there be only 3 highest rank list in the table", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT `highest rank`) FROM w", -1.35732196039], [" SELECT COUNT(DISTINCT `highest rank`) FROM w", -1.35733327261], [" SELECT COUNT(DISTINCT `highest rank`) FROM w", -1.36045477143], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.7347243956060001], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.7378420239599999], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.7385068624200002], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.7386227146900002], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.7410272116099994], [" SELECT COUNT(DISTINCT(`highest rank`)) FROM w", -1.75484340833], [" SELECT COUNT(DISTINCT(highest rank)) FROM w", -2.4537754559400002]]}, "535": {"question": "there be only 1 party with candidate be harry lane englebright (r) 57.6% n e west (d) 42.4%", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(DISTINCT party) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.7847923743599994], [" SELECT COUNT(DISTINCT party) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.7847991860899997], [" SELECT COUNT(DISTINCT party) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.79242079361], [" SELECT COUNT(DISTINCT party) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.7937389629100002], [" SELECT COUNT(*) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.8124256739299998], [" SELECT COUNT(*) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.81561004559], [" SELECT COUNT(*) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.8186239829500002], [" SELECT COUNT(DISTINCT party) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.8655983866], [" SELECT COUNT(DISTINCT party) FROM w WHERE candidates = 'harry lane englebright (r) 57.6% n e west (d)'", -1.8723079411199999], [" SELECT COUNT(DISTINCT party) FROM w WHERE candidates LIKE '%harry lane englebright (r) 57.6% n e west (d)%'", -4.03890508022]]}, "560": {"question": "there be zero rebound with george evans as a player and a rank larger than 8", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE player = 'george evans' AND rank > 8", -1.3583244648700001], [" SELECT COUNT(*) FROM w WHERE player = 'george evans' AND rank > 8", -1.35909479121], [" SELECT COUNT(*) FROM w WHERE player = 'george evans' AND rank > 8", -1.3615752435700006], [" SELECT COUNT(*) FROM w WHERE player = 'george evans' AND rank > 8", -1.36522806263], [" SELECT COUNT(*) FROM w WHERE player = 'george evans' AND rank > 8", -1.36717955872], [" SELECT COUNT(*) FROM w WHERE player = 'george evans' AND rank > 8", -1.37284047889], [" SELECT COUNT(*) FROM w WHERE rank > 8 AND player = 'george evans'", -1.6136324496000003], [" SELECT COUNT(*) FROM w WHERE rank > 8 AND player = 'george evans'", -1.6149828294200004], [" SELECT COUNT(*) FROM w WHERE rank > 8 AND player = 'george evans'", -1.61602019255], [" SELECT COUNT(*) FROM w WHERE rank > 8 AND player = 'george evans'", -1.61961540629]]}, "585": {"question": "the be no total overall with the name of calvin o'neal , and a round larger than 6", "gold_answer": 0, "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>"], "1": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round > 6", -2.151140786699999], [" SELECT COUNT(*) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round > 6", -2.1568221603299995], [" SELECT COUNT(*) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round > 6", -2.1594321902], [" SELECT COUNT(*) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round > 6", -2.1638718786099993], [" SELECT COUNT(*) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round > 6", -2.1673717253299998], [" SELECT COUNT(DISTINCT overall) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(DISTINCT overall) FROM w WHERE round > 6", -2.9753245363458003], [" SELECT COUNT(DISTINCT overall) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(DISTINCT overall) FROM w WHERE round > 6", -2.986869188914], [" SELECT COUNT(DISTINCT overall) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(DISTINCT overall) FROM w WHERE round > 6", -2.9956944548558004], [" SELECT COUNT(DISTINCT overall) FROM w WHERE name = 'calvin o''neal'\nNeuralSQL2: SELECT COUNT(DISTINCT overall) FROM w WHERE round > 6", -2.9984174401255], [" SELECT COUNT(*) FROM w WHERE name = 'calvin o\\'neal'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE round > 6", -3.07032580392]]}, "602": {"question": "there be 6 episode number for episode direct by wayne rose", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose'", -1.5686355147800002], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose'", -1.5688198708400003], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose'", -1.56889703686], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose'", -1.5726750049799998], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose'", -1.5738257281299999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'wayne rose'", -1.57604659147], [" SELECT COUNT(DISTINCT no) FROM w WHERE `directed by` = 'wayne rose'", -2.313166580345], [" SELECT COUNT(DISTINCT no) FROM w WHERE `directed by` = 'wayne rose'", -2.313216855804], [" SELECT COUNT(DISTINCT no) FROM w WHERE `directed by` = 'wayne rose'", -2.31695766189], [" SELECT COUNT(DISTINCT no) FROM w WHERE directed by = 'wayne rose'", -3.677173899415]]}, "3": {"question": "lucy watkins only write 6 episode of series 2", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9682437393400001], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9775024386200001], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.97872705099], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9807445529800002], [" SELECT COUNT(*) FROM w WHERE `written by` = 'lucy watkins'", -0.9807445529800002], [" SELECT COUNT(*) FROM w WHERE written by = 'lucy watkins'", -1.6643093290700002], [" SELECT COUNT(*) FROM w WHERE written by = 'lucy watkins'", -1.6676418401400004], [" SELECT COUNT(*) FROM w WHERE written by = 'lucy watkins'", -1.6698426387100003], [" SELECT COUNT(*) FROM w WHERE written by = 'lucy watkins'", -1.6872968565300006], [" SELECT COUNT(DISTINCT title) FROM w WHERE `written by` = 'lucy watkins'", -3.9874529135819996]]}, "16": {"question": "there be a total of 4 country represent by the player", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(DISTINCT country) FROM w", -0.53505439774], [" SELECT COUNT(DISTINCT country) FROM w", -0.5359709609759999], [" SELECT COUNT(DISTINCT country) FROM w", -0.53646397882], [" SELECT COUNT(DISTINCT country) FROM w", -0.53646397882], [" SELECT COUNT(DISTINCT country) FROM w", -0.5373417362749999], [" SELECT COUNT(DISTINCT country) FROM w", -0.5374541013059999], [" SELECT COUNT(DISTINCT country) FROM w", -0.5375516785939999], [" SELECT COUNT(DISTINCT country) FROM w", -0.5377138532200001], [" SELECT COUNT(DISTINCT country) FROM w", -0.5386151097799999], [" SELECT COUNT(DISTINCT(country)) FROM w", -1.83660305207]]}, "41": {"question": "the highest attendance be 20066 , occur on 6 date", "gold_answer": 0, "pred_answer": {"0": [[20066], [20066], [20066], [20066], [20066], [20066], [20066], [20066], [20066], [7]]}, "nsql": [[" SELECT MAX(attendance) FROM w", -0.5079853849439999], [" SELECT MAX(attendance) FROM w", -0.5084978336439999], [" SELECT MAX(attendance) FROM w", -0.508500234884], [" SELECT MAX(attendance) FROM w", -0.5101998620839999], [" SELECT MAX(attendance) FROM w", -0.510696089844], [" SELECT MAX(attendance) FROM w", -0.511243489144], [" SELECT MAX(attendance) FROM w", -0.511355932544], [" SELECT MAX(attendance) FROM w", -0.512455420284], [" SELECT MAX(attendance) FROM w", -0.512521010644], [" SELECT COUNT(*) FROM w WHERE attendance = (SELECT MAX(attendance) FROM w)", -3.865054990414001]]}, "96": {"question": "the soviet union receive 6 more medal than east germany in the total medal count", "gold_answer": 0, "pred_answer": {"0": [[29], [29], [29], [29], [29], [29], [29], [29], [29], [29]], "1": [[25], [25], [25], [25], [25], [25], [25], [25], [25], [25]]}, "nsql": [[" SELECT SUM(total) FROM w WHERE nation = 'soviet union (ussr)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'east germany (gdr)'", -2.6745322811489993], [" SELECT SUM(total) FROM w WHERE nation = 'soviet union (ussr)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'east germany (gdr)'", -2.6802175560619994], [" SELECT SUM(total) FROM w WHERE nation = 'soviet union (ussr)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'east germany (gdr)'", -2.681601518764], [" SELECT SUM(total) FROM w WHERE nation = 'soviet union (ussr)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'east germany (gdr)'", -2.68425260244], [" SELECT SUM(total) FROM w WHERE nation = 'soviet union (ussr)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'east germany (gdr)'", -2.6844700992599995], [" SELECT SUM(total) FROM w WHERE nation = 'soviet union (ussr)'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation = 'east germany (gdr)'", -2.6875772763590002], [" SELECT SUM(total) FROM w WHERE nation LIKE '%soviet union%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%east germany%'", -3.6746795714669998], [" SELECT SUM(total) FROM w WHERE nation LIKE '%soviet union%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE '%east germany%'", -3.6767671131249995], [" SELECT SUM(total) FROM w WHERE nation LIKE 'soviet union%'\nNeuralSQL2: SELECT SUM(total) FROM w WHERE nation LIKE 'east germany%'", -3.9859264480179992], [" SELECT SUM(`total`) FROM w WHERE nation = 'soviet union (urs)'\nNeuralSQL2: SELECT SUM(`total`) FROM w WHERE nation = 'east germany (gdr)'", -7.0308132253109985]]}, "149": {"question": "the translator be class d and c", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.54752472858], [" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.5485803685860003], [" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.5490763973900001], [" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.5493500822960001], [" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.5494397707140002], [" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.5507308622200002], [" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.55225025011], [" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.552840496574], [" SELECT COUNT(*) FROM w WHERE class = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE class = 'c'", -0.5648444240189999], [" SELECT COUNT(*) FROM w WHERE `class` = 'd'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `class` = 'c'", -1.8268179776100004]]}, "174": {"question": "the toronto blue jay play the angel 3 time in may during the 1991 season", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND date LIKE 'may%'", -3.2582745324100006], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND date LIKE 'may%'", -3.262831678883], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND date LIKE 'may%'", -3.2658023739229995], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND date LIKE 'may%'", -3.2708359896459998], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may%' AND opponent = 'angels'", -3.350626858877], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may%' AND opponent = 'angels'", -3.3539913156939996], [" SELECT COUNT(*) FROM w WHERE date LIKE 'may %' AND opponent = 'angels'", -3.555706988086], [" SELECT COUNT(*) FROM w WHERE date LIKE '%may%' AND opponent = 'angels'", -3.737727402430001], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND `date` LIKE 'may%'", -3.85639410842], [" SELECT COUNT(*) FROM w WHERE opponent = 'angels' AND date LIKE '%may%'", -4.041137149652999]]}, "199": {"question": "the detroit piston win by over 10 point in 3 game during this period of their 2010 - 2011 season", "gold_answer": 1, "pred_answer": {"0": [[0], [0], [3], [3], [3], [3], [3], [0], [3], [0]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -4.142948142469001], [" SELECT COUNT(*) FROM w WHERE team = 'detroit pistons' AND (CAST(SUBSTR(score, 1, INSTR(score, ' - ') - 1) AS INT) - CAST(SUBSTR(score, INSTR(score, ' - ') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -6.894767758494998], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND (CAST(SUBSTR(score, 2, INSTR(score, '-') - 2) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 2, LENGTH(score) - (INSTR(score, ' - ') + 2)) AS INT)) > 10", -8.012267159462404], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND (CAST(SUBSTR(score, 2, INSTR(score, '-') - 2) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 2, LENGTH(score) - (INSTR(score, '-') + 2)) AS INT)) > 10", -8.2623635831132], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND (CAST(SUBSTR(score, 3, INSTR(score, '-') - 3) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -8.922937739652994], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND CAST(SUBSTR(score, 3, INSTR(score, '-') - 3) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 2, LENGTH(score) - (INSTR(score, ' - ') + 2)) AS INT) > 10", -9.558022166964006], [" SELECT COUNT(*) FROM w WHERE `score` LIKE 'w % - %' AND (CAST(SUBSTR(`score`, 2, INSTR(`score`, '-') - 2) AS INT) - CAST(SUBSTR(`score`, INSTR(`score`, '-') + 2, LENGTH(`score`) - (INSTR(`score`, '-') + 2)) AS INT)) > 10", -11.061890768263694], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) - CAST(SUBSTR(score, 3, INSTR(score, '-') - 3) AS INT) > 10", -11.145536070800802], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w%' AND (CAST(SUBSTR(score, INSTR(score, 'w') + 1, INSTR(score, ' - ') - (INSTR(score, 'w') + 1)) AS INT) - CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) > 10", -13.0711831317487], [" SELECT COUNT(*) FROM w WHERE score LIKE 'w % - %' AND CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT) - CAST(SUBSTR(score, 2, INSTR(score, ' - ') - 2) AS INT) > 10\n```", -13.868332841014995]]}, "224": {"question": "there be 2 episode in the series that be direct by perry chafe", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.61470353682], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.6147250006699999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.614883972], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.61490862365], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.6151619064499999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.61540855637], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.61548403395], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.6156050108799999], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.61571810343], [" SELECT COUNT(*) FROM w WHERE `directed by` = 'perry chafe'", -0.61715083411]]}, "249": {"question": "arizona diamond , player rosales have a 3x loss during september", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE 'september%' AND loss LIKE '%rosales%'", -3.61380033989], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september%' AND loss LIKE '%rosales%'", -3.61741315859], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september%' AND loss LIKE '%rosales%'", -3.62266250019], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%' AND date LIKE 'september%'", -4.24352875414], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%' AND date LIKE 'september%'", -4.254029624089999], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%' AND date LIKE 'september%'", -4.263198415790001], [" SELECT COUNT(*) FROM w WHERE loss LIKE '%rosales%' AND date LIKE '%september%'", -4.865156924739999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'september%' AND `loss` LIKE '%rosales%'", -5.73305046289], [" SELECT COUNT(DISTINCT loss) FROM w WHERE loss LIKE '%rosales%' AND date LIKE 'september%'", -6.297499827569999], [" SELECT COUNT(*) FROM w WHERE date LIKE 'september %' AND loss LIKE '% rosales %'", -6.34191736251]]}, "271": {"question": "alberto pagani have only win with 2 team : linto and mv agusta", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -1.294426286384], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -1.2953943269539998], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -1.300632152464], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -1.3054237969640001], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -1.3064163800639998], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -1.308580645624], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins > 0", -1.311449926114], [" SELECT COUNT(DISTINCT team) FROM w WHERE wins = 1", -2.187669394884], [" SELECT COUNT(DISTINCT(team)) FROM w WHERE wins > 0", -2.496097453644], [" SELECT COUNT(DISTINCT(team)) FROM w WHERE wins > 0", -2.527020583824]]}, "357": {"question": "after 1985 , the united state contribute 4 player with louis amundson be the most recent", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [3], [4], [0], [3], [0]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND CAST(SUBSTR(years for jazz, 1, 4) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -5.066717048064999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND CAST(SUBSTR(years for jazz, 1, 4) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -5.076442380684], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND CAST(SUBSTR(`years for jazz`, 1, 4) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -5.118354951146], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND years for jazz > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -5.479492411274999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND years for jazz > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -5.499639075240001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND CAST(SUBSTR(`years for jazz`, 1, INSTR(`years for jazz`, '-') - 1) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -5.977811236950001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND years for jazz >= '1985'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -6.025663757680001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND `years for jazz` LIKE '%-%' AND CAST(SUBSTR(`years for jazz`, INSTR(`years for jazz`, '-') + 1, LENGTH(`years for jazz`) - (INSTR(`years for jazz`, '-') + 1)) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -9.647509678089998], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND years for jazz LIKE '% - %' AND (CAST(SUBSTR(years for jazz, 1, INSTR(years for jazz, '-') - 1) AS INT) > 1985)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -9.760314907319994], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states' AND `years for jazz` LIKE '%-%' AND CAST(SUBSTR(`years for jazz`, INSTR(`years for jazz`, ' - ') + 1, LENGTH(`years for jazz`) - (INSTR(`years for jazz`, ' - ') + 1)) AS INT) > 1985\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'louis amundson'", -10.500373742820004]]}, "364": {"question": "in 3 of the game , no goal be score by either side", "gold_answer": 1, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -1.45978219834], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -1.4638480857299998], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -1.4723140658700002], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -1.47404066339], [" SELECT COUNT(*) FROM w WHERE result = '0 - 0'", -1.4755842876399998], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.11705410696], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.12420720667], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0'", -2.12941023781], [" SELECT COUNT(*) FROM w WHERE result LIKE '% - %' AND CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) = 0 AND CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT) = 0", -6.949032624581798], [" SELECT COUNT(*) FROM w WHERE result LIKE '0 - 0' OR result LIKE '0 - 0'\n```", -7.32057572239]]}, "382": {"question": "denver lose more than 1 game in a row on 2 occasion during november", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [13], "<error>"], "1": ["<error>"], "2": ["<error>"], "3": ["<error>"], "4": ["<error>"], "5": ["<error>"], "6": ["<error>"], "7": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE date LIKE '%november%' AND record LIKE '% - % - % - %'", -9.73016141898], [" SELECT COUNT(*) FROM w WHERE record LIKE 'l%l%' AND date LIKE 'november%'", -10.797571424220001], [" SELECT COUNT(*) FROM w WHERE `record` LIKE '% - % - %' AND `record` LIKE '% - % - %'", -12.39033288218], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - % - % - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) < 0", -13.874071256608497], [" SELECT COUNT(*) FROM w WHERE (SELECT COUNT(*) FROM w WHERE game = row_id + 1 AND score LIKE 'l%') > 1", -15.09333199158], [" SELECT COUNT(*) FROM w WHERE record LIKE '% - % - % - % - %' AND (CAST(SUBSTR(record, 1, INSTR(record, '-') - 1) AS INT) - CAST(SUBSTR(record, INSTR(record, '-') + 1, LENGTH(record) - (INSTR(record, ' - ') + 1)) AS INT)) > 1", -16.210799776187002], [" SELECT COUNT(*) FROM (SELECT record, COUNT(*) AS num FROM w WHERE record LIKE '% - %' GROUP BY record) WHERE num > 1", -18.13030365048], [" SELECT COUNT(*) FROM w WHERE (record LIKE '% - % - % - % - %' OR record LIKE '% - % - % - % - % - %') AND (date LIKE '%november%' OR date LIKE '%November%')", -20.308717935980006], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND (SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND score LIKE 'l%' AND row_id BETWEEN row_id - 1 AND row_id + 1) > 1", -20.915047118910003], [" SELECT COUNT(*) FROM w WHERE date LIKE 'november%' AND (\n\t(date = 'november 1' AND record = '3 - 0') OR\n\t(date = 'november 3' AND record = '4 - 0') OR\n\t(date = 'november 5' AND record = '5 - 0') OR\n\t(date = 'november 7' AND record = '6 - 0') OR\n\t(date = 'november 9' AND record = '7 - 0') OR\n\t(date = 'november 11' AND record = '8 - 3') OR\n\t(date = 'november 13' AND record = '9 - 4')", -23.20467639921]]}, "407": {"question": "p\u00e1draig harrington be the only player from northern ireland", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2783036717799998], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2786948463900003], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2797045377300003], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2798836778599993], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2802780832499996], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2814549252500003], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2823841077800002], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2830940688740005], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.2883156244000002], [" SELECT COUNT(*) FROM w WHERE country = 'northern ireland'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE player = 'p\u00e1draig harrington' AND country = 'northern ireland'", -1.288485912115]]}, "432": {"question": "the 49ers win 8 of the game in the 1947 season", "gold_answer": 1, "pred_answer": {"0": [[8], [8], [8], [8], [8], [8], [8], [8], [8], [8]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.5589342467950001], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.5596542959949999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.561326873795], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.561501096895], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.5616166268949999], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.562402168095], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.562607420695], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.583513295695], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.588952065095], [" SELECT COUNT(*) FROM w WHERE result = 'w'", -0.589088970395]]}, "457": {"question": "the wildcat lose 1 game in september and 2 game in november", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [0], [1], [1], [1], [0]], "1": [[2], [2], [2], [2], [2], [0], [2], [2], [2], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE 'nov%'", -3.6309993802559997], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE 'nov%'", -3.6368951873699995], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE 'nov%'", -3.64136611978], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE 'nov%'", -3.6455182891699995], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE 'nov%'", -3.6542758815499994], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE '%-09-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND `date` LIKE '%-11-%'", -4.297575637519999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sep%' AND result = 'loss'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%' AND result = 'loss'", -4.453206913629999], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%nov%'", -4.561103655027997], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%nov%'", -4.565968244034], [" SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%-sep-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE result = 'loss' AND date LIKE '%-nov-%'", -5.586790543946]]}, "565": {"question": "there be more than 12.42 million viewer for the entry with rating / share 3.2 / 8", "gold_answer": 0, "pred_answer": {"0": ["<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", "<error>", [12.42], "<error>"]}, "nsql": [[" SELECT `viewers (millions)` FROM w WHERE `rating / share (18 - 49)` = '3.2 / 8'", -1.4023690463899998], [" SELECT `viewers (millions)` FROM w WHERE `rating / share (18 - 49)` = '3.2 / 8'", -1.40915437298], [" SELECT `viewers (millions)` FROM w WHERE `rating / share (18 - 49)` = '3.2 / 8'", -1.40993643338], [" SELECT `viewers (millions)` FROM w WHERE `rating / share (18 - 49)` = '3.2 / 8'", -1.4142637113800003], [" SELECT COUNT(*) FROM w WHERE `rating / share (18 - 49)` = '3.2 / 8'", -2.6779295257399993], [" SELECT COUNT(*) FROM w WHERE `rating / share (18 - 49)` = '3.2 / 8'", -2.6786757243400006], [" SELECT COUNT(*) FROM w WHERE `rating / share (18 - 49)` = '3.2 / 8'", -2.6843510678400007], [" SELECT viewers (millions) FROM w WHERE `rating / share (18 - 49)` = '3.2 / 8'", -2.8459647526359992], [" SELECT viewers (millions) FROM w WHERE rating / share (18 - 49) = '3.2 / 8'", -2.9227714824799995], [" SELECT viewers FROM w WHERE `rating / share` = '3.2 / 8'", -4.683834369940001]]}, "590": {"question": "miguel zapata have exactly 24 goal under his name", "gold_answer": 0, "pred_answer": {"0": [[17], [17], [17], [17], [17], [17], [17], [17], [17], [1]]}, "nsql": [[" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.671892201443], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.672583686116], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.675601112137], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.6761259505660001], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.6762067325069999], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.6764141443480001], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.6768934110160001], [" SELECT goals FROM w WHERE goalkeeper = 'miguel zapata'", -0.6802255478960001], [" SELECT `goals` FROM w WHERE goalkeeper = 'miguel zapata'", -2.7325354131820005], [" SELECT COUNT(*) FROM w WHERE goalkeeper = 'miguel zapata'", -3.9310825248540002]]}, "21": {"question": "5 player be from the united state and canada each", "gold_answer": 1, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.5213321796249999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.5227099765950001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.5227968516149999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.523763501795], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.523833013465], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.5239346007050001], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.5239919826849999], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.524636415605], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'", -0.5247184102549998], [" SELECT COUNT(*) FROM w WHERE nationality = 'united states'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'canada'\n```", -2.999547480385]]}, "33": {"question": "west berkshire brewery 's good old boy beer do not win a single award between 1995 and 2009", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.382063820709999], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.3856461559099995], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.4421228044000007], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.4430639863], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.44487132228], [" SELECT COUNT(*) FROM w WHERE beer name = 'good old boy' AND year BETWEEN 1995 AND 2009", -3.4684058008], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND `year` BETWEEN 1995 AND 2009", -3.76495713174], [" SELECT COUNT(*) FROM w WHERE `beer name` = 'good old boy' AND `year` BETWEEN 1995 AND 2009", -3.7793062794], [" SELECT COUNT(*) FROM w WHERE `beer name` LIKE '%good old boy%' AND year BETWEEN 1995 AND 2009", -6.735939814169998], [" SELECT COUNT(*) FROM w WHERE beer name = 'good old boy' AND (year BETWEEN '1995' AND '2009')", -7.755926565650001]]}, "46": {"question": "james donaldson have 2 stint on the jazz 's roster", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.82852709304], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.89477593581], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.8964795102900001], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.8967272804300002], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.89751903815], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.89761143889], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.8977747707600001], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.9000518306300002], [" SELECT COUNT(*) FROM w WHERE player = 'james donaldson'", -0.9005466342699998], [" SELECT COUNT(DISTINCT years for jazz) FROM w WHERE player = 'james donaldson'", -2.220160209616601]]}, "71": {"question": "only 1 of the viral disease have be assign to a family", "gold_answer": 0, "pred_answer": {"0": [[23], [23], [23], [23], [23], [23], [23], [23], [23], [23]]}, "nsql": [[" SELECT COUNT(DISTINCT family) FROM w", -1.3109124506899998], [" SELECT COUNT(DISTINCT family) FROM w", -1.3138655860499997], [" SELECT COUNT(DISTINCT family) FROM w", -1.3152790410000001], [" SELECT COUNT(DISTINCT(family)) FROM w", -1.9260384129600001], [" SELECT COUNT(DISTINCT(family)) FROM w", -1.93071516743], [" SELECT COUNT(DISTINCT(family)) FROM w", -1.93145397712], [" SELECT COUNT(*) FROM w WHERE family != ''", -3.71452524668], [" SELECT COUNT(*) FROM w WHERE family != 'nan'", -5.05238406332], [" SELECT COUNT(*) FROM w WHERE family != 'n / a'", -5.359120765079999], [" SELECT COUNT(*) FROM w WHERE family != 'n / a'", -5.3645127121]]}, "126": {"question": "there be 2 game that take place in the month of november december", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [0], [4], [0], [4], "<error>"], "1": [[2], [2], [2], [2], [2], [0], [2], [0], [2], "<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-11-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -2.6740866465700015], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-11-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -2.675118437610001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-11-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -2.6763146682799994], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-11-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%'", -2.6847128699299994], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-11%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12%-%'", -2.9121919488120005], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-11-%-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '1976-12-%-%'", -3.3621495276799993], [" SELECT COUNT(*) FROM w WHERE date LIKE '1976-11-%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE '1976-12-%'", -3.423837965856], [" SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 11 - %'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE '% - 12 - %'", -4.066896735960001], [" SELECT COUNT(*) FROM w WHERE STRFTIME('%m', date) = '11'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE STRFTIME('%m', date) = '12'", -4.5406862930099985], [" SELECT COUNT(*) FROM w WHERE DATE_FORMAT(`date`, '%m') = '11'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE DATE_FORMAT(`date`, '%m') = '12'", -5.502624287943998]]}, "179": {"question": "camilo villegas from colombia and david tom from the united state tie for 9th place with + 3 to par", "gold_answer": 1, "pred_answer": {"0": [[1], [1], [3], [2], [3], [2], [2], [0], [2], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT place) FROM w WHERE country IN ('colombia', 'united states') AND to par = '+ 3'", -5.682714778959999], [" SELECT COUNT(DISTINCT place) FROM w WHERE country IN ('colombia', 'united states') AND to par = '+ 3'", -5.694653551], [" SELECT COUNT(*) FROM w WHERE country IN ('colombia', 'united states') AND `to par` = '+ 3'", -5.891920997440001], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 3' AND (player = 'camilo villegas' AND country = 'colombia') OR (player = 'david toms' AND country = 'united states')", -6.540657470084], [" SELECT COUNT(*) FROM w WHERE to par = '+ 3' AND country IN ('colombia', 'united states')", -6.563784555770001], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 3' AND (player = 'camilo villegas' AND country = 'colombia') OR (player = 'david toms' AND country = 'united states')", -6.570352710423999], [" SELECT COUNT(*) FROM w WHERE `to par` = '+ 3' AND (player = 'camilo villegas' AND country = 'colombia') OR (player = 'david toms' AND country = 'united states')", -6.590920733479999], [" SELECT COUNT(*) FROM w WHERE country = 'colombia' AND country = 'united states' AND to par = '+ 3'", -7.296642374369999], [" SELECT COUNT(*) FROM w WHERE place = 't9' AND to par = '+ 3' AND (player = 'camilo villegas' AND country = 'colombia') OR (player = 'david toms' AND country = 'united states')", -10.273448515370005], [" SELECT COUNT(DISTINCT(place)) FROM w WHERE place LIKE 't%' AND to par = '+ 3' AND country IN ('colombia', 'united states')", -11.68276844228]]}, "204": {"question": "there be 2 instance where there be a tie for most rebound by detroit piston player during this period of the 2010 - 2011 season", "gold_answer": 0, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '% , %'", -2.3979665919000004], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '% , %'", -2.4015151326199997], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '% , %'", -2.4080736040560002], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '% , %'", -2.4098323319799997], [" SELECT COUNT(*) FROM w WHERE `high rebounds` LIKE '%, %'", -2.772631375415], [" SELECT COUNT(*) FROM w WHERE high rebounds LIKE '% , %'", -2.7734915773339996], [" SELECT COUNT(*) FROM w WHERE high rebounds LIKE '%, %'", -3.21145020533], [" SELECT COUNT(*) FROM w WHERE high rebounds LIKE '%,%'", -3.3790025916599995], [" SELECT COUNT(*) FROM w WHERE high rebounds LIKE '%,%'", -3.3835485149299993], [" SELECT COUNT(*) FROM w WHERE high rebounds LIKE '%,%'", -3.3915548930900004]]}, "229": {"question": "chris burke , be the only player to have a free transfer fee", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.7202049988650001], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.720323449775], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.7223673705050002], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.7230155776049998], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.724204679505], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.7249147137449994], [" SELECT COUNT(*) FROM w WHERE transfer fee = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND transfer fee = 'free'", -1.729069506905], [" SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE name = 'chris burke' AND `transfer fee` = 'free'", -2.080267321355], [" SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free' AND name = 'chris burke'", -2.6192593980749996], [" SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `transfer fee` = 'free' AND name = 'chris burke'", -2.6348958406150005]]}, "254": {"question": "there be only 2 game where the score be 0 - 0 for the 1st leg", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0'", -0.7427530250900001], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0'", -0.7431449865900001], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0'", -0.74399255029], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0'", -0.7446758468899999], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0'", -0.7457691534900001], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0'", -0.7467124874899999], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0'", -0.7505855684899999], [" SELECT COUNT(*) FROM w WHERE `1st leg` = '0 - 0'", -0.75098052039], [" SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0'", -1.5763852512899998], [" SELECT COUNT(*) FROM w WHERE 1st leg = '0 - 0'", -1.5829207178900002]]}, "279": {"question": "6 game have an attendance of over 7000 during the 1993 new york jet season", "gold_answer": 0, "pred_answer": {"0": [[16], [16], [16], [16], [16], [16], [16], [16], [16], [16]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.51979633767], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.5199733640699999], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.52030072767], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.5206474563], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.5206691406699999], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.52081621767], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.52583562703], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.52587654143], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.52605766473], [" SELECT COUNT(*) FROM w WHERE attendance > 7000", -0.52687026327]]}, "301": {"question": "there be 4 game in the 2005 milwaukee brewer season where 1 team score no point", "gold_answer": 1, "pred_answer": {"0": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "1": ["<error>"], "2": [[19]], "3": ["<error>"], "4": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.5575833659000007], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.5636590143999998], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.56535350462], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.5660031198200004], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.5684259666299996], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.56915032487], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.570119057700001], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.5750784912299993], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'", -2.5789530181999996], [" SELECT COUNT(*) FROM w WHERE score LIKE '0 - %' OR score LIKE '% - 0'\nQ2: there are {how many = a2} games in the 2005 milwaukee brewers season where the attendance is larger than 20000.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE attendance > 20000\nQ3: there are {how many = a3} games in the 2005 milwaukee brewers season where the attendance is larger than 20000 and the score is larger than 10.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE attendance > 20000 AND (CAST(SUBSTR(score, 1, INSTR(score, '-') - 1)", -25.217579517152014]]}, "387": {"question": "stephen jackson lead the team in point for less than half the game", "gold_answer": 0, "pred_answer": {"0": [[6], [6], [6], [6], [0], [6], [6], [6], [6], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high points LIKE '%stephen jackson%'", -2.3015528307499995], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%stephen jackson%'", -2.30682383547], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%stephen jackson%'", -2.31063010875], [" SELECT COUNT(*) FROM w WHERE high points LIKE '%stephen jackson%'", -2.317167171319999], [" SELECT COUNT(*) FROM w WHERE high points = 'stephen jackson'", -2.54530420655], [" SELECT COUNT(*) FROM w WHERE high points LIKE 'stephen jackson%'", -2.88330335815], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%stephen jackson%'", -2.9174749390300008], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%stephen jackson%'", -2.9409628767], [" SELECT COUNT(*) FROM w WHERE `high points` LIKE '%stephen jackson%'", -2.95079994183], [" SELECT COUNT(*) FROM w WHERE `high points` = 'stephen jackson'", -3.0123284284800005]]}, "394": {"question": "2 of the project be propose , but never list and never complete", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [0], [0], [2], [2]], "1": ["<error>"], "2": [[2]], "3": ["<error>"], "4": [[2]], "5": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND `construction completed` = 'none'", -2.3390933039199995], [" SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND `construction completed` = 'none'", -2.3543400813799997], [" SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND `construction completed` = 'none'", -2.355004066775999], [" SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND `construction completed` = 'none'", -2.36330772812], [" SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND construction completed = 'none'", -2.9084406346], [" SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND construction completed = 'none'", -2.91305016238], [" SELECT COUNT(*) FROM w WHERE proposed IS NOT NULL AND listed IS NULL AND `construction completed` IS NULL", -3.47603858435], [" SELECT COUNT(*) FROM w WHERE proposed IS NOT NULL AND listed IS NULL AND construction completed IS NULL", -3.8425177934900008], [" SELECT COUNT(*) FROM w WHERE proposed NOT LIKE 'none' AND listed LIKE 'none' AND `construction completed` LIKE 'none'", -4.4463890065700005], [" SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND `construction completed` = 'none'\nQ2: there are {how many = a2} projects were proposed , but never listed and never completed.\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND `construction completed` = 'none'\nQ3: there are {how many = a3} projects were proposed , but never listed and never completed.\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE proposed != 'none' AND listed = 'none' AND `construction completed` = 'none'\nQ", -14.646809701318]]}, "412": {"question": "there be more player from england than of united state during the event in the 2nd round", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.5657319821599999], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.5693776044599999], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.56953207223], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.57061715856], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.5708420556000001], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.57124338554], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.5717712035500001], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.57197717935], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.5726232470599999], [" SELECT COUNT(*) FROM w WHERE country = 'england'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE country = 'united states'", -0.5742343410199998]]}, "437": {"question": "the 49ers play the los angeles dones 1 time in the 1947 season", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.55253403949], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.5541588444900001], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.55499914302], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.5550981901100002], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.5554191128200001], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.55543093891], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.55618073185], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.55772817971], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.55812026197], [" SELECT COUNT(*) FROM w WHERE opponent = 'los angeles dons'", -0.5598536490499999]]}, "462": {"question": "the wildcat play 4 game in september , 2 game in october , and 2 game in november", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]], "1": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]], "2": [[4], [4], [4], [4], [4], [4], [4], [4], [4], [4]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -2.265881243161001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -2.274664532458001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -2.2780229710410005], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -2.278071458180001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -2.278644157959999], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -2.278751378396001], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sep%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -2.2788222931850006], [" SELECT COUNT(*) FROM w WHERE `date` LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE `date` LIKE 'nov%'", -2.281387655906], [" SELECT COUNT(*) FROM w WHERE date LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE 'nov%'", -2.9162368202490008], [" SELECT COUNT(*) FROM w WHERE date LIKE 'sept%'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE date LIKE 'oct%'\nNeuralSQL3: SELECT COUNT(*) FROM w WHERE date LIKE 'nov%'", -2.9214021385599995]]}, "487": {"question": "only 1 episode title start with the letter t", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [3], [3], [3], [3], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.086155274914], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.088296958604], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.089360120944], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.090201090234], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.090242317864], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.091076650274], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.091459438394], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.093720594374], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.0945300554139998], [" SELECT COUNT(*) FROM w WHERE `episode title` LIKE 't%'", -1.0971136810239999]]}, "595": {"question": "plymouth county have 2 location , rockland and stroughton", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth county'", -1.239203978403], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth county'", -1.293880657301], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth county'", -1.3697166818770001], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth county'", -1.3725329435509999], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth county'", -1.372957867977], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth county'", -1.374210191139], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth'", -1.6286997527185], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth'", -1.652507679362], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth'", -1.655914330172], [" SELECT COUNT(DISTINCT location) FROM w WHERE county = 'plymouth'", -1.8080700855829996]]}, "26": {"question": "the number of player from canada outnumber the number of player from the united state", "gold_answer": 0, "pred_answer": {"0": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]], "1": [[5], [5], [5], [5], [5], [5], [5], [5], [5], [5]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.4475035706800001], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.44860055626], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.44889180001], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.44924036564], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.4492531686899999], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.44927329959000006], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.44977625795000004], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.44979135279999993], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.44996943743000006], [" SELECT COUNT(*) FROM w WHERE nationality = 'canada'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE nationality = 'united states'", -0.45053696702]]}, "51": {"question": "brian watt win exactly 1 major tournament", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT SUM(wins) FROM w", -0.82903283021], [" SELECT SUM(wins) FROM w WHERE row_id < 4", -3.05947910278], [" SELECT SUM(wins) FROM w WHERE tournament != 'totals'", -3.45153870508], [" SELECT SUM(wins) FROM w WHERE tournament != 'totals'", -3.4517889244399997], [" SELECT SUM(wins) FROM w WHERE tournament IN ('masters tournament', 'us open', 'the open championship', 'pga championship')", -4.310599310850001], [" SELECT SUM(wins) FROM w WHERE tournament IN ('masters tournament', 'us open', 'the open championship', 'pga championship')", -4.313452281720001], [" SELECT SUM(wins) FROM w WHERE tournament IN ('masters tournament', 'us open', 'the open championship', 'pga championship')", -4.320043999599998], [" SELECT SUM(wins) FROM w WHERE tournament LIKE '%masters tournament%' OR tournament LIKE '%us open%' OR tournament LIKE '%the open championship%' OR tournament LIKE '%pga championship%'", -6.603855364970001], [" SELECT SUM(wins) FROM w WHERE tournament LIKE '%masters tournament%' OR tournament LIKE '%us open%' OR tournament LIKE '%the open championship%' OR tournament LIKE '%pga championship%'", -6.6176617039100005], [" SELECT SUM(wins) FROM w WHERE tournament LIKE '%masters%' OR tournament LIKE '%us open%' OR tournament LIKE '%the open championship%' OR tournament LIKE '%pga championship%'", -8.069320185850001]]}, "63": {"question": "14 viral family have a replication site in the nucleus", "gold_answer": 0, "pred_answer": {"0": [[9], [9], [9], [9], [9], [9], [9], [9], [9], [9]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.5706956889599997], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.5719858198699999], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.58134884788], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.5819276077700002], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.58360361064], [" SELECT COUNT(*) FROM w WHERE replication site = 'nucleus'", -1.58361685581], [" SELECT COUNT(DISTINCT family) FROM w WHERE replication site = 'nucleus'", -1.603088448905], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -1.65911196823], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -1.6621886114500002], [" SELECT COUNT(*) FROM w WHERE `replication site` = 'nucleus'", -1.6721854604100004]]}, "76": {"question": "on average , galina voskoboeva lose with only 4 point", "gold_answer": 0, "pred_answer": {"0": [[3], [3], [3], [3], [3], [0], [0], [3], [3], [32]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -2.2196415874700004], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -2.22612819157], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -2.2274127284699996], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -2.24468774077], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner - up'", -2.25068929597], [" SELECT COUNT(*) FROM w WHERE outcome = 'loser'", -2.80138187997], [" SELECT COUNT(*) FROM w WHERE outcome = 'loser'", -2.8037373074699996], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.02200671047], [" SELECT COUNT(*) FROM w WHERE outcome = 'runner-up'", -3.05311784897], [" SELECT SUM(CAST(SUBSTR(score, 1, INSTR(score, '-') - 1) AS INT)) + SUM(CAST(SUBSTR(score, INSTR(score, '-') + 1, LENGTH(score) - (INSTR(score, ' - ') + 1)) AS INT)) FROM w WHERE outcome = 'runner - up'", -8.495535215723999]]}, "101": {"question": "jerry mitchell be nominate for a drama desk award 3 time", "gold_answer": 0, "pred_answer": {"0": [[2], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell'", -0.69988717453], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.1561983343000002], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.1562153985999999], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.1563600949300001], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.15642292112], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.1579434973099998], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.1592605177599997], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.15961577715], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.15978899209], [" SELECT COUNT(*) FROM w WHERE nominee = 'jerry mitchell' AND award = 'drama desk award'", -1.162850065]]}, "156": {"question": "collingwood score more point than hawthorn in the 1962 vfl match", "gold_answer": 1, "pred_answer": {"0": [["10.14 (74)"], ["10.14 (74)"], ["10.14 "], [10], [74], [19], [10], [1014], [19], [84]], "1": [["10.7 (67)"], ["10.7 (67)"], ["10.7 "], [10], [67], "<error>", [null], [107], "<error>", "<error>"]}, "nsql": [[" SELECT `home team score` FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT `away team score` FROM w WHERE `away team` = 'hawthorn'", -3.19314637747], [" SELECT `home team score` FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT `away team score` FROM w WHERE `away team` = 'hawthorn'", -3.197384119329999], [" SELECT SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) FROM w WHERE `away team` = 'hawthorn'", -6.496036225599996], [" SELECT CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT) FROM w WHERE `away team` = 'hawthorn'", -6.525955549183999], [" SELECT CAST(SUBSTR(`home team score`, INSTR(`home team score`, '(') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '(') + 1)) AS INT) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(`away team score`, INSTR(`away team score`, '(') + 1, LENGTH(`away team score`) - (INSTR(`away team score`, '(') + 1)) AS INT) FROM w WHERE `away team` = 'hawthorn'", -7.723535023188003], [" SELECT SUM(CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT)) + SUM(CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '.') - 1) AS INT)) FROM w WHERE `home team` = 'collingwood' OR `away team` = 'collingwood'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '.') - 1) AS INT)) + SUM(CAST(SUBSTR(`away team score`, 1, INSTR(`", -7.968239974138003], [" SELECT SUM(CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT)) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT)) FROM w WHERE `home team` = 'hawthorn'", -8.23604497202], [" SELECT SUM(CAST(REPLACE(`home team score`, '.', '') AS INT)) FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT SUM(CAST(REPLACE(`away team score`, '.', '') AS INT)) FROM w WHERE `away team` = 'hawthorn'", -8.261962917521], [" SELECT SUM(CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT)) + SUM(CAST(SUBSTR(`away team score`, 1, INSTR(`away team score`, '(') - 1) AS INT)) FROM w WHERE (home team = 'collingwood' OR away team = 'collingwood')\nNeuralSQL2: SELECT SUM(CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT)) + SUM(CAST(SUBSTR(`away team score`, 1, INSTR(`away team score", -10.111898369461207], [" SELECT CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) + CAST(SUBSTR(`home team score`, INSTR(`home team score`, '(') + 1, LENGTH(`home team score`) - (INSTR(`home team score`, '(') + 1)) AS INT) AS score FROM w WHERE `home team` = 'collingwood'\nNeuralSQL2: SELECT CAST(SUBSTR(`home team score`, 1, INSTR(`home team score`, '(') - 1) AS INT) + CAST(SUBSTR(`", -12.184804975913941]]}, "209": {"question": "the tv series dexter have more than a dozen episode in its third season", "gold_answer": 0, "pred_answer": {"0": [[10], [10], [10], [10], [10], [10], [10], "<error>", [1], [10]]}, "nsql": [[" SELECT COUNT(*) FROM w", -0.38541954014999996], [" SELECT COUNT(*) FROM w", -0.38648413335], [" SELECT COUNT(*) FROM w", -0.38662132505], [" SELECT COUNT(*) FROM w", -0.38709569015], [" SELECT COUNT(*) FROM w", -0.38737606145], [" SELECT COUNT(*) FROM w", -0.38758651785], [" SELECT COUNT(*) FROM w", -0.38816641535], [" SELECT COUNT(*) FROM w WHERE season = 3", -3.69715542405], [" SELECT COUNT(*) FROM w WHERE `no in season` = 3", -5.429781845550001], [" SELECT COUNT(*) FROM w WHERE `no in season` IS NOT NULL", -6.167444828449999]]}, "234": {"question": "more attend the fitzroy vs north melbourne game than the essendon v richmond game", "gold_answer": 0, "pred_answer": {"0": [[1], [1], [1], [1], [1], [1], [1], [7007], [7007], [1]], "1": [[1], [1], [1], [1], [1], [1], [1], [22251], [22251], [1]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.240172650223999], [" SELECT COUNT(*) FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.240460507853999], [" SELECT COUNT(*) FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.243370321913999], [" SELECT COUNT(*) FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.244225631654], [" SELECT COUNT(*) FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.2473744841540007], [" SELECT COUNT(*) FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.249496494374], [" SELECT COUNT(*) FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.250897636484], [" SELECT crowd FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT crowd FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.829266652244001], [" SELECT crowd FROM w WHERE `home team` = 'fitzroy' AND `away team` = 'north melbourne'\nNeuralSQL2: SELECT crowd FROM w WHERE `home team` = 'essendon' AND `away team` = 'richmond'", -2.8366078200339975], [" SELECT COUNT(*) FROM w WHERE home team = 'fitzroy' AND away team = 'north melbourne'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE home team = 'essendon' AND away team = 'richmond'", -3.6309365713099995]]}, "259": {"question": "the competition type be a junior championship 2 time", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE competition LIKE '% junior championships'", -2.39208748339], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% junior championships'", -2.39677842319], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% junior championships'", -2.40144052819], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% junior championships'", -2.40171835019], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% junior championships'", -2.42546615729], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% junior championships'", -2.42960420869], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% junior championships%'", -2.61147266339], [" SELECT COUNT(*) FROM w WHERE competition LIKE '% junior championships%'", -2.6348301212900003], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%junior championships%'", -2.9228395225900003], [" SELECT COUNT(*) FROM w WHERE competition LIKE '%junior championships%'", -2.9232756975900003]]}, "284": {"question": "3 of the cleveland brown start quarterback have 2 different uniform number", "gold_answer": 1, "pred_answer": {"0": [[36], [0], [3], [3], [3], [0], [0], [0], [36], [3]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE LENGTH(`uniform no (s)`) > 1", -3.7220486540249995], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '%-%'", -3.912459047425], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -4.352261792425001], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -4.362711920365], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% , %'", -4.370090159554999], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% - %'", -4.473257590625001], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% - %'", -4.478419980165], [" SELECT COUNT(*) FROM w WHERE `uniform no (s)` LIKE '% - %'", -4.481041287595], [" SELECT COUNT(*) FROM w WHERE length(`uniform no (s)`) > 1", -5.525206054985001], [" SELECT COUNT(*) FROM w WHERE (uniform no (s) LIKE '%-%' OR uniform no (s) LIKE '% , %') AND uniform no (s) NOT LIKE '% , % , %'", -14.417896787425002]]}, "309": {"question": "travis outlaw lead the team in both point and rebound in a single game 3 different time", "gold_answer": 0, "pred_answer": {"0": [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE high points = 'travis outlaw' AND high rebounds = 'travis outlaw'", -2.4665927565600003], [" SELECT COUNT(*) FROM w WHERE high points = 'travis outlaw' AND high rebounds = 'travis outlaw'", -2.5111884932499997], [" SELECT COUNT(*) FROM w WHERE high points = 'travis outlaw' AND high rebounds = 'travis outlaw'", -2.5316316249199997], [" SELECT COUNT(*) FROM w WHERE high points = 'travis outlaw' AND high rebounds = 'travis outlaw'", -2.5336752103000006], [" SELECT COUNT(*) FROM w WHERE high points = high rebounds AND high points = 'travis outlaw'", -3.1106514890000003], [" SELECT COUNT(*) FROM w WHERE high points = high rebounds AND high points = 'travis outlaw'", -3.1157616848000003], [" SELECT COUNT(*) FROM w WHERE high points = high rebounds AND high points = 'travis outlaw'", -3.1467990677999995], [" SELECT COUNT(*) FROM w WHERE high points = high rebounds AND high points = 'travis outlaw'", -3.1671064566000005], [" SELECT COUNT(*) FROM w WHERE high points = high rebounds AND high points = 'travis outlaw'", -3.2038829857999995], [" SELECT COUNT(DISTINCT game) FROM w WHERE high points = 'travis outlaw' AND high rebounds = 'travis outlaw'", -4.030505287903701]]}, "331": {"question": "manchester unite have beat portsmouth 2 out of 2 time since 13 august 2005", "gold_answer": 1, "pred_answer": {"0": [[2], [2], [1], "<error>", "<error>", [1], "<error>", "<error>", "<error>", [0]]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND date >= '2005-08-13'", -4.89632040677], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND `date` >= '2005-08-13 00:00:00'", -5.800184238820001], [" SELECT COUNT(*) FROM w WHERE `h / a` = 'a' AND `opponents` = 'portsmouth' AND `date` > '2005-08-13 00:00:00'", -7.67846714632], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND date >= '2005-08-13 00:00:00' AND result LIKE '% - 0'", -8.36126222719], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND date >= '2005-08-13' AND result LIKE '% - 1'", -8.90117508597], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND `result f - a` LIKE '% - 1' AND `date` >= '2005-08-13'", -9.09139992327], [" SELECT COUNT(*) FROM w WHERE date > '2005-08-13 00:00:00' AND opponents = 'portsmouth' AND result LIKE '3 - %'", -9.32399757417], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND date >= '2005-08-13 00:00:00' AND result LIKE '% - %' AND (CAST(SUBSTR(result, 1, INSTR(result, '-') - 1) AS INT) - CAST(SUBSTR(result, INSTR(result, '-') + 1, LENGTH(result) - (INSTR(result, ' - ') + 1)) AS INT)) > 0", -10.368733607133997], [" SELECT COUNT(*) FROM w WHERE opponents = 'portsmouth' AND date >= '2005-08-13' AND (result LIKE '% - 1' OR result LIKE '1 - %')", -10.9728717112], [" SELECT COUNT(*) FROM w WHERE `h / a` = 'a' AND `opponents` = 'portsmouth' AND CAST(SUBSTR(`date`, 1, 4) AS INT) >= 2005 AND CAST(SUBSTR(`date`, 6, 2) AS INT) >= 8 AND CAST(SUBSTR(`date`, 9, 2) AS INT) >= 13 AND `result f - a` LIKE '% - 0'", -19.131456274418994]]}, "417": {"question": "shane hall run a total of 190 race between the year of 1995 - 2008", "gold_answer": 1, "pred_answer": {"0": [[190], [190], [190], [190], [190], [190], [190], [190], [190], [190]]}, "nsql": [[" SELECT SUM(races) FROM w WHERE year BETWEEN 1995 AND 2008", -1.7223726989540002], [" SELECT SUM(races) FROM w WHERE year BETWEEN 1995 AND 2008", -1.7240924604040002], [" SELECT SUM(races) FROM w WHERE year BETWEEN 1995 AND 2008", -1.73776342133], [" SELECT SUM(races) FROM w WHERE year BETWEEN 1995 AND 2008", -1.7384320285500001], [" SELECT SUM(races) FROM w WHERE year >= 1995 AND year <= 2008", -1.9194946167399998], [" SELECT SUM(races) FROM w WHERE year >= 1995 AND year <= 2008", -1.9221071676900001], [" SELECT SUM(races) FROM w WHERE year >= 1995 AND year <= 2008", -1.9226050491800004], [" SELECT SUM(races) FROM w WHERE year >= 1995 AND year <= 2008", -1.9237406707200002], [" SELECT SUM(races) FROM w WHERE year >= 1995 AND year <= 2008", -1.9248094043500001], [" SELECT SUM(races) FROM w WHERE year >= 1995 AND year <= 2008", -1.9253465439499997]]}, "424": {"question": "kardinia park be 1 of the 6 venue that be put to use on 3 june 1961", "gold_answer": 1, "pred_answer": {"0": [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], "1": [[1], [1], [1], [1], [1], [1], [1], [1], [1], [1]]}, "nsql": [[" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND date = '1961-06-03 00:00:00'", -3.5308878954819987], [" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND date = '1961-06-03 00:00:00'", -3.532515126051001], [" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND date = '1961-06-03 00:00:00'", -3.5387806433019997], [" SELECT COUNT(DISTINCT venue) FROM w WHERE date = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND date = '1961-06-03 00:00:00'", -3.5399744631690018], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND `date` = '1961-06-03 00:00:00'", -3.727875578238], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND `date` = '1961-06-03 00:00:00'", -3.730554849354001], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE venue = 'kardinia park' AND `date` = '1961-06-03 00:00:00'", -3.7341961910770007], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` = '1961-06-03 00:00:00' AND venue = 'kardinia park'", -4.30267299539], [" SELECT COUNT(DISTINCT venue) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` = '1961-06-03 00:00:00' AND venue = 'kardinia park'", -4.306253436403999], [" SELECT COUNT(DISTINCT(venue)) FROM w WHERE `date` = '1961-06-03 00:00:00'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE `date` = '1961-06-03 00:00:00' AND venue = 'kardinia park'", -5.2913525193740005]]}, "442": {"question": "the dolphins' defense record 3 shutout during the 1983 season", "gold_answer": 0, "pred_answer": {"0": [[2], [2], [2], [2], [1], [1], [1], [1], [1], [1]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE result LIKE '% - 0'", -2.09312936616], [" SELECT COUNT(*) FROM w WHERE result LIKE '% - 0'", -2.0968623065600003], [" SELECT COUNT(*) FROM w WHERE result LIKE '% - 0'", -2.10196264106], [" SELECT COUNT(*) FROM w WHERE result LIKE '% - 0'", -2.11089353256], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.68272217316], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.68397666916], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.68491528206], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'", -2.7065469231600003], [" SELECT COUNT(*) FROM w WHERE opponent = 'buffalo bills' AND result = 'w 12 - 0'", -5.640074627660001], [" SELECT COUNT(*) FROM w WHERE result LIKE 'w % - 0'\n```", -5.87703297026]]}, "467": {"question": "any driver below 75 lap care trouble of some kind thus no time list", "gold_answer": 1, "pred_answer": {"0": [[12], [12], [12], [12], [12], [12], [12], [12], [12], [12]], "1": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE laps < 75", -0.41294310266600004], [" SELECT COUNT(*) FROM w WHERE laps < 75", -0.413515723806], [" SELECT COUNT(*) FROM w WHERE laps < 75", -0.414698023361], [" SELECT COUNT(*) FROM w WHERE laps < 75", -0.41537194036599995], [" SELECT COUNT(*) FROM w WHERE laps < 75", -0.41548292497000006], [" SELECT COUNT(*) FROM w WHERE laps < 75", -0.415682722506], [" SELECT COUNT(*) FROM w WHERE laps < 75", -0.41749194126600003], [" SELECT COUNT(*) FROM w WHERE laps < 75", -0.418715946706], [" SELECT COUNT(*) FROM w WHERE laps < 75", -0.418927811066], [" SELECT COUNT(*) FROM w WHERE laps < 75\n```", -3.1979112499560003]]}, "492": {"question": "mark cavendish be the only person to win 2 consecutive stage", "gold_answer": 1, "pred_answer": {"0": [[9], [3], [20], [0], [1], [1], "<error>", [0], [1], "<error>"], "1": [[3], [3], [3], [0], [1], [1], [0], [0], [3]], "2": ["<error>"]}, "nsql": [[" SELECT COUNT(*) FROM w WHERE winner IN (SELECT winner FROM w GROUP BY winner HAVING COUNT(winner) > 1)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish'", -7.646481939200001], [" SELECT COUNT(*) FROM w WHERE winner IN (SELECT winner FROM w WHERE winner = 'mark cavendish')\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner IN (SELECT winner FROM w WHERE winner = 'mark cavendish')", -10.377252651320005], [" SELECT COUNT(*) FROM w WHERE winner IN (SELECT winner FROM w WHERE row_id > 0)\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND row_id > 0", -11.091484664840001], [" SELECT COUNT(*) FROM w WHERE stage > 1 AND winner IN (SELECT winner FROM w WHERE stage = (stage - 1))\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage > 1 AND winner = 'mark cavendish' AND winner IN (SELECT winner FROM w WHERE stage = (stage - 1))", -11.597240569119998], [" SELECT COUNT(*) FROM w WHERE stage = (SELECT stage + 1 FROM w WHERE winner = 'mark cavendish') AND winner = 'mark cavendish'\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE stage = (SELECT stage + 1 FROM w WHERE winner = 'mark cavendish') AND winner = 'mark cavendish'\n```", -14.394736076060001], [" SELECT COUNT(DISTINCT winner) FROM w WHERE stage IN (SELECT stage FROM w WHERE winner = 'mark cavendish' AND stage IN (SELECT stage FROM w WHERE winner = 'mark cavendish'))\nNeuralSQL2: SELECT COUNT(DISTINCT winner) FROM w WHERE stage IN (SELECT stage FROM w WHERE winner = 'mark cavendish' AND stage IN (SELECT stage FROM w WHERE winner = 'mark cavendish'))", -15.308386271416998], [" SELECT COUNT(*) FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id - 1 FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id - 1 FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id - 1 FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id - 1 FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id - 1 FROM w WHERE winner = (SELECT winner FROM w WHERE row_id", -16.662376700394002], [" SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND stage = 2 AND winner = 'mark cavendish' AND stage = 3\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND stage = 2 AND winner = 'mark cavendish' AND stage = 3", -16.833926453729998], [" SELECT COUNT(DISTINCT winner) FROM w WHERE winner IN (SELECT winner FROM w WHERE winner = (SELECT DISTINCT winner FROM w WHERE stage = 1))\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = 'mark cavendish' AND winner IN (SELECT winner FROM w WHERE winner = (SELECT DISTINCT winner FROM w WHERE stage = 1))", -17.919298538521993], [" SELECT COUNT(*) FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id + 1 FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id + 1 FROM w WHERE winner = 'mark cavendish')))))\nNeuralSQL2: SELECT COUNT(*) FROM w WHERE winner = (SELECT winner FROM w WHERE row_id = (SELECT row_id + 1 FROM w WHERE winner = 'mark cavendish'))", -18.728224398460004]]}, "517": {"question": "the black knight score 54 point against lehigh on september 20th raise their record to 2 - 0", "gold_answer": 1, "pred_answer": {"0": [[54], [54], [54], [54], [54], [54], [54], [54], [54], [54]]}, "nsql": [[" SELECT `black knights points` FROM w WHERE date = 'sept 20' AND opponent = 'lehigh'", -2.8284378343900003], [" SELECT `black knights points` FROM w WHERE date = 'sept 20' AND opponent = 'lehigh'", -2.85748293015], [" SELECT `black knights points` FROM w WHERE date = 'sept 20' AND opponent = 'lehigh'", -2.857746219390001], [" SELECT `black knights points` FROM w WHERE opponent = 'lehigh' AND date = 'sept 20'", -3.1720773329900007], [" SELECT `black knights points` FROM w WHERE opponent = 'lehigh' AND date = 'sept 20'", -3.1721193132200005], [" SELECT `black knights points` FROM w WHERE opponent = 'lehigh' AND date = 'sept 20'", -3.177890300490001], [" SELECT `black knights points` FROM w WHERE opponent = 'lehigh' AND date = 'sept 20' AND record = '2 - 0'", -5.71176038263], [" SELECT black knights points FROM w WHERE opponent = 'lehigh' AND date = 'sept 20' AND result = 'win'", -7.06185548754], [" SELECT `black knights points` FROM w WHERE `date` = 'sept 20' AND `opponent` = 'lehigh' AND `record` = '2 - 0'", -7.252129044789998], [" SELECT SUM(black knights points) FROM w WHERE date = \"sept 20\" AND opponent = 'lehigh'", -8.398960027390002]]}}